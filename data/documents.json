[
  {
    "content": "Choose Your Path\n\nAccess targeted documentation for your role and get started quickly Workflow Designers Build structured workflows that help technicians complete work efficiently. Design forms that provide clear visual organization. Core Function: As a workflow designer, build forms that adapt to field conditions and guide technicians through their work. Form Pages and Sections Form Layout Options Repeatable Sections Repeatable Section Summary Tables Conditional Logic Answer Exceptions Resource Library Multi-Language Support for your Global Workforce Field Operations Coordinators Dispatch work orders, monitor field progress, and manage team workflows. Track completion status and manage approvals. Core Function: As a coordinator, assign work efficiently and track progress across your field teams. Automated and Manual Dispatching Options Form Transfer and Collaboration Work Status and Tracking Approvals Tracking and Management Analytics and Reporting Data Integration Specialists Connect",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Choose Your Path"
    }
  },
  {
    "content": "field data to back-office systems. Set up automated data routing and document generation from field submissions. Core Function: As an integration specialist, ensure that field data flows seamlessly to and from FSM, EAM, CRM, and other enterprise systems. Data Source Options Dropdown, Multiselect, and Radio Button Questions Data Routing Document Generation from Form Data Integration with Other Mobile Apps (Offline/Online) REST API Documentation Custom HTTP Integrations Salesforce Integration Team Admins (Admin Users) Ensure field users can access the forms and data they need to do their jobs, while giving work managers and approvers appropriate access for tracking and workflow management. Core Function: As a team admin, set up user access and permissions to ensure everyone has the right level of access—field users to mobile forms, managers to dispatching and tracking, and approvers to workflow review. Access Management Reference Guide FormSpace Management FormSpace Permissions Managing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Choose Your Path"
    }
  },
  {
    "content": "Groups Managing Users Team Setup Integration Setup (Connections)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Choose Your Path"
    }
  },
  {
    "content": "Workflow Designers\n\nBuild structured workflows that help technicians complete work efficiently. Design forms that provide clear visual organization. Core Function: As a workflow designer, build forms that adapt to field conditions and guide technicians through their work. Form Pages and Sections Form Layout Options Repeatable Sections Repeatable Section Summary Tables Conditional Logic Answer Exceptions Resource Library Multi-Language Support for your Global Workforce",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Workflow Designers"
    }
  },
  {
    "content": "Field Operations Coordinators\n\nDispatch work orders, monitor field progress, and manage team workflows. Track completion status and manage approvals. Core Function: As a coordinator, assign work efficiently and track progress across your field teams. Automated and Manual Dispatching Options Form Transfer and Collaboration Work Status and Tracking Approvals Tracking and Management Analytics and Reporting",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Field Operations Coordinators"
    }
  },
  {
    "content": "Data Integration Specialists\n\nConnect field data to back-office systems. Set up automated data routing and document generation from field submissions. Core Function: As an integration specialist, ensure that field data flows seamlessly to and from FSM, EAM, CRM, and other enterprise systems. Data Source Options Dropdown, Multiselect, and Radio Button Questions Data Routing Document Generation from Form Data Integration with Other Mobile Apps (Offline/Online) REST API Documentation Custom HTTP Integrations Salesforce Integration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Data Integration Specialists"
    }
  },
  {
    "content": "Team Admins (Admin Users)\n\nEnsure field users can access the forms and data they need to do their jobs, while giving work managers and approvers appropriate access for tracking and workflow management. Core Function: As a team admin, set up user access and permissions to ensure everyone has the right level of access—field users to mobile forms, managers to dispatching and tracking, and approvers to workflow review. Access Management Reference Guide FormSpace Management FormSpace Permissions Managing Groups Managing Users Team Setup Integration Setup (Connections)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Team Admins (Admin Users)"
    }
  },
  {
    "content": "Set Up Your Field Technicians\n\nEnsure your team is set up with the TrueContext Mobile App to complete work orders, capture data, and access job resources, even when they’re offline. Your team of field techs can complete workflows efficiently with guided workflows that work in any environment. Learn how field users can: Download the mobile app on any device Receive or access assigned forms Navigate a form Save forms to continue later Use their camera to answer form questions Contribute to a multi-user workflow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Set Up Your Field Technicians"
    }
  },
  {
    "content": "FIELD TECH EXPERIENCE\n\nProvide technicians with job resources and contextual information in a clear, visual format Visual Form Structure Organize complex workflows with clear visual hierarchy using pages, sections, and logical groupings. Field technicians can quickly scan, navigate, and complete forms efficiently with layouts that reduce cognitive load and speed up data entry. Resources and the Resource Library Deploy manuals, procedures, and visual guides on mobile devices (accessible offline). Keep critical documentation available even without connectivity. Data Sources and Lookups Pull asset data, customer information, and historical records from your integrated systems into mobile forms. Reduce data entry and provide field technicians with contextual information from your existing databases.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "FIELD TECH EXPERIENCE"
    }
  },
  {
    "content": "WORKFLOW CREATION\n\nBuild adaptive workflows that guide technicians through complex procedures Conditional Logic Engine Add intelligent automation to your mobile forms. Use Conditional Logic to provide context for your field technicians, enhance their effectiveness, and enforce a workflow. Build workflows that adapt automatically to equipment types, service scenarios, or site conditions. Multi-Modal Data Capture Capture field data through photos, barcode scanning, audio recordings, sketches, and GPS coordinates. Choose the most efficient capture method for each data point. Repeatable Sections Build structured subforms that allow technicians to answer the same questions multiple times, creating multiple data rows—such as recording multiple inspection data points, or documenting hazard observations. Technicians see their entries in an efficient, navigable, summary table that makes it easy to review, edit, and add line items.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "WORKFLOW CREATION"
    }
  },
  {
    "content": "FORM BUILDING PLATFORM\n\nCreate and deploy workflows rapidly with visual, low-code tools Form Builder Use our low-code workflow designer to create field-first mobile forms that work across iOS, macOS, Android, and Windows devices, online or offline. Workflow Organization Organize forms and resources by business unit, function, or location with role-based access control and team management. Mobile App Platform Make it easy for remote workers to collect data on mobile devices, access company data in the field, and automatically share results with back-office systems—online or offline.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "FORM BUILDING PLATFORM"
    }
  },
  {
    "content": "SYSTEM INTEGRATION\n\nConnect field data with back-office systems and processes Data Sources and Destinations Pull data from and route data to FSM, EAM, CRM, and other enterprise systems with automated formatting and processing. Document Generation Transform field submissions into professional documents, reports, and compliance documentation across multiple formats, including PDF, Word, and structured data formats like XML and JSON. TrueContext REST API Integrate your existing systems and custom applications using our REST API, retrieving form submissions, managing users, and triggering workflows programmatically. Pre-Built Integrations Connect with enterprise systems through ready-to-use integrations including ServiceNow, Salesforce, Microsoft 365, Google and Google Workspace, and Amazon Web Services, for example.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "SYSTEM INTEGRATION"
    }
  },
  {
    "content": "ANALYTICS AND REPORTING\n\nMonitor workflow performance and optimize field operations Dashboard Configure dynamic reports that provide insights into form submissions by form, user, or location. Organize reports into pages for easy viewing and track submissions over specified time periods with customizable charts and map visualizations. Basic Analytics Create detailed insights into question-level data from form submissions. Build customized graphs with just a few clicks to track specific answers and analyze field data patterns. Advanced Analytics Connect field data to business intelligence platforms for comprehensive analysis. Build executive dashboards and reports, combine data from multiple forms, and integrate with other business systems for deeper insights.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "ANALYTICS AND REPORTING"
    }
  },
  {
    "content": "PLATFORM ADMIN\n\nManage users, security, and compliance across your mobile workforce User Management and Permissions Role-based access control that ensures field technicians can access their assigned forms, managers can dispatch and track work, and approvers can oversee workflows and review submissions. Security and Compliance Enterprise-grade security that protects data while maintaining regulatory compliance including SOC 2, HIPAA, and FDA requirements. Deployment Management Deployment of form updates and new workflows to mobile teams, ensuring everyone works with current versions and consistent procedures across all locations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "PLATFORM ADMIN"
    }
  },
  {
    "content": "Start Building your Field Workflows\n\nTransform your field operations with field-first mobile workflows TrueContext Quick Start Step-by-step guides for setting up and using the TrueContext mobile workflow platform. Get Started TrueContext University Explore our free, self-paced learning platform or accelerate your growth with instructor-led training. Learn more about TrueContext University Community Forum Connect with other organizations building mobile field workflows and share implementation strategies. Join the Community Technical Support Contact Technical Support if you need help or encounter any issues. How to Contact Technical Support",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Home.htm",
      "title": "TrueContext Documentation",
      "section": "Start Building your Field Workflows"
    }
  },
  {
    "content": "Features and benefits\n\nThis portal is designed to help you quickly locate the content you need. The search and browsing features—including side navigation, landing pages, micro content, and glossary terms—make it easy to find what you’re looking for with only a couple of clicks.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WelcomeToNewPortal.htm",
      "title": "Welcome to the TrueContext Documentation Portal",
      "section": "Features and benefits"
    }
  },
  {
    "content": "What about the Knowledge Base?\n\nYou can still access the TrueContext Knowledge Base at support.truecontext.com.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WelcomeToNewPortal.htm",
      "title": "Welcome to the TrueContext Documentation Portal",
      "section": "What about the Knowledge Base?"
    }
  },
  {
    "content": "Features Guide\n\nThis section includes the following content: Work ManagementChanges to Work Management MetadataApproval WorkflowsTrueContext Teamwork Overview DispatchingForm Submission Corrections ResourcesResource DocumentsResource ImagesResource LibraryDRELIntroduction to DRELTest DREL ExpressionsDREL Quick ReferenceDREL Complete Reference ListDREL for Repeatable SectionsGeolocation DataGet Started with Mobile SearchWhat is the Mobile Search?How the Mobile Search WorksExamples of a Mobile SearchEnable the Mobile Search Feature for your TeamEnable the Mobile Search Feature on your FormUse the Mobile Search Feature on your DeviceMulti-Language FeatureMulti-Language FormsMulti-Language DocumentsMulti-Language Translations and Supported LanguagesRefresh on Form Open",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FeaturesGuide.htm",
      "title": "Features Guide",
      "section": "Features Guide"
    }
  },
  {
    "content": "Work Management\n\nThis section includes the following content: Changes to Work Management MetadataApproval WorkflowsIntroduction To Approval WorkflowsSet Up an Approval WorkflowApprove Submitted Records in the Web PortalApproval Workflows for Mobile UsersManage Approval WorkflowsTrueContext Teamwork Overview Introduction to TrueContext TeamworkConfigure a TrueContext Teamwork formManage a TrueContext Teamwork WorkflowUse TrueContext Teamwork on your Mobile DeviceTrueContext Teamwork Technical DetailsDispatchingIntroduction to Dispatching Bulk Dispatching Group DispatchingForm Submission Corrections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/WorkManagement.htm",
      "title": "Work Management",
      "section": "Work Management"
    }
  },
  {
    "content": "Summary of changes\n\nWe replaced the old Form Submission Status with the new Workflow Status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result.. The status gives you an “at-a-glance” view of the most relevant information, to help you identify records that need attention. The status is a combination of different metadata fields, but always includes the workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".. We introduced new metadata fields—Workflow State and Data Flow State A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\".—and values that make them easy to understand. For example,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "Summary of changes"
    }
  },
  {
    "content": "the workflow state Dispatched replaces the old state In Progress. Where the values are only being displayed—such as submission (record) detail pages or search filters—we changed the UI to show the new fields and values. Where the values could impact a downstream process, we only added the option to migrate to the new fields, but left the existing choices as is. Both old and new fields still work for scheduled CSV exports and metadata selections, for example. We changed “edited” to “corrected” to better reflect the purpose of sending a record for corrections. Two new DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. %r properties are available: [workflowState] A workflow state describes the current stage in a workflow as a result of the last action taken on that record. Note:The [workflowState] property replaces the [state] property. Make sure that you change to the new",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "Summary of changes"
    }
  },
  {
    "content": "[workflowState] by September 30, 2025. [dataFlowState] A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. Our data model includes the following new properties: dataFlowState workflowState workflowStatus",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "Summary of changes"
    }
  },
  {
    "content": "Record states\n\nEach record has metadata fields to help you track the record through a workflow. These fields are the workflow state and the data flow state. The following table describes the old and new values. Tip:Other, existing state values have not changed. The new Workflow State... Replaces the old State... Dispatched In Progress Reopened Complete (Sent for Editing) Completed Complete Cancelled Dispatch Declined The new Data Flow State... Replaces the old Data State... Pending Download Dispatching Downloaded Dispatched",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "Record states"
    }
  },
  {
    "content": "Workflow status\n\nThe new Workflow Status, which replaces the old Form Submission Status, is a combination of metadata fields. We display this “at-a-glance” status to make it easy for work managers to track and manage records. For example, the Dispatched (Downloaded) status tells you that a user has dispatched work available on their device. All statuses include a workflow state, and some also contain the data flow state or completion result.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "Workflow status"
    }
  },
  {
    "content": "Corrections\n\nWork managers can send a completed record for corrections, formerly called “edits”. The new wording makes it clear that a work manager would only use this process when a completed record has mistakes. Info:If your workflow requires a record to be approved before it’s marked as “completed,” you can set up an Approval Workflow (Enterprise-tier only). With approval enabled on a record, you can’t send a completed record for corrections. You can, however, request changes to an approved record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "Corrections"
    }
  },
  {
    "content": "What you need to do\n\nYou can start to use the new metadata fields at any time. You must transition to the new fields and values, however, before September 30, 2025. Note:Integrations, analytics, documents, and scheduled exports that use the old metadata fields and values will continue to work until September 30, 2025. You can begin now to transition to the new fields and values.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/WorkflowChangeManagement.htm",
      "title": "Changes to Work Management Metadata",
      "section": "What you need to do"
    }
  },
  {
    "content": "Approval Workflows An Approval Workflow is a process that enforces a review of submitted data records. You set this up at the form level. Approvers must review each data record and either approve it or request changes.The topics in this section describe Approval Workflows, how they work, and how to set them up. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/AWLandingPage.htm",
      "title": "Approval Workflows"
    }
  },
  {
    "content": "Approval process diagram\n\nThe following diagram shows an approval process that starts when a Field Technician submits a record that needs approval.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/IntroToApprovalWorkflows.htm",
      "title": "Introduction To Approval Workflows",
      "section": "Approval process diagram"
    }
  },
  {
    "content": "Set up FormSpace permissions for approvers\n\nApprovers must be in a group that has Can Approve FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. You must be an Admin user to create groups and set FormSpace permissions. Info:The topic FormSpace Permissions describes how to set Can Approve permissions in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/SetUpApprovalWorkflows.htm",
      "title": "Set Up an Approval Workflow",
      "section": "Set up FormSpace permissions for approvers"
    }
  },
  {
    "content": "Set a form to require approval\n\nNote:You must be an Admin user or have Can Create FormSpace permissions to set up Approval Workflows. You set up Approval Workflows at the form level: SETTINGS > Workflow Settings. Enable approvals. You can opt to send notification emails to all users that have Can Approve FormSpace permissions. The emails are sent when a Field Technician submits a record for approval.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/SetUpApprovalWorkflows.htm",
      "title": "Set Up an Approval Workflow",
      "section": "Set a form to require approval"
    }
  },
  {
    "content": "Considerations for Approval Workflows\n\nApproval Workflows are not compatible with Editing or Data Passthrough.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/SetUpApprovalWorkflows.htm",
      "title": "Set Up an Approval Workflow",
      "section": "Considerations for Approval Workflows"
    }
  },
  {
    "content": "Edits prior to approval\n\nEditing is intended for fixing errors in submitted records after mobile users complete their work. Similarly, Approval Workflows have a Request Changes option. Approvers can use this option to send records back to a mobile user before approving the record. Tip: If an assignee is unavailable, an Admin user can change the assignee on the record. If a mobile user realizes that the form needs edits, they must ask an approver to request changes. Field Technicians can’t decline requests for changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/SetUpApprovalWorkflows.htm",
      "title": "Set Up an Approval Workflow",
      "section": "Edits prior to approval"
    }
  },
  {
    "content": "Edits after approval\n\nBecause approvals rely on the exact data included in the record, mobile users can’t edit approved records. If a record needs changes after it’s been approved, approvers can withdraw approval, Request Changes, and then approve the record again.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/SetUpApprovalWorkflows.htm",
      "title": "Set Up an Approval Workflow",
      "section": "Edits after approval"
    }
  },
  {
    "content": "Open records that require approval\n\nNote:You must have Can Approve FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions to open records that need approval. You can open records that require approval in two ways: Select a link from a notification email. The link opens in the Web Portal the record that needs approval. Use the Web Portal to show a list of records that need approval.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Open records that require approval"
    }
  },
  {
    "content": "Open a record from an email notification\n\nWhen form designers set up forms to require approval, they can choose to email approvers each time a user submits a record. These email notifications include a link to the record that needs approval. Select the link to open the record in the Web Portal, and decide if you want to claim it for review.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Open a record from an email notification"
    }
  },
  {
    "content": "Open a list of records that need approval\n\nIf your team Admin user didn’t set up email notifications or you want to open a full list of records pending approval, in the Web Portal, go to Data & Analytics > All Form Activity. Result: The All Form Activity page opens and shows a list of dispatched and submitted records from the past 30 days. Filter records Use Search Options to filter the list of records. The following table describes how to filter records in a way that helps you manage approvals. To show records that... Set the following filters... Require approval and haven’t been claimed for review. Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".—Pending Approval Assignment—Unassigned Have been claimed by you and require approval. Submitter/Assignee - User—Select your username. Workflow State—Pending Approval Info:The topic View All Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Open a list of records that need approval"
    }
  },
  {
    "content": "Activity describes filters in more detail. Save filters Once you set your filters, you can quickly use them again if you save them or bookmark them. Create a Saved Filter—On the All Form Activity page, select the arrow next to Form Submissions. Then, go to List Form Submission Filters > Create a Form Submission Filter to set your filters. Select Create to save your changes. Access the list of filters to open your saved filters and apply them. Bookmark the page—The URL includes the filters you applied. Bookmark the URL for easy access.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Open a list of records that need approval"
    }
  },
  {
    "content": "Review and approve records\n\nThe All Form Activity page displays a record’s status represented by an icon. Submitted records that are part of an Approval Workflow have specific statuses. The following table lists each status, the icon that represents it, and the actions you can take on a record at each stage. Note:If you’re only in groups that have Can Approve FormSpace permissions, you can only access records that have one of the following approval statuses. You can’t access any other types of records, just those in an Approval Workflow. Tip:The assignee in an Approval Workflow can be an approver or a field user, depending on the status. Icon Status Actions you can take Result Pending Approval Assignment—Unassigned If you want to review the record, select CLAIM FOR REVIEW. The record becomes unavailable for other approvers to claim. The Assignment state changes to Assigned. Pending Approval Assignment—Assigned If you want to approve the record, select Approve. Optionally, add notes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Review and approve records"
    }
  },
  {
    "content": "The record is approved. The status changes to Completed (Approved). Tip:You can use the following DREL expressions to access information that’s specific to approvals: %d[approval] %h[approved][notes] %t[approval] %u[approver] If the record requires changes, Select Request Changes. Select the field user to assign the changes to. By default, the system selects the user that submitted the record. Optionally, add notes for the user. The systems sends the record to the field user for changes. The status changes to Changes Requested, and the record is Assigned to the user you selected. Select Cancel Review if you want to release the record for other reviewers to claim. The Assignment state changes to Unassigned. Changes Requested Assignment—Assigned None The field user assigned to the record must make any required changes. When the field user submits the record, the status changes to Pending Approval with an Assignment state of Unassigned. Completed (Approved) You can choose to Withdraw",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Review and approve records"
    }
  },
  {
    "content": "Approval if required. Tip:Approval Workflows are not compatible with corrections. If you need a field user to correct the record, Withdraw Approval and request changes. The status changes to Pending Approval with an Assignment state of Assigned, and the record is assigned to you.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ManageApprovals.htm",
      "title": "Approve Submitted Records in the Web Portal",
      "section": "Review and approve records"
    }
  },
  {
    "content": "Add notes for an approver\n\nWhen you submit a record, the Notes for approver screen opens. Optionally, add a note for the approver up to 256 characters. This note is not included in output Documents but is saved in the record history.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ApprovalWorkflowsForMobile.htm",
      "title": "Approval Workflows for Mobile Users",
      "section": "Add notes for an approver"
    }
  },
  {
    "content": "Find records that need changes\n\nWhen an approver requests changes on a record before approving it, they assign the record to a field user. The field user must make the changes before resubmitting the record. To find records that need changes, open your Inbox. Records that need changes are marked with Changes Requested.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ApprovalWorkflowsForMobile.htm",
      "title": "Approval Workflows for Mobile Users",
      "section": "Find records that need changes"
    }
  },
  {
    "content": "Check notes from an approver\n\nApprovers can include notes when they request changes. To open an approver’s notes: From the Inbox, open the record Details. The way that you access Details depends on your device. Android and iOS: Swipe right. MacOS: Swipe right with two fingers or right-click. Windows: Hover over or right-click the record. Select Details. The approver's notes are displayed in the record's ACTION HISTORY. After you complete the work, recheck the approver’s notes to make sure you’ve addressed their feedback before you submit the record. The way you open the Details page inside a form depends on your device: iOS and MacOS: Go to the index page, select the ellipsis (…) at the lower left, and then select Details. Android: Select the action menu at the upper right, and then select Details. Windows: Select the ellipsis (…) at the upper right, and then select Details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/ApprovalWorkflowsForMobile.htm",
      "title": "Approval Workflows for Mobile Users",
      "section": "Check notes from an approver"
    }
  },
  {
    "content": "Unassign a record from an approver\n\nIf a record that’s pending approval is assigned, other approvers can’t claim it for review. If the approver is unavailable to cancel the review, Admin users can unassign the record so that other approvers can claim it. Tip:We recommend that you only take this action when the approver is unavailable to complete the approval process. To unassign a record that’s pending approval: From the All Form Activity page, select the record Reference # to open it. Select the arrow next to the reference number, and then select Unassign from User > Unassign. Result: The assignee state changes to Unassigned. Other approvers can now claim the record for review.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/AdminApprovals.htm",
      "title": "Manage Approval Workflows",
      "section": "Unassign a record from an approver"
    }
  },
  {
    "content": "Change the assignee of a record that has changes requested\n\nWhen an approver requests changes on a record before approval, they assign the record to a field user. Admin users can change the assignee on the record to a different field user if necessary. Note:We recommend that you only take this action when the assigned field user is unavailable to make the changes.If the field user started work on the form and you change the assignee, the user’s work will be lost. To change the assignee on a record that has changes requested: From the All Form Activity page, select the record Reference # to open it. Select the arrow next to the reference number, and then select Assign to a User. Select a user from the list, and then select Send. Result: The record is now assigned to the user you selected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ApprovalWorkflows/AdminApprovals.htm",
      "title": "Manage Approval Workflows",
      "section": "Change the assignee of a record that has changes requested"
    }
  },
  {
    "content": "Video demo\n\nLearn from an expert! This video shows you the different ways you can use TrueContext Teamwork for your multi-user workflow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/TeamworkOverview.htm",
      "title": "TrueContext Teamwork Overview",
      "section": "Video demo"
    }
  },
  {
    "content": "Key Concepts\n\nTrueContext Teamwork enables mobile device users to Transfer incomplete forms for other users to complete. Use this feature when you require different technicians to work on a single form, or for jobs that span multiple shifts where a technician might need to complete a form started by a team member. What is TrueContext Teamwork?How TrueContext Teamwork WorksExamples of a TrueContext Teamwork Multi-User Workflow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/TeamworkOverview.htm",
      "title": "TrueContext Teamwork Overview",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nYou enable the TrueContext Teamwork feature at a form level, but there are other settings you must enable depending on your workflow. For example, if you want mobile users to claim incomplete forms from the Mobile App, you must enable the Search tab. You can also configure an App‑to‑App callback “search” action to display a list of matching forms that users can claim. Make sure that you meet the prerequisites for a TrueContext Teamwork-enabled form before you begin the configuration process. Prerequisites for a TrueContext Teamwork-enabled FormSteps to Enable TrueContext Teamwork on a FormConfigure a TrueContext Teamwork WorkflowConfigure Data Destinations to Execute for Incomplete TrueContext Teamwork-enabled Form SubmissionsFilter by stateApp‑to‑App Action Details: search parameters",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/TeamworkOverview.htm",
      "title": "TrueContext Teamwork Overview",
      "section": "Configuration"
    }
  },
  {
    "content": "Management\n\nMultiple users can work on a single TrueContext Teamwork-enabled form at different times. For this reason, you must keep track of the work done on TrueContext Teamwork-enabled forms using the Web Portal. From the Web Portal you can Dispatch a form, assign an incomplete form, and unassign a form. You can also keep track of what different users submitted as answers for each Form Submission Version. Dispatch a TrueContext Teamwork-enabled FormAssign an Incomplete TrueContext Teamwork-enabled FormUnassign an Incomplete TrueContext Teamwork-enabled FormUnassign and Assign TrueContext Teamwork-enabled forms Using the REST APICheck the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/TeamworkOverview.htm",
      "title": "TrueContext Teamwork Overview",
      "section": "Management"
    }
  },
  {
    "content": "Introduction to TrueContext Teamwork\n\nThe TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables mobile users to submit incomplete forms for other users to complete. The topics in this section describe what TrueContext Teamwork is and how a TrueContext Teamwork-enabled form moves through a workflow. These topics also describe how TrueContext Teamwork-enabled forms provide you with the functionality to create multi-user workflows when you require more than one technician to work on a single form. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/IntroToTeamwork.htm",
      "title": "Introduction to TrueContext Teamwork",
      "section": "Introduction to TrueContext Teamwork"
    }
  },
  {
    "content": "TrueContext Teamwork\n\nThe TrueContext Teamwork feature supports team collaboration by enabling your mobile users to transfer forms between them. With the TrueContext Teamwork feature, it's easy to implement a multi-user workflow. Some jobs require more than one technician to complete an assignment. Your mobile workforce can submit incomplete forms for other team members to complete. Supervisors or team leads can track the work’s progress in the Web Portal and take action (unassign or assign work) as needed. Note: This feature supports consecutive workflows. Only one mobile device user at a time can be assigned to a record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/WhatIsPFTeamwork.htm",
      "title": "What is TrueContext Teamwork?",
      "section": "TrueContext Teamwork"
    }
  },
  {
    "content": "How a TrueContext Teamwork-enabled form moves through a workflow\n\nThe following diagram shows the different options that you have to move a TrueContext Teamwork-enabled form through a workflow. Option 1: Direct transfer User 1 partially completes a form and directly transfers it to User 2. Form Submission Status: Incomplete (Assigned) User 2 completes and sends the form. Form Submission Status: Complete Option 2: Web Portal assignment User 1 partially completes a form and submits it as incomplete. Form Submission Status: Incomplete (Unassigned) In the Web Portal, the supervisor assigns the form to User 2. Form Submission Status: Incomplete (Assigned) User 2 completes and sends the form. Form Submission Status: Complete Option 3: Search and claim User 1 partially completes a form and submits it as incomplete. Form Submission Status: Incomplete (Unassigned) User 2 searches for and claims the incomplete form. Form Submission Status: Incomplete (Assigned) User 2 completes and sends the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/HowPFTeamworkWorks.htm",
      "title": "How TrueContext Teamwork Works",
      "section": "How a TrueContext Teamwork-enabled form moves through a workflow"
    }
  },
  {
    "content": "form. Form Submission Status: Complete",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/HowPFTeamworkWorks.htm",
      "title": "How TrueContext Teamwork Works",
      "section": "How a TrueContext Teamwork-enabled form moves through a workflow"
    }
  },
  {
    "content": "Detailed TrueContext Teamwork workflow\n\nThere are two ways that a mobile user can start work on a TrueContext Teamwork-enabled form. The mobile user opens a form from their Inbox that a supervisor or team lead dispatched. The mobile user opens a form from the Forms tab in the Mobile App. If the technician can’t complete the work themselves, they “transfer” the incomplete form. The technician typically transfers a form when the work requires the skills of a different team member with specific knowledge or experience the work isn’t complete when the first technician’s shift ends, or the work requires a return visit to the site after a period of days, weeks, or months. The technician can either transfer the incomplete form for other users to claim or supervisors to assign. The status of the form changes to Incomplete (Unassigned). transfer the incomplete form directly to another user. The status of the form changes to Incomplete (Assigned). Info:You configure the transfer options at the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/HowPFTeamworkWorks.htm",
      "title": "How TrueContext Teamwork Works",
      "section": "Detailed TrueContext Teamwork workflow"
    }
  },
  {
    "content": "form level. In the Web Portal, the supervisor can see incomplete forms identified as Incomplete (Unassigned) or Incomplete (Assigned). The supervisor can also see which questions were answered and which user answered them. For Incomplete (Unassigned) forms, the supervisor can either leave the form unassigned for the next available technician to claim, or assign the form to a specific team member. In some cases, the supervisor might want to “unassign” a form from the current assignee. For example, if a team member is unexpectedly out sick, the supervisor can unassign the form and then assign it to someone else. Warning:If the assigned user has started to work on the form, you will lose any changes that user has made to the form when you unassign it. The form can be assigned, unassigned, transferred, and claimed as many times as required to complete the work. The team member who completes the form “Sends” it. In the Web Portal, the supervisor sees the form identified as Complete. The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/HowPFTeamworkWorks.htm",
      "title": "How TrueContext Teamwork Works",
      "section": "Detailed TrueContext Teamwork workflow"
    }
  },
  {
    "content": "supervisor can check the answers and, if they notice an error, they can send the completed form for editing. The mobile device user can either send or transfer the edited form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/HowPFTeamworkWorks.htm",
      "title": "How TrueContext Teamwork Works",
      "section": "Detailed TrueContext Teamwork workflow"
    }
  },
  {
    "content": "Job that requires multiple experts\n\nComplex service tasks sometimes require different team members to perform different stages of work. For example, you might send a junior technician to a customer site to perform basic maintenance and assessment, and then hand over the work to someone with more advanced skills. With the TrueContext Teamwork feature enabled on a form, the junior technician can submit the partially completed (“incomplete”) form. They can either transfer the form directly to an expert or leave the form unassigned. Any available expert can pick up (“claim”) an unassigned form, or a supervisor can assign the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/ExamplesOfAPFTeamworkWorkflow.htm",
      "title": "Examples of a TrueContext Teamwork Multi-User Workflow",
      "section": "Job that requires multiple experts"
    }
  },
  {
    "content": "Job that spans multiple shifts\n\nWhen a technician finishes only part of a job before their shift ends, they can make their incomplete form available to the next shift. A user on the second shift can also submit a partially completed form for someone on the third shift to complete.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/ExamplesOfAPFTeamworkWorkflow.htm",
      "title": "Examples of a TrueContext Teamwork Multi-User Workflow",
      "section": "Job that spans multiple shifts"
    }
  },
  {
    "content": "Job that spans weeks or months\n\nYou can use the TrueContext Teamwork feature for longer-term monitoring of pre- and post-maintenance work. You might assign one technician to take a pre-maintenance reading, another to perform maintenance work, and another to take a follow-up reading. Your mobile workforce can transfer a single form as needed for each stage of the work. Tip:Users can transfer an incomplete form as many times as necessary, until a user submits the completed form.When an Admin user reviews the Form Submission in the Web Portal, they can clearly identify the form’s current state and assignee (if assigned). They can also access the answers from all the users who submitted a version of the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/ExamplesOfAPFTeamworkWorkflow.htm",
      "title": "Examples of a TrueContext Teamwork Multi-User Workflow",
      "section": "Job that spans weeks or months"
    }
  },
  {
    "content": "Video Demo of the TrueContext Teamwork Feature This recording shows you the different ways you can use TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. for a multi-user workflow. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Introduction/TeamworkVideo.htm",
      "title": "Video Demo of the TrueContext Teamwork Feature"
    }
  },
  {
    "content": "Configure a TrueContext Teamwork form\n\nTrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. is a form-level feature that enables mobile device users to submit incomplete forms for other users to complete. The topics in this section describe how to set up a form to use the TrueContext Teamwork feature. These topics also describe how to configure image stamps in a TrueContext Teamwork-enabled form and how to execute Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. when users submit incomplete forms. Available on the Enterprise tier only: Essentials Advanced",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/ConfigureTWForm.htm",
      "title": "Configure a TrueContext Teamwork form",
      "section": "Configure a TrueContext Teamwork form"
    }
  },
  {
    "content": "Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/ConfigureTWForm.htm",
      "title": "Configure a TrueContext Teamwork form",
      "section": "Configure a TrueContext Teamwork form"
    }
  },
  {
    "content": "Prerequisites for a TrueContext Teamwork-enabled Form The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables multiple users to work on a form before completing and sending it. Users can submit forms as incomplete for other users to claim or supervisors to assign. This topic describes the prerequisites to enable TrueContext Teamwork on a form. Available on the Enterprise tier only: Essentials Advanced Enterprise Your TrueContext Team must be on the Enterprise tier. Depending on your workflow, your users must have the following Mobile App versions: Action App Versions Submit incomplete forms for other users to claim or supervisors to assign. Windows, iOS, or Android 12.0 or later. Transfer incomplete records directly to other users. Windows,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/PrerequisitesTeamworkForm.htm",
      "title": "Prerequisites for a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "iOS, or Android 14.0 or later. You must be an Admin user or a User with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Tip:If you’re not an Admin user, you should have the following permissions so that you can thoroughly test your forms:Can TestCan ViewCan Submit Your team must have the Inbox enabled. From the Inbox, mobile users can access dispatched forms assigned forms claimed forms, and transferred forms. Do you want users to be able to claim incomplete forms? If yes, enable the Search box at the team level and at the form level in the Workflow Settings. Info:The topic Enable the Mobile Search Feature on your Form describes how to enable the Search box. If no, you can still dispatch, unassign, and assign forms to users. You can also",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/PrerequisitesTeamworkForm.htm",
      "title": "Prerequisites for a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "enable users to transfer forms directly to other users. Do you want users to transfer forms directly to other users? If yes, check that all the required team members have permissions to access the form. Info:To access the form, users must be in a group with Can Submit FormSpace permissions. The topic Permissions Quick Reference describes how permissions work in more detail. If no, you can still enable users to submit forms as incomplete for other users to claim.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/PrerequisitesTeamworkForm.htm",
      "title": "Prerequisites for a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "Enable TrueContext Teamwork on a form\n\nFrom the Forms & Integrations menu, navigate to the form you want to configure. Select Edit Form. Select Settings, and then select the Workflow Settings. In the TrueContext Teamwork section, select the checkboxes to enable mobile device users to transfer partially completed (incomplete) forms. You can select the following options to meet your workflow requirements: Select Enable Search to allow users to search for incomplete forms that they can claim. Info:You must enable the Search box at the team level to configure the Search Options at the form level. The topic Enable the Mobile Search feature describes how Admin users enable the Search box. Allow users to transfer forms directly to other users. Users can transfer incomplete forms directly to any user who has permissions to access the form. Allow users to transfer forms for any other team member to claim, or a supervisor to assign. Tip:With any TrueContext Teamwork configuration, supervisors",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/StepsEnablePFTeamwork.htm",
      "title": "Steps to Enable TrueContext Teamwork on a Form",
      "section": "Enable TrueContext Teamwork on a form"
    }
  },
  {
    "content": "can always unassign and assign forms as needed. Note:The TrueContext Teamwork feature is not compatible with the Data Passthrough feature. If you enable Data Passthrough, the TrueContext servers do not store the data from your Form Submissions, so you can’t work on incomplete form submissions. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/StepsEnablePFTeamwork.htm",
      "title": "Steps to Enable TrueContext Teamwork on a Form",
      "section": "Enable TrueContext Teamwork on a form"
    }
  },
  {
    "content": "Configure a TrueContext Teamwork Workflow The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables you to configure multi-user workflows for a single form. Users can transfer forms directly to other users, or they can submit them as incomplete. Other users can claim incomplete forms, or supervisors can assign them from the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. This topic describes how to configure the different workflows available with TrueContext Teamwork. Available on the Enterprise tier only: Essentials Advanced Enterprise You can configure TrueContext Teamwork to meet the requirements of different",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ChooseTeamworkWorkflow.htm",
      "title": "Configure a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "workflows: Mobile users can manage the assignment of the incomplete form: Submit incomplete forms for others to claim. Transfer directly to another user’s Inbox Search for and claim incomplete forms Only supervisors can manage the assignment of the incomplete form: Clear the option for mobile users to search for the form Clear the option for mobile users to transfer the form directly Tip:With any TrueContext Teamwork configuration, supervisors can always unassign and assign forms as needed. For example, if a form is assigned to a technician, supervisors can intervene if the technician is unavailable. They can unassign the form, and then assign it for another user to work on. If you want mobile users to... At the team level... And at the form level... Transfer incomplete forms directly to other users Open transferred or assigned forms from their Inbox Keep the default settings (Inbox enabled) Go to SETTINGS > Workflow Settings > TrueContext Teamwork. Select Allow users to transfer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ChooseTeamworkWorkflow.htm",
      "title": "Configure a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "incomplete forms directly to another user. Submit incomplete forms Search for and claim incomplete forms Enable Mobile Search Mobile Search is a feature that enables mobile users to display a list of forms submitted by themselves or other users and, if configured, incomplete TrueContext Teamwork-enabled forms. A user must be connected to a network to perform a mobile search. for your team: TEAM SETTINGS > Mobile Device> Device Configuration > Actions > Update Custom Configuration Go to SETTINGS > Workflow Settings > TrueContext Teamwork. Select the option Allow users to release incomplete forms for other users to claim. Go to SETTINGS > Workflow Settings > Search Options. Select the option Enable Search. Submit incomplete forms but not transfer or claim them Note:For this workflow, supervisors are responsible for assigning forms. If they need to unassign forms, they might lose data if users have started to work on the form. Keep the default settings (Inbox enabled) Go to SETTINGS >",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ChooseTeamworkWorkflow.htm",
      "title": "Configure a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "Workflow Settings > TrueContext Teamwork. Select Allow users to release incomplete forms.... Go to SETTINGS > Workflow Settings > Search Options. Clear the option Enable Search. Note:With this option cleared, users can’t search for any complete or incomplete version of this form. Info:The topic Steps to Enable TrueContext Teamwork on a Form describes in more detail how to configure a TrueContext Teamwork form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ChooseTeamworkWorkflow.htm",
      "title": "Configure a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "Configure Image Stamps in a TrueContext Teamwork-enabled Form Mobile users can submit incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms for other users to claim or supervisors to assign. Different users can submit an incomplete form multiple times until a user sends the completed form. When you configure image stamps on a TrueContext Teamwork-enabled form, you must understand when the system stamps the images. This topic describes the different settings to configure image stamps for TrueContext Teamwork-enabled forms. Available on the Enterprise tier only: Essentials Advanced Enterprise When you add an image question to a form, you can configure the question properties to stamp data on the image. Because a TrueContext",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ConfigureImageStampsTeamwork.htm",
      "title": "Configure Image Stamps in a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "Teamwork-enabled form can have different submission versions, it can be helpful to understand when the system collects different types of information. The system collects Image Properties when the mobile user takes the picture. The system only collects Image Properties for images that users upload directly from their camera. Note:Image Properties depend on the device’s camera settings. Some cameras do not support stamping Image Properties. The system collects System Properties when a user submits the completed form. The system collects the Geo Stamp where the user submits the form, and the Entry Timestamp when the user submits the form. Note:The system does not collect System Properties when a user transfers an incomplete form. Note:The system stamps images when a user submits the completed form. Even though the system collects information at different times, you can only view the image stamps when the form is complete. Info:The topic Stamping Data Onto Images describes in detail how",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ConfigureImageStampsTeamwork.htm",
      "title": "Configure Image Stamps in a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "to configure an image question to stamp data on images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ConfigureImageStampsTeamwork.htm",
      "title": "Configure Image Stamps in a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "Configure Data Destinations to Execute for Incomplete TrueContext Teamwork-enabled Form Submissions Mobile users can submit TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms as incomplete for other users to complete. When users transfer an incomplete form, the system receives the submitted form data and can send this data to any configured Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. This topic describes how to configure Data Destinations to execute when users submit forms as incomplete. Available on the Enterprise tier only:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ConfigureDataDestinationsTeamwork.htm",
      "title": "Configure Data Destinations to Execute for Incomplete TrueContext Teamwork-enabled Form Submissions"
    }
  },
  {
    "content": "Essentials Advanced Enterprise Data Destinations have customizable filter rules to determine when the Destination executes. You can configure Data Destinations to execute when users submit incomplete TrueContext Teamwork-enabled forms. This means that you can send and store data from incomplete forms. For example, you can do the following workflow actions: Back up copies of incomplete Form Submissions on your external storage system. Send email notifications of work in progress. Update your system of record with work in progress. Send progress reports to your customers. Info:The topic Applying Filtering to Data Destinations describes in detail how to configure the filters on Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Configuration/ConfigureDataDestinationsTeamwork.htm",
      "title": "Configure Data Destinations to Execute for Incomplete TrueContext Teamwork-enabled Form Submissions"
    }
  },
  {
    "content": "Manage a TrueContext Teamwork Workflow\n\nWith the TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enabled on a form, you can unassign, and assign incomplete forms as many times as required. The topics in this section describe how supervisors and team leads can use the Web Portal to manage work that involves more than one team member. These topics also describe how to check the status of work in progress for TrueContext Teamwork-enabled forms. As well, you can view the answers submitted by each team member by accessing each Form Submission Version. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/ManageTWWorkflow.htm",
      "title": "Manage a TrueContext Teamwork Workflow",
      "section": "Manage a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "Prerequisites to Manage a TrueContext Teamwork Workflow With the TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enabled on a form, you can unassign and assign incomplete forms as many times as required. This topic describes the prerequisites required to manage a TrueContext Teamwork workflow. Available on the Enterprise tier only: Essentials Advanced Enterprise As a supervisor, team lead, or dispatcher, you must have either of the following TrueContext permissions: An Admin user role A User role with membership in a group that has the following FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/PrereqsManageTeamwork.htm",
      "title": "Prerequisites to Manage a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "permissions to control which users have access to the forms in that FormSpace. permissions:Can View—to view, unassign, and assign workCan Create—(optional) to dispatch forms The form that you want to manage must have the TrueContext Teamwork feature enabled. Depending on your workflow, your users must have the following Mobile App versions: Action App Versions Submit incomplete forms for other users to claim or supervisors to assign. Windows, iOS, or Android 12.0 or later. Transfer incomplete records directly to other users. Windows, iOS, or Android 14.0 or later.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/PrereqsManageTeamwork.htm",
      "title": "Prerequisites to Manage a TrueContext Teamwork Workflow"
    }
  },
  {
    "content": "Dispatch a TrueContext Teamwork-enabled Form With the TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature, more than one mobile device user can work on a form at different times. This topic describes how to dispatch a TrueContext Teamwork-enabled form to begin a multi-user workflow. Available on the Enterprise tier only: Essentials Advanced Enterprise Info:Depending on the form-level configuration, your mobile device users can also start a form from their Forms tab. If you don’t need to dispatch the form, go to the topic Check the Status of TrueContext Teamwork Work in Progress. When you’re ready for your team to begin work, you can dispatch the TrueContext Teamwork-enabled form to the first mobile device user. Note: You must have Can Create group",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/DispatchTeamworkForm.htm",
      "title": "Dispatch a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "permissions in your FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. Go to Forms & Integrations > FormName > Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API).. Dispatch the form to one or more users. Result: Each user can open the form from their Inbox. The system tracks each dispatch as a separate form submission. This means that you can track each user’s changes, even if you bulk dispatch A bulk dispatched form is a form sent to multiple mobile users with partially filled information (such as",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/DispatchTeamworkForm.htm",
      "title": "Dispatch a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "customer contact information) to provide context to the users. TrueContext Admin users download and complete a CSV template to specify which users receive the dispatched content. the form to multiple users. Info:The topic Dispatch Forms to a User describes different ways to dispatch a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/DispatchTeamworkForm.htm",
      "title": "Dispatch a TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "Check the Status of TrueContext Teamwork Work in Progress With TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms, you can check the status at each stage of work and take action as required. This topic describes how to track work in progress using the Web Portal. Available on the Enterprise tier only: Essentials Advanced Enterprise Note:If you’re not an Admin user, you must have Can View group permissions in your FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. To get an overview of all work in progress for a specific",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/CheckTheStatusTeamwork.htm",
      "title": "Check the Status of TrueContext Teamwork Work in Progress"
    }
  },
  {
    "content": "form, go to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. The Form Submissions page includes the following details: Reference number and an icon that indicates the current status Submitter—the last user to submit data Assignee—the mobile device user that the form is currently dispatched to, assigned to, transferred to, or claimed by Info:For more detailed information about the Form Submissions page, go to the topic Viewing Form Submissions in the Web Portal. The system creates a new form submission version A form submission version is a record of the changes a user made to a single Form Submission. The system creates a new form submission version when a form is dispatched, transferred as incomplete (TrueContext Teamwork only), edited, or submitted.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/CheckTheStatusTeamwork.htm",
      "title": "Check the Status of TrueContext Teamwork Work in Progress"
    }
  },
  {
    "content": "each time form submission data changes. Form submission A form submission is a dispatched or submitted form. versions provide a way for you to review the data that changed and identify the user who changed it.To access the version history of a specific form submission, display the Form Submissions page as described in step 1, and then select the Reference #.Tip:Although a Form Submission version can change, the reference number does not change. On the Form Submission Details page, select the reference number, and then select Version History. Result: The system displays the form submission versions, along with the other information shown in the following example. In this example, the version history shows that this form submission was dispatched to and then transferred by User123. Info:The topic Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission shows the version history of a complete Form Submission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/CheckTheStatusTeamwork.htm",
      "title": "Check the Status of TrueContext Teamwork Work in Progress"
    }
  },
  {
    "content": "Assign an incomplete TrueContext Teamwork-enabled form\n\nYou can assign any unassigned form to a specific user. Go to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Select a Form Submission from the Reference # column. On the Form Submission Details page, select the reference number, and then select Assign to a User. Select the user to assign to, and then select Send. Result: The system sends the record to the user you selected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/ReassignIncompleteForm.htm",
      "title": "Assign an Incomplete TrueContext Teamwork-enabled Form",
      "section": "Assign an incomplete TrueContext Teamwork-enabled form"
    }
  },
  {
    "content": "Unassign an incomplete TrueContext Teamwork-enabled form\n\nGo to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Select a Form Submission from the Reference # column. On the Form Submission Details page, select the reference number, and then select Unassign From User. When prompted, select Confirm to unassign the form. Warning:If the assigned user has started to work on the form, you will lose any changes that user has made to the form when you unassign it. Result: The record assignment changes to Unassigned.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/UnassignIncompleteForm.htm",
      "title": "Unassign an Incomplete TrueContext Teamwork-enabled Form",
      "section": "Unassign an incomplete TrueContext Teamwork-enabled form"
    }
  },
  {
    "content": "Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables multiple users to work on a form at different times. Mobile users can submit forms as incomplete as many times as needed until a user submits the completed form. This topic describes how to track which users worked on the form, the answers each user submitted, and all the changes in the answers to each question. These steps can be helpful for auditing purposes and to identify all the users involved in a completed form submission. Available on the Enterprise tier only: Essentials Advanced Enterprise The system creates a new form submission version A form submission version is a record of the changes",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/AnswersFormSubmissionVersion.htm",
      "title": "Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission"
    }
  },
  {
    "content": "a user made to a single Form Submission. The system creates a new form submission version when a form is dispatched, transferred as incomplete (TrueContext Teamwork only), edited, or submitted. each time form submission data changes. Form submission A form submission is a dispatched or submitted form. versions provide a way for you to review the data that changed and identify the user who changed it. Go to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Select a Form Submission from the Reference # column. Select the reference number, and then select Version History. Result: The Form Submission Versions page displays a row for each version the state of each version the user who last submitted (sent or transferred) data for each version, and the user",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/AnswersFormSubmissionVersion.htm",
      "title": "Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission"
    }
  },
  {
    "content": "assigned to work on the form. The following example shows the version history of a completed form. Tip:Sometimes a Form Submission Version has both a Submitter and an Assignee. The Submitter is the last user that transferred or sent the form from the Mobile App. The Assignee is the user in charge of the next action required on the form. To see the answers provided for a specific form version, select the version number. Result: The Form Submission Version Details page displays the answers and indicates whether the submitter corrected any previous answers. When you check the answer to an image question in a completed form, you might see data “stamped” on the image. The system collects information at different times, as explained in the topic Configure Image Stamps in a TrueContext Teamwork-enabled Form. Note:For audit purposes, the Image Properties time stamp (Date) always shows the date and time when a user actually took a photo. This ensures that you always know when the photo in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/AnswersFormSubmissionVersion.htm",
      "title": "Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission"
    }
  },
  {
    "content": "completed form was actually taken. This time stamp shows the time zone configured in the mobile app, and the System Properties time stamp shows the time zone configured for the team. Example of original photo unchanged: User1 takes a photo and transfers an incomplete form. User2 completes and submits the form without taking a new photo. The Image Properties date stamped on the image shows when User1 took the photo. The System Properties date stamped on the image shows when User2 submitted the form. Example of original photo replaced: User1 takes a photo and transfers an incomplete form. User2 replaces the photo from User1 with a new photo, and then submits the completed form. The Image Properties date stamped on the image shows when User2 took the new, replacement photo. The System Properties date stamped on the image shows when User2 submitted the form. Note:You can only see the data stamped on an image when you view the details of a completed form, even if that data was captured",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/AnswersFormSubmissionVersion.htm",
      "title": "Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission"
    }
  },
  {
    "content": "earlier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/AnswersFormSubmissionVersion.htm",
      "title": "Check the Answers in Different Versions of a TrueContext Teamwork-enabled Form Submission"
    }
  },
  {
    "content": "Send a Completed TrueContext Teamwork-enabled Form for Corrections With a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form, you can still send the form for corrections, but only once the form is Completed. The mobile device user can either send or transfer the corrected form. Info:The topic Form Submission Corrections describes how to enable a form for corrections. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Management/SendForEditing.htm",
      "title": "Send a Completed TrueContext Teamwork-enabled Form for Corrections"
    }
  },
  {
    "content": "Use TrueContext Teamwork on your Mobile Device\n\nThe TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables you to open, directly transfer, submit, claim, be transferred to, or be assigned partially completed forms. The topics in this section describe how to navigate the Mobile App to use the TrueContext Teamwork feature. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/UseTWMobile.htm",
      "title": "Use TrueContext Teamwork on your Mobile Device",
      "section": "Use TrueContext Teamwork on your Mobile Device"
    }
  },
  {
    "content": "Prerequisites to Use TrueContext Teamwork on your Mobile Device With TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. enabled, you can open, transfer (submit), claim, be transferred, or be assigned partially completed forms. This topic describes the prerequisites to use the TrueContext Teamwork feature on the Mobile App. Available on the Enterprise tier only: Essentials Advanced Enterprise Your TrueContext Team must be on the Enterprise tier. Depending on your workflow, you must have one of the following Mobile App versions installed on your device: Workflow Action App versions Submit incomplete forms for other users to claim or supervisors to assign Windows, iOS, or Android 12.0 or later. Transfer incomplete forms directly to other users. Windows, iOS,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/PrereqsMobileDevice.htm",
      "title": "Prerequisites to Use TrueContext Teamwork on your Mobile Device"
    }
  },
  {
    "content": "or Android 14.0 or later. You must be a TrueContext Mobile Device user with Can Submit permissions in the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. You must have access to at least one form with TrueContext Teamwork enabled. To claim a form, your device must be online, and your TrueContext Team must have the Search box enabled. Info:The topic Enable the Mobile Search feature describes how to enable the Search box.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/PrereqsMobileDevice.htm",
      "title": "Prerequisites to Use TrueContext Teamwork on your Mobile Device"
    }
  },
  {
    "content": "Transfer an incomplete TrueContext Teamwork-enabled form\n\nThe way that you transfer the form depends on your device. iOS iPhone: Select Back, and then select Close > Transfer. iOS iPad: Select Close > Transfer. Android and Windows: Select the action menu, and then select Transfer. Result: The following table describes a user’s experience based on the form configuration: Form configuration User experience Allow users to transfer forms directly to other users Allow users to release partially completed forms for other users to claim The app opens a list of other users you can transfer the form directly to. It also gives you the option to transfer the form to Anyone (Unassigned). Tip:If you transfer the form to Anyone (Unassigned), other users can search for and claim the incomplete form, or supervisors can assign the form from the Web Portal. Only allow users to transfer forms directly to other users The app opens a list of other users you can transfer the form to. Only allow users to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/TransferTeamworkForm.htm",
      "title": "Transfer an Incomplete TrueContext Teamwork-enabled Form",
      "section": "Transfer an incomplete TrueContext Teamwork-enabled form"
    }
  },
  {
    "content": "release partially completed forms for other users to claim The app prompts you to confirm that you want to transfer the form. When you confirm, the form becomes available for other users to search for and claim or your supervisor to assign.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/TransferTeamworkForm.htm",
      "title": "Transfer an Incomplete TrueContext Teamwork-enabled Form",
      "section": "Transfer an incomplete TrueContext Teamwork-enabled form"
    }
  },
  {
    "content": "Search for and claim an incomplete TrueContext Teamwork-enabled form\n\nOn the Mobile App, select Search. Search for incomplete forms in one or both of the following ways. Use the Advanced Search to search for all forms submitted as incomplete that you can claim. Select the Incomplete (To Claim) filter, as shown in the following example. Enter all or part of the name of a form submission. Result: The app displays a list of all matching submitted forms. Submitted forms that you can claim are labeled Incomplete, and show a Claim option, as shown in the following example. Info:The topic Use the Mobile Search Feature on your Device describes how to use the Mobile Search in more detail. To view the information provided by previous users, select the submitted form, and then select View Documents. This prompts you to download a file that contains the answers provided so far. For example, a delivery driver can see that a previous delivery attempt failed because of poor road conditions due to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/SearchClaimIncompleteForm.htm",
      "title": "Search for, Claim, and Submit an Incomplete TrueContext Teamwork-enabled Form",
      "section": "Search for and claim an incomplete TrueContext Teamwork-enabled form"
    }
  },
  {
    "content": "weather. They can then decide if another delivery attempt is advisable, based on the current conditions. Select Claim > Confirm. Result: The system assigns the form to you and opens it automatically. The system stores all claimed Form Submissions in your Inbox. Note:Only one user at a time can claim a form. Continue to complete the form. You can answer unanswered questions, and you can change previous answers. In this example, the delivery driver completes the delivery and fills out all the required fields. Are you ready to submit your form? If yes, Send your form. If no, you can save the form as a Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. to keep working on it later or Transfer it to make it available to other users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/SearchClaimIncompleteForm.htm",
      "title": "Search for, Claim, and Submit an Incomplete TrueContext Teamwork-enabled Form",
      "section": "Search for and claim an incomplete TrueContext Teamwork-enabled form"
    }
  },
  {
    "content": "Open and Submit an Assigned or Transferred Incomplete TrueContext Teamwork-enabled Form The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature lets you submit or transfer incomplete forms for other users to complete. This topic describes how to open forms on your mobile device that your supervisor assigned or that another user transferred directly to you. Available on the Enterprise tier only: Essentials Advanced Enterprise From your Inbox, you can open incomplete forms that your supervisor or team lead assigned to you, or another mobile user transferred directly to you. Check your Inbox and open the incomplete form. Continue to complete the form. You can answer unanswered questions, and you can change previous answers. Are you ready to submit your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/OpenSubmitTeamwork.htm",
      "title": "Open and Submit an Assigned or Transferred Incomplete TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "form? If yes, Send your form. If no, you can save the form as a Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. to keep working on it later or Transfer it to make it available to other users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/Usage/OpenSubmitTeamwork.htm",
      "title": "Open and Submit an Assigned or Transferred Incomplete TrueContext Teamwork-enabled Form"
    }
  },
  {
    "content": "TrueContext Teamwork Technical Details\n\nSetting up a multi-user workflow with TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. requires that you understand how other features affect it, how Mobile Users interact with the app, and how TrueContext Teamwork-enabled forms differ from other forms. The topics in this section provide reference information about the TrueContext Teamwork feature. They also describe the configuration options and provide technical details about form submission versions and status. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/LandingPages/TWTechDetails.htm",
      "title": "TrueContext Teamwork Technical Details",
      "section": "TrueContext Teamwork Technical Details"
    }
  },
  {
    "content": "TrueContext Teamwork Supported App Versions The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables mobile device users to submit forms as incomplete for other users to complete. This topic describes the versions of the TrueContext Mobile App that support the TrueContext Teamwork feature. Available on the Enterprise tier only: Essentials Advanced Enterprise The different workflow actions users can take on TrueContext Teamwork-enabled forms are supported on the following Mobile App versions: TrueContext Teamwork workflow action Supported App Versions Mobile users can submit incomplete forms for other users to claim or supervisors to assign. Windows, iOS, or Android 12.0 or later. Mobile users can transfer incomplete forms directly to other",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/SupportedAppVersions.htm",
      "title": "TrueContext Teamwork Supported App Versions"
    }
  },
  {
    "content": "users. Windows, iOS, or Android 14.0 or later.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/SupportedAppVersions.htm",
      "title": "TrueContext Teamwork Supported App Versions"
    }
  },
  {
    "content": "Form-level TrueContext Teamwork configuration\n\nYou can configure forms to allow mobile device users to: Transfer a partially completed form directly to another user. Submit incomplete forms for other users to claim or supervisors to assign. Search for and claim incomplete form submissions. Launch TrueContext Teamwork-enabled forms from their Forms box. Note:Users can’t decline a dispatched TrueContext Teamwork form. If they don’t want to accept the form, they can transfer it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/ConfigurationOptions.htm",
      "title": "TrueContext Teamwork Configuration Options",
      "section": "Form-level TrueContext Teamwork configuration"
    }
  },
  {
    "content": "Team-level TrueContext Teamwork configuration\n\nAt the team level, you can configure whether users can claim incomplete forms. Info:Visit Configure a TrueContext Teamwork form for more details. Do you want your online users to claim unassigned forms? If yes, enable the Search box in the TrueContext Mobile App. Remember that users can only access forms within the FormSpaces that they have access to. Info:The topic Enable the Mobile Search Feature for your Team describes how to enable the Search box. If no, keep the Search box hidden in the TrueContext Mobile App. This ensures that only supervisors and team leads can move an incomplete form through the workflow by assigning it to other users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/ConfigurationOptions.htm",
      "title": "TrueContext Teamwork Configuration Options",
      "section": "Team-level TrueContext Teamwork configuration"
    }
  },
  {
    "content": "TrueContext Teamwork Form Submission Versions The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables multi-user workflows for a single form. Because multiple users can work on a form at different times, the system creates a new form submission version whenever a mobile user or supervisor makes changes to the form. This topic describes the different actions that cause the system to create new form submission versions. Available on the Enterprise tier only: Essentials Advanced Enterprise The system creates a new form submission version A form submission version is a record of the changes a user made to a single Form Submission. The system creates a new form submission version when a form is dispatched, transferred as incomplete (TrueContext",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/FormSubmission.htm",
      "title": "TrueContext Teamwork Form Submission Versions"
    }
  },
  {
    "content": "Teamwork only), edited, or submitted. each time form submission data changes. Form submission A form submission is a dispatched or submitted form. versions provide a way for you to review the data that changed and identify the user who changed it. The following table describes a workflow initiated by a supervisor dispatching a form. Note:Users can also start work on a form by opening it from the Forms tab in the Mobile App. In this case, the first Form Submission version is created when the user transfers or sends the form. Action Changestodata? FormSubmissionversion Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). to mobile user Yes 1 Mobile user transfers incomplete form Yes 2 Mobile user claims incomplete form No 2",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/FormSubmission.htm",
      "title": "TrueContext Teamwork Form Submission Versions"
    }
  },
  {
    "content": "Mobile user transfers incomplete form Yes 3 Supervisor assigns form No 3 Supervisor unassigns form No 3 Mobile user claims unassigned form No 3 Mobile user sends complete form Yes 4 Supervisor sends form for corrections No 4 Mobile user sends corrected form Yes 5",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/FormSubmission.htm",
      "title": "TrueContext Teamwork Form Submission Versions"
    }
  },
  {
    "content": "TrueContext Teamwork Form Submission Status The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables you to configure forms for multi-user workflows. Users can submit forms as incomplete for other users to complete. From the Web Portal, you can also unassign and assign forms. This topic describes the form submission statuses that apply to TrueContext Teamwork-enabled forms only. Available on the Enterprise tier only: Essentials Advanced Enterprise The following form submission statuses apply specifically to TrueContext Teamwork-enabled forms. Status A mobile device user... Or a Web Portal user... Incomplete (Unassigned) Submitted an incomplete form. Unassigned an incomplete form. Incomplete (Assigned) Claimed an unassigned form or directly",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/FormSubmissionStatus.htm",
      "title": "TrueContext Teamwork Form Submission Status"
    }
  },
  {
    "content": "transferred an incomplete form to another mobile device user. Assigned an incomplete form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/FormSubmissionStatus.htm",
      "title": "TrueContext Teamwork Form Submission Status"
    }
  },
  {
    "content": "Compatibility of TrueContext Teamwork with Other Features The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables mobile users to transfer incomplete forms directly to other users or to submit them for other users to claim or supervisors to assign. This topic describes the different TrueContext features that are compatible or incompatible with TrueContext Teamwork. Available on the Enterprise tier only: Essentials Advanced Enterprise The TrueContext Teamwork feature works with other TrueContext features, including: Trigger a data destination when a user submits an incomplete form. Use Conditional Logic to display sections based on completion of previous sections. Send a completed form for editing. Note:The TrueContext Teamwork feature is not",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/CompatibilityWithOtherFeatures.htm",
      "title": "Compatibility of TrueContext Teamwork with Other Features"
    }
  },
  {
    "content": "compatible with the Data Passthrough feature.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/CompatibilityWithOtherFeatures.htm",
      "title": "Compatibility of TrueContext Teamwork with Other Features"
    }
  },
  {
    "content": "TrueContext Teamwork Mobile Device User Experience The TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature enables mobile device users to transfer incomplete forms for other users to complete. This topic describes the different options available to mobile device users when working on a TrueContext Teamwork-enabled form. Available on the Enterprise tier only: Essentials Advanced Enterprise The following table describes the options available to a mobile user. Option Result Save the form to work on later. The form remains in the user’s Drafts. Transfer the partially completed form to a specific user. The mobile device user can choose from a list of users in any group that has permissions to access the form. The system changes the status of the form to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/MobileDeviceUserExperience.htm",
      "title": "TrueContext Teamwork Mobile Device User Experience"
    }
  },
  {
    "content": "Incomplete (Assigned). Submit the partially completed form for other users to work on. The system changes the status to Incomplete (Unassigned). Users in any group with permissions to access and submit the form can claim the form, and supervisors can assign a form. Search for and claim an incomplete form that another user transferred as incomplete. Info:You must enable the Search box in the Mobile App at the team level. The topic Enable the Mobile Search Feature for your Team describes how to enable the Search box. Users must be online to use Search in the Mobile App. The system assigns the form to that user changes the status to Incomplete (Assigned), and locks other users out. Tip:When you transfer an incomplete form, you can include answers for the next user to review, even if they have errors. For example, if an image question has a limit of two images, and you include three, you can still transfer the form. The user who then works on that form can decide which two of the three",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/MobileDeviceUserExperience.htm",
      "title": "TrueContext Teamwork Mobile Device User Experience"
    }
  },
  {
    "content": "images to submit when they complete the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/PF_Teamwork/TeamworkH3/TechnicalDetails/MobileDeviceUserExperience.htm",
      "title": "TrueContext Teamwork Mobile Device User Experience"
    }
  },
  {
    "content": "Video demo\n\nLearn from an expert! This video shows you the different ways you can send work to the field.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Video demo"
    }
  },
  {
    "content": "Key Concepts\n\nSend jobs to your workforce by dispatching the work. You can: Prefill and send forms manually using the Web Portal. Integrate with your existing third-party systems to automate dispatching using the TrueContext API (Advanced and Enterprise tier). Include important job details like due date, location, and special instructions. (Enterprise tier only) With any of the dispatching methods, you can send the record to a user, a group of users, or all groups in a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. (Enterprise tier only). Reassign the job if a technician is unavailable. Send follow-up work when the initial work is completed using a Dispatch Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Create a new record with its own identifier that follows a separate workflow from the initial work (Advanced and Enterprise tier). Create a record with its own identifier each time you dispatch a record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nTo send records: Make sure your form can be dispatched. Open the form in edit mode and go to Settings > Workflow Settings > Form Initiation Methods. Select either Inbox or Inbox and Forms Box. By default, forms have Inbox and Forms Box selected. Tip:If you’re on the Enterprise tier, these options also switch on group dispatching. If your team is on the Enterprise tier, to open records from the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox., the form must have Search enabled. Make sure mobile users can access their Inbox. Go to Your username > Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Mobile Device > Device Configuration >",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Configuration"
    }
  },
  {
    "content": "Actions > Update Custom Configuration. Select the option to display the Inbox. Make sure mobile users can access the Group Inbox (Enterprise tier only). Go to Your username > Team Settings > Mobile Device > Device Configuration > Actions > Update Custom Configuration. Select the option to display the Group Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Configuration"
    }
  },
  {
    "content": "Recipients\n\n(Enterprise tier only) With any of the dispatching methods, you can send the record to a user, a group of users, or all groups in a FormSpace. If... Then send the record to a... The system... You know which technician is available and has the skills to do the work You want a specific technician to pick up the work, regardless of their availability. User Assigns the record to the user. The user can open the record from their Inbox. Enterprise tier only You have a group of technicians with the right skills for the job You want the next available technician to work on the record Group Makes the record available for any user in the group to claim. The user can claim the record from their Group Inbox. Note:A field technician must be online to claim a record from the Group Inbox. Teams with different specialties or skills need access to the record to determine if they should claim it You have different groups with similar skill sets that could pick up the work FormSpace Makes the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Recipients"
    }
  },
  {
    "content": "record available for users in a FormSpace to claim. Users must be in a group that has Can Submit FormSpace permissions. Users can claim the record from their Group Inbox. Note:A field technician must be online to claim a record from the Group Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Recipients"
    }
  },
  {
    "content": "Dispatching Methods\n\nThe way you choose to send work depends on your business objectives or process. You can set up automated dispatches or manually dispatch forms from the Web Portal. Tip:(Enterprise tier only) With any of the dispatching methods, you can send the record to a user, a group of users, or all groups in a FormSpace. Automated Dispatching Automated Dispatching enables you to trigger dispatches under certain conditions that you set up in your third-party system or within TrueContext. If you need to... Use... Trigger automatic dispatches from your third-party system Prefill contents using data from your third-party system Automate sending multiple records at the same time One of the following TrueContext API endpoints (Advanced and Enterprise tiers): POST /api/1.1/data/dispatch Dispatches a form to a user or a group POST /api/1.1/data/dispatch/bytag Dispatches forms that have the same tag to a user or group Automatically trigger a follow-up job when initial work is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Dispatching Methods"
    }
  },
  {
    "content": "completed. This creates a new record with its own identifier that follows a separate workflow from the initial work A Dispatch Data Destination (Advanced and Enterprise tiers). Manual Dispatching Manual Dispatching gives you more control and granularity over when to send a record, who to send it to, and the information to prefill. If you need to... Use... Control when to prefill and send a single record Choose when to send a record to specific people Make a single record available to groups Send a record to test a new form Manage work using the TrueContext platform rather than a third-party system The Web Portal for a single-record dispatch. Send multiple records at once Prefill multiple records using data already organized in a spreadsheet format Prepare multiple records in advance for simultaneous dispatch Send each record to either a user, a group, or the groups in a FormSpace (Enterprise tier only). A CSV file for a bulk dispatch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchingLandingPage.htm",
      "title": "Dispatching",
      "section": "Dispatching Methods"
    }
  },
  {
    "content": "Introduction to Dispatching\n\nDispatching is how you send work to the field. You can send a record with some of the information prefilled to give field users what they need to start their work. Available on all tiers, with more options on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntroToDispatchingLandingPageH2.htm",
      "title": "Introduction to Dispatching",
      "section": "Introduction to Dispatching"
    }
  },
  {
    "content": "Benefits of dispatching\n\nIn many cases, starting with a blank form just doesn’t make sense. You know in advance who should be filling out the form, and you know some of the data that belongs there. Dispatching allows an administrator to choose which mobile user should fill out a form and to provide important information about the task. For example, you can direct a technician to a customer location and provide instructions about the work to be done. This can help mobile workers arrive prepared for their site visit so that they can get right to the task at hand.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Benefits of dispatching"
    }
  },
  {
    "content": "Ways to dispatch a form\n\nThere are four ways to dispatch forms to users: Dispatch from the web portal Bulk dispatch from the web portal with a CSV file Dispatch with the TrueContext API Dispatch data from one form to another with the Dispatch Data Destination This topic describes the first two options. Info:The topic Supported Question and Data Types for Dispatching lists the data and question types that each dispatch method supports. It also describes the formatting requirements for specific types of questions, such as Barcode Scanner and Geolocation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Ways to dispatch a form"
    }
  },
  {
    "content": "Dispatch a form with the Web Portal\n\nWe make it quick and easy to dispatch forms to users with the user-friendly dispatch interface.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Dispatch a form with the Web Portal"
    }
  },
  {
    "content": "Prerequisites\n\nSet Up a Form for Dispatching. For a Bulk Dispatch, set up meaningful unique IDs. This helps you to find the questions that you want to prefill with data. Optionally, set the Data Record Naming property of your form to control the form name in the Inbox on the Mobile App. Make sure that your field users are running the latest version of the TrueContext Mobile App. You must be an Admin user or a User with Can Create or Can Manage Assignments group FormSpace permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to dispatch a form\n\nNavigate to the desired form, and then select Dispatch beside the form name. Note:If you don’t see the Dispatch option, make sure the form is set up for dispatching. Tip:If your group has the Can Manage Assignments permission but not Can Create, users can’t open a specific form definition A Form Definition is a template for an actual form or record that field users interact with. Using the Form Builder, you define the structure, layout, fields and data types, and logic of a form. A Form Definition also specifies resources available to users on their devices, such as Images and Documents, and mappings for data brought in from external sources.. Instead, they should follow these steps to dispatch a record:Go to Forms & Integrations > List Forms.Find the form that you want to dispatch, hover over the gear icon, and then select Dispatch Form.Result: The Dispatch Form page opens. Select a user to dispatch to. Info:If you're on the Enterprise tier, you can dispatch",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Steps to dispatch a form"
    }
  },
  {
    "content": "a record to a user, a group, or to all groups in a FormSpace. Fill out any fields you want prefilled. Leave all other fields blank. Note:To view all questions, including those that don't support dispatching, select Show questions that cannot be dispatched to. At the bottom of the page, select Dispatch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Steps to dispatch a form"
    }
  },
  {
    "content": "Metadata that you can dispatch\n\nEasily assign notes, priorities, due dates, and locations to dispatches, giving mobile users the tools they need to efficiently plan their work in the field. Your mobile users can get a higher-level look at their assigned jobs without needing to look at each individual form. Also, they can sort based on the metadata. You can dispatch metadata into the following fields: Notes: These can be a maximum of 256 characters. Priority: This can be Low, Medium, or High. If you don’t assign a priority, the dispatch defaults to No Priority. Due Date: If you don’t supply a time zone, the dispatch defaults to the dispatcher's team time zone. Location: Enter an address. The Web Portal provides a map so that you can confirm the location.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Metadata that you can dispatch"
    }
  },
  {
    "content": "Steps to dispatch metadata with the Web Portal\n\nUse the additional boxes at the top of the dispatch page to fill in the metadata information. Simply add the information that you need—you don’t have to add all of the metadata. Field users can find the notes under the dispatched form name in their Inbox or Group Inbox (Enterprise tier only). The other types of metadata act as a filter when a user selects a tab at the top of the Inbox or Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Steps to dispatch metadata with the Web Portal"
    }
  },
  {
    "content": "Dispatch an image\n\nBy dispatching an image, you can provide details about a job, such as a: Site-specific floor plan. Reference chart. Sketch produced in TrueContext from an earlier site visit or job estimate. Note:You can dispatch a .jpg, .jpeg, or .png file to an Image, Sketch Pad, or Signature question. To dispatch an image, select Choose File.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Dispatch an image"
    }
  },
  {
    "content": "Dispatch a language\n\nInfo: The Multi-Language feature is available as an add-on to the Advanced and Enterprise tiers. With the Multi-Language feature, you can create a single form and provide it to your field users in multiple languages. You can also set up some types of Documents and files to translate content based on the form’s selected language. If you set up a form as a Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content., you can preselect a language or let users select a language themselves. Translations for the selected language apply to: Page and section headings Question text Manually-defined display values in lists for options-based questions Options-based questions are questions that display a list of options for field users to choose from. These include Button Group, Card",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Dispatch a language"
    }
  },
  {
    "content": "List, Dropdown, Multiselect, and Radio Button questions. Question help Custom validation messages Tip: If you dispatch a form with a preselected language, choose one that all users who interact with that form can understand. Note:Dispatch Destinations do not give you the option to dispatch a language. The user selects a language when they open the dispatched form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Dispatch a language"
    }
  },
  {
    "content": "Bulk Dispatch with a CSV File\n\nNeed to dispatch multiple records? Our CSV template allows you to bulk dispatch using one CSV file. Info:If you're on the Enterprise tier, you can dispatch a record to a user, a group, or to all groups in a FormSpace. The topic Send a bulk dispatch from the Web Portal describes the steps to bulk dispatch to users, groups, and FormSpaces. At the top of the dispatch page of the selected form, select Bulk Dispatch. Select the link to download the dispatch template. Starting with the first empty row, enter the user IDs for the users you want to dispatch to. Each row is a new dispatched form. Info:The topic Supported Question and Data Types for Dispatching describes how to format Barcode Scanner and Geolocation values for bulk dispatch. Enter the data and metadata that you want to dispatch. Does your team have the Multi-Language Forms add-on? If no, go to step 6. If yes, and you want to preselect a language, enter one of the supported language codes in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Bulk Dispatch with a CSV File"
    }
  },
  {
    "content": "Language Code cell. Note:Check that the form has a translation file for the selected language. If yes, and you want users to select a language themselves, leave the Language Code cell empty. To upload the file that contains the dispatch information, select Choose File, and then select the file. Select Dispatch at the bottom of the page. Info:The following topics provide more details about Bulk Dispatch functionality:Bulk Dispatch with the TrueContext PortalBulk Dispatching into Repeatable SectionsDispatch Records to a Group (Enterprise tier only)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493698_DispatchFormsToUser.html",
      "title": "Dispatch Forms to a User",
      "section": "Bulk Dispatch with a CSV File"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either an Admin user, or a User with the Can Manage Assignments FormSpace permission. You must start with a cancelled or dispatched record. The record must have one of the following statuses: Dispatched (Pending Download) Dispatched (Downloaded) Cancelled",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SendRecordDifferentUser.htm",
      "title": "Reassign a Dispatched Record",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to reassign a record\n\nNote:If the user currently assigned to the record has started work, you discard any work-in-progress when you reassign the record. Go to Data & Analytics > All Form Activity. Result: The All Form Activity page opens and shows a list of dispatched and submitted records from the past 30 days. You can send the record in one of the following ways: Hover over a dispatched record, and then select Reassign. Select the Reference # to open the record. Then, hover over the arrow next to the reference number and select Reassign. From the Send To list, select a user. Note:Forms can be set up to allow mobile users to decline a dispatched record. If a user already declined a dispatched record, the system prevents you from selecting that user. Tip:Users on the Enterprise tier can send the record to a user, group, or all the groups in the FormSpace. (Optional) Add or modify the metadata, including Notes, Priority, Due Date, Time Zone, and Address. Note:You can add or edit",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SendRecordDifferentUser.htm",
      "title": "Reassign a Dispatched Record",
      "section": "Steps to reassign a record"
    }
  },
  {
    "content": "metadata, but you can’t add or change any other record data. Select Reassign. Result: The following illustration shows what happens when you send the record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SendRecordDifferentUser.htm",
      "title": "Reassign a Dispatched Record",
      "section": "Steps to reassign a record"
    }
  },
  {
    "content": "Use the API to reassign a record\n\nTeams on the Advanced or Enterprise tiers can use the following API endpoint to send dispatched records to a different user. Users on the Enterprise tier can also send the record to a group or to all groups in the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. POST /api/1.1/data/{dataId}/assign Assign a dispatched form to a different user",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SendRecordDifferentUser.htm",
      "title": "Reassign a Dispatched Record",
      "section": "Use the API to reassign a record"
    }
  },
  {
    "content": "Data types supported for dispatch\n\nYou must ensure that all dispatched answers work with the target answers. This means that a dispatched answer must have the same data type as the target question. For example, you can’t dispatch Free Text data to a question with data type Phone Number. If there are problems with the dispatched data, the dispatch is rejected, and an error message is returned. The supported data types depend on the dispatch method, as described in the following table. API Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Dispatch Destination Bulk Web Portal Dispatch Web Portal Dispatch Audio Barcode Currency Value Date/Time Decimal Number Document Email File Geo Location Image Number Phone Number Signature",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Data types supported for dispatch"
    }
  },
  {
    "content": "Text Time Time Duration URL Yes/No Audio Currency Value Date/Time Decimal Document Email File Geo Location Image Number Phone Number Signature Text Time URL Yes/No",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Data types supported for dispatch"
    }
  },
  {
    "content": "Data type requirements\n\nFor the Audio, Document, File, Image, and Signature data types: For API/Bulk CSV dispatch, all dispatched files must be Base64 encoded. Ensure that the MIME/media type is correctly specified for the file format. For the Audio data type, the media type must be: Android—audio/3gpp iOS—audio/mp4 For the Document data type, the media type must be: application/pdf For the Image and Signature data types, the media type must be: image/jpg image/jpeg image/png For the File data type, all media types are allowed. Note:The URL data type does not support percent-encoding.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Data type requirements"
    }
  },
  {
    "content": "Question types supported for dispatch\n\nThe supported question types depend on the dispatch method, as described in the following table. API Dispatch Dispatch Destination Bulk Web Portal Dispatch Web Portal Dispatch Audio Recording Barcode Scanner Button Group Card List Date/Time Selector Document Editor Dropdown Duration Field File Upload Geo Location Image Multiselect Radio Button Signature Single Checkbox Sketch Pad Stepper Text Area Text Field Audio Recording Button Group Card List Date/Time Selector Document Editor Dropdown File Upload Geo Location Image Multiselect Radio Button Signature Single Checkbox Sketch Pad Stepper Text Area Text Field",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Question types supported for dispatch"
    }
  },
  {
    "content": "Question types with multiple answers\n\nWith the REST API and Bulk Dispatch, you can send multiple answers to a single question. The question type and configuration—such as an Image question with more than one maximum attachment—must support multiple answers. The following data types are supported for questions that can accept multiple answers: Audio Currency Value Decimal Document Email File Image Integer Phone Number Text URL To specify multiple answers through the API, define multiple answer nodes in JSON or XML. The following example specifies multiple answers for a question with the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. “email”: <answer label=\"email\">a@b.com</answer> <answer label=\"email\">b@c.com</answer> To specify multiple answers in a Bulk CSV dispatch file, place each",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Question types with multiple answers"
    }
  },
  {
    "content": "answer on a new line: \"RedBlueGreen\" In Excel, you can enter a new line within a cell by pressing Alt+Enter. Tip:For Bulk Dispatch, you can add a line break in an answer. In your CSV file, enter a slash (/) where you want the line to break. The slash (/) is removed from the value when the server processes the CSV file:\"This is/a two-line input in a CSV\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Question types with multiple answers"
    }
  },
  {
    "content": "Date and Time Formats\n\nThe date and time formats used are based on ISO standards. Values must be specified in Coordinated Universal Time (UTC). Time Stamp (Date + Time) Format yyyy-MM-ddTHH:mm:ssZ Example 2022-01-31T23:59:59Z Date only Format yyyy-MM-dd Example 2022-01-31 Time only Format HH:mm:ss Example 23:59:59 Duration Format HH:mm:ss or milliseconds Example 1:30:15 or 5400000",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Date and Time Formats"
    }
  },
  {
    "content": "Attachment Formats\n\nImages can be dispatched to Image, Sketch Pad, and Signature questions. Files can be dispatched to File Upload questions. Audio files (in .3gpp and .mp4 format for Android and iOS respectively) can be dispatched to Audio Recording questions. Documents (PDF files only) can be dispatched to Document Editor questions. Files are compressed or resized as necessary to match the quality settings on the mobile device and in the Form Builder. Files must be Base64 encoded. Base64 encoding is typically done programmatically but can also be done with an online tool. All files must be formatted in a similar way, specifying the media type and Base64-encoded file, separated by a pipe (|) character. For example, images must be formatted as: image/jpg|Base64 string or image/png|Base64 string and PDF files as application/pdf|Base64 string. Dispatch destinations For a Dispatch destination, the Automatically carry forward answers… option routes answers to matching questions in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Attachment Formats"
    }
  },
  {
    "content": "target form. We recommend this option for attachments, because the Answers to Dispatch 4000-character limit doesn’t accommodate most Base64 strings. Bulk Dispatch (CSV) The following example shows how to dispatch a Base64-encoded JPEG image: image/jpg|iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC REST API dispatch XML examples The following example shows how to dispatch a single image to another Image question: <answer label=\"Image 1\"> <contentType>image/png</contentType> <bytes>iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC</bytes> <filename>My_Image.png</filename></answer> The next example shows how to dispatch multiple images to the same question:<answer label=\"Image 1\"> <contentType>image/png</contentType>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Attachment Formats"
    }
  },
  {
    "content": "<bytes>iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC</bytes> <filename>My_Image1.png</filename> </answer><answer label=\"Image 1\"> <contentType>image/png</contentType> <bytes>iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC</bytes> <filename>My_Image2.png</filename> </answer> JSON examples The following example shows how to dispatch a single image to another Image question: {\"data\": [{\"label\": \"Image 1\", \"answer\": { \"contentType\": \"image/png\", \"bytes\": \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC\", \"filename\": \"My_Image.png\" } }]} The next example shows how to dispatch multiple images to the same question:\"data\": [{ \"label\":",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Attachment Formats"
    }
  },
  {
    "content": "\"ImageLabel\", \"answer\": { \"contentType\": \"image/png\", \"bytes\": \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC\", \"filename\": \"My_Image.png\" } }, { \"label\": \"ImageLabel\", \"answer\": { \"contentType\": \"image/png\", \"bytes\": \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC\", \"filename\": \"My_Image2.png\" } }]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Attachment Formats"
    }
  },
  {
    "content": "Other Data Formats\n\nText For question types that have specific format requirements— (Email, Phone Number, and URL—dispatched answer values must be properly formatted. Text questions have no formatting requirements. Numbers Number data type questions only accept valid numerical input. Integer data questions must not have decimal values. Currency Value Provide Currency Value data as a decimal with no currency symbol or currency type. Yes/No The yes/no answer can be set by using yes or no as the input string. Barcode Scanner Barcode data requires specific formatting, including both type and value. We support the following barcode types: UpcA UpcE Ean8 Ean13 Code39 Code128 Itf QrCode The following types of barcodes are supported but might be difficult to scan on older devices: DataMatrix Pdf417 REST API This XML example shows how to dispatch a UPC E barcode value:<answer label=\"barcode\"> <type>UpcE</type> <value>123456</value></answer> This JSON example also shows how to dispatch a UPC E",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Other Data Formats"
    }
  },
  {
    "content": "barcode value: { \"formId\": \"123456789\", \"dispatchToDraft\": \"false\", \"username\": \"TargetUsername\", \"data\": [{ \"label\": \"barcode\", \"answer\": { \"type\": \"UpcE\", \"value\": \"123456\" } }]} Dispatch Destination To prefill Barcode Scanner questions, you can: Configure your destination to Automatically carry forward answers…. The dispatched form includes any Barcode Scanner answers from the submitted form if the question Unique IDs match. Specify the barcode type and value using the following DREL expression format:%a[UniqueID][barcodeType]|%a[UniqueID][barcodeValue] where [UniqueID] identifies the Barcode Scanner question and [barcodeType] and [barcodeValue] are additional properties. Info:The topic Dispatch Data Destination describes how to configure Dispatch Destinations in more detail. Bulk Dispatch The following example shows how to dispatch Barcode Scanner data.::type,UpcE value,123456 Geolocation Geolocation data requires specific formatting and uses latitude and longitude coordinates. To",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Other Data Formats"
    }
  },
  {
    "content": "dispatch geolocation data from the Web Portal, simply start typing the address. When you dispatch by means of the REST API, a Dispatch Destination, or Web Portal Bulk Dispatch, you can specify additional information. REST API This XML example shows how to dispatch geolocation coordinates:<answer label=\"geo\"> <latitude>123.456</latitude> <longitude>987.654</longitude></answer> This JSON example also shows how to dispatch geolocation coordinates: { \"formId\": \"123456789\", \"dispatchToDraft\": \"false\", \"username\": \"TargetUsername\", \"data\": [{ \"label\": \"geo\", \"answer\": { \"latitude\": \"123.456\", \"longitude\": \"987.654\" } }]} Dispatch Destination To prefill Geo Location questions, you can: Configure your destination to Automatically carry forward answers…. The dispatched form includes any Geo Location answers from the submitted form if the question Unique IDs match. Specify the geolocation to dispatch using the following DREL expression format:%a[UniqueID][coordinates] where [UniqueID] identifies",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Other Data Formats"
    }
  },
  {
    "content": "the Geo Location question and [coordinates] returns the latitude, longitude, and altitude of the geo location. The following example shows a Dispatch Destination configuration. The geolocation from the question “NewSite” prefills the question “SiteLocation” in the dispatched form. Info:The topic Dispatch Data Destination describes how to configure Dispatch Destinations in more detail. Bulk Dispatch The following example shows how to dispatch geolocation data. The last three lines are optional:::latitude,123 longitude,456 altitude,789 address,123 fake street accuracy,100",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Other Data Formats"
    }
  },
  {
    "content": "Dispatch answers to repeatable sections\n\nYou can prefill questions in repeatable sections by means of the TrueContext REST API. Use the appropriate Data Formats for the questions that you want to prefill. TrueContext supports nested repeatable sections up to two levels. To dispatch into a nested repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., you can nest the request body as shown in the following example: {\"data\": [{ \"type\": \"Repeat\", \"label\": \"Section1UniqueIdentifier\", \"rows\": [{ \"data\": [{ \"label\": \"Section1Question1\", \"answer\": \"Section1Answer1\" }, { \"label\": \"Section1Question2\", \"answer\": \"Section1Answer2\" }, { \"type\": \"Repeat\", \"label\": \"Section2UniqueIdentifier\", \"rows\": [{ \"data\": [{ \"label\": \"Section2Question1\", \"answer\": \"Section2Answer1\" }, { \"label\": \"Section2Question2\", \"answer\":",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Dispatch answers to repeatable sections"
    }
  },
  {
    "content": "\"Section2Answer2\" } ] }] } ] }] }] }",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501018_SupportedQuestionandDataTypesDispatching.html",
      "title": "Supported Question and Data Types for Dispatching",
      "section": "Dispatch answers to repeatable sections"
    }
  },
  {
    "content": "About\n\nAdding dispatch metadata gives your mobile users key information about the work to be done. This allows them to make more informed decisions about their assigned jobs. When metadata is dispatched, mobile users can easily see the notes, priority, due date, and reorganize by nearest location in their Inbox. This cuts down the time needed to choose a route for the workday, making your people in the field more efficient.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "About"
    }
  },
  {
    "content": "Available Inbox Views\n\nThe navigation bar appears in your Inbox when you have forms that have dispatch metadata. The tabs will only appear if you have forms in your Inbox that contain the appropriate metadata, e.g., if you have forms with location data, the Map view will show up, but not the Priority view. There are four possible views: List Due Date Priority Map",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "Available Inbox Views"
    }
  },
  {
    "content": "Filtering Your Inbox: What to do with Dispatch Metadata\n\nAs a team administrator, you can use any of these types of dispatch metadata to give your mobile users key information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "Filtering Your Inbox: What to do with Dispatch Metadata"
    }
  },
  {
    "content": "List View\n\nThe List view is the default Inbox view. You can use the Search to filter results by title or notes. The only dispatch metadata shown in the List view are Notes. Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). notes appear beneath the dispatched form's name. They appear in every Inbox view. Notes can be used for information such as: worksite hours, site-specific hazard warnings, job instructions location notes Notes are limited to 256 characters, including spaces.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "List View"
    }
  },
  {
    "content": "Due Date\n\nThis view shows the form with the nearest due date at the top. If no dispatched forms contain a due date, this view will not be shown. Any forms without due dates will be shown at the bottom. Due dates can contain: A date A date and time Examples of using due dates are: setting dates and times on site visits, so mobile users can plan their day and arrive on time, when customers are expecting them. an actual due date, such as for timesheets on Friday at 6PM, or monthly inspections on the last day of the month. This view is also searchable to further filter results if needed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "Due Date"
    }
  },
  {
    "content": "Priority\n\nThe Priority view appears if your inbox contains dispatched forms with priorities set. If your inbox does not contain any forms with a dispatched priority, this view will not be shown. Dispatchers can set three priorities: Low, Medium, and High. High priority dispatches will be shown at the top of this view, followed by Medium priority dispatches, and then by Low priority dispatches. Dispatches with no priority will be shown at the bottom. An example of using priorities is: dispatchers rerouting a repair truck by dispatching a high priority repair request straight to their inbox, complete with location data and notes. The full date and time are shown beneath the dispatch notes for the dispatched form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "Priority"
    }
  },
  {
    "content": "Map\n\nThis view plots all the dispatched forms with location data on a map. If your inbox does not contain dispatched forms with location data, this view will not be shown. Standard gestures allow you to zoom in and out on the map. When selected, the pins show the dispatch notes and two options: Open the dispatched form. Provide driving directions. This will open the default map app on the mobile device and provide driving directions from the mobile user's current location. This is supported in TrueContext for iOS 8.2.1, and coming soon on TrueContext for Android 7.5. Some common uses of this view are: mobile users planning their route for the day based on distance and transport times. dispatchers rerouting a repair truck to a nearby location using a combination of location data, a high priority dispatch, and notes on the work to be done. A banner at the bottom of the map will display how many dispatched forms do not have location data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "Map"
    }
  },
  {
    "content": "Web Portal\n\nTo look at your dispatched metadata for any data record: Navigate to the Data page. Select the desired form submission. Find the Dispatch Metadata Dispatch metadata is additional information that helps users prioritize their work. Dispatch metadata includes job notes, priority level, due date, and location. Admins can combine any number of these items when they dispatch a form. Users see this information when they check their Inbox. header. All your dispatched metadata will be found beneath this header.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "Web Portal"
    }
  },
  {
    "content": "How to Dispatch into Metadata: Documentation\n\nFor detailed instructions on how to dispatch into metadata, please find your preferred method of dispatching below: Dispatch Forms to a User Bulk Dispatch with the TrueContext Portal Dispatch a Form with the API (Advanced and Enterprise tiers only) Dispatch Destination - Dispatch Metadata (Advanced and Enterprise tiers only)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231537608.html",
      "title": "Dispatch Metadata and Inbox Views",
      "section": "How to Dispatch into Metadata: Documentation"
    }
  },
  {
    "content": "How a Dispatch Data Destination Works\n\nA Dispatch Data Destination is triggered when a field user submits a record. The destination dispatches a new record that contains some or all of the information from the submitted record. The new record can use either the source (original) form or a different form. For example, after a building inspector submits their work, three different Dispatch Data Destinations can automatically create three new records: One for electricians, which only includes information about the electrical work to be done. Another for building contractors, which only includes details about the structural repairs to be done. A third for HVAC technicians, which only includes information about the heating and cooling issues identified during the inspection. Use a Dispatch Data Destination to ensure that: Each field user gets the information they need to do their job. Field users save time, because they don’t have to search for or enter information that's already available.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "How a Dispatch Data Destination Works"
    }
  },
  {
    "content": "Follow-up work gets sent automatically and efficiently.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "How a Dispatch Data Destination Works"
    }
  },
  {
    "content": "Why you should a User Data Source in the original form\n\nIf your source form prompts users to choose who should receive follow-on work, add a User Data Source to the form. This ensures that: Usernames are formatted correctly. Users are in a group that has Can Submit FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. This ensures that they can receive and submit the dispatched record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Why you should a User Data Source in the original form"
    }
  },
  {
    "content": "Basic Setup\n\nCreate the Data Destination, selecting Dispatch Data Destination as the type. Name the destination. Optionally configure Filtering. Configure Dispatch Data. Save the destination. In the Form Builder, link forms to the destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Basic Setup"
    }
  },
  {
    "content": "Target Form\n\nWhen the data destination executes, the Target Form will be dispatched to the selected user. Ensure the target form is set up to allow dispatching in the Form Properties tab of the form builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Target Form"
    }
  },
  {
    "content": "Target User\n\nIn the Send To section, select a user to receive the target form with dispatched data. Info:If you're on the Enterprise tier, you can dispatch a record to a user, a group, or to all groups in a FormSpace. The topic Dispatch Records to a Group describes this process in detail. Type in a username to always send to the same user Use a DREL expression to extract usernames from submitted forms. For example, a question labeled \"Dispatch To\" could contain a list of possible users populated by a User Data Source. To send to the users selected in the form, enter %a[Dispatch To]. Dispatch to multiple users by separating usernames and DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions with a comma or semi-colon: %a[Dispatch To]; john@abc.com Note:If using DREL, keep in mind that this field is looking for the username. Consequently, the answer to the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Target User"
    }
  },
  {
    "content": "\"Dispatch To\" field must exactly match a username -- not their user ID, Display Name, etc. If the value does not match the username of an existing user, then the dispatch destination fails to execute. When referencing the User Data Source in the form, be sure to either:Choose \"Username\" as the Display Column, and leave the Data Column empty.Choose any other column as the Display Column and choose \"Username\" as the Data Column.You can use %u[username] to specify the Target User, which sends the dispatched form back to the user who submitted the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Target User"
    }
  },
  {
    "content": "Target Form Language\n\nInfo: The Multi-Language feature is available as an add-on to the Advanced and Enterprise tiers. With the Multi-Language feature, you can create a single form and provide it to your field users in multiple languages. You can also set up some types of Documents and files to translate content based on the form’s selected language. Do you want the target form to open in the same language as the source form? If yes, select Same as source form language. Tip:If the target form doesn’t have that language set up, the user selects a language when the form opens. If no, select User selects when target form opens. The user can select any language that’s set up for the form. Info:This setting only takes effect when both the source and target forms are Multi-Language enabled.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Target Form Language"
    }
  },
  {
    "content": "Dispatch Metadata\n\nDispatch metadata gives your users key information about their assigned jobs, including notes, priority, due dates, and locations. If a submitted form was initially dispatched with metadata, the Dispatch Destination can forward that metadata to the target form. For information on what dispatch metadata is and how to use it, please read: Dispatch Metadata and Inbox Views Options: Automatically carry forward metadata…: This will ensure that any notes, priority, due date, or location information from the original form submission will be copied to the subsequent dispatch. Manually defining metadata to dispatch will overwrite that field's contents from the original form submission. You can either define static values (High priority, as in the following example), orUse DREL to extract answers from the submitted form to fill out any of the dispatch metadata fields. The field's value must be formatted correctly for the metadata field: For example: %a[Customer Name] -",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Metadata"
    }
  },
  {
    "content": "%a[ProblemDescription] in the Notes would place the answers to those questions into the dispatched form. Using a Due Date from the originating form submission requires any Date/Time question and would be referenced using %a[Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.].Using Location data from the originating form submission requires the use of %a[Unique ID][coordinates] from an appropriate Geostamp or Geo Location question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Metadata"
    }
  },
  {
    "content": "Dispatch Data\n\nChoose which data to send through the target form. Info:The topic Supported Question and Data Types for Dispatching describes the fields that you can prefill. Select Automatically carry forward answers… to ensure that the destination maps answers from the submitted form to answers in the target form. The system only carries answers forward if a question’s Unique ID and data type exactly match a question in the target form. Select questions in the Target Form to populate with data from the submitted form. Target Question is the Unique ID in the target form that should be filled. Read more about Unique IDs here. The Answers to Dispatch can reference question answers and metadata from the submitted form using DREL. Static text can also be included. Note:If you are using Conditional Logic to \"Set\" an answer on a question, we highly recommend that you don’t dispatch to this question. The Conditional Logic and dispatched data may conflict and produce inconsistent results.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Data"
    }
  },
  {
    "content": "Dispatch Files\n\nFiles can be dispatched between questions of the following question types: File Upload, Image, Signature, and Sketch Pad. This can be useful for images that are specific to a job, like a site-specific floor plan, a chart for the mobile user to reference, or a sketch produced in a form from an earlier site visit or job estimate. A photo collected from an Image question can be dispatched to a Sketch Pad question, and vice versa. As with all control types, checking Automatically carry forward answers… takes data from the dispatching form and automatically routes it to fields in the Target Form with corresponding Unique IDs. Read more about Unique IDs here. To manually define files to dispatch from the submitted form to the Target Form, you can use a DREL expression in the Answers to Dispatch field. The field must be formatted as: %a[QuestionUniqueID][contentType]|%a[QuestionUniqueID][bytes] where QuestionUniqueID is the unique ID for the File Upload, Image, Signature, or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Files"
    }
  },
  {
    "content": "Sketch Pad question. Unlike dispatching to simple text data types, static text cannot be included in the Answers to Dispatch when dispatching files. For more information, see Supported Question Types for Dispatching: Attachment Format. The following example shows a photo collected by a question with the unique ID \"Photo\" that is configured to dispatch to a field with the unique ID \"Image1\" in the Target Form. In this example, the DREL expression extracts the answer from the question “Photo” and formats the answer as contentType|bytes. There is no difference in the DREL expression formatting between Image, File Upload, Sketch Pad, or Signature questions, simply use the correct unique ID.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Files"
    }
  },
  {
    "content": "Dispatch Barcode Scanner values\n\nBarcode data requires specific formatting, including both type and value. We support the following barcode types: UpcA UpcE Ean8 Ean13 Code39 Code128 Itf QrCode The following types of barcodes are supported but might be difficult to scan on older devices: DataMatrix Pdf417 To prefill Barcode Scanner questions, you can: Configure your destination to Automatically carry forward answers…. The dispatched form includes any Barcode Scanner answers from the submitted form if the question Unique IDs match. Specify the barcode type and value using the following DREL expression format:%a[UniqueID][barcodeType]|%a[UniqueID][barcodeValue] where [UniqueID] identifies the Barcode Scanner question and [barcodeType] and [barcodeValue] are additional properties.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Barcode Scanner values"
    }
  },
  {
    "content": "Dispatch Geo Locations\n\nSpecify the geo location to dispatch using the following DREL expression format: %a[UniqueID][coordinates] where [UniqueID] identifies the Geo Location question and [coordinates] returns the latitude, longitude, and altitude of the geo location. The following example shows a Dispatch Destination configuration. The geo location from the question NewSite prepopulates the question SiteLocation in the dispatched form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch Geo Locations"
    }
  },
  {
    "content": "Response Configuration\n\nWhen a Dispatch Data Destination executes, it creates a Data Record in the TrueContext system and generates response outputs. Do you want the system to store the Form Submission ID and Reference Number of the forms that the Data Destination dispatches? If yes, select the option to Store all response outputs for use in later destinations. If no, keep the default Don’t store response outputs. Info:The topic Store Response Outputs for Dispatch and Customer Feedback Data Destinations describes the Data Destinations response outputs in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Response Configuration"
    }
  },
  {
    "content": "Dispatch a Link to the Form Submission Document\n\nIn cases where the recipient of a dispatch needs to view the document for the submitted form, the URL can be dispatched to them along with other data. This URL can then be launched directly within the form using the “Data Type Launcher” Functionality. In this example, we will dispatch a Web Portal link to the PDF document so that the user can open it in an external browser. In the Form Builder: Open the Target Form in the Form Builder. Add a Text question with a URL data type (Text-> URL-> Textbox). Mouse over the question and Edit Properties. On the Properties tab, select Allow mobile users to launch a web browser… and Open the link in an external web browser. Save and close. Data Destination Configuration: Edit the Data Destination. Select the Dispatch Configuration tab. In the Form Answers section, in the Target Question field, Enter the Unique ID of the URL question. In the Answers to Dispatch field, enter the URL:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch a Link to the Form Submission Document"
    }
  },
  {
    "content": "https://live.truecontext.com/data/%r[id].pdf This extracts the reference ID of the submitted form and inserts it into the link. When configured as above, the recipient of the dispatch will receive a link to the form submission document, which they can tap to launch in their browser.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Dispatch a Link to the Form Submission Document"
    }
  },
  {
    "content": "Use Case: Dispatching to Different Forms Based on an Answer\n\nYou can use one submitted (source) form to dispatch data to a number of different forms. The source form can be simple, with a few questions containing customer contact information, or it can be complex, making use of Conditional Logic to hide questions not applicable to what the user has selected as a target form. In either case, a separate Dispatch Data Destination is required for each Target Form. In the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., create a dropdown question where a user can select a form name (from a data source or otherwise). For the purposes of this example, the unique ID is \"TargetForm\", and one of the answers is \"Work Order.\" Create a Dispatch Data Destination and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Use Case: Dispatching to Different Forms Based on an Answer"
    }
  },
  {
    "content": "select \"Work Order\" as the Target Form. In the Data Destination Filtering tab, configure as shown below. The data destination for the \"Work Order\" form will only execute and dispatch to a user if \"Work Order\" is selected. Configure other data destinations for the other target forms similarly.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500148_DispatchDataDestination.html",
      "title": "Dispatch Data Destination",
      "section": "Use Case: Dispatching to Different Forms Based on an Answer"
    }
  },
  {
    "content": "Bulk Dispatching\n\nDispatching is how you send work to the field. You can send a record with some of the information prefilled to give field users what they need to start their work. Available on all tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/BulkDispatchingLandingPageH2.htm",
      "title": "Bulk Dispatching",
      "section": "Bulk Dispatching"
    }
  },
  {
    "content": "Download the Dispatch Template File\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., navigate to the form you want to use to dispatch. If the form has been configured for dispatching, a Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). button will be displayed on the page. If this option is not displayed, please review the form configuration. On the following page (the Web Portal dispatching interface), select the BULK DISPATCH button. The Dispatch page contains options for downloading a dispatch template, and for re-uploading the template after dispatch data has been entered. See the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Download the Dispatch Template File"
    }
  },
  {
    "content": "screen capture below. Select the Download Active Dispatch CSV Template hyperlink and save the file to your computer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Download the Dispatch Template File"
    }
  },
  {
    "content": "About the Dispatch Template File\n\nThe screen capture below shows a sample dispatch template CSV file for a very simple form, opened in a desktop spreadsheet application. The template file is generated by the TrueContext server, based on the setup of your mobile form. The anatomy of the file is outlined below. Row 1 -- Basic Usage Instructions These are simple instructions on usage of the template. Row 3 -- Dispatch URL Row 3 is for information only. It indicates the TrueContext Web Portal URL that was visited to generate the template. This URL is also used to upload the completed template file, with dispatch information entered, to the portal for distribution to your mobile users. Row 5 -- Header Line to Distinguish Dispatch Recipient User Column Group (A & B) from Question Label Column Group (C and Higher) This is the first of 2 header lines. This line indicates that columns A and B are used to specify the mobile users who will receive the dispatches. It also indicates that the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "About the Dispatch Template File"
    }
  },
  {
    "content": "columns beginning with column C are used to specify the optional answers that may be prefilled in the dispatched form. Row 6 -- Header Line to Indicate Specific Dispatch Recipient User Columns and Specific Question Label Columns This second header line gives the details of use for each column in the CSV. Info: (Advanced and Enterprise tiers only) If your team has the Multi-Language Forms add-on, you can also dispatch the form in different languages to different users. Use one of the supported language codes. Row 7 and Higher -- Dispatch Data Rows Row 7 is where the TrueContext administrator begins to enter information for dispatching. Each row represents 1 mobile form to be dispatched to a TrueContext user. Info:Customers on the Enterprise tier can dispatch to a user, a group, or to all groups in the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "About the Dispatch Template File"
    }
  },
  {
    "content": "FormSpace permissions to control which users have access to the forms in that FormSpace.. The topic Dispatch Records to a Group: Send a bulk dispatch from the Web Portal describes the steps in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "About the Dispatch Template File"
    }
  },
  {
    "content": "How to Use the Dispatch Template\n\nTo compose the forms to dispatch to your mobile users, begin entering data in row 7 of your template. Each row represents a single form or data record to be dispatched. For every dispatch, you must specify a TrueContext user who is to receive it on their mobile device. This is done by entering either the User ID in column A or the username in column B. It is mandatory to have a value in either column A or B for each row. In fact, this is the only mandatory data for a dispatch -- columns C and beyond may be left blank if you do not wish to prefill any questions for the mobile user. See the screen capture below for a sample of a completed dispatch CSV, with 3 records for dispatch, shown in a desktop spreadsheet application. In the sample above, the administrator-entered dispatch data has been colored blue for clarity. In the dispatch created by row 7, the mobile user's user ID indicates the recipient. This dispatch pre-sets a value for each of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "How to Use the Dispatch Template"
    }
  },
  {
    "content": "questions of the form. In the dispatch created by row 8, the mobile user is indicated via the username in column B. In dispatch, no pre-set values are provided for the questions labeled \"phone\" and \"comments1\". In the dispatch created by row 9, the mobile user is indicated by username, and no question values are pre-set. It looks simple, but this is a valid dispatch. Important things to note: Removal of Question Label Columns from Your Form Template is Allowed The form used in this example is very simple. Longer and more complex forms will have more question labels displayed horizontally in additional columns. To keep your template simple and readable, you may wish to delete question columns for which you do not intend to pre-set values in dispatches. Re-use of a Generated Template is Allowed The template is generated dynamically, based on the configuration of the selected form. Unless your form changes, you can re-use this template as many times as you want. If the questions or labels",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "How to Use the Dispatch Template"
    }
  },
  {
    "content": "on your form do change, however, it is highly recommended that you download an updated template. Question Constraints Must be Honored in Dispatches Attempts to pre-set question values which violate form constraints, like trying to set a phone number question with a person's name, will be rejected by the server. *NOTE: If you are using Conditional Logic to \"Set\" an answer on a question, we highly recommend NOT dispatching to this question. The Conditional Logic and dispatched data may conflict and produce inconsistent results. Note:If you use a spreadsheet application to work with your dispatch data, be sure to save as CSV before uploading to the portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "How to Use the Dispatch Template"
    }
  },
  {
    "content": "Dispatching Multiple Email Addresses to a Text Field\n\nHow do I enter the data in the template to dispatch multiple email addresses to an email field in the form? Separating the email addresses with commas does not work in the bulk dispatch template. For multiple values in the bulk dispatch, you can place each answer on a new line. In Excel, you can enter a new line within a cell by holding down the ALT key while hitting <ENTER>.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Dispatching Multiple Email Addresses to a Text Field"
    }
  },
  {
    "content": "Dispatching Images\n\nImages can be dispatched to any attachment control: camera, sketch pad, or signature. This allows administrators to dispatch images that are specific to a particular job, like a site-specific floor plan, a chart for the mobile user to reference, or a sketch produced in TrueContext from an earlier site visit or job estimate. In order to dispatch images with the Bulk .CSV template, the images must be Base64 encoded. This is typically done programmatically, but it can also be done manually using an online tool. Format the image to dispatch as image/jpeg(or png)|/<base64 string here>. See below: image/jpeg|/iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Dispatching Images"
    }
  },
  {
    "content": "Dispatching into Metadata using Bulk Dispatch\n\nEasily assign notes, priorities, due dates, and locations to dispatches, giving mobile users the tools they need to efficiently plan their work in the field. Your mobile users can get a higher-level look at their assigned jobs without needing to look at each individual form: they can sort based on the information right from the inbox. It is possible to dispatch data into the following fields: Notes: These can be a maximum of 256 characters. These might be things such as working hours or cautions about the site. Priority: This can be Low, Normal, or High. If you do not specify a priority, it will default to Normal or No Priority. Due Date: This must be a valid date/time in ISO format (YYYY-MM-DD, e.g,. 2017-12-11T15:51:42), and if you do not supply a time zone, it will default to the dispatcher's time zone. Location: These must be latitude/longitude coordinates (e.g., 45.347484,-75.909761). You can use third-party tools to convert addresses",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Dispatching into Metadata using Bulk Dispatch"
    }
  },
  {
    "content": "to coordinates, and use Excel's functionality to merge the data into a single, comma-separated entry in a cell. There must also be no spaces between the latitude and longitude coordinates in the CSV file. When filling out the information in the CSV file, keep in mind the above limits. An example is below: User ID Username Notes Due Date Priority Location 132178175 jane_smith Inspect 3rd floor office. Access code 3451# 2017-12-15T17:00:00Z High 45.347484,-75.909761 132178175 jane_smith Dog on premises. Call ahead to ensure it is penned before inspection 2017-12-20T17:00:00Z High 45.341089,-75.930432 132175175 jane_smith Call Debbie for access. (613)345-6789 2017-12-22T17:00:00Z Low 132175175 jane_smith Work must be completed after office hours (8-5pm) 2017-12-13T19:00:00Z 45.335307,-75.908180 The notes and other metadata will show up in beneath the dispatched form's name on your mobile user's Inbox. The others can act as filters by tapping the different tabs at the top of the Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Dispatching into Metadata using Bulk Dispatch"
    }
  },
  {
    "content": "Data Formats and Supported Question/Data Types\n\nNot all question types are supported for dispatching. The generated template will not include columns for question types that aren't supported. Further, some question types have specific formatting requirements. Info:The topic Supported Question and Data Types for Dispatching lists the data and question types that each dispatch method supports. It also describes the formatting requirements for specific types of questions, such as Barcode Scanner and Geolocation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501028.html",
      "title": "Bulk Dispatch with the TrueContext Portal",
      "section": "Data Formats and Supported Question/Data Types"
    }
  },
  {
    "content": "Download the Dispatch Template File\n\nIn the TrueContext Administration portal, navigate to the form you want to use to dispatch. If the form has been configured for dispatching, a Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). button will be displayed on the page. On the following page (the web portal dispatching interface), select the BULK DISPATCH button. The Dispatch page contains options for downloading a dispatch template, and for re-uploading the template after dispatch data has been entered. See the screen capture below. Select the Download Active Dispatch CSV Template hyperlink and save the file to your computer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "Download the Dispatch Template File"
    }
  },
  {
    "content": "About the Dispatch Template File\n\nThe screen capture below shows a sample dispatch template CSV file for a form containing a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. It has been opened in a desktop spreadsheet application. For convenience, the different data records contained in the example have been colored; the darker cells contain administrator-entered repeatable section data. The template file is generated by the TrueContext server, based on the setup of your mobile form. The anatomy of the file is outlined below. Row 1 -- Basic Usage InstructionsThese are simple instructions on usage of the template. Row 3 -- Dispatch URL Row 3 is for information only. It indicates the TrueContext administration portal URL that was visited to generate the template. This URL is also used to upload the completed",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "About the Dispatch Template File"
    }
  },
  {
    "content": "template file, with dispatch information entered, to the portal for distribution to your mobile users. Row 5 -- Header Line to Distinguish Dispatch Recipient User Column Group (A & B) from Question Label Column Group (C and Higher) This is the first of 2 header lines. This line indicates that columns A and B are used to specify the mobile users who will receive the dispatches. It also indicates that the columns beginning with column C are used to specify the optional answers that may be prefilled in the dispatched form. Row 6 -- Header Line to Indicate Specific Dispatch Recipient User Columns and Specific Question Label Columns This second header line gives the details of use for each column in the CSV. Row 7 and Higher-- Dispatch Data Rows Row 7 is where the TrueContext administrator begins to enter information for dispatching. When dispatching into a form with repeatable sections, there should be: One Username and User ID per dispatched form, Data to be dispatched into repeatable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "About the Dispatch Template File"
    }
  },
  {
    "content": "sections starting on the top row, with as many additional entries as the form allows beneath. Note: The only data that should be in rows after the first (user ID/Username) should be in repeatable questions. If there is additional data in cells that are not repeatable section data, the dispatch will fail. A new dispatched form begins when a new Username and/or User ID are entered in columns A and B.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "About the Dispatch Template File"
    }
  },
  {
    "content": "How to Use the Dispatch Template\n\nTo compose the forms to dispatch to your mobile users, begin entering data in row 7 of your template. For every dispatch, you must specify a TrueContext user who is to receive it on their mobile device. This is done by entering either the User ID in column A or the username in column B. It is mandatory to have a value in either column A or B for each dispatched form. In fact, this is the only mandatory data for a dispatch -- columns C and beyond may be left blank if you do not wish to prefill any questions for the mobile user. In the sample above, the administrator-entered dispatch data has been colored for clarity. The darker cells contain repeatable section data filled in by the administrator. In the dispatch created by rows 7-11, the mobile user's user ID and username indicate the recipient. This dispatch pre-sets a value for each of the questions of the form and adds five entries to the repeatable section that describes the parts required for the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "How to Use the Dispatch Template"
    }
  },
  {
    "content": "work order. In the dispatch created by rows 12-13, the mobile user is indicated via the User ID in column A. This dispatch pre-sets a value for all the other questions in the form and adds two entries to the repeatable section that describes the parts required for the work order. In the dispatch created by row 14, the mobile user is indicated by username, and no question values are pre-set. It looks simple, but this is a valid dispatch. Important things to note: Removal of Question Label Columns from Your Form Template is Allowed The form used in this example is very simple. Longer and more complex forms will have more question labels displayed horizontally in additional columns. To keep your template simple and readable, you may wish to delete question columns for which you do not intend to pre-set values in dispatches. (Removal is not modification; the server will handle missing columns, but if data is provided that does not match a header, it will cause issues.) Re-use of a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "How to Use the Dispatch Template"
    }
  },
  {
    "content": "Generated Template is Allowed The template is generated dynamically, based on the configuration of the selected form. Unless your form changes, you can re-use this template as many times as you want. If the questions or labels on your form do change, however, it is highly recommended that you download an updated template. Question Constraints Must be Honored in Dispatches Attempts to pre-set question values which violate form constraints, like trying to set a phone number question with a person's name, will be rejected by the server. Dispatching into Nested Repeatable Sections is Not SupportedYou cannot dispatch values into repeatable sections that are contained within other repeatable sections. Dispatching into Repeatable Section Footers is Not Supported You cannot dispatch a value into the footer of a repeatable section. Note:If you use a spreadsheet application to work with your dispatch data, be sure to save as CSV before uploading to the portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "How to Use the Dispatch Template"
    }
  },
  {
    "content": "Dispatching Images\n\nImages can be dispatched to any attachment control: camera, sketch pad, or signature. This allows administrators to dispatch images that are specific to a particular job, like a site-specific floor plan, a chart for the mobile user to reference, or a sketch produced in TrueContext from an earlier site visit or job estimate. In order to dispatch images with the Bulk .CSV template, the images must be Base64 encoded. Format the image to dispatch as image/jpeg(or png)|/<base64 string here>. See below: image/jpeg|/iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbYnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAQSURBVBhXY/gPBEwMDAwMAB32A/9omztwAAAAAElFTkSuQmCC Data Formats and Supported Question/Data Types Not all question types are supported for dispatching. The generated template will not include columns for question types that aren't supported. Further, some question types have specific formatting requirements. Info:The topic Supported Question and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "Dispatching Images"
    }
  },
  {
    "content": "Data Types for Dispatching lists the data and question types that each dispatch method supports. It also describes the formatting requirements for specific types of questions, such as Barcode Scanner and Geolocation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006395728.html",
      "title": "Bulk Dispatching into Repeatable Sections",
      "section": "Dispatching Images"
    }
  },
  {
    "content": "Group Dispatching\n\nDispatching is how you send work to the field. You can send a record with some of the information prefilled to give field users what they need to start their work. When you dispatch a record, you can send it to a single user, a group of users, or all groups in a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. Available on the Enterprise tier only: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/GroupDispatchLandingPageH2.htm",
      "title": "Group Dispatching",
      "section": "Group Dispatching"
    }
  },
  {
    "content": "Introduction to Group Dispatching Dispatching is how you send work to the field. You can send a record with some of the information prefilled to give field users what they need to start their work. When you dispatch a record, you can send it to a single user, a group of users, or all groups in a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. Available on the Enterprise tier only: Essentials Advanced Enterprise The following diagram describes the result of sending a record to a user, a group, or a FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/IntroToGroupDispatch.htm",
      "title": "Introduction to Group Dispatching"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user to enable the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox. for your team. You must be a User with Can Create FormSpace permissions to set up dispatching and enable Search on your form. Your team must be on the Enterprise tier. You must have a form set up that you want to dispatch to a group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SetUpGroupDispatching.htm",
      "title": "Set up Group Dispatching",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Display the Group Inbox for your team\n\nMobile users can open and claim records dispatched to a group from the Group Inbox. You must enable the Group Inbox for your team. Go to Your username > Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Mobile Device > Device Configuration > Actions > Update Custom Configuration. Make sure that the option to display the Group Inbox is selected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SetUpGroupDispatching.htm",
      "title": "Set up Group Dispatching",
      "section": "Display the Group Inbox for your team"
    }
  },
  {
    "content": "Set up dispatching on your form\n\nTo set up dispatching, open the form in edit mode and go to Settings > Workflow Settings > Form Initiation Methods. Select either Inbox or Inbox and Forms Box. By default, forms have Inbox and Forms Box selected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SetUpGroupDispatching.htm",
      "title": "Set up Group Dispatching",
      "section": "Set up dispatching on your form"
    }
  },
  {
    "content": "Enable Search on your form\n\nFor mobile users to open records from the Group Inbox, the form must have Search enabled. To enable Search, open the form in edit mode and go to Settings > Workflow Settings > Search Options, and then select Enable Search. Note:If you enable Search, and your team has Mobile Search enabled, users will be able to find records submitted by other users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/SetUpGroupDispatching.htm",
      "title": "Set up Group Dispatching",
      "section": "Enable Search on your form"
    }
  },
  {
    "content": "Prerequisites\n\nTo dispatch records using the Web Portal, you must be an Admin user or a User with Can Manage Assignments FormSpace permissions. To set up dispatching using the TrueContext API, you must be an Admin user . To set up Dispatch Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., you must be an Admin user or a User with Can Create FormSpace permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Dispatching methods\n\nYou can send a record to a specific group or to all the groups in a FormSpace using any of the following methods: Send a single record using the TrueContext Web Portal. Use bulk dispatching to send multiple records from the TrueContext Web Portal. Set up automated dispatching using the TrueContext API Automatically dispatch follow-up work using a Dispatch Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Info:The section Dispatching: Dispatching Methods describes in detail when to choose each dispatching method.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Dispatching methods"
    }
  },
  {
    "content": "Send a single record from the Web Portal\n\nFrom the Forms & Integrations menu, select the form you want to dispatch. Select Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API)., and then select who you want to send the record to. Info:The section Dispatch Forms to a User: Dispatch a form with the Web Portal describes in more detail how to dispatch a single record from the Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Send a single record from the Web Portal"
    }
  },
  {
    "content": "Send a bulk dispatch from the Web Portal\n\nFor a single form, you can set up and send multiple records at the same time using bulk dispatching. You do this using a CSV file in which each row is a different record with its own unique identifier. You can send each record to either a user, a group, or all the groups in a FormSpace. To do this: From the Forms & Integrations menu, select the form you want to dispatch. Select Dispatch > Bulk Dispatch > Download Active Dispatch CSV Template. Result: The system downloads a CSV file for you to fill out. Fill in a row for each record you want to send. You can specify who you want to send each record to as follows: User—Enter the username or user ID. Group—Enter the group name or group ID. FormSpace—Enter ‘Yes’ or ‘Y’. The following example shows six records set up: The first two records are going to different users. The next two records are going to different groups. The last two records are going to all the groups in the FormSpace. Note:If you",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Send a bulk dispatch from the Web Portal"
    }
  },
  {
    "content": "enter values in more than one column per row, the system dispatches the record to the first value it finds. The system checks for values in the following order: User ID, Username, Group ID, Group Name, FormSpace. Upload the CSV file when you finish filling it out, and then Dispatch the records. Info:The topic Bulk Dispatch with the TrueContext Portal describes how to bulk dispatch records in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Send a bulk dispatch from the Web Portal"
    }
  },
  {
    "content": "Dispatch using the TrueContext API\n\nYou can use the TrueContext API to dispatch a record and specify if you want to send it to a user, group, or all the groups in a FormSpace. Info:The TrueContext API documentation includes detailed information about how to dispatch to a user, group, or FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Dispatch using the TrueContext API"
    }
  },
  {
    "content": "Dispatch Data Destination\n\nA Dispatch Data Destination automatically sends follow-up work when an initial record is submitted. You can choose to send the record to a user, a group, or a FormSpace as follows. Set up your Dispatch Data Destination. On the Dispatch Configuration tab, select who you want to send the record to. Use the Advanced Sending Options if you want to: Specify multiple usernames, or Use DREL to get a username or group name from the initial submitted record. The following table describes the standard configuration options and the Advanced Sending Options. Send to: Standard Advanced Sending Options Result User Select one user. For a single form, you can send different records to multiple users. Enter one or more usernames or DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions separated by a comma, semicolon, or new line. Send records to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Dispatch Data Destination"
    }
  },
  {
    "content": "multiple users when multiple follow-up actions are required. Each record that's sent to a different user has its own unique identifier. Each user in the list receives a unique record in the Inbox. Tip:If you're on the Enterprise tier, you can send a single unique record to a group for a field user to claim. Group Select one group. You can only send one record to a group. Enter one group name or one DREL expression. Users can access the record from the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox.. They can choose to claim the record to work on it. Note:A field technician must be online to claim a record from the Group Inbox. FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Dispatch Data Destination"
    }
  },
  {
    "content": "users have access to the forms in that FormSpace. Send the record to all the groups that have Can Submit permissions in the FormSpace. Create or Update your Data Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/DispatchToGroup.htm",
      "title": "Dispatch Records to a Group",
      "section": "Dispatch Data Destination"
    }
  },
  {
    "content": "Find records sent to your group\n\nThe Mobile App displays records that were sent to your group in the Group Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/GroupInboxMobile.htm",
      "title": "Manage the Group Inbox in the Mobile App",
      "section": "Find records sent to your group"
    }
  },
  {
    "content": "Claim a record\n\nSelect the Group Inbox to open a list of records available for you to claim. When you Claim a record, the app moves the record to your Inbox. This makes the record unavailable to other technicians. To start work, open the record from your Inbox. Note:You must be online to claim a record from the Group Inbox. Tip:If a field technician opens a record from their Inbox and saves their changes, the draft saves to both Inbox and Drafts. In both locations, an icon marks Inbox records that were saved as drafts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/GroupInboxMobile.htm",
      "title": "Manage the Group Inbox in the Mobile App",
      "section": "Claim a record"
    }
  },
  {
    "content": "Release claimed records\n\nIf you can’t work on a record that you claimed, you can release it. This makes it available for another technician to claim. Note:If you started work on a record and then release it, you will lose any information that you added. This includes information you saved as a draft. To release the record, from your Inbox: iOS and Android—Swipe left on the record, and then select Release. Windows—Select the action menu, and then select Release. macOS—Swipe left with two fingers or right-click, and then select Release. When you release the record, the app moves the record back to the Group Inbox. Note:You must be online to release a record to the Group Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/GroupInboxMobile.htm",
      "title": "Manage the Group Inbox in the Mobile App",
      "section": "Release claimed records"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be a User with Can Manage Assignments FormSpace permissions to manage dispatched records in the Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/ManageGroupDispatching.htm",
      "title": "Manage Records Sent to Groups",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Find all unclaimed records sent to a group or FormSpace\n\nIn the Web Portal, go to Data & Analytics > All Form Activity. Result: The All Form Activity page opens and shows a list of dispatched and submitted records from the past 30 days. Result: Use Search Options to filter the list of records. The following table describes how to filter records in a way that helps you manage dispatched records. To show unclaimed records that... Set the following filters... Were sent to a group or FormSpace Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".—Dispatched Assignment—Unassigned Were sent to a specific group Group—Select a specific group Workflow State—Dispatched Assignment—Unassigned Info:The topic View All Form Activity describes filters in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/ManageGroupDispatching.htm",
      "title": "Manage Records Sent to Groups",
      "section": "Find all unclaimed records sent to a group or FormSpace"
    }
  },
  {
    "content": "Find a single form’s unclaimed records sent to a group or FormSpace\n\nIn the Web Portal, go to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Use Search Options to filter the list of records. The following table describes how to filter records in a way that helps you manage dispatched records. To show unclaimed records that... Set the following filters... Were sent to a group or FormSpace Workflow State—Dispatched (Unassigned) Were sent to a specific group Submitter/Assignee - User or Group—Select a specific group Workflow State—Dispatched (Unassigned) Info:The topic View Form Submissions in the Web Portal describes filters in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/ManageGroupDispatching.htm",
      "title": "Manage Records Sent to Groups",
      "section": "Find a single form’s unclaimed records sent to a group or FormSpace"
    }
  },
  {
    "content": "Send dispatched records to a different user or group\n\nWhen you open a dispatched record in the Web Portal, you can assign the record to a different user, make it available to a specific group, or make it available to all the groups in a FormSpace. Info:The topic Reassign a Dispatched Record describes how to do this in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/WorkManagement/ManageGroupDispatching.htm",
      "title": "Manage Records Sent to Groups",
      "section": "Send dispatched records to a different user or group"
    }
  },
  {
    "content": "About\n\nYou can set up your TrueContext team so that field users can correct completed forms (records). Work managers can send a record for corrections from the Web Portal, or field users can correct Sent records in the Mobile App. This feature makes it easy to: Correct errors that would impact downstream workflows. Allow mobile users to adjust forms if a customer changes their mind. Tip:You set up corrections at the form level to control which forms users can correct. Note:This feature is not compatible with using Data Record Passthrough. This topic describes how to set up a form for corrections and how to send a record for corrections. It also lists important considerations for correcting records. This feature also works with the Mobile Search Mobile Search is a feature that enables mobile users to display a list of forms submitted by themselves or other users and, if configured, incomplete TrueContext Teamwork-enabled forms. A user must be connected to a network to perform a mobile",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "About"
    }
  },
  {
    "content": "search..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "About"
    }
  },
  {
    "content": "Configure a form to allow corrections\n\nBefore initiating any corrections (edits) to submitted forms, you must ensure the Sent and Inbox tabs are enabled for your mobile users and for the desired form, then configure the form to allow edits to form submissions. Once you have enabled this setting, you will be able to edit forms submitted against the new version of the form. It is not possible to edit form submissions made before these settings are enabled. It is also not possible to edit form submissions on forms using Data Record Passthrough. The ability to edit form submissions is configured at the form level, giving you control over which forms you want to allow your users to edit. You must be a TrueContext Admin user or a user with “Can Create” permissions for the appropriate FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Configure a form to allow corrections"
    }
  },
  {
    "content": "control which users have access to the forms in that FormSpace. to adjust this setting. To do so: Navigate to the appropriate form in the web portal and select Edit Form. Select the Settings tab, and select Workflow Settings. Select Allow form submissions to be edited beneath the Editing menu. From the Web Portal: TrueContext Admin users and users with \"Can View\" access to the form can send form submissions to mobile devices to be edited. From the Device: If enabled on the form, mobile users can initiate edits to form submissions in the app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Configure a form to allow corrections"
    }
  },
  {
    "content": "How to send a record for corrections\n\nA work manager can send a record for corrections from the Web Portal. You can also set up a form so that field technicians can correct their own records from the Sent list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "How to send a record for corrections"
    }
  },
  {
    "content": "Initiate corrections from the Web Portal\n\nTrueContext Admin users and users with Can View or Can Manage Assignments permissions can send a record for corrections from the Web Portal. Navigate to the Data & Analytics tab in the Web Portal. Select the appropriate form submission. Hover over the arrow next to the reference number, and then select Send for Corrections. In the popup box, add any required notes to the request. These can be notes on what needs to be corrected. Select Send. Result: The record is sent to the selected user's Inbox, and the user is notified by means of a push message. Note:Notes are limited to 256 characters. They are not cumulative.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Initiate corrections from the Web Portal"
    }
  },
  {
    "content": "Initiate corrections in the Mobile App\n\nIf correct permissions are enabled, mobile users can choose to edit submissions through the Mobile App, either their own from the Sent screen, or, if enabled, by using the Search box. To initiate corrections from the mobile device: Navigate to your Sent list in the Mobile App. Select or hover over the record you want to edit, and then select Edit. This sends it to your Inbox. Navigate to the Inbox and select the record to edit. Complete your edits, then submit as usual.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Initiate corrections in the Mobile App"
    }
  },
  {
    "content": "Sample Workflow\n\nThis sample workflow uses the Web Portal to send the form submission for corrections. Through the entire workflow, the Data Record ID will remain the same. A mobile user fills out a form (in this case, a vehicle inspection form) as normal, with one or two missing answers and submits it. It shows up in the Mobile App's Sent folder as normal. A TrueContext Admin user reviews the submission and finds it needs to be corrected. They select Send for Corrections and identify the problems in the form submission by adding notes to the request. The request's time is recorded in the form submission's status information and the status changes to Reopened (Pending Download). The mobile user receives a push notification and checks their Inbox. The submitted form is there, tagged with the notes and marked Edit Requested. They correct and resubmit the form. In the Web Portal, the work manager refreshes the form submission page. Corrected fields are marked by Corrected next to the new",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Sample Workflow"
    }
  },
  {
    "content": "data: Note: This compares the two most recent versions of the form submission and marks any changes as Corrected. It is not a cumulative review of all corrections. The form submission is marked Completed (Corrected):",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Sample Workflow"
    }
  },
  {
    "content": "Important Considerations\n\nIt is important to keep the following in mind when enabling this feature for forms: Inability to Decline Records sent for corrections are unable to be declined, unlike standard dispatches. Geolocation and Time Controls The Geo Stamps and Timestamps from the original form submission will be retained. If the questions are Geo Controls or Date/Time Selector and the user interacts with them, the original values will be overwritten. Changing Data When enabling this option, consider the potential effects, e.g., if a mobile user changes a price on an invoice after a customer has signed the form, it can change the validity of the data. We do not recommend allowing editing in forms that require customer sign-off unless the customer is present to sign the updated copy, for example. Request corrections from other users Correction requests can be sent from the Web Portal to users other than the original submitter. Any submissions corrected by this other user will be",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Important Considerations"
    }
  },
  {
    "content": "marked as from them in the Form Submission Version page. Unsupported Data and Control Types Some data and control types will not work when editing a form submission. Avoid using this feature with forms using these types of questions. They are: Barcode Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Destinations We do not advise using this feature with the Dispatch Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., as the dispatch destination re-executes with each edit to the form, creating a new dispatch each time the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Important Considerations"
    }
  },
  {
    "content": "form submission moves into a \"Complete\" state. Instead of overwriting the original data and maintaining the same Data Record ID, it creates dispatches containing each iteration of the data. Data Record Passthrough If you enable Data Record Passthrough you can’t set up a form for corrections or approvals, because we don’t store the record data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/231951887_EditingFormSubmissions.html",
      "title": "Form Submission Corrections",
      "section": "Important Considerations"
    }
  },
  {
    "content": "Resources\n\nResources help field technicians access information while they work on records in the TrueContext Mobile App. A resource might be a document, like a manual or a floor plan, or an image like a schematic or diagram. Form Designers can create questions that reference specific resources or create a Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. where field technicians can access resources anytime. You set up Resources at the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/Resources.htm",
      "title": "Resources",
      "section": "Resources"
    }
  },
  {
    "content": "users have access to the forms in that FormSpace. level. These topics describe how to set up and use Resource Documents, Resource Images, and the Resource Library. Available on all tiers, with more options on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Resource DocumentsResource ImagesResource LibraryIntroduction to the Resource LibrarySet Up the Resource LibraryAdd an Image or Document to the Resource LibraryResource Library for Mobile UsersManage the Resource Library",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/Resources.htm",
      "title": "Resources",
      "section": "Resources"
    }
  },
  {
    "content": "Resource Documents in forms\n\nTo use Resource Documents in forms, you set up Document Editor questions that allow field technicians to annotate PDF documents. You can choose any Resource Document that’s in the same FormSpace, and different forms can use a single Resource Document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Resource Documents in forms"
    }
  },
  {
    "content": "Resource Documents in the Resource Library\n\nThe Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the TrueContext Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. When you create a Resource Document, you can make the resource visible in the Resource Library. The Resource Library is a tab on the Mobile App home screen. This makes it possible for field technicians to open a Resource Document outside of a form. A field technician must have Can Submit or Can Test permissions in the FormSpace to open and use the Resource Library. If a technician has these permissions in multiple FormSpaces, the Resource Library on their device can display resources from different FormSpaces. Info:Our documentation on the Resource Library",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Resource Documents in the Resource Library"
    }
  },
  {
    "content": "describes this feature in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Resource Documents in the Resource Library"
    }
  },
  {
    "content": "Resource Document file types and sizes\n\nThe following table describes file types you can add as Resource Documents and where you can use them. File type Can be used in forms? Can be used in the Resource Library? Max size PDF Yes Yes* 5 MB Word No Excel *In the Resource Library, all documents open in a PDF viewer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Resource Document file types and sizes"
    }
  },
  {
    "content": "When to use a Resource Document\n\nUse a Resource Document as part of a Document Editor question to provide field users with a PDF file to annotate. Because a Resource Document is a shared resource within the FormSpace, it's easy to keep all your forms up to date with the latest version. Simply edit your Resource Document to make any changes, such as uploading a new PDF file. The document updates after a reconcile—there's no need to manually update any of your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "When to use a Resource Document"
    }
  },
  {
    "content": "Create a Resource Document\n\nGo to Forms & Integrations > Resources. Select Create Resource, and then select Resource Document. Select Choose File, and then select a document from your local files or cloud service. Tip: The following table describes file types you can add as Resource Documents and where you can use them.File typeCan be used in forms?Can be used in the Resource Library?Max sizePDFYesYes*5 MBWordNoExcel*In the Resource Library, all documents open in a PDF viewer. Result: Sections display to enter resource details, add tags, and set up additional language resources (Multi-Language add-on only). Enter a name and description. A description explains how a field technician should use the resource. It also improves search results in the Resource Library on the Mobile App. Do you want to make the Resource Document available in the Resource Library? If yes, select Visible in Resource Library. Result: Once you save the resource, a field technician can access the resource in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Create a Resource Document"
    }
  },
  {
    "content": "Resource Library as soon as they reconcile their device. Note:An Admin user must enable the Resource Library tab so that field technicians can see the Resource Library on their devices. If no, go to step 6. (Optional) Add resource tags. You can use tags to filter the resources list. Tags also help field technicians filter the Resource Library to find what they need. To add a resource tag, select Add Tags to this resource, and then type to select or create a tag. Info:The section Resource Documents: Apply resource tags describes the benefits of tagging resources in more detail. (Optional) Link translated resources. This option is only available if your company has the Multi-Language add-on for the Enterprise tier. Info:The section Resource Documents: Set up multiple languages describes this process in more detail. Select Create or Update. Result: The Resource Document is available for Form Designers to reference in forms. Do you want to create another Resource Document? If yes, select",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Create a Resource Document"
    }
  },
  {
    "content": "Create Resource Document. This will be a new resource, not a linked resource. If no, you have completed the procedure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Create a Resource Document"
    }
  },
  {
    "content": "Apply resource tags\n\nResource tags in the Web Portal Tags help you filter the list of resources by relevant criteria. Select one or more tags from the Filter section on the Resources page to find resources that have those tags. Resource tags in the Resource Library Tags also help organize resources in the Resource Library. A field technician can use tags to filter the Resource Library on their device and quickly find relevant documents and images. Tagging guidelines You might tag a Resource Document by: Equipment types, like motors or air conditioning units. Equipment brands or makes. Resource types, like schematics or manuals. Info:Tags applied to a Resource Document also apply to any linked translations. The section Resource Documents: Set up multiple languages describes translated resources in more detail. Steps to apply resource tags To apply tags to a Resource Document: Select Add Tags to this resource. Result: The Tags section expands to display a field to enter tags. Enter a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Apply resource tags"
    }
  },
  {
    "content": "tag. As you type, existing tags display as suggestions. Select an existing tag, or press Enter or Return to create a new tag. Repeat this process for each tag you want to add. Note:Resource tags are different from form tags. The topic Set Up Form Properties: Form Information describes how to add tags to a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Apply resource tags"
    }
  },
  {
    "content": "Set up multiple languages\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on Translated resources in forms If your company has the Multi-Language add-on, you can link translated files to a Resource Document. When a field technician opens a Multi-Language form and selects a language, the Resource Document displays the translated file. You link Resource Documents in a primary-secondary or parent-child relationship. A resource in one language acts as the primary to any translated resources. If a field technician’s preferred language is unavailable, the primary resource language displays by default. Translated resources in the Resource Library The Resource Library also supports translated resources. When a field technician opens a Resource Document in the Resource Library, they can easily switch between languages. If a field technician has a preferred form language set, Resource Documents display in this language by default. A field technician can also",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "filter the library by language. Steps to set up translated resources Info:The Resource Document you are currently setting up is the primary resource by default. Translated resources inherit resource tags from their primary. Once your translated resources are set up, you can delete the primary resource and select a new primary. The section Delete a Resource Document describes this process in more detail. Select Set up multiple languages. Result: The Additional Language Resources section expands to display the Language menu and Linked Resources table. Select the language of the primary Resource Document you are setting up. Add or link to at least one translated resource. To add a new resource, select Add New Resource. Enter a Name and Description, and then select Choose File. Select a file, select a Language, and then select Add. To select an existing resource, select Link Existing Resource. Select one or more resources to link to the new resource, select a language for each translated",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "resource, and then select Link. Note:You can only link resources that are not already linked to other resources. Result: The primary resource is linked to versions in different languages. Note:A translated resource can be in a different format than its primary. For example, if the primary resource is a PDF, you can link Word and Excel documents. However, you cannot use Word or Excel documents in Document Editor questions in forms. If a primary resource links to one of these file types, you cannot use the primary resource in a form. Select Create or Update. Bulk Create Resources Rather than adding Resource Documents one by one, you can bulk create up to 10 resources at once. A bulk batch can include both Resource Images and Resource Documents. Tip:When you bulk create resources, the system adds each resource individually. You can’t bulk create a group of translated resources that are already linked. However, you can bulk create the same resource in multiple languages, and then link the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "files after. The section Set up multiple languages describes how to link existing resources in more detail. Go to Forms & Integrations > Resources > Bulk Create Resources. In the Resource Files area, select Browse Files or drag and drop up to 10 files. Do you want to make all of the files available in the Mobile App Resource Library? If yes, select Add all resources to Resource Library. If no, the files will only be visible in the Web Portal. Go to the next step. Do you want to apply tags to all of the selected files? If yes, select Apply tags to all resources. Select or create the tags you want to apply. If no, go to the next step. Select Create to bulk upload the files. Result: A summary of the newly created resources displays. Select a resource to preview or edit it. If any files fail to upload, a second table lists the errors. Note:A file will fail to upload if:The file is too big. Resource Documents have a maximum file size of 5 MB. Resource Images have a maximum file size of 2",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "MB.The file type is not supported. A Resource Document must be a PDF, Word, or Excel file. A Resource Image must be in JPEG, JPG, or PNG format.The file name is already in use. Do you want to bulk create more resources? If yes, select Bulk Create Resources, and then go to step 2. If no, you have completed the procedure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "Bulk Create Resources\n\nRather than adding Resource Documents one by one, you can bulk create up to 10 resources at once. A bulk batch can include both Resource Images and Resource Documents. Tip:When you bulk create resources, the system adds each resource individually. You can’t bulk create a group of translated resources that are already linked. However, you can bulk create the same resource in multiple languages, and then link the files after. The section Set up multiple languages describes how to link existing resources in more detail. Go to Forms & Integrations > Resources > Bulk Create Resources. In the Resource Files area, select Browse Files or drag and drop up to 10 files. Do you want to make all of the files available in the Mobile App Resource Library? If yes, select Add all resources to Resource Library. If no, the files will only be visible in the Web Portal. Go to the next step. Do you want to apply tags to all of the selected files? If yes, select Apply tags to all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Bulk Create Resources"
    }
  },
  {
    "content": "resources. Select or create the tags you want to apply. If no, go to the next step. Select Create to bulk upload the files. Result: A summary of the newly created resources displays. Select a resource to preview or edit it. If any files fail to upload, a second table lists the errors. Note:A file will fail to upload if:The file is too big. Resource Documents have a maximum file size of 5 MB. Resource Images have a maximum file size of 2 MB.The file type is not supported. A Resource Document must be a PDF, Word, or Excel file. A Resource Image must be in JPEG, JPG, or PNG format.The file name is already in use. Do you want to bulk create more resources? If yes, select Bulk Create Resources, and then go to step 2. If no, you have completed the procedure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Bulk Create Resources"
    }
  },
  {
    "content": "Filter Resource Documents\n\nBy default, the resources table lists resources alphabetically. Use the Search bar to search for matching text in resource names. You can also filter the list of resources according to a number of criteria to quickly find what you need. You can filter the list by: Type—select Document to filter for Resource Documents. Language—select a language, or select Unspecified to find Resource Documents with no language assigned. In Use—find Resource Documents that are used in questions in forms. For example, some forms use Document Editor questions that reference Resource Documents. You can also filter for resources that aren’t used in any forms. Group—find Resource Documents that are linked to translated resources in language groups. You can also search for Ungrouped resources. Tags—select one or more tags to find Resource Documents with those tags. If you select multiple tags, you can find resources with All or Any of the tags you selected. Visible in Device",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Filter Resource Documents"
    }
  },
  {
    "content": "Resource Library—find Resource Documents that are available to field technicians in the Resource Library on the Mobile App. Select filters as necessary, and then select Apply. Tip:Filtering matches all criteria. The more filters you apply, the fewer results you will receive. You can also combine filters with search terms to narrow the list further.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Filter Resource Documents"
    }
  },
  {
    "content": "Edit a Resource Document\n\nEdit a Resource Document to change the name and description or to select a different file. This is useful if you want to update a Resource Document without creating a new resource. If the Resource Document is a primary resource, you can also edit resource tags and add or remove translations. Note:Any new files you add cannot exceed 5 MB. You can add Excel and Word documents to the Resource Library, but you can’t use them in a form. You can edit a Resource Document in one of the following ways: Go to Forms & Integrations > Resources. Hover over a Resource Document, and then select Edit. Go to Forms & Integrations > Resources. Select a Resource Document to open it. Then, select Edit Resource Document. Tip:After you save, all forms that reference the Resource Document automatically update with the new file when a user reconciles their device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Edit a Resource Document"
    }
  },
  {
    "content": "Delete a Resource Document\n\nNote:Deleting a Resource Document is permanent and can’t be undone.You can't delete a resource if any forms use it. Open a resource and check the Referencing Forms section to find a list of forms that use the resource. Go to Forms & Integrations > Resources. Select a Resource Document to delete. You can do this in two ways: Hover over a Resource Document, and then select Delete Select a Resource Document to open it. Then, hover over the arrow and select Delete. Is the Resource Document a primary resource? If yes, and you want to delete the resource and all linked resources: Select Delete this resource and all linked resources, and then select Proceed. If yes, and you want to select a new primary: Select Delete this resource and select an alternative.... Select a new primary. Select Proceed. If no, select Permanently Delete Resource Document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/ResourceDocuments.htm",
      "title": "Resource Documents",
      "section": "Delete a Resource Document"
    }
  },
  {
    "content": "When to use a Resource Image\n\nBecause a Resource Image is a shared resource within the FormSpace, it's easy to keep all your forms up to date with the latest version of the image. Simply upload a new Resource Image with the same name as the old one. The image updates after a reconcile—there's no need to manually update any of your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "When to use a Resource Image"
    }
  },
  {
    "content": "Resource Images in forms\n\nWhen you create a form, you can include questions and help options that use Resource Images. You can use Resource Images in: Sketch Pad questions Resource Image questions (Advanced and Enterprise tier only) Card List questions (Advanced and Enterprise tier only) Help options (Advanced and Enterprise tier only) You can choose any Resource Image that’s in the same FormSpace, and different forms can use a single Resource Image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Resource Images in forms"
    }
  },
  {
    "content": "Use cases for a Resource Image in a form\n\nResource Images provide reference material for field technicians. You can use a Resource Image as part of the question itself or as part of the answer to a question. Once downloaded, Resource Images are available offline. The following table describes use cases for Resource Images. Example Configuration Before and after photos of an engine repair Use a Resource Image question to display the images inline as part of a question. Limit of 10 images per question, 100 images per page, and 100 images per form. Illustrated job steps for servicing a medical device Put the written instructions in the question text, and provide a Resources help option that the user can view as needed. Limit of six images per question. Building floor plan for a facility inspector to annotate Use a Sketch Pad question to use the image as part of the answer to a question. Limit of three images per question. Product model variations Use a Card List question to display a list",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Use cases for a Resource Image in a form"
    }
  },
  {
    "content": "of items with images. The user can select one option as their response. Limit of 10 images per question, 100 images per page, and 100 images per form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Use cases for a Resource Image in a form"
    }
  },
  {
    "content": "Resource Images in the Resource Library\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise The Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the TrueContext Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. When you create a Resource Image, you can make the resource visible in the Resource Library. The Resource Library is a tab on the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Resource Images in the Resource Library"
    }
  },
  {
    "content": "Mobile App home screen. This makes it possible for field technicians to open a Resource Image outside of a form. A field technician must have Can Submit or Can Test permissions in the FormSpace to open and use the Resource Library. If a technician has these permissions in multiple FormSpaces, the Resource Library on their device can display resources from different FormSpaces. Info:Our documentation on the Resource Library describes this feature in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Resource Images in the Resource Library"
    }
  },
  {
    "content": "Supported Resource Image file types\n\nYou can upload any of the following image file types to use as a Resource Image. JPG JPEG PNG",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Supported Resource Image file types"
    }
  },
  {
    "content": "Image file size considerations\n\nA Resource Image can be up to 2 MB. The maximum supported image dimensions are 4096 x 4096 pixels. If the image dimensions are larger, the system resizes the image to the maximum allowed while maintaining the aspect ratio. To improve the performance of your forms, including download times, think about the image size that displays on the Mobile App. A large size might be helpful if a field technician displays the image in full screen on a tablet. Otherwise, a small file might be sufficient. Tip:The size of the Resource Image affects the size of the image in documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Image file size considerations"
    }
  },
  {
    "content": "Create a Resource Image\n\nGo to Forms & Integrations > Resources. Select Create Resource, and then select Resource Image. Select Choose File, and then select an image from your local files or cloud service. Result: Sections display to enter resource details, add tags, and set up additional language resources (Multi-Language add-on only). Note:A Resource Image must be in JPEG, JPG, or PNG format. The maximum file size for a Resource Image is 2 MB. Enter a name and description. A description explains how a field technician should use the resource. It also improves search results in the Resource Library on the Mobile App (Enterprise tier only). Select the size the image will display in output documents. By default, images display at the Small setting—two inches wide. Note:The size of an image affects the size of generated output documents that include them. Output documents with multiple large images take longer to download than documents with small images.Changing the display size does",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Create a Resource Image"
    }
  },
  {
    "content": "not change the image resolution. A smaller image might not render correctly if you select a larger size. Test your image in documents and adjust the image size as needed. Do you want to make the Resource Image available in the Resource Library (Enterprise tier only)? If yes, select Visible in Resource Library. Result: Once you save the resource, a field technician can access the resource in the Resource Library as soon as they reconcile their device. Note:An Admin user must enable the Resource Library tab so that field technicians can see the Resource Library on their devices. If no, go to step 7. (Optional) Add resource tags. You can use tags to filter the resources list. Tags also help field technicians filter the Resource Library (Enterprise tier only) to find what they need. To add a resource tag, select Add Tags to this resource, and then type to select or create a tag. Info:The section Resource Images: Apply resource tags describes the benefits of tagging resources in more",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Create a Resource Image"
    }
  },
  {
    "content": "detail. (Optional) Link translated resources. This option is only available if your company has the Multi-Language add-on for the Enterprise tier. Info:The section Resource Images: Set up multiple languages describes this process in more detail. Select Create or Update. Result: The Resource Image is available for Form Designers to reference in forms. Do you want to create another Resource Image? If yes, select Create Resource Image. This will be a new resource, not a linked resource. If no, you have completed the procedure. Info:You can use the Resource Image in a Sketch Pad, Card List, or Resource Image question in any form in the same FormSpace. You can also use Resource Images in Help options.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Create a Resource Image"
    }
  },
  {
    "content": "Apply resource tags\n\nResource tags in the Web Portal Tags help you filter the list of resources by relevant criteria. Select one or more tags from the Filter section on the Resources page to find resources that have those tags. Resource tags in the Resource Library Tags also help organize resources in the Resource Library (Enterprise tier only). A field technician can use tags to filter the Resource Library on their device and quickly find relevant documents and images. Tagging guidelines You might tag a Resource Image by: Equipment types, like motors or air conditioning units. Equipment brands or makes. Resource types, like schematics or manuals. Info:Tags applied to a Resource Image also apply to any linked translations (Multi-Language add-on only). The section Resource Images: Set up multiple languages describes translated resources in more detail. Steps to apply resource tags To apply tags to a Resource Image: Select Add Tags to this resource. Result: The Tags section expands to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Apply resource tags"
    }
  },
  {
    "content": "display a field to enter tags. Enter a tag. As you type, existing tags display as suggestions. Select an existing tag, or press Enter or Return to create a new tag. Repeat this process for each tag you want to add. Note:Resource tags are different from form tags. The topic Set Up Form Properties: Form Information describes how to add tags to a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Apply resource tags"
    }
  },
  {
    "content": "Set up multiple languages\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on Translated resources in forms If your company has the Multi-Language add-on, you can link translated files to a Resource Image. When a field technician opens a Multi-Language form and selects a language, the Resource Image displays the translated file. You link Resource Images in a primary-secondary or parent-child relationship. A resource in one language acts as the primary to any translated resources. If a field technician’s preferred language is unavailable, the primary resource language displays by default. Translated resources in the Resource Library The Resource Library also supports translated resources. When a field technician opens a Resource Image in the Resource Library, they can easily switch between languages. If a field technician has a preferred form language set, Resource Images display in this language by default. A field technician can also filter the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "library by language. Steps to set up translated resources Info:The Resource Image you are currently setting up is the primary resource by default. Translated resources inherit resource tags from their primary. Once your translated resources are set up, you can delete the primary resource and select a new primary. The section Delete a Resource Image describes this process in more detail. Select Set up multiple languages. Result: The Additional Language Resources section expands to display the Language menu and Linked Resources table. Select the language of the primary Resource Image you are setting up. Add or link to at least one translated resource. To add a new resource, select Add New Resource. Enter a Name and Description, and then select Choose File. Select a file, select a Language, and then select Add. To select an existing resource, select Link Existing Resource. Select one or more resources to link to the new resource, select a language for each translated resource, and then",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "select Link. Note:You can only link resources that are not already linked to other resources. Result: The primary resource is linked to versions in different languages. Note:A translated resource can be in a different format than its primary. For example, if the primary resource is a PNG, you can link JPG images. Select Create or Update. Bulk Create Resources Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Rather than adding Resource Images one by one, you can bulk create up to 10 resources at once. A bulk batch can include both Resource Images and Resource Documents. Tip:When you bulk create resources, the system adds each resource individually. You can’t bulk create a group of translated resources that are already linked. However, you can bulk create the same resource in multiple languages, and then link the files after. The section Set up multiple languages describes how to link existing resources in more detail. Go to Forms & Integrations > Resources",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "> Bulk Create Resources. In the Resource Files area, select Browse Files or drag and drop up to 10 files. Do you want to make all of the files available in the Mobile App Resource Library? If yes, select Add all resources to Resource Library. If no, the files will only be visible in the Web Portal. Go to the next step. Do you want to apply tags to all of the selected files? If yes, select Apply tags to all resources. Select or create the tags you want to apply. If no, go to the next step. Select Create to bulk upload the files. Result: A summary of the newly created resources displays. Select a resource to preview or edit it. If any files fail to upload, a second table lists the errors. Note:A file will fail to upload if:The file is too big. Resource Documents have a maximum file size of 5 MB. Resource Images have a maximum file size of 2 MB.The file type is not supported. A Resource Document must be a PDF, Word, or Excel file. A Resource Image must be in JPEG, JPG, or PNG format.The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "file name is already in use. Do you want to bulk create more resources? If yes, select Bulk Create Resources, and then go to step 2. If no, you have completed the procedure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Set up multiple languages"
    }
  },
  {
    "content": "Bulk Create Resources\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Rather than adding Resource Images one by one, you can bulk create up to 10 resources at once. A bulk batch can include both Resource Images and Resource Documents. Tip:When you bulk create resources, the system adds each resource individually. You can’t bulk create a group of translated resources that are already linked. However, you can bulk create the same resource in multiple languages, and then link the files after. The section Set up multiple languages describes how to link existing resources in more detail. Go to Forms & Integrations > Resources > Bulk Create Resources. In the Resource Files area, select Browse Files or drag and drop up to 10 files. Do you want to make all of the files available in the Mobile App Resource Library? If yes, select Add all resources to Resource Library. If no, the files will only be visible in the Web Portal. Go to the next step. Do you want to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Bulk Create Resources"
    }
  },
  {
    "content": "apply tags to all of the selected files? If yes, select Apply tags to all resources. Select or create the tags you want to apply. If no, go to the next step. Select Create to bulk upload the files. Result: A summary of the newly created resources displays. Select a resource to preview or edit it. If any files fail to upload, a second table lists the errors. Note:A file will fail to upload if:The file is too big. Resource Documents have a maximum file size of 5 MB. Resource Images have a maximum file size of 2 MB.The file type is not supported. A Resource Document must be a PDF, Word, or Excel file. A Resource Image must be in JPEG, JPG, or PNG format.The file name is already in use. Do you want to bulk create more resources? If yes, select Bulk Create Resources, and then go to step 2. If no, you have completed the procedure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Bulk Create Resources"
    }
  },
  {
    "content": "Filter Resource Images\n\nBy default, the resources table lists resources alphabetically. Use the Search bar to search for matching text in resource names. You can also filter the list of resources according to a number of criteria to quickly find what you need. You can filter the list by: Type—select Image to filter for Resource Images. Language—select a language, or select Unspecified to find Resource Images with no language assigned (Enterprise tier only). In Use—find Resource Images that are used in questions in forms. For example some forms use Resource Image questions that reference Resource Images. You can also filter for resources that aren’t used in any forms. Group—find Resource Images that are linked to translated resources in language groups. You can also search for Ungrouped resources (Enterprise tier only). Tags—select one or more tags to find Resource Images with those tags. If you select multiple tags, you can find resources with All or Any of the tags you selected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Filter Resource Images"
    }
  },
  {
    "content": "Visible in Device Resource Library—find Resource Images that are available to field technicians in the Resource Library on the Mobile App (Enterprise tier only). Select filters as necessary, and then select Apply. Tip:Filtering matches all criteria. The more filters you apply, the fewer results you will receive. You can also combine filters with search terms to narrow the list further.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Filter Resource Images"
    }
  },
  {
    "content": "Edit a Resource Image\n\nEdit a Resource Image to change the name and description or to select a different file. This is useful if you want to update a Resource Image without creating a new resource. If the Resource Image is a primary resource, you can also edit resource tags and add or remove translations (Multi-Language add-on only). You can edit a Resource Image in one of the following ways: Go to Forms & Integrations > Resources. Hover over a Resource Image, and then select Edit. Go to Forms & Integrations > Resources. Select a Resource Image to open it. Then, select Edit Resource Image. Tip:After you save, all forms that reference the Resource Image automatically update with the new file when a user reconciles their device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Edit a Resource Image"
    }
  },
  {
    "content": "Delete a Resource Image\n\nNote:Deleting a Resource Image is permanent and can’t be undone.You can't delete a resource if any forms use it. Open a resource and check the Referencing Forms section to find a list of forms that use the resource. Go to Forms & Integrations > Resources. Select a Resource Image to delete. You can do this in two ways: Hover over a Resource Image, and then select Delete Select a Resource Image to open it. Then, hover over the arrow and select Delete. Is the Resource Image a primary resource? If yes, and you want to delete the resource and all linked resources: Select Delete this resource and all linked resources, and then select Proceed. If yes, and you want to select a new primary: Select Delete this resource and select an alternative.... Select a new primary. Select Proceed. If no, select Permanently Delete Resource Image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Delete a Resource Image"
    }
  },
  {
    "content": "Related topics\n\nQuestion Type: Image and Sketch Pad Add Help Options to Questions Question Type: Resource Image Question Type: Card List",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/FormImages.html",
      "title": "Resource Images",
      "section": "Related topics"
    }
  },
  {
    "content": "Video demo\n\nSee this feature in action! This video demos the Resource Library on the TrueContext Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Video demo"
    }
  },
  {
    "content": "Setup\n\nYour team admin (Admin user) enables the Resources tab in the Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Mobile Device configuration. If you're in a group with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions, you can add documents and images to the Resource Library. Tip:If your team has the Multi-Language add-on, you can link translated versions of resources to support your global workforce. Result: Field technicians can search for reference materials—such as manuals or schematics—directly from the Resource Library or from any",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Setup"
    }
  },
  {
    "content": "question in a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Setup"
    }
  },
  {
    "content": "Key Concepts\n\nThe Resource Library provides the following benefits: Improved Efficiency: Quick access to relevant information reduces time spent searching for solutions, enabling faster problem resolution. The Resource Library provides your field technicians with access to critical information in context, without disrupting their work. It also helps you support your global workforce by giving you the option to link translated resources to a primary resource. Accuracy: Detailed documents and visual aids help technicians make more precise diagnoses and perform repairs correctly the first time. Resource documents can be PDF, Word, or Excel files. Resource images can be JPG, JPEG, or PNG files. Faster resolution of issues: Technicians can troubleshoot and work more efficiently with instant access to manuals and guides, even when offline. Quality: Standardized procedures and reference materials ensure uniform service quality across different technicians and locations. On-the-Job Training:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Key Concepts"
    }
  },
  {
    "content": "New technicians can learn from comprehensive guides and visual resources, reducing their time to proficiency.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Use Resources in the Resource Library\n\nBrowse for Documents or Images The Resource Library makes it easy for you to browse the available images and documents. Search for Documents or Images The Resource Library has a search function that you can use to easily find the images and documents you’re looking for. As with browsing, you can do this while you’re working and not lose your place. Info:The full-text search function retrieves matching text from resource titles and descriptions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Use Resources in the Resource Library"
    }
  },
  {
    "content": "Managing Resources\n\nIn the Web Portal, you can set up and manage resources to ensure users can access the most up-to-date and relevant content. Admin users and users with Can Create permissions can: Add a resource Edit a resource Delete a resource Link versions in multiple languages",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/RLLandingPage.htm",
      "title": "Resource Library",
      "section": "Managing Resources"
    }
  },
  {
    "content": "Productivity and performance\n\nWhen you use the Resource Library to distribute critical content to your teams, you can significantly improve operational efficiency, service quality, and technician performance. Efficiency: Quick access to relevant information reduces time spent searching for solutions, enabling faster problem resolution. Accuracy: Detailed documents and visual aids help technicians make more precise diagnoses and perform repairs correctly the first time. Faster resolution of issues: Technicians can troubleshoot and work more efficiently with instant access to manuals and guides. Quality: Standardized procedures and reference materials ensure uniform service quality across different technicians and locations. On-the-Job Training: New technicians can learn from comprehensive guides and visual resources, reducing their time to proficiency.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "Productivity and performance"
    }
  },
  {
    "content": "Seamless access to content\n\nThe Resource Library is available on the Mobile App at any point during a workflow. This means that mobile users can access resources without stopping work on a form. You can also add resources to forms, for field users to reference or to sketch on or annotate. For example, you might add Resource Images and Resource Documents to a repair checklist to provide schematics. Tip:You can also make resources available in multiple languages (with an add-on to the Enterprise tier).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "Seamless access to content"
    }
  },
  {
    "content": "Resources used in forms\n\nThe resources within the library can be integrated into forms, further enhancing their utility.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "Resources used in forms"
    }
  },
  {
    "content": "File types in the Resource Library\n\nYou can add PDF, Excel, and Word documents to the Resource Library. All resource documents open in a PDF viewer on the Mobile App. You can also add resource images in JPEG, JPG, or PNG format. Note: You can add Excel and Word documents to the Resource Library, but you can’t use them in a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "File types in the Resource Library"
    }
  },
  {
    "content": "Mobile users\n\nMobile users access the Resource Library from the Mobile App home screen. They can also open the Resource Library while they work without losing their place. Info:The topic Resource Library for Mobile Users describes how field technicians open and use the Resource Library in the Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "Mobile users"
    }
  },
  {
    "content": "Web Portal users\n\nAn Admin user or User in a group with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions can upload resources and make them visible in the Resource Library. Admin users must enable the Resources tab so that mobile users can access the library on their devices. Info:The topic Set Up the Resource Library describes how to make the Resource Library available to your team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "Web Portal users"
    }
  },
  {
    "content": "Resources in multiple languages\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on With the Multi-Language add-on, you can link different language versions of a resource to the primary resource. In the Resource Library, a field technician can choose the version they want to display. Info: If a field technician selects a preferred form language, resources open in that language by default whenever that language is available. The Multi-Language Feature Overview describes the preferred form language in more detail. Info:The topic Add an Image or Document to the Resource Library describes how to set up a library resource. This includes how to set up a resource in multiple languages.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/IntroResourceLibrary.htm",
      "title": "Introduction to the Resource Library",
      "section": "Resources in multiple languages"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user to enable the Resources tab for your team. Your team must be on the Enterprise tier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/SetUpResourceLibrary.htm",
      "title": "Set Up the Resource Library",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Display the Resource Library for your team\n\nField technicians can refer to images and documents in the Resource Library as part of any workflow. To make the Resource Library available to field technicians, set up the Resources tab for your team. Go to Your username > Team Settings > Mobile Device > Device Configuration > Actions > Update Custom Configuration. Select the option to display the Resources tab. Select Update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/SetUpResourceLibrary.htm",
      "title": "Set Up the Resource Library",
      "section": "Display the Resource Library for your team"
    }
  },
  {
    "content": "Add resources to the Resource Library\n\nOnce the Resource Library is set up, field technicians can access any resources you add to the library in their FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. The Resource Library supports PDF, Excel, and Word documents, as well as images in PNG, JPG, or JPEG format. Info:The topic Add an Image or Document to the Resource Library describes this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/SetUpResourceLibrary.htm",
      "title": "Set Up the Resource Library",
      "section": "Add resources to the Resource Library"
    }
  },
  {
    "content": "Add a resource to the library\n\nWhen you set up a resource, select Visible in Resource Library. All resources with this setting display in the Resource Library. Any field technician with Can Submit or Can Test permissions in the FormSpace can access these resources on their mobile device. To make a resource visible in the Resource Library: Go to Forms & Integrations > Resources. Select an existing resource or create a new one. To add an existing resource to the Resource Library, hover over a resource and select Edit. To create a new resource, select Create Resource. Select Resource Image to add an image like a diagram or schematic. Select Resource Document to add a document like a manual or floor plan. The following table describes file types you can add to the Resource Library. Some file types are exclusive to the Resource Library and can’t be used in forms. Resource type File type Can be used in forms? Can be used in the Resource Library? Max size Image JPEG Yes Yes 2 MB JPG PNG",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/AddToResourceLibrary.htm",
      "title": "Add an Image or Document to the Resource Library",
      "section": "Add a resource to the library"
    }
  },
  {
    "content": "Document PDF 5 MB Word No Excel Set up or edit the resource. Info:The topics Resource Documents: Create a Resource Document and Resource Images: Create a Resource Image describe this process in more detail. Select Visible in Resource Library. Select Create or Update. Result: Field technicians can access the resource in the Resource Library. Tip:You can also create resources in bulk. The topics Resource Documents: Bulk Create Resources and Resource Images: Bulk Create Resources describe this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/AddToResourceLibrary.htm",
      "title": "Add an Image or Document to the Resource Library",
      "section": "Add a resource to the library"
    }
  },
  {
    "content": "Apply resource tags\n\nTags help you filter the list of resources by relevant criteria. A field technician can select tags to filter the Resource Library on their device and quickly find relevant documents and images. You might tag a resource by: Equipment types, like motors or air conditioning units. Equipment brands or makes. Resource types, like schematics or manuals. Info:The topics Resource Documents: Apply resource tags and Resource Images: Apply resource tags describe this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/AddToResourceLibrary.htm",
      "title": "Add an Image or Document to the Resource Library",
      "section": "Apply resource tags"
    }
  },
  {
    "content": "Set up translated resources\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on If you have the same resource in multiple languages, you can link the language versions. When a field technician opens a resource on the Mobile App, they can easily switch between languages. If a field technician has a preferred form language set, resources display in this language by default. A field technician can also filter the library by language. Info:The topics Resource Documents: Set up multiple languages and Resource Images: Set up multiple languages describe this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/AddToResourceLibrary.htm",
      "title": "Add an Image or Document to the Resource Library",
      "section": "Set up translated resources"
    }
  },
  {
    "content": "Open the Resource Library\n\nSelect Resource Library from the Mobile App home screen. You can also open the Resource Library while you work on a record without losing your place in the form. Select the menu, and then select Resource Library. Note:To display the Resource Library on mobile devices, an Admin user must Set Up the Resource Library for their team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "Open the Resource Library"
    }
  },
  {
    "content": "Find a resource\n\nThe Resource Library opens to the List tab. Use the Search bar, tabs, and filters to find the resource you need.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "Find a resource"
    }
  },
  {
    "content": "Sort resources\n\nThe Resource Library has two tabs to sort resources: List: Sorts alphabetically by resource name. This is the default tab. Type: Sorts by resource type—document or image. Each group lists resources alphabetically by resource name. Documents display first, followed by images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "Sort resources"
    }
  },
  {
    "content": "Filter resources\n\nThe Resource Library has two filtering options: Language: Filter resources by language. Only the languages available in your resources appear as filter options. You can only select one language filter at a time. Note: Translated resources are only available to customers with the Multi-Language add-on. Tags: Filter for resources with specific tags. If you select multiple tags, choose whether to filter for resources that have All or Any of the selected tags. Combine filters to yield specific results. To filter resources, select the filter menu, select your filters, and then select Done.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "Filter resources"
    }
  },
  {
    "content": "Search resources\n\nBasic search Enter search terms to search for matching text in resource titles and descriptions. Full-text search If a basic search does not surface enough results, initiate a full-text search. A full-text search is an advanced search function that scans Resource Documents for matching text. Enter at least three characters in the Search bar. Result: The Mobile App displays the option to search for Resource Documents that contain the search term. Select Resource contains: search term. Result: The Mobile App searches through Resource Documents for text that matches the search term. The search highlights the first match in each document. Tip:It might take several seconds to search through a large collection of documents. You can pause, resume, or cancel the search. Select a Resource Document. Result: The document opens to the first occurrence of matching text. The search term displays in the search bar. Initiate a search to find other matches in the same document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "Search resources"
    }
  },
  {
    "content": "View a resource\n\nTo learn more about a resource, open its Details to see the full title, description, tags, language, and other high-level information. How you access Details depends on your device. Android and iOS: Swipe right. MacOS: Swipe right with two fingers, or right-click. Windows: Hover over or right-click the record. Select a resource to open it. If the resource is a document, you can: Switch to outline view and jump to a heading. Open thumbnail view to jump to a page. Search the text to find what you need.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "View a resource"
    }
  },
  {
    "content": "Open a resource in another language\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on Resources that are available in multiple languages display in your preferred language on the Mobile App. If your preferred language is not available, the resource displays a default language set by an Admin user. To set a preferred language, open a Multi-Language form, select a language, and then select Make this my preferred language. In the Resource Library, select the arrow below the resource to display versions in other languages. Tip:Admins and users with Can Create permissions set up resources in multiple languages in the Web Portal. You will only see languages that have been set up.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ResourceLibraryforMobileUsers.htm",
      "title": "Resource Library for Mobile Users",
      "section": "Open a resource in another language"
    }
  },
  {
    "content": "Find a resource\n\nBy default, the resources table lists resources alphabetically by primary resource. Use the Search bar to search for matching text in resource names. You can also filter the list of resources according to a number of criteria to quickly find what you need. You can filter the list by: Type—select Document or Image. Language—select a language, or select Unspecified to find resources with no language assigned. In Use—find resources that are used in questions in forms. For example, some forms use Resource Image and Document Editor questions that reference resources. You can also filter for resources that aren’t used in any forms. Group—find resources that are linked to translated resources in language groups. You can also search for Ungrouped resources. Tags—select one or more tags to find resources with those tags. If you select multiple tags, you can find resources with All or Any of the tags you selected. Visible in Device Resource Library—find resources that are",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ManageResourceLibrary.htm",
      "title": "Manage the Resource Library",
      "section": "Find a resource"
    }
  },
  {
    "content": "available to field technicians in the Resource Library on the Mobile App. Select filters as necessary, and then select Apply. Tip:Filtering matches all criteria. The more filters you apply, the fewer results you will receive. You can also combine filters with search terms to narrow the list further.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ManageResourceLibrary.htm",
      "title": "Manage the Resource Library",
      "section": "Find a resource"
    }
  },
  {
    "content": "Edit a resource\n\nEdit a resource to change the name and description or to select a different file. This is useful if you want to update a resource without creating a new resource. If the resource is a primary resource, you can also edit resource tags and add or remove translations. You can edit a resource in one of the following ways: Go to Forms & Integrations > Resources. Hover over a resource, and then select Edit. Go to Forms & Integrations > Resources. Select a resource to open it. Then, select Edit Resource Document or Edit Resource Image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ManageResourceLibrary.htm",
      "title": "Manage the Resource Library",
      "section": "Edit a resource"
    }
  },
  {
    "content": "Delete a resource\n\nNote:Deleting a resource is permanent and can’t be undone.You can't delete a resource if any forms use it. Open a resource and check the Referencing Forms section to find a list of forms that use the resource. Go to Forms & Integrations > Resources. Select a resource to delete. You can do this in two ways: Hover over a resource, and then select Delete Select a resource to open it. Then, hover over the arrow and select Delete. Is the resource a primary resource? If yes, and you want to delete the resource and all linked resources: Select Delete this resource and all linked resources, and then select Proceed. If yes, and you want to select a new primary: Select Delete this resource and select an alternative.... Select a new primary. Select Proceed. If no, select Permanently Delete Resource Document or Permanently Delete Resource Image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Resource%20Library/ManageResourceLibrary.htm",
      "title": "Manage the Resource Library",
      "section": "Delete a resource"
    }
  },
  {
    "content": "DREL\n\nThis section includes the following content: Introduction to DRELTest DREL ExpressionsDREL Quick ReferenceDREL Complete Reference ListDREL for Repeatable Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DREL.htm",
      "title": "DREL",
      "section": "DREL"
    }
  },
  {
    "content": "What is DREL?\n\nData Reference Expression Language (DREL) is a TrueContext proprietary language used to reference information about Form Submissions. With DREL, you can build expressions that include form metadata and question answers. You can use DREL to customize the name of form submissions in the mobile app and in the Web Portal customize the name of folders and document files in data destinations such as cloud services or emails include variable content in emails for customers set up filtering rules for data destinations, and map data and metadata to records within data destinations such as ServiceMax or Salesforce.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "What is DREL?"
    }
  },
  {
    "content": "How to use DREL\n\nDREL expressions use a combination of references, properties, and static text. DREL expressions can include special characters like spaces, hyphens, symbols, and punctuation. The following image shows an example of an expression using DREL. References are variables that define the information in the expression. They always have a “%” symbol followed by a letter. Some references have a default property. Example: %u references the last user who submitted a form. This information might be the User ID, Username, or Email, depending on the property. %u without a property returns the user’s Display Name (first and last name and username). Properties specify the information to return for the reference. Place them in brackets [ ] after a reference when you want the system to return a property other than the default, or when the reference doesn't have a default property. Some references can include more than one property. Example: [name] specifies that the user information",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "How to use DREL"
    }
  },
  {
    "content": "returned is the user's first and last name, as configured in their user profile. In the example, %u[name] returns John Doe. Static text provides additional information. The system returns static text as is. Example: Form Submitted by adds context to the expression and is returned as a text string in the example. Info:You can test your DREL expression on data from a previous form submission or dispatch. You can use any number of references to create an expression. The following image shows an expression that includes the Form Submission Properties reference (%r), the User reference (%u), and the Date reference (%d), along with some static text. Info:The topic DREL Complete Reference List provides a full list of references and properties.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "How to use DREL"
    }
  },
  {
    "content": "Documents\n\nWhen you use DREL expressions in text documents such as JSON or XML, remember to add the escape property at the end of the expression. Use the following syntax: [#escapedocumentFormat] To escape the data referenced by all DREL expressions in a document, include an expression with the following syntax at the beginning of the document: #c[escapeDocumentFormat] where DocumentFormat is either Json, Xml, Html, Csv, or Url. To override the global escape, include the following property as part of a DREL expression: [#escapeNone] When you use the escape property or the global escape expression, the system displays special characters and line breaks in the document format you specify. Info:The topic Escape Special Characters and Line Breaks for Template-driven Text Documents includes greater detail and more examples of how to use the DREL escape property. Data Destinations Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "Documents"
    }
  },
  {
    "content": "Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. filters use regular expressions (regex) to match values. If values returned by a DREL expression include reserved regex characters, you must escape those characters using a backslash (\\). The following example shows how to escape special characters for URL and workflow status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. values. This example shows a regular expression that allows for variations in the workflow status. The regular expression ^Completed(\\s+\\([^)]+\\))?$ matches on Completed and Completed (any_value), such as Completed (Approved). Info:The topic Apply Filtering to Data Destinations explains how to set up filters in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "Documents"
    }
  },
  {
    "content": "Data Destinations\n\nData Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. filters use regular expressions (regex) to match values. If values returned by a DREL expression include reserved regex characters, you must escape those characters using a backslash (\\). The following example shows how to escape special characters for URL and workflow status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. values. This example shows a regular expression that allows for variations in the workflow status. The regular expression ^Completed(\\s+\\([^)]+\\))?$ matches on Completed and Completed (any_value), such as Completed (Approved). Info:The topic Apply Filtering to Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "Data Destinations"
    }
  },
  {
    "content": "Destinations explains how to set up filters in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "Data Destinations"
    }
  },
  {
    "content": "Related topics\n\nDREL Complete Reference List DREL Quick Reference",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELIntroduction.htm",
      "title": "Introduction to DREL",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites to test DREL expressions\n\nYou must be a TrueContext Admin user or a user with Can Create or Can View FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. You must have access to a dispatched or submitted form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/H3DREL/HowToUseDREL/TestDREL.htm",
      "title": "Test DREL Expressions",
      "section": "Prerequisites to test DREL expressions"
    }
  },
  {
    "content": "Steps to test DREL expressions\n\nGo to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Select the reference number of the submitted form you want to use for your tests. Result: The system opens the Form Submission details page. Select or hover over the arrow next to the reference number, and then select Test DREL. Result: The system opens the Test DREL window. In the DREL Text field, enter the DREL expression you want to test. DREL expressions can include special characters like spaces, hyphens, symbols, and punctuation. You can test the following common DREL references: %a[UniqueId]—Answer to a question with the specified Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/H3DREL/HowToUseDREL/TestDREL.htm",
      "title": "Test DREL Expressions",
      "section": "Steps to test DREL expressions"
    }
  },
  {
    "content": "used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.. %d—Date when a user submitted the form. %g—Address where a user submitted the form. %r—Reference Number of the submitted form. %t—Time when a user submitted the form. %u—Name and username of the user who submitted the form. Info:The topic DREL Quick Reference includes a list of all the DREL expressions you can test. The following example shows a test of the DREL expressions for date and time. Note:The Result Text field can be empty in the following situations:The referenced information is not available in the submitted form. For example, if the device does not have geo location enabled, %g returns an empty result.The system could not find a match to your DREL expression. Check that your DREL expression references an existing object.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/H3DREL/HowToUseDREL/TestDREL.htm",
      "title": "Test DREL Expressions",
      "section": "Steps to test DREL expressions"
    }
  },
  {
    "content": "Reference list\n\nYou can use the Data Reference Expression Language (DREL) to create expressions that reference information about form submissions, such as metadata and question answers. Use the following references to create expressions. Info:The topic DREL Complete Reference List describes each DREL Reference in more detail. Reference Description Properties %a[Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.] Question answer Replace the property with the Unique ID of the question. %c Mobile device information Default: [displayText] This property displays all other properties except prontoFormsClientSoftware. Other: [os], [osVersion], [model], [modelNumber], [prontoFormsClientSoftware], [prontoFormsClientSoftwareVersion]. %d Submission date The date reference returns the date that a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "record was dispatched, declined, submitted (as complete or incomplete), or approved. Default date format: [yyyy-MM-dd] Tip:Use supported syntax to create a custom date format. Approval Workflows (Enterprise tier only): %d[approval] returns the date the record was approved. %e[Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Unique ID] Answers from a Repeatable Section Replace the property with the Unique ID of the Repeatable Section. This returns all answers from all rows in a Repeatable Section. Info:To return more specific results or data from nested repeatable sections, add the properties described in the topic DREL Complete Reference List %f Form name Default: [name] Other: [id] %g Geo location Default: [address] Other: [timestamp], [coordinates], [coordinates.latitude], [coordinates.longitude],",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "[coordinates.altitude], [accuracy], [geoSource], [success], [errorMessage], [addressDetails][secondProperty][thirdProperty]. addressDetails second properties [street_number], [route], [locality], [postal_code], [administrative_area_level_1], [administrative_area_level_2], [country]. addressDetails third properties (optional) [longName] (default), [shortName]. %m Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). metadata Default: [notes] Other: [location], [latitude], [longitude], [priority], [duedate]. %o[Destination Unique Identifier][key] Information stored as a response output after an initial Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. executes. In the DREL expression of a subsequent destination or its linked document, replace the first property with the Destination Unique Identifier of the initial destination that stores the response output. Replace the second property with a key returned as part of a key:value pair in the third-party system response body. You can find the key name in the third-party API documentation. The key specifies the stored value in the initial destination’s response output. %q[Unique ID] Question text Replace the property with the Unique ID of the question. %r Form submission A form submission is a dispatched or submitted form. properties Default: [referenceNumber] Other: [id],[ language], [name], [state], [workflowState], [dataFlowState], [workflowStatus], [pfStatus], [assignment]. Note:The [workflowState] property replaces the [state] property. Make sure that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "you change to the new [workflowState] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. Approval Workflows (Enterprise tier only): [approver], [completionResult]. %s FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. name Default: [name] Other: [id] %t Submission time The time reference returns the time that a record was dispatched, declined, submitted (as complete or incomplete), or approved. Default time format: [HH:mm:ss] Tip:Use supported syntax to create a custom time format. Approval Workflows (Enterprise tier only): %t[approval] returns the time the record was approved. %u User information Default: The %u reference returns the submitter, if available. If there’s no submitter, %u returns the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "assignee. [submitter][displayName] [assignee][displayName] For example: %u applied to a dispatched record returns the assignee. For a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form (Enterprise tier only), %u applied to a transferred form returns the user (submitter) who transferred the form. Other User types: [submitter]: returns the last user to submit, transfer, or decline the record from the Mobile App. [assignee]: returns the user currently assigned to the record. [approver] returns the approver when a record is pending approval or approved. Information types: [id]: returns the user's unique identifier in the TrueContext system. [username]: returns the user's username. [name]: returns the user's first and last name. [email]: returns",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "the user's email. [alias]: returns the user's alias. Go to Setting Up User Aliases to learn how aliases work. The information type properties apply to the submitter, unless you specify a different type of user. For example, for a transferred record, use the two properties [assignee][email] to get the recipient’s email address. Tip:You can combine the user and information types. Always put the user type first: %u[approver][name], for example. %v Form version Default: [version] Other: [id]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Reference list"
    }
  },
  {
    "content": "Multiple properties\n\nYou can use multiple properties with the %a reference for some question types. Add multiple properties after the [Unique ID] property. Syntax: %a[Unique ID][SecondProperty] Question type Question type refers to the format of a question in a form, such as a text field, dropdown, audio recording, or radio button, among others. Question types are chosen when adding questions to a form in the Form Builder. Properties Questions with comments [comment] Returns the question comment instead of answer. Geo location Default: [address] Other: [success], [geoSource], [timestamp], [coordinates], [coordinates.latitude], [coordinates.longitude], [coordinates.altitude], [accuracy], [errorMessage], [addressDetails][thirdProperty][fourthProperty]. addressDetails third properties [street_number], [route], [locality], [postal_code], [administrative_area_level_1], [administrative_area_level_2], [country]. addressDetails fourth properties (optional) [longName] (default), [shortName].",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Multiple properties"
    }
  },
  {
    "content": "Date and time Default: [yyyy-MM-dd], [HH mm ss] Other: You can create your custom date and time format. Attachment Default: [bytes] Other: [filename], [contentType]. Barcode Default: [barcodeValue] Other: [barcodeType]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Multiple properties"
    }
  },
  {
    "content": "Related topics\n\nIntroduction to DREL DREL Complete Reference List",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELQuickReference.htm",
      "title": "DREL Quick Reference",
      "section": "Related topics"
    }
  },
  {
    "content": "Form metadata\n\nYou can use DREL expressions to reference form metadata. Use form metadata references to return information about the form like the Form Submission ID the name of the user who submitted the form, and the date and time that the form was submitted, among others. All form metadata references have a default property and at least one alternative property.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Form metadata"
    }
  },
  {
    "content": "%c - Mobile device information\n\nThe mobile device reference returns information about the mobile device from which the user submitted a form. Default property: [displayText] This property returns the device model, model number, operating system, operating system version, and the TrueContext Mobile App version. To display only part of the displayText, use one of the other properties. Other properties: Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 [os]: returns the mobile device operating system. [osVersion]: returns the mobile device operating system version. [model]: returns the mobile device model. [modelNumber]: returns the mobile device model number. [prontoFormsClientSoftware]: returns the TrueContext Mobile App type. [prontoFormsClientSoftwareVersion]: returns the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%c - Mobile device information"
    }
  },
  {
    "content": "TrueContext Mobile App version. Usage examples: %c returns iPhone iPhone 10,4 (iOS 14.4, 12.6.47) %c[os] version %c[osVersion]returns Android version 14.4.1 %c[model] returns iPhone %c[modelNumber] returns iPhone 9,4 %c[prontoFormsClientSoftware]: returns iOS %c[prontoFormsClientSoftwareVersion]: returns v12.4.2.0 (2594)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%c - Mobile device information"
    }
  },
  {
    "content": "%d - Date\nof the form submission\n\nThe date reference returns the date that a record was: Dispatched Declined Submitted (as complete or incomplete) Approved Time zones The time zones for dates and times depend on the following factors: When resolving DREL in output documents, the Document Time Zone Source controls the time zone. When resolving DREL in Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. or when using the Test DREL option: If the record was The date resolves to the Dispatched Team time zone (if set up) UTC (if the team time zone is not set up) Declined, submitted, or transferred, and processed on the server Device time zone Approved (Enterprise tier only) Device time zone Info:If the record requires approval (Enterprise tier only), the [approval] property returns the time",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%d - Date\nof the form submission"
    }
  },
  {
    "content": "the record was last approved. The time zone is the device time zone for the user who submitted the record. Tip:You can use additional properties to override the default time zones. Date display You can customize how the system displays the date. For example, you can: Change the date format: %d[dd/MM/yyyy] Display the day of the week, month, or year, or the week of the year, for example: %d[dd-MM-yyyy w] Display and change the time zone: %d[dd-MM-yyyy z][TeamTZ] Use a combination of format properties: %d[dd/MM/yyyy E w z][TeamTZ] Property details Default property: [yyyy-MM-dd] Date format properties: You can change the date format by using a combination of the following symbols: Symbol Meaning Format supported Output Examples y Year [y], [yy], [yyyy] 2019, 19, 2019 M Month [MM], [MMM], [MMMM] 09, Sep, September d Day in the month [d], [dd] 5, 05 E Day in the week [E], [EEEE] Tue, Tuesday D Day in the year [D] 258 w Week in the year [w] 42 z Display the time zone [z], [zzzz] EDT, Eastern",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%d - Date\nof the form submission"
    }
  },
  {
    "content": "Daylight Time Time zone override properties: The default time zone can vary depending on the context. For example, you can set a “default” time zone for a document. Use any of the following properties after a date format property to display or apply a different time zone. DataRecordTZ: Time zone on the user’s device. TeamTZ: Time zone configured at the team level. Region/City: A specific time zone. You can use any of the names in the list of tz database time zones. Approval property: If the record requires approval (Enterprise tier only), %d[approval] returns the date the record was last approved. The time zone is the device time zone for the user who submitted the record. Usage examples: Form submitted %d[dd-MM-yyyy] returns Form submitted 25-06-2020. %d[EEEE, MMMM d, yyyy] returns Thursday, June 25, 2020. Week %d[w, yyyy] returns Week 26, 2020. %d[dd-MM-yyyy z][TeamTZ] returns 26-06-2020 EDT when the form was submitted on 25-06-2020 at 11:50 PM PDT, for example. Approval date:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%d - Date\nof the form submission"
    }
  },
  {
    "content": "%d[approval][dd-MM-yy] returns Approval date: 30‑12‑24 when the record was approved on December 30, 2024.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%d - Date\nof the form submission"
    }
  },
  {
    "content": "%f - Form name\n\nThe Form name reference returns information about the form used to submit data. Default property: [name] The form name is one of the most commonly used references when naming folders and document files. Other properties: [id]: returns the unique identifier of the form. Usage examples: %f returns Equipment inspection. Form %f[id] returns Form 145211668",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%f - Form name"
    }
  },
  {
    "content": "%g - Geo location\n\nThe Geo location reference returns the GeoStamp collected when a user submits a form. Info:To use this DREL expression successfully, you must enable the setting to collect a Geo location on your form. The topic Set Up Form Properties describes how to configure the Geo location setting. Default property: [address] This property displays the street name and number, city, state or province, postal code, and country. Other properties: [timestamp]: returns the date and time when the system collected the Geo location. The system displays the timestamp in the GMT/UTC +0 time zone. [coordinates]: returns the latitude, longitude, and altitude of the Geo location. Alternatively use [coordinates.latitude] [coordinates.longitude], or [coordinates.altitude]. [accuracy]: returns the accuracy level of the coordinates in meters. [geoSource]: returns how the system acquired the Geo location. Systems can acquire a location using GPS, for example. [success]: returns true if the system",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%g - Geo location"
    }
  },
  {
    "content": "collected the Geo location successfully, or false if the system failed to collect it. [errorMessage]: returns an error message if the system fails to collect the Geo location. If the system collects the location successfully, the system does not return an error message. [addressDetails][secondProperty][thirdProperty]: Use this property when you want to retrieve specific information about the address where the user submitted the form. When you use this property, you need to include a second property with the following possible values: [street_number]: returns the street number. [route]: returns the street name. [locality]: returns the city name. [postal_code]: returns the zip or postal code. [administrative_area_level_1]: returns the state or province. [administrative_area_level_2]: returns the county. [country]: returns the country. The third property is optional. You can include the following values: [longName]: returns the full value. This is the default, so you don’t need to include",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%g - Geo location"
    }
  },
  {
    "content": "it. [shortName]: returns an abbreviation of the value. This property only has an effect on the [route], [administrative_area_level_1], and [country] second properties. Usage examples: %g returns 111 Elm Street, Ottawa, ON K1A 2B3, Canada %g[timestamp] returns 2020-01-03T18:34:23.000Z %g[coordinates] returns 41.23443223145432, -23.38029283828193, 123.23874 %g[accuracy] returns 14.812454 %g[geoSource] returns GPS %g[success] returns true %g[errorMessage] returns Unknown Location %g[addressDetails][street_number] returns 111 %g[addressDetails][route] returns Chestnut Boulevard %g[addressDetails][route][shortName] returns Chestnut Blvd. %g[addressDetails][locality] returns Ottawa %g[addressDetails][postal_code] returns K1A 2B3 %g[addressDetails][administrative_area_level_1] returns Ontario %g[addressDetails][administrative_area_level_1][shortName] returns ON %g[addressDetails][administrative_area_level_2] returns Ottawa Division %g[addressDetails][country] returns Canada",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%g - Geo location"
    }
  },
  {
    "content": "%g[addressDetails][country][shortName] returns CA",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%g - Geo location"
    }
  },
  {
    "content": "%m - Dispatch metadata\n\nDispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). metadata is information that a supervisor adds to a form when dispatching it to give mobile users more context. Dispatch metadata includes notes or instructions priority due date, and address. Info:The topic Dispatch Metadata and Inbox Views describes Dispatch metadata in more detail. Default property: [notes] This property returns the text in the dispatch notes or instructions. Other properties: [location]: returns the latitude and longitude of the location in the dispatch metadata. Alternatively use [latitude] or [longitude]. [priority]: returns the priority in the dispatch metadata. Priority can be High, Medium, or Low. [duedate]: returns the due",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%m - Dispatch metadata"
    }
  },
  {
    "content": "date. You can customize the way the system returns dates by using date formats as specified in the Date section. Usage examples: Form priority %m[priority] returns Form priority Medium. Form due %m[duedate][E, dd-MM-yyy] returns Form due Wed, 12-12-2020.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%m - Dispatch metadata"
    }
  },
  {
    "content": "%o - Information stored as a response output\n\nThe response output reference returns the information stored after an initial HTTP or Salesforce destination executes. You can use the %o reference in any subsequent destination or its linked document. Note:The destination that stores the response output must precede the referencing destinations in the Form Builder. The following Data Destinations can store response outputs: Customer Feedback Dispatch HTTP HTTP File Upload Salesforce Account Salesforce Case Salesforce Contact Salesforce Standard, Custom, or Big Object Salesforce Lead Salesforce Apex REST ServiceNow Table Response outputs enable you to make sequential requests to third-party systems. This enables you to define relationships between the data or records created in those systems. For example, you can set up a Salesforce Account destination to be the parent of a Salesforce Contact destination. The Account destination uses Response Data Handling to store the response output that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%o - Information stored as a response output"
    }
  },
  {
    "content": "the Contact destination references. You map the %o expression in the child Contact destination to link new Contact records to the parent Account record: Info: You can view the parent destination response outputs from the form submission page in the web portal. The topic View Destination Response Outputs in the Web Portal provides more detail on how to find the response outputs. Properties: [Destination Unique Identifier][key] In the subsequent destination or its linked document, replace the first property with the Destination Unique Identifier of the initial destination with the response output. Replace the second property with a key returned as part of a key:value pair in the third-party system response body. You can find the key name in the third-party API documentation. The key specifies the stored value in the initial destination’s response output. Note:You must include both properties when you create a %o reference. Without these properties, TrueContext can’t retrieve or send",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%o - Information stored as a response output"
    }
  },
  {
    "content": "data. Usage examples: %o[Account Destination][id] returns a value of 0014x00000YjZWzAAN, which is the Salesforce Account record ID.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%o - Information stored as a response output"
    }
  },
  {
    "content": "%r - Form submission properties\n\nDefault property: [referenceNumber] The Form Submission Reference Number is the unique identifier for a Form Submission. This number identifies each form submission in the Form Submissions page. The reference number has two strings of numbers. The first string is the date the first submission version of the form is created, and the second string is the serverDataRecordID number of the form submission. Example: A form submitted on June 20, 2019 could have the reference number 20190620-1811278959. Other properties: [id]: returns the serverDataRecordID. The submitted form serverDataRecordID is the second string in the reference number. [name]: returns the name of the form submission. You can't use this property when naming Form Submissions. [language]: for Multi-Language Forms, returns the language code of the selected or dispatched language. You can use this code in Data Destination filters. [pfStatus]: For App‑to‑App callbacks only. Returns the form’s",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "current status on the device as described in the following table. Status Description Saved A TrueContext Mobile App user opened a form from the Forms box or Inbox, and then saved it. Outbox A submitted form is still processing on the user’s device and has not yet been uploaded to the server. This can happen when a device is offline, for example. Sent A submitted form was uploaded to the server. [state]: returns the state of a Form Submission. Note:The [workflowState] property replaces the [state] property. Make sure that you change to the new [workflowState] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. The following table describes the states that the server returns, for example, in the case of Form Submission names, document generation, and the configuration of Data Destinations. State Description Dispatched The system dispatched a form to a mobile user. The form is in this state until the user submits,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "declines, or transfers the form. Note:The term transferred only applies to TrueContext Teamwork-enabled forms. DispatchDeclined A mobile user declined a form dispatched to them. Incomplete A mobile user transferred an incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form. The form is now either unassigned or assigned to another user. Edit A supervisor sent a completed form for editing. Complete A mobile user sent a completed form. The TrueContext server received and processed the completed form. The following table describes the states that the TrueContext Mobile App returns when using App‑to‑App callbacks. State Description Visible in Form Names? Visible in App‑to‑App Callbacks? Dispatched The system dispatched a form to a mobile",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "user. The form is in this state until the user makes changes to it. Yes No DispatchDeclined A mobile user declined a form dispatched to them. Yes No Complete A mobile user sent a completed form. The submitted form might be in the user’s outbox, or it might have been uploaded to the TrueContext server. Yes Yes Incomplete A mobile user transferred an incomplete TrueContext Teamwork-enabled form. The form might be unassigned on the TrueContext server or assigned to another user’s Inbox. The form is in this state until a user makes changes to it. Yes Yes Saved A TrueContext Mobile App user opened a form and made changes to it. The form might be saved in the Drafts or Inbox folder. Yes Yes [workflowState]: Returns the state that describes the record’s position in a workflow as a result of the last action taken on that record. Note:The [workflowState] property replaces the [state] property. Make sure that you change to the new [workflowState] by September 30, 2025. The topic Changes to Work",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "Management Metadata describes all of the recent changes in more detail. Tip:For custom callback parameters, you should continue to use %r[state]. The following table describes the workflow states the server returns: Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\". Description Dispatched Dispatched: The record was dispatched to a field technician. The record remains in this state until a field technician submits or declines the record, or transfers a TrueContext TeamworkTrueContext Teamwork-enabled record (Enterprise tier only). Dispatched also describes records dispatched to a group or FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "FormSpace. (Enterprise tier only). Incomplete A field technician transferred an incomplete TrueContext Teamwork-enabled record (Enterprise tier only). The record might be assigned to another technician or available for a technician to claim or a dispatcher to reassign. Pending Approval A field technician submitted a record that requires approval. Any user in a group with the Can Approve FormSpace permission can claim and review the record. This workflow state is specific to records with an Approval WorkflowApproval Workflow set up (Enterprise tier only). Changes Requested A supervisor has requested changes to the submitted record as part of an Approval Workflow (Enterprise tier only). Reopened A supervisor sent a completed record back to a field technician to make corrections. Completed A field technician submitted a completed record. This includes records that have been corrected (Advanced and Enterprise tier only) and records approved through an Approval Workflow (Enterprise tier",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "only). Cancelled A field technician declined the record after a dispatcher or the system dispatched it to them. [dataFlowState]: Returns the state that describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. The following table describes the data flow states the Web Portal returns: Data Flow State A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\". Description Pending Download The record has been dispatched, reopened, sent for changes in an Approval Workflow (Enterprise tier), or transferred with TrueContext Teamwork (Enterprise tier). However, a field technician has not downloaded it. The technician must reconcile their device to download the record or claim it from the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "available, you can claim a record to work on from the Group Inbox.. Downloaded A field technician has downloaded the record to their mobile device or claimed the record. Uploading The system is uploading a newly submitted or transferred record. The record remains in this state if a field technician’s device disconnects during the upload. Upload Failed The system can’t upload the submitted record. This might be: A server issue. The upload will continue when servers are back online. A connectivity issue on a field technician’s device. The system will retry the upload when the field technician reconciles the Mobile App. Uploaded The system finished uploading a newly submitted or transferred record. Processing The system received and is processing the record. Processing Failed The system can't process the submitted record due to an error. Processed The system processed the record successfully. [workflowStatus]: The Workflow Status The workflow status describes how a record moves through",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. is a combination of metadata fields. This “at-a-glance” status makes it easy for work managers to track and manage records. For example, the Dispatched (Downloaded) status tells you that a field technician has dispatched work available on their device. The [workflowStatus] is different from the [workflowState]. The [workflowState] shows workflow progress, while the [workflowStatus] also includes data transfer or processing activity. All statuses include a workflow state, and some also contain the data flow state or completion result. Info:The workflowStatus property sometimes returns a value that includes parentheses, such as Dispatched (Downloaded). Make sure to escape special characters in documents and in data destination filters. The following table describes the workflow statuses that the server returns. Workflow Status Workflow State Data Flow State",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "Completion Result Dispatched (Pending Download) Dispatched PendingDownload None Dispatched (Downloaded) Dispatched Downloaded None Dispatched (Uploading) Dispatched Uploading None Dispatched (Uploaded) Dispatched Uploaded None Dispatched (Upload Failed) Dispatched UploadFailed None Dispatched (Processing) Dispatched Processing None Dispatched (Processing Failed) Dispatched ProcessingFailed None Reopened (Pending Download) Reopened PendingDownload None Reopened (Downloaded) Reopened Downloaded None Reopened (Uploading) Reopened Uploading None Reopened (Uploaded) Reopened Uploaded None Reopened (Upload Failed) Reopened UploadFailed None Reopened (Processing) Reopened Processing None Reopened Reopened Processed None Reopened (Processing Failed) Reopened ProcessingFailed None Completed (Processing) Completed Processing None Completed Completed Processed None Completed (Processing Failed) Completed ProcessingFailed None Completed (Corrected) Completed Processing Corrected Completed",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "(Corrected) Completed Processed Corrected Completed (Corrected) Completed ProcessingFailed Corrected Completed (Approved) Completed Processing Approved Completed (Approved) Completed Processed Approved Completed (Approved) Completed ProcessingFailed Approved Incomplete (Uploading) Incomplete Uploading None Incomplete (Uploaded) Incomplete Uploaded None Incomplete (Upload Failed) Incomplete UploadFailed None Incomplete (Processing) Incomplete Processing None Incomplete Incomplete Processed None Incomplete (Processing Failed) Incomplete ProcessingFailed None Pending Approval PendingApproval Processed None Changes Requested (Pending Download) ChangesRequested PendingDownload None Changes Requested (Downloaded) ChangesRequested Downloaded None [assignment]: Returns Assigned or Unassigned to indicate if the record has an assignee. [completionResult]: Returns the completion state of the record. This property is specific to forms set up for corrections (Advanced and Enterprise tier) or an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "Approval Workflow (Enterprise tier only). If the record requires approval, returns Approved or empty to indicate the record approval state. If the record allows corrections, returns Corrected or empty to indicate whether a field technician has made changes. Usage examples: Reference number %r returns Reference number 20200211-1811522422. Record %r[workflowState] returns Record Incomplete. Approval State: %r[completionResult] returns Approval State: Approved.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%r - Form submission properties"
    }
  },
  {
    "content": "%s - FormSpace name\n\nThe FormSpace name reference returns the name of the FormSpace where the form is located. Companies commonly set up FormSpaces to reflect different regions or locations, so returning FormSpace information can be useful to sort Form Submissions. Default property: [name] Other properties: [id]: returns the unique identifier of the FormSpace. Usage examples: %s returns Toronto team. %s[id] returns 194522112",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%s - FormSpace name"
    }
  },
  {
    "content": "%t - Time\nof the form submission\n\nThe time reference returns the time that a record was: Dispatched Declined Submitted (as complete or incomplete) Approved Time zones The time zones for dates and times depend on the following factors: When resolving DREL in output documents, the Document Time Zone Source controls the time zone. When resolving DREL in Data Destinations or when using the Test DREL option: If the record was The date resolves to the Dispatched Team time zone (if set up) UTC (if the team time zone is not set up) Declined, submitted, or transferred, and processed on the server Device time zone Approved (Enterprise tier only) Device time zone Info:If the record requires approval (Enterprise tier only), the [approval] property returns the time the record was last approved. The time zone is the device time zone for the user who submitted the record. Tip:You can use additional properties to override the default time zones. Time display You can customize how the system displays",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%t - Time\nof the form submission"
    }
  },
  {
    "content": "the time. For example, you can: Change to a 12-hour clock: %t[hh:mm:ss] Add AM or PM after the time: %t[hh:mm:ss a] Display and change the time zone: %t[hh:mm:ss z][Europe/London] Use a combination of format properties: %t[hh:mm:ss a z][TeamTZ] Property details Default property: [HH:mm:ss] Time format properties: Change the time format by using a combination of the following symbols. Symbol Meaning Format supported Output Examples h Hour in AM/PM (1-12) [h], [hh] 4, 04 H Hour in a day (0-23) [H], [HH] 22 m Minute in an hour [m], [mm] 15 s Second in a minute [s], [ss] 39 a AM/PM marker [a] PM k Hour in a day (1-24) [k], [kk] 24 K Hour in AM/PM (0-11) [K], [KK] 0, 00 z Display the time zone [z], [zzzz] EDT, Eastern Daylight Time Approval property: If the record requires approval (Enterprise tier only), %t[approval] returns the time the record was last approved. The time zone is the device time zone for the user who submitted the record. Time zone override properties: The default time",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%t - Time\nof the form submission"
    }
  },
  {
    "content": "zone can vary depending on the context. For example, you can set a “default” time zone for a document. Use any of the following properties after a time format property to display or apply a different time zone. DataRecordTZ: Time zone on the user’s device. TeamTZ: Time zone configured at the team level. Region/City: A specific time zone. You can use any of the tz database names. Usage examples: Form submitted at %t returns Form submitted at 12:06:45. %t[hh:mm a] returns 12:06 PM. %t[HH:mm:ss z][Europe/London] returns 20:06:45 BST. This changes the time zone value. Info:You can also use [DataRecordTZ] or [TeamTZ] to change a time zone value, for example: %t[hh:mm:ss a z][TeamTZ] Approval time: %t[approval] returns Approval time: 13:35:48 when the record was approved at 1:35 pm in the field user’s time zone. Info:The topic Time Zone Settings describes how and when the system displays different time zones.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%t - Time\nof the form submission"
    }
  },
  {
    "content": "%u - User information\n\nThe User reference returns information about the user the form was dispatched to, transferred to, submitted by, assigned to, or approved by. Default property: [submitter][displayName] or [assignee][displayName]. The %u reference without additional properties returns the submitter, if available. If there’s no submitter, %u returns the assignee. For example, %u applied to a dispatched record returns the assignee. For a TrueContext Teamwork-enabled form (Enterprise tier only), %u applied to a transferred form returns the user (submitter) who transferred the form. Other properties User types: [submitter]: returns the last user to submit, transfer, or decline the record from the Mobile App. [assignee]: returns the user currently assigned to the record. [approver]: returns the approver when a record is pending approval or approved. Information types: [id]: returns the user's unique identifier in the TrueContext system. [username]: returns the user's username. [name]:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%u - User information"
    }
  },
  {
    "content": "returns the user's first and last name. [email]: returns the user's email. [alias]: returns the user's alias. Go to Setting Up User Aliases to learn how aliases work. Tip:You can combine the user and information types. Always put the user type first: %u[assignee][email], for example. Usage examples: Reply to %u[name] at %u[email] returns Reply to John Doe at johnd@email.com. Form submitted by %u returns Form submitted by Anna Johnson (ajohnson0201). Form approved by %u[approver][name] returns Form approved by Alex Lee. Form transferred to %u[assignee][email] returns Form transferred to taylorreese@companyco.com.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%u - User information"
    }
  },
  {
    "content": "%v - Form version\n\nThe system creates a new form version each time the supervisor updates the form, saves it, and deploys it. It's useful to know the version of a form to keep track of the changes that a supervisor made to it. Default property: [version] Other properties: [id]: returns the unique identifier of the form version. Usage examples: Form version %v returns Form version 12. Form version %v[id] returns Form version 11123.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%v - Form version"
    }
  },
  {
    "content": "Questions\n\nQuestion references can return questions in a form as the user sees them on the Mobile App, and information that a user submitted as answers or comments. Question references don't have a default property. You must include the Question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. as a property.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Questions"
    }
  },
  {
    "content": "%a[Unique ID] - Question answers\n\nThe question answer reference returns the information a user submitted as an answer or a comment. Property: [Unique ID] Replace with the Unique ID of the question you want to reference. Info: The topic Overview Unique IDs describes how to find the Unique ID of a question. Other properties: [Comment]: The comment property returns question comments. Use the comment property after the Unique ID property. Info:The topic Question Comments describes question comments in more detail. [display]: For options-based questions, the display property returns the value displayed on the device. The display value can be the same as or different from the answer submitted to the server. Info:The following topics describe options-based questions in more detail:Question Type: Button GroupQuestion Type: Card ListQuestion Type: Dropdown, Multiselect, and Radio Button Usage examples: %a[EquipmentCondition] returns Fair. %a[EquipmentCondition][Comment] returns The equipment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%a[Unique ID] - Question answers"
    }
  },
  {
    "content": "has visible signs of wear that don't affect functionality. %a[EquipmentCondition][display] returns Poor when the value sent to the server is 0.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%a[Unique ID] - Question answers"
    }
  },
  {
    "content": "%e[Repeatable Section Unique ID] - Answers in a Repeatable Section\n\nThe Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. reference returns information from a specific Repeatable Section in your form. The expression returns all Repeatable Section entries as a string in the order that the rows appear in. Info:The topic DREL for Repeatable Sections describes in detail the different DREL expressions that can extract responses from a Repeatable Section. Property: [Repeatable Section Unique ID] To find the Repeatable Section Unique ID, navigate to the form, and then select the Pages & Questions tab. The Label column contains the Unique ID. To return more specific results, and to return data from nested repeatable sections, add the following properties: [n]: returns a specific row in a Repeatable Section, where [n]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%e[Repeatable Section Unique ID] - Answers in a Repeatable Section"
    }
  },
  {
    "content": "is the row number. Because row numbers are zero-based, use [0] to return data from the first row. [inner_drel]: returns the response of the specified DREL expression within a Repeatable Section, where inner_drel is another DREL expression. For example: %e[Repeatable Section Unique ID][%a[Unique ID]] returns the answer to the specified question for every row in a Repeatable Section. %e[Repeatable Section Unique ID][%q[Unique ID]] returns the question text of the specified question for every row in a Repeatable Section. You can also include plain text within the [inner_drel] expression to create a more structured response. For example: %e[Repeatable Section Unique ID][1][Repair %a[Unique ID] immediately.] returns Repair answer to question in second row of the Repeatable Section immediately. [delimiter]: separates the returned row values with the specified delimiter, such as [+] or [,]. [%e[Nested Repeatable Section Unique ID]]: returns the contents of a nested Repeatable Section. Usage",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%e[Repeatable Section Unique ID] - Answers in a Repeatable Section"
    }
  },
  {
    "content": "examples: A technician records the required materials for a job at a single site: %e[PartsList] returns30pc Hex Bolts 2 True 50pc Washers 1 True 100pc Drywall Screws 3 False %e[PartsList][0] returns30pc Hex Bolts 2 True where: [0] is the [n] value that returns the first row of the Repeatable Section. %e[PartsList][%a[MaterialType]][, ] returns30pc Hex Bolts, 50pc Washers, 100pc Drywall Screws where: [%a[MaterialType] is an [inner_drel] expression that provides the answers to only the first question in every row of the Repeatable Section. [, ] is a [delimiter] that separates the items. A technician records the required materials for one of many different locations in a building. They list each location in a Repeatable Section, and each entry contains a nested Repeatable Section for that location’s materials: %e[SiteMaterials][0][%a[SiteLocation]: %e[PartsList]] returnsBasement: 4pc Drywall 20 True Insulation 40 True 100pc Drywall Screws 5 False where: [0] is the [n] value that returns",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%e[Repeatable Section Unique ID] - Answers in a Repeatable Section"
    }
  },
  {
    "content": "the first row in the top-level Repeatable Section. [%a[SiteLocation]: %e[PartsList]] is an [inner_drel] expression that includes two DREL references. The %a reference returns an answer from the top-level Repeatable Section (Basement). The %e reference returns all the contents of the nested Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%e[Repeatable Section Unique ID] - Answers in a Repeatable Section"
    }
  },
  {
    "content": "%q[Unique ID] - Question text\n\nThe question text reference returns questions as a user sees them on the mobile app. Property: [Unique ID] Replace with the Unique ID of the question you want to reference. Info: The topic Overview Unique IDs describes how to find the Unique ID of a question. Usage examples: %q[EquipmentCondition] returns Select the condition of the equipment. %q[NumberFireExtinguishers] returns How many fire extinguishers are in the building?",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "%q[Unique ID] - Question text"
    }
  },
  {
    "content": "Answers with multiple properties\n\nSome question answers have multiple properties. The %a[Unique ID] expression returns the answer a user submits by default. You can add another property to change what the expression returns using the syntax %a[Unique ID][SecondProperty].",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Answers with multiple properties"
    }
  },
  {
    "content": "Geo location\n\nGeo location answers return an address by default. You can add a second property to return different information such as coordinates. Default property: [address] Returns the street address, city, state or province, zip or postal code. Other properties: [success]: returns true if the system acquires the location successfully, or false if the system is unsuccessful. [geoSource]: returns how the system acquired the location. Systems can acquire a location using GPS, for example. [timestamp]: returns the date and time when the system acquired the location. The timestamp uses the GMT time zone. [coordinates]: returns the latitude, longitude, and altitude of the location. Alternatively use [coordinates.latitude], [coordinates.longitude], or [coordinates.altitude]. [accuracy]: returns the accuracy level of the coordinates in meters. [errorMessage]: returns the reason for an acquisition failure. If the acquisition is successful, the system does not return an error message.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Geo location"
    }
  },
  {
    "content": "[addressDetails][thirdProperty][fourthProperty]: Use this property when you want to retrieve specific information about the address the system collected. When you use this property, you need to include a third property with the following possible values: [street_number]: returns the street number. [route]: returns the street name. [locality]: returns the city name. [postal_code]: returns the zip or postal code. [administrative_area_level_1]: returns the state or province. [administrative_area_level_2]: returns the county. [country]: returns the country. The fourth property is optional. You can include the following values: [longName]: returns the full value. This is the default, so you don’t need to include it. [shortName]: returns an abbreviation of the value. This property only has an effect on the [route], [administrative_area_level_1], and [country] second properties. Usage examples: Coordinates %a[SiteLocation][coordinates] returns Coordinates -23.76312, 80.44416, 25.55454.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Geo location"
    }
  },
  {
    "content": "Location acquired via %a[CompanyAddress][geoSource] returns Location acquired via GPS. Delivery address: %a[CustomerAddress] returns Delivery address: 333 Tulip Lane, Kingston, ON, J3K 1A1, Canada. %a[Location][addressDetails][country][shortName] returns CA",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Geo location"
    }
  },
  {
    "content": "Date and time\n\nDate and time answers use default date and time formats. You can add a second property to change how the system returns date and time. Default properties: For dates, [yyyy-MM-dd]. For time, [HH mm ss] Other properties: You can customize the way the system returns dates and times by using the symbols specified in the %d - Date of the form submission and %t - Time of the form submission sections. Usage examples: Parcel delivered on %a[DeliveryDate][MMMM d, yyyy] at %a[DeliveryTime][hh:mm a] returns Parcel delivered on April 16, 2019 at 09:11 AM. Vehicle purchased in %a[PurchaseDate][yyyy] returns Vehicle purchased in 2018.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Date and time"
    }
  },
  {
    "content": "Attachment\n\nAttachment answers return information about images or documents that users submitted. Default property: [bytes] Attachment answers return the file encoded in Base64 by default. Other properties: [filename]: returns the name of the file. [contentType]: returns the file type. Usage examples: Technician uploaded the file %a[Attachment][filename] returns Technician uploaded the file Inspection_223233.pdf.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Attachment"
    }
  },
  {
    "content": "Barcode\n\nBarcode answers return numeric or alphanumeric strings that users scanned and submitted. Default property: [barcodeValue] Barcode answers return the value of the barcode by default. Other properties: [barcodeType]: returns the type of barcode the user scanned. Barcodes might be UPCs, QR Codes, or other commonly used barcodes. Usage examples: Tracking number %a[TrackingBarcode] returns Tracking number 1234567890. For use in a Dispatch Data Destination, you must specify both the type and value: %a[TrackingBarcode][barcodeType]|%a[TrackingBarcode][barcodeValue] returns UpcE|123456. In the destination form, this gets converted into type and value. Note:Do not add static text at the beginning of the expression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Barcode"
    }
  },
  {
    "content": "Special characters and line breaks\n\nYou can use DREL to escape special characters or line breaks in submitted form data. This can help with third-party system integrations. The following table describes the DREL syntax used for different formats. Format DREL expression Example JSON %a[CustomerFeedback][#escapeJson] Input Excellent service. Thanks for the speed and attention to detail. Result Excellent service.\\nThanks for the speed and attention to detail. XML %a[CustomerName][#escapeXml] Input Gatwell & Bowman Result Gatwell &amp; Bowman HTML %q[InspectLabel][#escapeHtml] Input Locate the section \"Equipment Information\" on the label and take a picture. Result Locate the section &quot;Equipment Information&quot; on the label and take a picture. CSV %g[address][#escapeCsv] Input 95 Walnut Street, Ottawa, ON K1A 2B3, Canada Result \"95 Walnut Street, Ottawa, ON K1A 2B3, Canada\" URL %u[name][#escapeUrl] Input Harold Petrov Result Harold%20Petrov Tip:You can URL encode data from DREL",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Special characters and line breaks"
    }
  },
  {
    "content": "expressions that you want to use as part of a URL. For example, the endpoint for a Salesforce Apex REST The Salesforce Apex REST is a type of Salesforce Data Destination that enables TrueContext to interact with Salesforce by means of an Apex REST API endpoint. If using an Apex REST API endpoint, developers can write APEX code to send custom messages that pull specific data from submitted forms. Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., or the URL Suffix in an HTTP Data Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Special characters and line breaks"
    }
  },
  {
    "content": "Related Topics\n\nIntroduction to DREL DREL Quick Reference Test DREL Expressions Escape Special Characters and Line Breaks for Template-driven Text Documents",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DREL/DRELReference.htm",
      "title": "DREL Complete Reference List",
      "section": "Related Topics"
    }
  },
  {
    "content": "About\n\nForms with repeatable sections will have multiple answers to the same question. DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. has additional functions to allow referencing answers in Repeatable Sections. The Data Reference Expression Language can be used to build a string using properties from the Data Record, including answer data. DREL is most commonly used for: Data Record Naming (controls the naming of Inbox, Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. and Outbox items on mobile devices) Data record Document Filename Expressions (controls the naming of files routed by a data destination) Custom filter rules in Data Destination Filtering (filter rules determine if a data destination will execute or not) DREL is also used for functions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "About"
    }
  },
  {
    "content": "specific to some data destinations, like mapping data and metadata.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "About"
    }
  },
  {
    "content": "Reference one question in a Repeatable Section\n\nReference: %a[UniqueID][n] This reference is used to insert answers with Unique IDs matching the text in [ ]. These labels are found in the Pages & Questions tab in the Web Portal: [n] will return the numbered answer where the row sequence starts at 0, i.e., %a[UniqueID][1] will return the second answer, and %a[UniqueID][0] will return the first. Example: %a[Make] - this will display all answers to this question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "Reference one question in a Repeatable Section"
    }
  },
  {
    "content": "Reference all questions in a Repeatable Section\n\nReference: %e[Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. ID] This reference is used to insert all data or answered questions from the section matching the text in [ ]. Section labels can be found on the Pages & Questions tab in the Web Portal: Example: %e[TireInspection] - this will display all entered data or answered questions within this section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "Reference all questions in a Repeatable Section"
    }
  },
  {
    "content": "Reference specific answers in a Repeatable Section\n\nReference: [n] Each answer to a repeated question or section is given an index number. You can use this reference to pull a particular answer out of the repeated section. Note: Reference numbers start at 0, so the first answer in a repeated section would be called using [0]. Example: %e[Equipment][0][%a[Make]: %a[Model]] This will pull out the first answer to Make and Model within the Equipment section. Here is an example result using this DREL string: Equipment Make 2: 2C",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "Reference specific answers in a Repeatable Section"
    }
  },
  {
    "content": "Reference Nested Repeatable Sections\n\nSometimes forms will have a repeatable section nested within another repeatable section. This requires a particular syntax to pull answers to questions. %e[Parent Repeatable Section ID][Child Repeatable Section ID]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "Reference Nested Repeatable Sections"
    }
  },
  {
    "content": "Reference a subset of questions in a Repeatable Section\n\nUsing %a[UniqueID] will give you all the answers to that question, and %e[Section ID] will give you all the answers to all questions within that section. While this can be useful, it is more common to need to limit your answers further. You can do this by making a string of references. You can also add delimiters between answers, such as punctuation or other symbols. Example: %e[Labor][%a[Technician Name]: %a[Tech Sub-total]][, ] This will return all the answers to the Technician Name and Tech Sub-total questions that are contained within the Labor section. Each linked answer will be separated by a comma. Here is an example using this DREL string:Scott Stevenson: $111.48 USD, Christine Banks: $18.04 USD, Mark Miller: $50.40 USD, Peter King: $45.38 USD",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "Reference a subset of questions in a Repeatable Section"
    }
  },
  {
    "content": "Reference a Question's Text\n\nReference: %q[Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.] This reference is used to insert the text of a question with a Unique ID that matches the text in [ ]. Learn more about Unique IDs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217831408.html",
      "title": "DREL for Repeatable Sections",
      "section": "Reference a Question's Text"
    }
  },
  {
    "content": "How geolocations work\n\nWhen a user has location services enabled on their device, TrueContext can collect the device location when the user: Submits the form Takes a photo Opens a page that includes a Geo Location question Selects a geolocation to answer a question The system displays the street address for each geolocation. The following example shows how the system displays each location in the Web Portal with: The detailed fields of the address. The coordinates. A timestamp that shows when the system captured the location. An option to open the location in Google Maps.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "How geolocations work"
    }
  },
  {
    "content": "Decide how you want to collect geolocations\n\nThe way that you set up your form to collect geolocations depends on the data that you need for compliance or record-keeping. The following table describes how to set up your form based on your requirements. To collect a geolocation... When the user... Set up your form to... At the form level Submits the form Collect the device geolocation. This setting is enabled by default. At the page level Opens a page Collect a location using a Geo Location question with a Geo Stamp data type. Selected by the mobile user Selects a custom location Prompt the user to select a location using a Geo Location question with a Geo Location data type. Stamped on a photo Captures the photo Stamp a Geo Location on your Image question. Stamped on attached, captured, and sketched images Submits the form Stamp a Geo Stamp on your Image or Sketchpad question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Decide how you want to collect geolocations"
    }
  },
  {
    "content": "Collect the device geolocation at the form level\n\nBy default, all forms collect the device geolocation when users submit the form. Consider the following: The system collects the device location only if the user has location settings enabled on their device. The app does not prompt users to enable location settings. If the user’s device is offline, the system still collects geolocation data. To verify that your form collects the geolocation, go to Forms & Integrations > List Forms > Form Name > Form Properties Form Properties is a tab that an admin can access on a form's overview page in the Web Portal. The form properties include various settings and configuration, including Mobile App behavior and how the user interacts with the form. > Client Behavior. To change the Collect geo location setting, go to EDIT FORM > SETTINGS > Advanced Properties > Advanced Options. Result: When users submit the form, the system displays the geolocation address in the Web Portal and Documents. Web",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Collect the device geolocation at the form level"
    }
  },
  {
    "content": "Portal The Location section in the Form Submission details page displays the street address and coordinates, as shown in the following image. Documents Documents include the geolocation as a street address. The following example shows how PDF and Word Documents show the geolocation. Structured data Documents also include geolocation data resolved as a street address. The individual components of the address details are enumerated in these documents. These components can be useful when an integrator wants to extract specific details, such as the postal code or the country. The following example shows the geolocation information included in a JSON Document:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Collect the device geolocation at the form level"
    }
  },
  {
    "content": "Collect geolocations with a Geo Location question\n\nThe Geo Location question type collects a location as the answer to a question. When you include Geo Location questions, the app prompts the user to enable location services. You can choose from two Data Types for these questions: Data Type How it works Can users edit the location? Usage example Geo Stamp Collects the geolocation when the user opens the page that includes the question. No Prove that a technician completed work at the correct location. Geo Location Resolves to the user’s location by default. Users can select a different location using an interactive map. Yes Technicians can select a site location even when they’re away from the site. To add Geo Location questions to your form: Open your form in edit mode. Select ADD A QUESTION > ALL CONTROLS > Geo Location. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Collect geolocations with a Geo Location question"
    }
  },
  {
    "content": "QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. Select the Data Type you want to use depending on your business goal. On the Properties tab, select a Coordinate Format and Default Map View. These settings control how the question displays location data on the TrueContext Mobile App. Tip:Setting a coordinate format only affects how coordinates are displayed. Coordinates are always recorded as decimal degrees (DD) in submitted data. Save and deploy your form when you finish editing it. Result: When users submit the form, the system displays the geolocation answers in the Web Portal and Documents. The following example shows geolocation answers in the Web Portal. Info:The topic Question Type: Geo Location describes how to configure Geo Location questions in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Collect geolocations with a Geo Location question"
    }
  },
  {
    "content": "Stamp geolocations on images\n\nYou can configure Image and Sketch Pad questions to stamp geolocation data on submitted images. You can stamp two different types of geolocations: Stamp type Supported for Collected when the user Displayed as Requirements Image properties—Geo Location Photos captured with the device camera. Captures the photo. Coordinates Your device camera must collect EXIF data. System properties—Geo Stamp All captured or attached photos and sketched images. Submits the form. Street address Your form must collect the device geolocation. To stamp data on images: Create or edit an Image or Sketch Pad question. Go to the PROPERTIES tab, and then select the option to Stamp Data on Images. Result: When users submit the form, the system stamps data on your images. You can find stamped images in the Web Portal, in Documents, or in third-party systems where you send form attachments. The following example shows a stamped image: Info:The topic Question Type: Image and Sketch Pad",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Stamp geolocations on images"
    }
  },
  {
    "content": "describes how to configure Image and Sketch Pad questions in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Stamp geolocations on images"
    }
  },
  {
    "content": "Reference geolocations using DREL\n\nYou can use DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions to reference geolocation data. Geolocation DREL expressions display the location street address by default. Use DREL to reference geolocation data in: The name of dispatched and submitted forms in the Mobile App and in the Web Portal. The name of folders and document files in Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Variable content in emails for customers. Filtering rules for data destinations. Mapped data as part of a field-based Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Reference geolocations using DREL"
    }
  },
  {
    "content": "automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Use... To reference the geolocation data collected... %g When users submit the form. %a[UniqueID] As the answer to a Geo Location question. Info:The topic DREL Complete Reference List includes a full list of references and properties you can use.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/Geolocation.htm",
      "title": "Geolocation Data",
      "section": "Reference geolocations using DREL"
    }
  },
  {
    "content": "Key Concepts\n\nMobile Search is a feature in the TrueContext Mobile App that enables you to search for submitted forms. You can then access documents attached to submissions, edit previous submissions (editing-enabled forms only), or claim incomplete TrueContext Teamwork-enabled forms. You can view up to ten of your most recent searches on the Recent Search page, and every search can generate up to 100 results. What is the Mobile Search?How the Mobile Search WorksExamples of a Mobile Search",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/LandingPages/MobileSearchLandingPageH1.htm",
      "title": "Get Started with Mobile Search",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nA team Admin must enable the Mobile Search feature for their team before mobile users can search for submitted forms. The Admin can enable Mobile Search by navigating to Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Mobile Device > Device Configuration. Additionally, Admins or users with “Can Create” permissions must enable the search function at the form level: Workflow Settings > Search Options. At the form level, you can also control whether users can edit submissions and claim incomplete TrueContext Teamwork-enabled forms. Enable the Mobile Search Feature on your FormEnable the Mobile Search Feature for your Team",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/LandingPages/MobileSearchLandingPageH1.htm",
      "title": "Get Started with Mobile Search",
      "section": "Configuration"
    }
  },
  {
    "content": "Technical Details\n\nOnce an Admin enables Mobile Search for their team, online users can reconcile their app to access the feature on the app homepage. You can search for form submissions by entering the form name in the search bar. You can also apply search filters through the Advanced Search to refine your search results. These filters can have search results show forms of a specific submission state (complete or incomplete) and a specific date period or range. Use the Mobile Search Feature on your Device",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/LandingPages/MobileSearchLandingPageH1.htm",
      "title": "Get Started with Mobile Search",
      "section": "Technical Details"
    }
  },
  {
    "content": "Related topics\n\nHow the Mobile Search Works Examples of a Mobile Search Enable the Mobile Search Feature on your Form Use the Mobile Search Feature on your Device",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/IntroductionToMobileSearch.htm",
      "title": "What is the Mobile Search?",
      "section": "Related topics"
    }
  },
  {
    "content": "Search for submitted forms by form submission name\n\nInfo:The term submitted forms includes both completed forms and TrueContext Teamwork-enabled incomplete forms. Mobile users can use the search box to enter a form submission name. The following example shows the search results of all form submissions with the customer “KT Technologies” in their name. Info:In the example, the form designer customized the name of form submissions to include the name of the customer. When you customize the name of each form submission, consider what your users might search on.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/HowMobileSearchWorks.htm",
      "title": "How the Mobile Search Works",
      "section": "Search for submitted forms by form submission name"
    }
  },
  {
    "content": "Use the Advanced Search\n\nYou can use the Advanced Search to search by state and by date. The following example shows the different options you can select in the Advanced Search.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/HowMobileSearchWorks.htm",
      "title": "How the Mobile Search Works",
      "section": "Use the Advanced Search"
    }
  },
  {
    "content": "Filter by state\n\nIf your team is on the Enterprise tier, you can filter search results by the following states: Any state—all forms submitted as complete and incomplete TrueContext Teamwork-enabled forms. Complete—all forms submitted as complete. Incomplete (All)—all TrueContext Teamwork-enabled forms submitted as incomplete. Incomplete (To Claim)—TrueContext Teamwork-enabled forms submitted as incomplete that no other users have claimed or have been assigned. Note:Teams on the Advanced tier don’t have access to the TrueContext Teamwork feature. For that reason, these teams can’t filter by Incomplete (All) or Incomplete (To Claim).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/HowMobileSearchWorks.htm",
      "title": "How the Mobile Search Works",
      "section": "Filter by state"
    }
  },
  {
    "content": "Filter by date\n\nYou can filter your search results by the date users last submitted the form. The system updates the form submission date when a user submits the completed form edits the completed form, or submits the form as incomplete (TrueContext Teamwork only). To filter by date, you can select one of the following options: Any Date—search for all submitted forms. Note:The Any Date option shows all submitted forms from the past 365 days. Date Period—select a pre-set date period (such as Yesterday, This Week, or Last 30 Days). Date Range—specify a custom date range.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/HowMobileSearchWorks.htm",
      "title": "How the Mobile Search Works",
      "section": "Filter by date"
    }
  },
  {
    "content": "Recent Search\n\nWhen you use the Mobile Search by either entering search terms or searching with filters, the mobile app saves your search parameters. The app stores up to ten of your recent searches, including those that showed no results. You can select a Recent Search to repeat the search, and you can edit it to perform a similar search. When you edit a recent search, the system adds the edited search parameters to the Recent Search list as a new item. The following example shows a mobile user’s Recent Search list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/HowMobileSearchWorks.htm",
      "title": "How the Mobile Search Works",
      "section": "Recent Search"
    }
  },
  {
    "content": "Related topics\n\nWhat is the Mobile Search? Examples of a Mobile Search Enable the Mobile Search Feature on your Form Use the Mobile Search Feature on your Device",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/HowMobileSearchWorks.htm",
      "title": "How the Mobile Search Works",
      "section": "Related topics"
    }
  },
  {
    "content": "Search for incomplete TrueContext Teamwork-enabled forms submitted in the past week (Enterprise tier only)\n\nAs part of a workflow, junior workers sometimes submit forms as incomplete when they require senior workers to complete them. A company asks their senior workers to check daily for recently submitted incomplete forms that they can claim. Senior workers can use the Mobile Search to filter for Incomplete (To Claim) forms that junior workers submitted in the past week, as shown in the following examples.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ExamplesMobileSearch.htm",
      "title": "Examples of a Mobile Search",
      "section": "Search for incomplete TrueContext Teamwork-enabled forms submitted in the past week (Enterprise tier only)"
    }
  },
  {
    "content": "Search for the latest completed inspection for a specific customer\n\nInspectors must often review the work that other workers completed at a site. For example, a security compliance company makes semi-annual inspections for different customers. The designer of the inspection form configured the form submission name to include the name of the customer. When a user performs a semi-annual inspection, they must search for the most recently completed inspection. To do that, they can use the Mobile Search. The following examples show how a user searches for complete submitted forms from the past six months for their customer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ExamplesMobileSearch.htm",
      "title": "Examples of a Mobile Search",
      "section": "Search for the latest completed inspection for a specific customer"
    }
  },
  {
    "content": "Search for all recent work completed for a customer\n\nWhen workers receive an emergency call for service, they must be aware of all the recently completed and ongoing work for that customer. Form designers assist by adding the name of the customer as part of the form submission name. Workers can use the Mobile Search feature to search by customer name. They can apply filters to search for forms in all states from the past 30 days, as shown in the following examples.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ExamplesMobileSearch.htm",
      "title": "Examples of a Mobile Search",
      "section": "Search for all recent work completed for a customer"
    }
  },
  {
    "content": "Related topics\n\nWhat is the Mobile Search? How the Mobile Search Works Enable the Mobile Search Feature on your Form Use the Mobile Search Feature on your Device",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ExamplesMobileSearch.htm",
      "title": "Examples of a Mobile Search",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user. Your TrueContext team must be on the Advanced or Enterprise tier. Check your users’ permissions: Admin users can access all submitted forms from the Mobile Search. Users and Mobile-only users with Can Submit FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions can access all submitted forms in the FormSpace. Info:You must also enable the Mobile Search on each form that you want to make searchable. Users can only access forms submitted after you enable the Mobile Search on your form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchTeam.htm",
      "title": "Enable the Mobile Search Feature for your Team",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to enable Mobile Search for your team\n\nSelect your username, and then select TEAM SETTINGS. Result: The team settings page opens. Select the Mobile Device tab. In the Device Configuration section, select Actions, and then select Update Custom Configuration. Result: The Edit Device Configuration page opens. Select the Display tab ‘Search’? checkbox. Do you want to change the order in which the tabs display on the mobile device? If yes, In the Tab Order section, drag the tabs to change the order. If no, go to step 6. Select Update. Result: The mobile users on your team can now access the Mobile Search from the Mobile App as shown in the following example. Note:Mobile users must reconcile the app to access the Mobile Search feature.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchTeam.htm",
      "title": "Enable the Mobile Search Feature for your Team",
      "section": "Steps to enable Mobile Search for your team"
    }
  },
  {
    "content": "Related topics\n\nCustomize the Mobile App Tabs What is the Mobile Search? How the Mobile Search Works Enable the Mobile Search Feature on your Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchTeam.htm",
      "title": "Enable the Mobile Search Feature for your Team",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user or a user with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Your TrueContext team must be on the Advanced or Enterprise tier. Check your users’ permissions: Admin users can access all submitted forms from the Mobile Search. Users and Mobile-only users with Can Submit FormSpace permissions can access all submitted forms in the FormSpace. Info:You must also enable the Mobile Search for your team. Users can’t access the Mobile Search feature if you don’t enable it at a team level.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchForm.htm",
      "title": "Enable the Mobile Search Feature on your Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to enable Mobile Search on your form\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. Select EDIT FORM. Result: The form opens in edit mode. Select SETTINGS, and then Workflow Settings. In the Search Options section, select Enable Search. Result: Users can access submitted forms from the Mobile Search. Do you want users to edit their team members’ completed forms from the Mobile Search? If yes, in the Editing section, select the option for users to edit submitted forms from the Search box, as shown in the following example. If no, go to step 6. Info:The topic Form Submission Corrections describes the Editing feature in more detail. Do you want users to claim incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchForm.htm",
      "title": "Enable the Mobile Search Feature on your Form",
      "section": "Steps to enable Mobile Search on your form"
    }
  },
  {
    "content": "shifts.-enabled forms (Enterprise tier only) from the Mobile Search? If yes, in the TrueContext Teamwork section, select the option to allow users to release partially completed forms. If no, go to step 7. Info:The topic Steps to Enable TrueContext Teamwork on a Form describes the TrueContext Teamwork feature in more detail. Do you want users to view the answers included in submitted forms? If yes, go to SETTINGS > Documents. Check that the form has a document available for download as shown in the following example. If no, go to step 8. Online mobile users can search for submitted forms by the form submission name. Do you want to customize the form submission name that shows on the Mobile App? If yes, go to SETTINGS > Advanced Properties > Data Record Naming A Data Record Naming expression provides a way to create a unique name for dispatched, saved, and submitted forms. The naming expression also applies to forms that a user saves as draft on their device. A customized name helps you",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchForm.htm",
      "title": "Enable the Mobile Search Feature on your Form",
      "section": "Steps to enable Mobile Search on your form"
    }
  },
  {
    "content": "and your mobile users quickly search for and identify forms.. You can use DREL expressions to customize the name. The following example shows how to name submitted forms with the name of the form and the answer to a question. If no, go to step 9. Save and Deploy the form when you’re ready to make it available to your mobile device users. Note:Mobile users can only search for forms that a user submitted after you enabled the Mobile Search and deployed the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchForm.htm",
      "title": "Enable the Mobile Search Feature on your Form",
      "section": "Steps to enable Mobile Search on your form"
    }
  },
  {
    "content": "Related topics\n\nWhat is the Mobile Search? Enable the Mobile Search Feature for your Team Set Up Form Properties Form Submission Corrections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/ConfigureMobileSearchForm.htm",
      "title": "Enable the Mobile Search Feature on your Form",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext team must be on the Advanced or Enterprise tier. You must have the Mobile App installed on your device. You must have one of the following app versions: iOS—13.1 or later. Android—12.7 or later. Windows—12.6 or later. Check your permissions: If you’re an Admin user, you can access all submitted forms from the Mobile Search. If you’re a User or a Mobile-only user with Can Submit FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions, you can access all submitted forms in the FormSpace. Your team must have the Search feature enabled for mobile devices. Your team must have submitted at least one form that has the Mobile Search feature enabled. To edit a complete form, the form you want to edit must have editing enabled. To claim an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/UseMobileSearchDevice.htm",
      "title": "Use the Mobile Search Feature on your Device",
      "section": "Prerequisites"
    }
  },
  {
    "content": "incomplete form, the form you want to claim must have TrueContext Teamwork enabled (Enterprise tier only). Your device must be online to search for submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/UseMobileSearchDevice.htm",
      "title": "Use the Mobile Search Feature on your Device",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Search for submitted forms\n\nOpen the TrueContext Mobile App, and then select Search. Result: The Search page opens. Do you want to search for a form submission by name? If no, you can search by state or date. Go to step 3. If yes, the way you search for a form submission depends on your device. iOS and Windows: Select the search box, and then enter all or part of the name of the submitted form. Android: Select the search icon, and then enter all or part of the name of the submitted form in the search box. Result: The device displays the submitted forms that match the search term you entered. Note:The search term you enter must exactly match all or part of the form submission name. For example, if you enter the term “building inspection”, the system searches for the entire term including the space. The system doesn’t search for each word separately. The search is not case sensitive. The following example shows the search results for the term Cherry tree lane farm. Tip:Your supervisors",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/UseMobileSearchDevice.htm",
      "title": "Use the Mobile Search Feature on your Device",
      "section": "Search for submitted forms"
    }
  },
  {
    "content": "and team leads can customize the name of each form submission. Familiarize yourself with your company’s standards. Open the Advanced search to filter your search results. The way you open the Advanced search depends on your device. iOS: Select Advanced. Windows: Select Advanced Search. Android: Select the search icon. Result: The Advanced search opens with options to search by Submission State and the date a user submitted the form. Info:The topic How the Mobile Search Works describes how the Advanced Search works in more detail. Select the Submission State and Date you want to filter your search results on, as shown in the following example. Select Search to apply your filters. Result: The app displays a list of submitted forms that match the filters you selected. Do you want to claim an incomplete TrueContext Teamwork-enabled form? (Enterprise tier only) If yes, select Claim as shown in the following example. If no, go to step 7. Select a submitted form to access more options. The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/UseMobileSearchDevice.htm",
      "title": "Use the Mobile Search Feature on your Device",
      "section": "Search for submitted forms"
    }
  },
  {
    "content": "following example shows a submitted form that has a document available for download and has editing enabled. Do you want to view the answers submitted with the form? If yes, select View Documents, and then download a document to view the submitted answers. If no, go to step 9. Do you want to edit a completed form that has editing enabled? If yes, select Edit Form. You can change any answers in the form and submit it when you finish. If no, go to step 10. You can go back to the home page when you finish with your search. Tip:The Mobile Search displays up to 100 search results. If you can’t find the submitted form you’re looking for, apply more filters with the Advanced search to refine the results.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/UseMobileSearchDevice.htm",
      "title": "Use the Mobile Search Feature on your Device",
      "section": "Search for submitted forms"
    }
  },
  {
    "content": "Related topics\n\nWhat is the Mobile Search? How the Mobile Search Works Enable the Mobile Search Feature for your Team Enable the Mobile Search Feature on your Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MobileSearch/UseMobileSearchDevice.htm",
      "title": "Use the Mobile Search Feature on your Device",
      "section": "Related topics"
    }
  },
  {
    "content": "Feature Overview\n\nThe Multi-Language feature enables a set of capabilities that applies to more than just the technician experience. For example, you can generate documents in other languages, even if the technician completed the form in their preferred language. This feature supports translated data sets that come from back-end systems, such as CRMs and ERPs, as well as Multi-Language Documents. This feature builds on our standard language support to offer additional options and ease of deployment.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Feature Overview"
    }
  },
  {
    "content": "Key Concepts\n\nA Multi-Language Form is a form that’s set up with different translations. Field users, dispatches, and App‑to‑App calls can select the language used to display the form content. A Multi-Language Document is an output document that's linked to a Multi-Language Form. You can generate this document in any language configured in the form, regardless of whether the language is set as Active for form completion. Use Multi-Language Documents to produce files for all your field users, systems, or customers in their preferred languages—for example, generate English and Spanish versions of the same submission for different audiences. Multi-Language Documents don’t require much setup. Even if you don’t upload or activate a language, the system has translations for most of the document content. You only need to provide translations if you edited document details, like headers or footers. Info:The topic Multi-Language Document Setup Options describes when documents require",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Key Concepts"
    }
  },
  {
    "content": "translations. You can set up translations for: Content that a Form Designer builds into a form, such as page and section headings and question text. Values in a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., including both display values and values sent to the server. Details of a standard PDF, Microsoft Word, or HTML output document. Form contents and submitted data are translated based on the form translation files. Info:The Multi-Language feature does not include app framework content (navigation, action buttons, and error messages, for example). This content is translated based on the user’s device locale, as described in the topic Language Settings and Translations. The languages available to the user",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Key Concepts"
    }
  },
  {
    "content": "depend on the form’s Languages settings and the translation files that the Form Designer uploads. The topic Set Up a Multi-Language Form describes these settings in detail. Language selection works differently based on whether: A user or App‑to‑App call opens the form. The form opens from the Inbox, Drafts, Sent, or Search lists. Related topics: Language Selection on the Mobile App Introduction to Multi-Language Forms Introduction to Multi-Language Documents How Multi-Language Translation Files Work Data Source Translations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Set up a Multi-Language Form\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. You can choose a new or existing form; you don’t have to build a new one. Go to SETTINGS > Form Information. In the Languages section, select Enable multiple languages. Result: The section expands to display additional setup options. The downloaded translation file has the following structure. Info:The topic How Multi-Language Translation Files Work: Translation file details provides guidelines and tips for working with the translation files. Set up a Conditional Logic rule (optional), based on the selected language. For example, you might want to display different Resource Images based on the field user’s selected language. Save your changes. Result: The system creates a new form version. Note: Users must reconcile to get the new form version. Related topics: Set Up a Multi-Language Form Translated Multi-Language Content Across the Platform",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Set up a Multi-Language Form"
    }
  },
  {
    "content": "Set up a Multi-Language Data Source\n\nWe store Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as tables (rows and columns) in the TrueContext system. To set up translated values in your Data Source, you must have a column that contains a language code for each row. You can translate both the display and data (server) values in your Data Source. You must also set up a lookup question to use Data Source translations. The following illustration shows an example of how to set up your Data Source. In this example, a field user chose to open the form in Spanish. Next, set up a lookup question to use the Data Source for options. Related topics: Data Source Translations Create and Manage Data Sources",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Set up a Multi-Language Data Source"
    }
  },
  {
    "content": "Set up translations for a Multi-Language Document\n\nInfo:The topic Multi-Language Document Setup Options describes when documents require translations. Navigate to the PDF, Microsoft Word, or HTML Document you want to set up. You can choose a new or existing Document. Select a Source Language. This is the language you use to enter the Document details. Then, select Create or Update. Select MANAGE LANGUAGES. In the Additional Languages section, select a language from the list. Select Download to get an Excel file that contains the translation strings for all translatable Document content. Result: The system generates a translation file (.xlsx) that contains all translatable text in the Document. The translation file has the structure shown in the following illustration. Info:The topic How Multi-Language Translation Files Work: Translation file details provides guidelines and tips for working with the translation files. Add translations for all of the strings. Once the translation file is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Set up translations for a Multi-Language Document"
    }
  },
  {
    "content": "complete, UPLOAD the file. Note:To upload the translation files successfully, you must keep all five column headings exactly the same as in the downloaded file. To make translations available for users filling out the form, set the language to Active. All configured languages—including inactive ones—are available when generating output documents. Select ADD LANGUAGE, and then repeat steps 4-7 for each additional language up to a maximum of 10. Select Update to save your changes. Info:Remember to add the Multi-Language Document to the Multi-Language Forms that you want to use it for. Related topics: Introduction to Multi-Language Documents Multi-Language Document Setup Options Add a Multi-Language Document to a Form Translated Multi-Language Content Across the Platform",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Set up translations for a Multi-Language Document"
    }
  },
  {
    "content": "Troubleshooting\n\nThe following table lists possible issues and how to resolve them. Issue Resolution Field users don’t see the language they want to choose. Upload the correct translation file and set the language to Active to make it available for form filling. Inactive languages remain available for output documents. Info:Follow the detailed steps in the topic Set Up a Multi-Language Form. The Mobile App doesn’t prompt users to select a language when the form opens. There are several reasons that field users might not be prompted to select a language: Once they open the form, select a language, and save the form to Drafts, field users can’t change the selected language. The field user might have already set a preferred language. If the form opens or sends by means of an App‑to‑App call that includes the _lang parameter, the field user can’t select a language. Info:The topic When the _lang parameter applies describes when the _lang parameter does and doesn’t take effect. The form was",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "dispatched with a language preselected. The form is an Incomplete TrueContext Teamwork-enabled form. In the Form Builder, the language you want to use isn’t listed. You can only use Supported Languages for the Multi-Language Feature. If you need to use a language that’s not listed, contact the Support team to request that language. A translation file won’t upload. In the Excel file, check that all five column headings are exactly the same as in the downloaded file. The file must not have macros enabled. Right-to-left languages don’t behave as expected. TrueContext does not officially support forms in right-to-left languages. If you build your form using a right-to-left language as the source language, test your forms thoroughly before you deploy them. The questions in the Web Portal are in a different language than the language selected on the device. The Multi-Language Forms feature applies only to the content of the form when it’s displayed in the Mobile App. The topic Translated",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Multi-Language Content Across the Platform explains how this works in more detail. Not all of the form content displays in the translated language. Make sure that you translate every string in the translation file. Missing translations display in the source language. The topic How Multi-Language Translation Files Work describes best practices for working with the translation files. If you want to provide translated Data Source values, you must set up the Data Source and related lookup questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Related topics\n\nIntroduction to Multi-Language Forms Set Up a Multi-Language Form How Multi-Language Translation Files Work Supported Languages for the Multi-Language Feature Language Selection on the Mobile App Translated Multi-Language Content Across the Platform App‑to‑App Action Details",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MultiLanguageFormsOverview.htm",
      "title": "Multi-Language Feature",
      "section": "Related topics"
    }
  },
  {
    "content": "Multi-Language Forms A Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content. is a form that’s set up with different translations. Field users, dispatches, and App‑to‑App calls can select the language used to display the form content. It’s simple to set up a Multi-Language Form and an associated output Document. Simply download Excel files that contain the strings to translate, add translations, upload the files, and activate the languages you want users to fill out the form in. You can generate a Multi-Language output document in any language configured in the form, regardless of whether the language is set as Active for form completion. The topics in this section explain how Multi-Language Forms work and how to set them up. Available as an add-on to the Advanced and Enterprise tiers:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MLForms.htm",
      "title": "Multi-Language Forms"
    }
  },
  {
    "content": "Essentials Advanced +Add-on Enterprise +Add-on",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MLForms.htm",
      "title": "Multi-Language Forms"
    }
  },
  {
    "content": "Definition of a Multi-Language Form\n\nA Multi-Language Form is a form that’s set up with different translations. Field users, dispatches, and App‑to‑App calls can select the language used to display the form content.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Definition of a Multi-Language Form"
    }
  },
  {
    "content": "What you can translate\n\nYou can set up translations for: Content that a Form Designer builds into a form. Page and section headings Question text Manually-defined display values in lists for options-based questions Options-based questions are questions that display a list of options for field users to choose from. These include Button Group, Card List, Dropdown, Multiselect, and Radio Button questions. Question help Custom validation messages Values in a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., including both display and data values. Details in a standard PDF, Microsoft Word, or HTML output document. You do this by setting up a Multi-Language Document. Resource Documents and Resource Images. Info:The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "What you can translate"
    }
  },
  {
    "content": "Multi-Language feature does not include app framework content (navigation, action buttons, and error messages, for example). This content is translated based on the user’s device locale, as described in the topic Language Settings and Translations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "What you can translate"
    }
  },
  {
    "content": "Example of a Multi-Language Form\n\nThis example describes how users interact with a Multi-Language Form that has Spanish and Japanese translations set up. When the field user opens the form for the first time, they select one of the languages that the Form Designer set up. They can keep the source language (content that the Form Designer built the form in) or select a translation. In this example, the source language is English. Tip:Because the user’s device locale is set to Spanish, the Mobile App framework is also translated. In this example, the text strings Cancelar, Selecciona un idioma, and Finalizar are based on the device locale. The form opens in the selected language. If the Form Designer added questions that use translated Resources, the resources also display in the selected language. If the Form Designer enabled the Summary page, the summary displays in the same language as the form. In the TrueContext Web Portal The TrueContext Web Portal is a web application used to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Example of a Multi-Language Form"
    }
  },
  {
    "content": "manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., form submission details include a mix of the source language and the actual answers. A Multi-Language Document linked to the form and set up with additional languages renders in the languages specified when attached to a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Tip:A document’s system-generated content, such as metadata, always renders in the form’s selected language. You don’t need to do any extra setup. Info:The languages available to the user depend on the form’s Languages settings and the translation files that the Form Designer uploads. The topic Set Up a Multi-Language Form describes these settings in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Example of a Multi-Language Form"
    }
  },
  {
    "content": "Benefits of Multi-Language Forms\n\nThis feature offers the following benefits: Build and maintain only one form that offers field users a choice of languages. Reduce the amount of work required when changing or editing a form that’s translated into multiple languages. Associate all related form submissions with one form instead of multiple forms. Increase standardization across different regions and languages.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Benefits of Multi-Language Forms"
    }
  },
  {
    "content": "Supported languages\n\nMulti-Language Forms support a wide variety of left‑to‑right languages. Info:The topic Supported Languages for the Multi-Language Feature contains a list of supported languages and language codes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Supported languages"
    }
  },
  {
    "content": "DREL property\n\nUse %r[language] in a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression to get the language code for the selected or dispatched form language. For example, you can filter a Data Destination so that it’s only triggered for a specific language. In this example, the Data Destination executes when the field user submits a form that they opened in Spanish. Note:Use one of the supported language codes in the Filter Expression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "DREL property"
    }
  },
  {
    "content": "Limitations\n\nConditional Logic Constants that you define in Conditional Logic rules are not translated. Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. You must provide the Data Source translations and a column that contains supported language codes. DREL expressions Static text in a DREL expression is translated, but referenced data is not. For example, if the DREL expression is: My Customer %r You can translate the text “My Customer” but not the value returned by %r. TrueContext Analytics Analytics pages do not display translated content. Form names Form names remain in the source language. Number of languages You can set up one source language and up to 10 additional languages. Right-to-left languages",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Limitations"
    }
  },
  {
    "content": "TrueContext does not officially support forms in right-to-left languages. If you build your form using a right-to-left language as the source language, test your forms thoroughly before you deploy them. Router expressions You can’t define different regex routing expressions per language—the regex strings do not appear in translation files. Server values and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. Answers from a submitted form are sent to the server and Data Destinations as is. These values are not translated.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/Introduction/IntroToMultiLangForms.htm",
      "title": "Introduction to Multi-Language Forms",
      "section": "Limitations"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext account must be on the Advanced or Enterprise tier and have the Multi-Language Forms Multi-Language add-on. You must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Tip:The Form Builder supplies a default Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. when you add a page, section, question, answer exception, or other element to the form. We recommend that you change these to IDs that will help you easily identify these elements in the translation",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "files. The following example shows how a translation file displays the unique IDs in the key_name column.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up a Multi-Language Form\n\nFrom the Forms & Integrations menu, create or edit a Mobile App form. To create a new form: Forms & Integrations > Create New Form > Build a Mobile Form Enter a name and description, and then save the form. To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you want to edit. Tip:You can choose a new or existing form; you don’t have to build a new one. Go to Settings > Form Information. In the Languages section, select Enable multiple languages. Result: The Languages section expands to display additional setup options. Select the language that the form is built in (the source language). The system uses this language to generate the strings for translation. Tip:The source language is also the fallback language for any missing translations. In the Additional Languages section, select a language from the list. Select Download to get an Excel file that contains the translation strings for all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Steps to set up a Multi-Language Form"
    }
  },
  {
    "content": "translatable form content. Result: The system generates a translation file (.xlsx) that contains all translatable text in the form. The translation file has the structure shown in the following illustration. Info:The topic How Multi-Language Translation Files Work: Translation file details provides guidelines and tips for working with the translation files. Add comments for your translator (optional) to provide more information about a translation string. For example, you could provide the translator with synonyms to make the meaning clear. Send the file for translation. Once the translation file is complete, Upload the file. To make the form available to your field users in the additional language, set the language to Active. Note:To upload the translation files successfully, you must keep all five column headings exactly the same as in the downloaded file. Repeat steps 5-8 for each additional language up to a maximum of 10, and then Save and Deploy the form. Result: The system",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Steps to set up a Multi-Language Form"
    }
  },
  {
    "content": "creates a new form version. Note: Users must reconcile to get the new form version.Test your output documents to make sure the results are what you expected. Info:You can set up a PDF, Microsoft Word, or HTML output document for translated content and link it to the form. The topic Steps to Set Up Translations for a Multi-Language Document describes this procedure in detail. You can select any configured language for output documents, even if it is not marked 'Active' for form completion.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Steps to set up a Multi-Language Form"
    }
  },
  {
    "content": "Options-based question translations\n\nAn options-based question is a question that displays a list of options as possible answers. The list can come from a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., or you can manually define the list. We use the term lookup to describe a question that gets a list of options from a Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Options-based question translations"
    }
  },
  {
    "content": "Manually-defined options\n\nWhen you set up an options-based question, you can specify different values for the Value submitted to server and the Text displayed on device. You can translate the display value (but not the server value). When a field user, dispatch, or App‑to‑App call selects a language, the form shows the translated display value. For any Documents that you link to the form, you can choose whether to show the display or server value. You can also use the DREL [display] property to reference the display value instead of the server value: %a[QuestionUniqueID][display] To show the display value in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table on the device: Add the question to the Summary Table. Set the Answer value to display to Display Value.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Manually-defined options"
    }
  },
  {
    "content": "Data Source options\n\nA Data Source provides a list of options for a lookup question. You can set up the lookup question to display translated values in the form. Info:We store Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as tables (rows and columns) in the TrueContext system. To set up translated values in your Data Source, you must have a column that contains a language code for each row. The topic Data Source Translations describes in detail how to set up translations in a Data Source. The following example describes how to set up a lookup question for translations. When the user, dispatch, or App‑to‑App call selects a language, the form displays the translated values from the Data Source. Tip:You can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Data Source options"
    }
  },
  {
    "content": "translate both the display and the data (server) values in your Data Source. The translated values are sent to the server when the user submits the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Data Source options"
    }
  },
  {
    "content": "Conditional logic rules that use selected language\n\nYou can set up a Conditional Logic rule that’s based on the selected language. The following example describes how to set up a condition that uses a selected language. Note:When you build the condition, you can only select languages that you set up in the form settings. In this example, the Form Designer has an HVAC diagram with labels in different languages. They want to show only the diagram that has labels in the selected language and hide the other translations from the user. They create other rules to do the same for the English and Spanish diagrams. Info:If you want to include other languages as “Or” conditions, you can select more than one language in the same condition. The topic Building Conditional Logic Rules describes in detail how to set up condition sets that use “And” and “Or”.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/SetUpMultiLangForm.htm",
      "title": "Set Up a Multi-Language Form",
      "section": "Conditional logic rules that use selected language"
    }
  },
  {
    "content": "Form Languages Tab A Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content. is a form that’s set up with different translations. Field users, dispatches, and App‑to‑App calls can select the language used to display the form content. This topic describes the Form Languages tab, which provides an at-a-glance summary of the languages added to the form. Available as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on The following example describes the information displayed on the Form Languages tab. Tip:If you want to download a translation file, select a language name. The link is a shortcut that you can use without having to edit the form.Did you already upload a translation file?If yes, the translation file includes existing translations.If no, the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/FormLanguagesTab.htm",
      "title": "Form Languages Tab"
    }
  },
  {
    "content": "translation file includes only the source language strings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/FormLanguagesTab.htm",
      "title": "Form Languages Tab"
    }
  },
  {
    "content": "Set up a Data Source with translations\n\nWe store Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as tables (rows and columns) in the TrueContext system. To set up translated values in your Data Source, you must have a column that contains a language code for each row. You can translate both the display and data (server) values in your Data Source. To use a Data Source that has translated values, you set up the Multi-Language Options in your lookup question. The following illustration shows an example of how to set up your Data Source. In this example, a field user chose to open the form in Spanish. Note:Follow these guidelines when you set up your Data Source:The language codes must match the supported Languages",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/DataSourceTranslations.htm",
      "title": "Data Source Translations",
      "section": "Set up a Data Source with translations"
    }
  },
  {
    "content": "for Multi-Language Forms.You can name the language column something other than “Language”. Just make sure that you select the correct column when you set up the lookup question.To make sure that the TrueContext Mobile App displays translated values:The language column must have entries for the selected language.Define a value in every row for the matching language column.You must set up a Multi-Language form and add languages that match the languages in the Data Source.Check the size of your Data Source, and follow the best practices for Data Source size.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/DataSourceTranslations.htm",
      "title": "Data Source Translations",
      "section": "Set up a Data Source with translations"
    }
  },
  {
    "content": "Set up a lookup question to use Data Source translations\n\nFrom the Forms & Integrations menu, create or edit a Mobile App form. To create a new form: Forms & Integrations > Create New Form > Build a Mobile Form Enter a name and description, and then save the form. To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you want to edit. You must set up the form as Multi-Language. Go to Settings > Form Information > Languages. Select Enable multiple languages and add translation files for each additional language. Navigate to the Dropdown, Multiselect, or Radio Button lookup question that you want to set up. You can set up a new question or edit an existing one. On the Options tab, switch the Multi-Language Options toggle on. Select the language column name that’s set up in your Data Source. Save the question, and then save and deploy the form. Result: When the user, dispatch, or App‑to‑App call selects a language, the form displays the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/DataSourceTranslations.htm",
      "title": "Data Source Translations",
      "section": "Set up a lookup question to use Data Source translations"
    }
  },
  {
    "content": "translated values from the Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SetUpMultiLangForm/DataSourceTranslations.htm",
      "title": "Data Source Translations",
      "section": "Set up a lookup question to use Data Source translations"
    }
  },
  {
    "content": "Preferred form language setting\n\nA Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content. prompts field users to select a language when they first open a form. They can also choose to set a preferred language. This option automatically opens new forms in the selected language if the form is set up for that language. Tip:As with all app settings, the preferred language only applies to this user on this particular device. To choose a preferred language: Open a Multi-Language Form. Select a language from the list. Select the option to Make this my preferred language, and then complete and submit the form. Result: You can find the preferred form language in the advanced settings. iOS and macOS Android Windows To switch off this setting: iOS and macOS—Go to Settings > Advanced Settings >",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "Preferred form language setting"
    }
  },
  {
    "content": "Preferred Form Language > Ask me on form open Android—Go to Settings > Advanced settings > Other settings > clear the Use preferred form language checkbox Windows—Go to Settings > Advanced settings > Other settings > Use preferred form language > Off Result: The previously selected language is saved in case you want to use it again. To select a different preferred language, repeat steps 1 through 3.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "Preferred form language setting"
    }
  },
  {
    "content": "Factors that affect language selection\n\nThe following table describes how language selection works when a field user opens a form. Tip:Users can set a preferred language when they open a form. New forms automatically open in the preferred language if it’s set up for the form. Form location Other conditions User can select a language? Reason Forms — Yes Users can select a language the first time the form opens. Inbox Dispatched without a preselected language Yes Users can select a language the first time the form opens. Dispatched with a preselected language, or Sent for editing, or Transferred, or Already opened and saved No The form opens in the dispatched or previously selected language. Tip:If you dispatch a form with a preselected language, choose one that all users who interact with that form can understand. Dispatched from a Dispatch Data Destination that has the Target Form Language set to User selects... Yes Users can select a language the first time the form opens. Dispatched",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "Factors that affect language selection"
    }
  },
  {
    "content": "from a Dispatch Data Destination that has the Target Form Language set to Same as source... No The dispatched form opens in the same language as the submitted form that triggered the dispatch. Note:If the target form doesn’t have the language set up, the Mobile App prompts the user to select a language when the form opens. Search Sent — No The form was already opened and sent. Drafts — No The form was already opened and saved.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "Factors that affect language selection"
    }
  },
  {
    "content": "The _lang parameter\n\nFor a Multi-Language Form, you can include the _lang parameter with the open and send actions to preselect a language. Note:The _lang parameter value must be a language code for one of the Supported Languages for the Multi-Language Feature. The following example shows an App‑to‑App call that includes a preselected language: truecontext://x-callback-url/open?name=asset%20list&_lang=fr Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Info:The topic App‑to‑App Action Details: _lang provides more information about how to set up an App‑to‑App call for a Multi-Language Form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "The _lang parameter"
    }
  },
  {
    "content": "When the _lang parameter applies\n\nThe _lang parameter applies when: The form has a translation file for the specified language. Prior to the App‑to‑App call, the form was never: Opened Saved Dispatched with a preselected language Sent for edit, or Transferred Tip:If more than one form matches the specified criteria, the user selects from a list of forms. The list only includes forms that have translations for the language specified by the _lang parameter.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "When the _lang parameter applies"
    }
  },
  {
    "content": "When the _lang parameter does not apply\n\nThe _lang parameter does not apply when: The matching form doesn’t have a translation file for the specified language. In this case, the Mobile App displays an error. Prior to the App‑to‑App call, the form was: Opened Saved Dispatched with a preselected language Sent for edit, or Transferred Info:The topic App‑to‑App Action Details: _lang provides more detail about when the _lang parameter does not apply and what happens in those cases.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/LangSelectionOnMobileApp.htm",
      "title": "Language Selection on the Mobile App",
      "section": "When the _lang parameter does not apply"
    }
  },
  {
    "content": "Multi-Language Documents A Multi-Language Document is an output document that's linked to a Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content.. You can generate this document in any language configured in the form, regardless of whether the language is set as Active for form completion. Use Multi-Language Documents to produce files for all your field users, systems, or customers in their preferred languages—for example, generate English and Spanish versions of the same submission for different audiences. The topics in this section describe how a Multi-Language Document works, when you need to add translations, and how to link a Multi-Language Document to a form or Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MLDocs.htm",
      "title": "Multi-Language Documents"
    }
  },
  {
    "content": "automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Available as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/MLDocs.htm",
      "title": "Multi-Language Documents"
    }
  },
  {
    "content": "Types of Multi-Language Documents\n\nThe following document types support multiple languages. Standard PDF, Word, and HTML Note:PDF, Word, and HTML documents that have a Custom layout do not support multiple languages. XML and JSON HTML output document within the Email Data Destination body",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/IntroMLDocs.htm",
      "title": "Introduction to Multi-Language Documents",
      "section": "Types of Multi-Language Documents"
    }
  },
  {
    "content": "Standard PDF, Microsoft Word, and HTML document translations\n\nStandard PDF, Microsoft Word, and HTML Multi-Language Documents include five different types of translatable content, as shown in the following example. The following table lists each content type and how to translate it. Content How to translate it Form content: Page and section headings Question text Manually-defined display values in lists for options-based questions Question help Custom validation messages When you set up a Multi-Language Form, you upload an Excel translation file to the form. The document gets the translated text from the form’s translation file. Answers from a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. You can set up a Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/IntroMLDocs.htm",
      "title": "Introduction to Multi-Language Documents",
      "section": "Standard PDF, Microsoft Word, and HTML document translations"
    }
  },
  {
    "content": "Source to include data in multiple languages. Info:The topic Data Source Translations includes more details about setting up a Data Source in multiple languages. Submitted data The document shows the answers exactly as the user entered them. Metadata labels and other system-generated content, such as page numbering The TrueContext system has translations for these values in all supported languages. These values render in the translated language. You don’t need to perform any extra setup. Details entered when setting up the Document: Output File Properties (Title, Subject, Keywords, Author) Document Header Document Title Additional Information Footer Table column headers set in the Table Layout Add an Additional Language. Download an Excel file that has the strings to translate, add translations, upload the file, and activate the language if you want users to fill out the form in that language. For output documents, both active and inactive languages remain available for selection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/IntroMLDocs.htm",
      "title": "Introduction to Multi-Language Documents",
      "section": "Standard PDF, Microsoft Word, and HTML document translations"
    }
  },
  {
    "content": "Tip:If you don’t have any content to translate, you don’t need to set up Additional Languages. You only need to set up translations if your headers, footers, properties, or other document details require translation. For example, if your document details only include DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms., you don’t need to set up translations. The system has translations for the rest of the document content, including metadata labels and other system-generated content.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/IntroMLDocs.htm",
      "title": "Introduction to Multi-Language Documents",
      "section": "Standard PDF, Microsoft Word, and HTML document translations"
    }
  },
  {
    "content": "XML and JSON document translations\n\nXML and JSON documents don’t require any setup to be translated. These documents have three different types of content, as described in the following table. Content Translation Form content: Page and section headings Question text Manually-defined display values in lists for options-based questions Question help Custom validation messages When you set up a Multi-Language Form, you upload an Excel translation file to the form. The document gets the translated text from the form’s translation file. Submitted data The document shows the answers exactly as the user entered them. Key names and Question Unique IDs These are not translated and remain the same across all languages. Tip:For your integrations, map to the question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/IntroMLDocs.htm",
      "title": "Introduction to Multi-Language Documents",
      "section": "XML and JSON document translations"
    }
  },
  {
    "content": "Destinations, and Documents., which doesn’t change, and not the question text. Info:These details apply to JSON and XML documents you create and the standard JSON and XML documents you can download on the Form Submission Details page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/IntroMLDocs.htm",
      "title": "Introduction to Multi-Language Documents",
      "section": "XML and JSON document translations"
    }
  },
  {
    "content": "When does a Multi-Language Document require translations?\n\nA document becomes Multi-Language when you attach it to a Multi-Language Form. The system has translations for most of the document content, so the document doesn’t always require additional translations. The following table describes when a document requires extra setup to ensure all the content is translated. If your Document type is... And... Then... XML or JSON Not applicable No setup is required. Standard PDF, HTML, or Word. You didn’t add static text to the: Output File Properties Document Header Document Title Additional Information Footer Table column headers set in the Table Layout No setup is required. You added static text to the: Output File Properties Document Header Document Title Additional Information Footer Table column headers set in the Table Layout Set up Additional Languages to provide translations for the static text that you entered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/MLDocsConfigOptions.htm",
      "title": "Multi-Language Document Setup Options",
      "section": "When does a Multi-Language Document require translations?"
    }
  },
  {
    "content": "Procedure to set up a Multi-Language Document\n\nSet up a Multi-Language Form. What type of Multi-Language Document do you want to set up? If you want to set up a JSON or XML document, go to step 5. If you want to set up a standard PDF, Word, or HTML document, go to step 3. Set up a standard PDF, Microsoft Word, or HTML document, and then select a Source Language. The Source Language indicates the default language for the document when translations aren’t available or when you add the document to a non-Multi-Language Form. Does your document require extra setup? If yes, set up Additional Languages.Activate any language you want available for form filling; for output documents, all configured languages can be selected, whether active or inactive. If no, go to step 5. Add the document to your form outputs. You can add it directly or as a Data Destination attachment. Do you want to choose specific languages for your document? If yes, attach the document to a Data Destination A Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/MLDocsConfigOptions.htm",
      "title": "Multi-Language Document Setup Options",
      "section": "Procedure to set up a Multi-Language Document"
    }
  },
  {
    "content": "Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. If no, add the document to the form. When a user submits a Multi-Language Form, the system combines the following items to produce a document in the specified languages: Form translation file for the language of the submitted form Submitted form answers, as entered Document translation file for the selected languages, if applicable. Tip: If the document doesn’t have the specified languages set up as Additional Languages, the system renders the document as follows: The document metadata automatically renders in the correct language.Document details, such as headers, footers, and properties, render in the document’s Source Language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/MLDocsConfigOptions.htm",
      "title": "Multi-Language Document Setup Options",
      "section": "Procedure to set up a Multi-Language Document"
    }
  },
  {
    "content": "When to set up translations\n\nIf you don’t have any content to translate, you don’t need to set up translations. You only need to set up translations if your headers, footers, properties, or other document details require translation. For example, if your document details only include DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms., you don’t need to set up translations. Info:The topic Multi-Language Document Setup Options describes when documents require translations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "When to set up translations"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext account must be on the Advanced or Enterprise tier and have the Multi-Language add-on. You must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Set up a standard PDF, Microsoft Word, or HTML Multi-Language Document\n\nNavigate to the PDF, Microsoft Word, or HTML document you want to set up. You can choose a new or existing document. To create a new document: Forms & Integrations > Documents > CREATE DOCUMENT Select the type of document that you want to create. To edit a document: Forms & Integrations > Documents > Document Name > EDIT DOCUMENT Info:The topic PDF, Word, and HTML Documents describes how to set up these documents in more detail. Select a Source Language. This is the language you use to enter the following document details: Output File Properties Document header Document title Additional Information Footer Table column headers you set in your Table Layout The Source Language also indicates the default language for the document when translations aren’t available, or when you add the document to a non-Multi-Language Form. Enter or edit the document details. For example, if you selected French as the Source Language,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "Set up a standard PDF, Microsoft Word, or HTML Multi-Language Document"
    }
  },
  {
    "content": "enter the footer information in French. When you finish setting up the document, select Create or Update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "Set up a standard PDF, Microsoft Word, or HTML Multi-Language Document"
    }
  },
  {
    "content": "Add languages to your document\n\nNavigate to your Multi-Language PDF, Microsoft Word, or HTML document (Forms & Integrations > Documents > Document Name). Select MANAGE LANGUAGES. Result: The system opens the Manage Languages page. In the Additional Languages section, select a language from the list. Select Download to get an Excel file that contains the translation strings for all translatable Document content. Result: The system generates a translation file (.xlsx) that contains all translatable text in the Document. The translation file has the structure shown in the following illustration. Info:The topic How Multi-Language Translation Files Work: Translation file details provides guidelines and tips for working with the translation files. Add comments for your translator (optional) to provide more information about a translation string. For example, you could provide the translator with synonyms to make the meaning clear. Send the file for translation. Complete the translation file:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "Add languages to your document"
    }
  },
  {
    "content": "Add translations for all of the strings. If the changes_occurred column has an x in it, and you’ve updated the translation, delete the x. Once the translation file is complete, UPLOAD the file. Note:To upload the translation files successfully, you must keep all five column headings exactly the same as in the downloaded file. Set the language to Active to make it available for filling out the form. For output documents, all configured languages—active or inactive—remain available for generating output. Select ADD LANGUAGE to set up another language. Repeat steps 3-7 for each additional language up to a maximum of 10. Remember that you don't need to activate a language for it to be used in output documents; only activate languages you want available for users filling out the form. Select Update to save your changes. Info:Remember to add the Multi-Language Document to the Multi-Language Forms that you want to use it for.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "Add languages to your document"
    }
  },
  {
    "content": "Copy the configuration of a Multi-Language Document\n\nOnce you have a Multi-Language Document set up, you can copy its configuration to an existing target document. When you copy a Multi-Language Document configuration, you copy the document setup and any additional languages. This means that if your target document has any languages already set up, the source document languages will overwrite them. Info:The section Create and Manage Documents: Copy Document configuration to an existing Document describes how to copy a document configuration in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/SetUpMultiLanguageDocs.htm",
      "title": "Steps to Set Up Translations for a Multi-Language Document",
      "section": "Copy the configuration of a Multi-Language Document"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext account must be on the Advanced or Enterprise tier and have the Multi-Language add-on. You must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. You must have a Multi-Language Form set up. You must have a Standard PDF, HTML or Word, or JSON or XML document set up. If your document requires translations, set up Additional Languages. Tip:If your document requires translations, check that your Multi-Language Form and Multi-Language Document have the same Additional Languages set up. If you want to attach the document to a Data Destination, you must set up a Data Destination that supports or requires Documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/AddMLDocumentForm.htm",
      "title": "Add a Multi-Language Document to a Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to add a Multi-Language Document directly to a Multi-Language Form\n\nOpen your Multi-Language Form in edit mode (Forms & Integrations > List Forms > Form Name > EDIT FORM). Go to SETTINGS > Documents. On the Documents available for download field, start typing the name of your Multi-Language Document, and then select it from the list. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users. Result: When a user submits the form, you can download the document from the Web Portal or using the TrueContext API. Depending on their team settings, users can also access the document from the TrueContext Mobile App Search and Sent lists. System-generated content, such as metadata, renders in the form’s selected language. This is the language selected by the field user, a dispatch, or an App‑to‑App call. Document details, such as headers, footers, and properties render in the selected language if you uploaded a translation file for that language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/AddMLDocumentForm.htm",
      "title": "Add a Multi-Language Document to a Form",
      "section": "Steps to add a Multi-Language Document directly to a Multi-Language Form"
    }
  },
  {
    "content": "(Activating the language is only required to make it available for form filling; for document output, any configured language can be selected regardless of activation status), and you uploaded a translation file for that language. Otherwise, document details render in the document’s Source Language. Info:The topic Introduction to Multi-Language Documents describes how the system renders the document in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/AddMLDocumentForm.htm",
      "title": "Add a Multi-Language Document to a Form",
      "section": "Steps to add a Multi-Language Document directly to a Multi-Language Form"
    }
  },
  {
    "content": "Steps to attach a Multi-Language Document to a Data Destination\n\nOpen your Multi-Language Form in edit mode (Forms & Integrations > List Forms > Form Name > EDIT FORM). On the DESTINATIONS tab, select Add a Data Destination. Select a Data Destination that supports or requires Documents. In the Documents to attach field, start typing the name of your Multi-Language Document, and then select it from the dropdown list. In the Languages field, select the languages you want for this document: Specific language—Select one or more languages. You can select any language configured for the form, regardless of whether it is marked Active for filling out the form. Form Submission Language—The document renders in the language selected by the field user, a dispatch, or an App‑to‑App call. DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.—Enter a DREL expression to specify a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/AddMLDocumentForm.htm",
      "title": "Add a Multi-Language Document to a Form",
      "section": "Steps to attach a Multi-Language Document to a Data Destination"
    }
  },
  {
    "content": "language that’s the answer to a question. For example: A question that has the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. CustomerLanguage asks for the customer’s preferred language. The DREL expression %a[CustomerLanguage] gets the language entered as the answer. Note:For this to work, the answer submitted to the server must be one of the supported language codes. To limit the answer options, and to show a user-friendly language instead of a language code, use an options-based question. Set the language code as the Value submitted to server and the user-friendly language name as the Text displayed on device. Info:These options are also available when you add a document to a Data Destination from the Form Outputs tab, or when copying or moving a form. Result: When a user submits",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/AddMLDocumentForm.htm",
      "title": "Add a Multi-Language Document to a Form",
      "section": "Steps to attach a Multi-Language Document to a Data Destination"
    }
  },
  {
    "content": "the form, the Data Destination executes and sends a copy of the document in each of the specified languages. If any of the languages are duplicates, the system only generates one document per language. For example, if you select Spanish, and the Form Submission Language is also Spanish, the system only generates one document in Spanish. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users. System-generated content, such as metadata, renders in the specified languages. Document details, such as headers, footers, and properties, render in the specified language if you added and activated the language as an Additional Language, and you uploaded a translation file for that language. Otherwise, document details render in the document’s Source Language. Info:The topic Introduction to Multi-Language Documents describes how the system renders the document in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Multi-LanguageWorkflows/MultiLanguageDocuments/AddMLDocumentForm.htm",
      "title": "Add a Multi-Language Document to a Form",
      "section": "Steps to attach a Multi-Language Document to a Data Destination"
    }
  },
  {
    "content": "Multi-Language Translations and Supported Languages With the Multi-Language feature, you can create a single form and provide it to your field users in multiple languages. A Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content. is a form that’s set up with different translations. Field users, dispatches, and App‑to‑App calls can select the language used to display the form content. The topics in this section describe the translation files that you set up, supported language, and how the system gets translated content. Available as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/LandingPages/LanguagesTranslations.htm",
      "title": "Multi-Language Translations and Supported Languages"
    }
  },
  {
    "content": "Content that you can translate\n\nYou can set up translations for: Content that a Form Designer builds into a form. Page and section headings Question text Manually-defined display values in lists for options-based questions Options-based questions are questions that display a list of options for field users to choose from. These include Button Group, Card List, Dropdown, Multiselect, and Radio Button questions. Question help Custom validation messages Values in a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., including both display and data values. Details in a standard PDF, Microsoft Word, or HTML output document. You do this by setting up a Multi-Language Document. Resource Documents and Resource Images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Content that you can translate"
    }
  },
  {
    "content": "Info:The topic Translated Multi-Language Content Across the Platform describes how TrueContext displays Multi-Language translations in Forms and Documents. It also explains how the Mobile App and Web Portal display translated content.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Content that you can translate"
    }
  },
  {
    "content": "Translation file details\n\nTo set up a Multi-Language form and document, you only need to upload translation files for the form. The document displays the translated form content as submitted. If you want to show translated document details, however, you must upload document translation files. This section describes how to work with translation files for the content that’s built into a form or document. Info:The topic Data Source Translations describes how to set up and use translations in a Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Translation file details"
    }
  },
  {
    "content": "How to get a translation file\n\nWhen you add a language or change the content, you download an Excel file that contains the content to translate. The following example shows how to download a translation file for a Multi-Language Form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "How to get a translation file"
    }
  },
  {
    "content": "Keys and values in the translation files\n\nThe Excel translation file for each language contains a set of keys and values that are based on the Source Language The term Source Language refers to the language that you use when you build a Multi-Language Form or Document. Translation files contain text strings in the source language and another column for the string translations that you add.. The keys identify the translatable strings in the Multi-Language Form or Document. The values are the actual text strings that were configured by the Form or Document Designer. These are the strings that you must provide translations for. Note:On the Mobile App and in output documents, any string that doesn’t have an associated translation is displayed in the source language. The following illustration describes the keys and values in the translation files for a Multi-Language Form. The following illustration describes the keys and values in the translation files for a Multi-Language Document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Keys and values in the translation files"
    }
  },
  {
    "content": "Note:To upload the translation files successfully, you must keep all five column headings exactly the same as in the downloaded file.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Keys and values in the translation files"
    }
  },
  {
    "content": "Guidelines for translated strings\n\nIf any of the source string values include HTML—such as a Rich Content help option—include HTML in the translated string. For YouTube Video help options, you can specify different URLs for different languages. If a source string includes a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression—such as for a custom column in a Repeatable Section summary table—you can change the static text but not the DREL references. For example, if the DREL expression is: Floor: %a[Floor] Unit: %a[Unit] Room: %a[Room] you can change the text and any special characters or spaces: Piso- %a[Floor] Unidad- %a[Unit] Habitación- %a[Room] Tip:Keep in mind that the translations in the Excel file apply only to the information displayed on the Mobile App and in output documents. These translations do not display in the Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Guidelines for translated strings"
    }
  },
  {
    "content": "Unique IDs in the form translation file keys\n\nThe key_name column identifies elements of your form by their Unique IDs. Tip:The Form Builder supplies a default Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. when you add a page, section, question, answer exception, or other element to the form. We recommend that you change these to IDs that will help you easily identify these elements in the translation files. The following example shows how a translation file displays the unique IDs in the key_name column. You can sort and filter the Excel file based on the Unique IDs. This is useful when you need to: Manage a long list of translation strings in a large form. Filter the list to find all related elements, such as Unique IDs for a Repeatable Section A Repeatable Section is a subform",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Unique IDs in the form translation file keys"
    }
  },
  {
    "content": "that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Unique IDs in the form translation file keys"
    }
  },
  {
    "content": "Upload the translations and activate the language\n\nTip:The uploaded file name doesn’t have to match the downloaded file name. You might want to name the file so that it’s easy to identify. Note:To upload the translation files successfully, you must keep all five column headings exactly the same as in the downloaded file. For a Multi-Language Form, activate the language and save the form. You might want to attach a Multi-Language Document.Result: The system creates a new form version. The Mobile App treats translations as form dependencies and downloads new versions as part of the reconcile process. The language is now available for selection.For a Multi-Language Document, you can use any language configured in the form for output, regardless of whether it is active for form filling.Result: The document renders in different languages depending on your form setup.Even if you don’t upload or activate a language, the system has translations for most of the document. Only static text in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Upload the translations and activate the language"
    }
  },
  {
    "content": "document details renders in the Source Language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/HowTranslationsWork.htm",
      "title": "How Multi-Language Translation Files Work",
      "section": "Upload the translations and activate the language"
    }
  },
  {
    "content": "A\n\nLanguage Language code Arabic ar",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "A"
    }
  },
  {
    "content": "C\n\nIn the following table: Chinese (China) is Chinese (Simplified). Chinese (Hong Kong SAR China) is Chinese (Traditional). Language Language code Chinese (China) zh_CN Chinese (Hong Kong SAR China) zh_HK Czech cs",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "C"
    }
  },
  {
    "content": "D\n\nLanguage Language code Danish da Dutch nl",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "D"
    }
  },
  {
    "content": "E\n\nLanguage Language code English en",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "E"
    }
  },
  {
    "content": "F\n\nLanguage Language code Finnish fi French fr",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "F"
    }
  },
  {
    "content": "G\n\nLanguage Language code German de Greek el",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "G"
    }
  },
  {
    "content": "H\n\nLanguage Language code Hebrew iw Hindi hi",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "H"
    }
  },
  {
    "content": "I\n\nLanguage Language code Italian it",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "I"
    }
  },
  {
    "content": "J\n\nLanguage Language code Japanese ja",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "J"
    }
  },
  {
    "content": "K\n\nLanguage Language code Korean ko",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "K"
    }
  },
  {
    "content": "N\n\nLanguage Language code Norwegian no",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "N"
    }
  },
  {
    "content": "P\n\nLanguage Language code Polish pl Portuguese pt",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "P"
    }
  },
  {
    "content": "R\n\nLanguage Language code Romanian ro Russian ru",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "R"
    }
  },
  {
    "content": "S\n\nLanguage Language code Serbian sr Spanish es Swedish sv",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "S"
    }
  },
  {
    "content": "T\n\nLanguage Language code Thai th Turkish tr",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "T"
    }
  },
  {
    "content": "U\n\nLanguage Language code Ukrainian uk",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "U"
    }
  },
  {
    "content": "V\n\nLanguage Language code Vietnamese vi Tip:If the language that you want to use isn’t in this list, contact support@truecontext.com to request that we add it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedLangsForMultiLangForms.htm",
      "title": "Supported Languages for the Multi-Language Feature",
      "section": "V"
    }
  },
  {
    "content": "Multi-Language Forms\n\nA Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content. is a form that’s set up with different translations. Field users, dispatches, and App‑to‑App calls can select the language used to display the form content. The languages available to the user depend on the form’s Languages settings and the translation files that the Form Designer uploads. The topic Set Up a Multi-Language Form describes these settings in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Multi-Language Forms"
    }
  },
  {
    "content": "Multi-Language Data Sources\n\nA Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. can provide a list of translated options for a Dropdown, Multiselect, or Radio Button lookup question. We store Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as tables (rows and columns) in the TrueContext system. To set up translated values in your Data Source, you must have a column that contains a language code for each row. The topic Data Source Translations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Multi-Language Data Sources"
    }
  },
  {
    "content": "describes how to set up your Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Multi-Language Data Sources"
    }
  },
  {
    "content": "Multi-Language output Documents\n\nA Multi-Language Document is an output document that's linked to a Multi-Language Form. You can generate this document in any language configured in the form, regardless of whether the language is set as Active for form completion. Use Multi-Language Documents to produce files for all your field users, systems, or customers in their preferred languages—for example, generate English and Spanish versions of the same submission for different audiences. Translated resources Resource Documents and Resource Images are reference materials, like manuals and diagrams. You can reference a Resource Document or Resource Image in any form in the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. If you have a resource in multiple languages,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Multi-Language output Documents"
    }
  },
  {
    "content": "you can link the translations and use the resource in Multi-Language forms. Info:The sections Resource Documents: Set up multiple languages and Resource Images: Set up multiple languages describe how to create translated resources. The Resource Library also supports translated resources.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Multi-Language output Documents"
    }
  },
  {
    "content": "Translated resources\n\nResource Documents and Resource Images are reference materials, like manuals and diagrams. You can reference a Resource Document or Resource Image in any form in the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. If you have a resource in multiple languages, you can link the translations and use the resource in Multi-Language forms. Info:The sections Resource Documents: Set up multiple languages and Resource Images: Set up multiple languages describe how to create translated resources. The Resource Library also supports translated resources.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Translated resources"
    }
  },
  {
    "content": "How translation files provide content for Forms and Documents\n\nThe following illustration shows how Form and Document translation files and Data Sources provide content in forms and output Documents. Info:Form-level content and Document-level content each require different translation files. The topic How Multi-Language Translation Files Work provides detailed information about the translation files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "How translation files provide content for Forms and Documents"
    }
  },
  {
    "content": "Other types of translated content\n\nTrueContext can provide translations for other types of content across the platform. Some language settings don’t require the Multi-Language feature but do affect the overall user experience. For example, the device locale determines the language for the Mobile App navigation and messages. Info: The topic Language Settings and Translations explains in detail the standard TrueContext language support options and how to set them up.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Other types of translated content"
    }
  },
  {
    "content": "Translations for Forms, Documents, and Emails\n\nThe following table describes where translations come from for Forms, Documents, and Emails. The… Displays translated content for… Based on… Multi-Language Form Page and section headings Question text Manually-defined display values in lists for options-based questions Options-based questions are questions that display a list of options for field users to choose from. These include Button Group, Card List, Dropdown, Multiselect, and Radio Button questions. Question help Custom validation messages Static text in a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression. For example, if the DREL expression is: My Customer %r You can translate the text “My Customer” but not the value returned by %r. Translation files that you upload and activate for each form language. Lookup questions that use a translated Data Source,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Translations for Forms, Documents, and Emails"
    }
  },
  {
    "content": "both the display and data (server) values Translations that you include in the Data Source. Info:The topic Data Source Translations describes how to set up your Data Source. Multi-Language PDF, Microsoft Word, or HTML Document Form content Answers form a Data Source Submitted data Metadata labels and other system-generated content, such as page numbering Details entered when setting up the Document Info:The topic Introduction to Multi-Language Documents describes how the system displays translated content in the document in more detail. The form translation file The Data Source data Answers submitted by the mobile user Translations available in the system The document translation file, if applicable JSON and XML Documents Form content Submitted data Info:The topic Introduction to Multi-Language Documents describes how the system displays translated content in the document in more detail. The form translation file. Answers submitted by the mobile user Email Data Destinations A Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Translations for Forms, Documents, and Emails"
    }
  },
  {
    "content": "Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. that use a standard HTML body If you linked an Email Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. to a Multi-Language Form and chose a standard HTML body, the email shows translated form content. The language selected for the submitted form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Translations for Forms, Documents, and Emails"
    }
  },
  {
    "content": "Translations for Mobile App, Web Portal, and Customer Feedback forms\n\nThis table describes where Multi-Language translations come from for the Mobile App, Web Portal, and Customer Feedback forms. Info: The topic Language Settings and Translations explains in detail the standard TrueContext language support options and how to set them up. The… Displays… Based on… Mobile App Translated content for: Menus Settings Confirmation messages Error messages Notifications The user’s device locale settings. Form names in Forms, Drafts, Inbox, Search, or Sent in the source language (not translated) The names as defined by the Form Designer. Text embedded in Resource Images and Resource Documents as is (not translated). However, you can provide translated resources. Text embedded in the file. Web Portal Form details, such as question text, exactly as defined in the Form Builder (not translated). Submitted values exactly as submitted. The source language used to build the form. Actual values",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Translations for Mobile App, Web Portal, and Customer Feedback forms"
    }
  },
  {
    "content": "submitted. Customer Feedback forms The Multi-Language feature is not available for Customer Feedback forms. Not applicable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/HowMultiLangFormsWork/TranslatedContentAcrossPlatform.htm",
      "title": "Translated Multi-Language Content Across the Platform",
      "section": "Translations for Mobile App, Web Portal, and Customer Feedback forms"
    }
  },
  {
    "content": "Data Freshness on the Mobile App\n\nThe TrueContext Mobile App is an “offline first” solution that works when your technicians don’t have network connectivity. Before a user goes offline, however, they must reconcile the Mobile App. The reconcile action downloads forms and data to the device and uploads submitted forms from the device to the TrueContext server. Info:The TrueContext Mobile App reconciles at key points in a workflow to ensure that users have the latest form versions and related data. The topic Reconcile or Send/Receive describes when and how often manual and automatic reconciles happen. In some cases, you might want to check for new form versions and data between reconciles, or block the user from opening an out-of-date form. The Refresh on Form Open action checks for updates right when the form opens, regardless of when the last reconcile happened. Tip:You don’t need to refresh every form between reconciles. Use Refresh on Form Open only when you want to:Enforce a check",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Data Freshness on the Mobile App"
    }
  },
  {
    "content": "for the latest form version and data. You can block or warn the user if the refresh can’t get the latest updates.Use an App‑to‑App request to launch the TrueContext Mobile App from a third-party app and enforce a check for form and data updates.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Data Freshness on the Mobile App"
    }
  },
  {
    "content": "Differences between Reconcile and Refresh on Form Open\n\nThe Reconcile (or Sync) action performs a send/receive between the TrueContext Mobile App and the TrueContext server. This synchronizes all new form versions, Data Sources, Resources, user lists, Dispatches, and the Outbox. Info:The topic Reconcile or Send/Receive describes the reconcile action in more detail, including when the app reconciles automatically. The Refresh on Form Open action checks and updates the form version and related data for a single form. The refresh happens when a field user or an App‑to‑App request attempts to open the form. Unlike a reconcile, this action does not send data from the Mobile App to the server. The following table describes the differences between the Reconcile and Refresh on Form Open actions in more detail. Action Download Upload Forms Initiated Reconcile Yes Yes All Manually, by the user Automatically, when the device is online, the field user is signed in, and the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Differences between Reconcile and Refresh on Form Open"
    }
  },
  {
    "content": "opens in the foreground Refresh on Form Open Yes No Selected form only Automatically, as configured by the Admin",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Differences between Reconcile and Refresh on Form Open"
    }
  },
  {
    "content": "What is the Refresh on Form Open option?\n\nRefresh on Form Open is an advanced form-level setting that activates a check for form and data freshness. When a field user or an App‑to‑App request opens the form, TrueContext checks and updates the following types of data: The latest version of the form. Any Resource Images and Resource Documents used in the form. Data Source values from the most recent fetch. User lists for TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms that field users can transfer directly to another user. Refresh on Form Open applies to regular Mobile App forms, including forms that have Data Passthrough enabled. Tip:Customer Feedback forms always load the latest form version and data, so there’s no need to check for data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "What is the Refresh on Form Open option?"
    }
  },
  {
    "content": "freshness.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "What is the Refresh on Form Open option?"
    }
  },
  {
    "content": "When to use Refresh on Form Open\n\nUse this action for mission-critical or frequently-updated forms, or if you notice that submitted forms and supporting data need to be updated between reconciles: When you use App‑to‑App calls from a third-party app to open a form, and the Mobile App might not have time to reconcile before the form opens. When you set up a schedule or script to fetch Data Source values frequently. This provides users with up-to-date options in Dropdown, Radio Button, and Multiselect questions, between reconciles. Info:A refresh checks for the latest data available on the TrueContext server. It does not trigger the TrueContext server to fetch data from an external source. The topic Maintaining Data Sources describes the options for keeping the server data up-to-date. When you frequently update Resources (images and documents) and you want to make sure field users have the latest: Equipment schematics Illustrated Parts Catalog (IPC) Troubleshooting procedures Reference",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "When to use Refresh on Form Open"
    }
  },
  {
    "content": "images, to help identify equipment models to service When you have TrueContext Teamwork enabled on the form and you want to update the “transfer to” list of users between reconciles. When you use forms for compliance and audit, such as an end-of-day report that pulls the latest data into a summary-type form. You can block or warn users if the refresh can’t get the latest data. Info:You don’t need to use the refresh action on every form. Keep in mind that if a refresh fails:The Block option won’t let users open the form, even if the form is up-to-date from a recent reconcile.The Warn option slows users down, and they won’t know if the form is up-to-date from a recent reconcile.The Ignore option doesn’t guarantee that the form and data are up-to-date.The section Field user experience and options describes these options in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "When to use Refresh on Form Open"
    }
  },
  {
    "content": "How Refresh on Form Open works\n\nNote:The device must be online when a user opens the form. If a Reconcile (Sync) started before the form opens, the refresh starts after the reconcile finishes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "How Refresh on Form Open works"
    }
  },
  {
    "content": "Refresh process\n\nWhen a field user or App‑to‑App request opens a form, TrueContext runs a check for form and data freshness. The check includes the following steps: Is the device online? If yes, proceed to the next step. If no, display an alert to the Mobile App user. Compare the form data on the device with the data available on the server. Does the form exist in the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.? If yes, continue with the refresh. If no, display an alert that tells the user to contact their Admin. Is the form data up-to-date? If yes, go to step 4. If no, download the latest form version and data from the server. Tip:If more than one form references the same Data Source, the updated values are available to all of those forms. This applies to forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Refresh process"
    }
  },
  {
    "content": "with or without the refresh option enabled. Confirm a successful refresh. Were the check and download (if needed) successful? If yes, display the open form. If no, and TrueContext can’t confirm a successful refresh, the Mobile App displays an alert. The alert and options depend on the form setup.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Refresh process"
    }
  },
  {
    "content": "Why a refresh might fail\n\nA refresh might fail to complete because: The field user’s device is offline. A system or network error caused a failure to check or update some or all of the data. The form was archived or deleted from the FormSpace. The user no longer has access to the FormSpace that the form is in. A dispatched form was deleted or assigned to a different user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Why a refresh might fail"
    }
  },
  {
    "content": "Field user experience and options\n\nWhen the form opens, the TrueContext Mobile App displays an alert to tell the user a refresh is in progress: For an unsuccessful refresh, the alert and user options depend on the form setup and whether the device is online. The following table describes each option in detail. Form setup Description Reason for failed refresh Alert displayed on the Mobile App Ignore Least restrictive, field users can open and work on the form. Users can work without interruption but might not have the latest form version and data. Device is offline None Network or system error None Warn More restrictive, notifies the field user that their form and data might not be up-to-date. Users can decide whether to proceed without the latest form version and data. Device is offline Network or system error Block Most restrictive, user must refresh before they can start work on the form. Ensures that the form version and data are up-to-date before the user starts work. If the system",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Field user experience and options"
    }
  },
  {
    "content": "can’t perform the data freshness check or updates, it blocks the user, even if their data is up-to-date. Warning: This option prevents field users from starting work if the data freshness check or updates fail. Use this option only when you know that field users will be online when they open the form. Device is offline Network or system error",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Field user experience and options"
    }
  },
  {
    "content": "Extent of the form and data freshness check\n\nThe extent of the freshness check depends on the form’s location in the Mobile App and whether the form was previously saved. If the form is in the… Then the form is… And when… Then the refresh action… Because Forms list Empty A field user or App‑to‑App request opens a form for the first time on the device Checks and updates the: Form version Resources Data Source values User lists (for TrueContext Teamwork transfers) Checks the form status (Active or Archived) and the user’s access to the form and FormSpace We can update without overwriting any work the user has done. Inbox Partially filled A field user or App‑to‑App request opens a form for the first time on the device, and the form was: Dispatched Transferred as an Incomplete TrueContext Teamwork-enabled form Sent for edit Checks and updates the: Resources Data Source values User lists (for TrueContext Teamwork transfers) Does not check the form version or access The form on the device is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Extent of the form and data freshness check"
    }
  },
  {
    "content": "already tied to a specific form version. Search list Partially or completely filled A field user opens a form on the device, and the form was: Enabled for editing from Search Submitted as an incomplete TrueContext Teamwork form for anyone to claim Sent list A field user opens a form on the device, and the form was enabled for editing from Sent Inbox Drafts list Partially or completely filled A field user or an App‑to‑App request opens a form on the device that was previously saved Does not perform a freshness check We want to keep any saved work intact. Tip:In the Web Portal, you can check which form version a user submitted. You can’t tell, however, whether the refresh updated other data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Extent of the form and data freshness check"
    }
  },
  {
    "content": "Set up Refresh on Form Open\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. Select Settings > Workflow Settings. In the Refresh on Form Open section, select the Download the latest… checkbox. Choose Ignore, Warn, or Block to specify the alert and user options in case of an incomplete refresh. Note:When you edit a form and then save your changes, the system creates a new version of the form. The Mobile App gets the new version the next time that the app reconciles. This applies when you change any of the form settings. For Refresh on Form Open, remember that users must reconcile to get the form version that has this setting enabled. After that, the refresh action automatically checks for new form versions and data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshOnFormOpen.htm",
      "title": "Refresh on Form Open",
      "section": "Set up Refresh on Form Open"
    }
  },
  {
    "content": "Get Started with TrueContext\n\nThis section includes the following content: Quick StartTrueContext Quick StartTrueContext Mobile App Quick Start VideosConfigure Custom BrandingCustomize TrueContext with your Brand and LogoUpload a Logo to your AccountWhite Label Product GuideConfigure Team and Mobile App SettingsCustomize the Mobile App TabsTeam SettingsSet up Problem Contact Email AddressesLanguage Settings and TranslationsTime Zone SettingsCustomize the Mobile App \"Support Information\"Push Notifications OverviewTurn On Push Notifications for your TeamTurn Off Push Notifications for Select ActionsSet up TrueContext UsersAdd UsersSet up Data Sources and DestinationsConnections OverviewData Sources OverviewSimple Examples of Data Source SetupBest Practices for Data Source SizeData Destinations OverviewCreate a FormForm Building BasicsImport a Form from the Forms LibraryOverview: Unique IDsAdd a Repeatable Section to a FormAdd Conditional Logic to a FormBest Practices for Form Building,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/GetStarted.htm",
      "title": "Get Started with TrueContext",
      "section": "Get Started with TrueContext"
    }
  },
  {
    "content": "Testing, and DeploymentDispatch the Form to a Mobile DeviceSet Up a Form for DispatchingDispatch Forms to a UserSubmit a Form on a Mobile DeviceGet Started with the Mobile AppDownload the TrueContext Mobile AppSubmit a FormReview Submitted Forms in the Web PortalReview Your Data on the Web PortalTroubleshootingSupported Versions and Operating Systems for the Mobile AppFeature Support by Operating System (OS)Enable Camera Access in Apps and Web Browsers",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/GetStarted.htm",
      "title": "Get Started with TrueContext",
      "section": "Get Started with TrueContext"
    }
  },
  {
    "content": "Quick Start\n\nThis section includes the following content: TrueContext Quick StartTrueContext Mobile App Quick Start Videos",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/QuickStart.htm",
      "title": "Quick Start",
      "section": "Quick Start"
    }
  },
  {
    "content": "Download the Mobile App\n\nGo to your device's app store. Search for truecontext and download the app. Open the app and sign in. Notice the four main sections: Forms—includes a list of all the forms available for you to fill out. Inbox—includes all the forms your supervisor dispatched for you to work on. Drafts—includes all the forms you partially completed and saved as drafts. Sent—includes all your submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/PF_QuickStart.htm",
      "title": "TrueContext Quick Start",
      "section": "Download the Mobile App"
    }
  },
  {
    "content": "Create a new form\n\nGo to the Web Portal, and sign in. Go to Forms & Integrations > Create New Form, and then select Build a Mobile Form. Enter a name for your form. For this example, use the name Site Inspection. Select Save. Result: The Form Builder opens with a default page, a default section, and a default question. Note:Each page must have at least one section, and each section must have at least one question. Change the name of the default page and section: Select the menu next to the page or section name as shown in the following image. Select Edit. Name the page Customer Information, and the section Contact Information. Select SAVE.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/PF_QuickStart.htm",
      "title": "TrueContext Quick Start",
      "section": "Create a new form"
    }
  },
  {
    "content": "Add Questions to your form\n\nIn the Form Builder, select ADD A QUESTION. Result: The Question menu opens. Select Text Field as the control type. In the Question Text field, enter Company Name and select SAVE. Result: You created your first question. Add four more questions with the Text Field question type. In the Question field, enter: Address Contact Name Email Phone Number Tip:You can delete questions by selecting the menu next to the question text. You can also select Delete Multiple Form Elements to delete several questions at once.The topic Form Building Basics: Delete Multiple Form Elements describes how to delete multiple form elements in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/PF_QuickStart.htm",
      "title": "TrueContext Quick Start",
      "section": "Add Questions to your form"
    }
  },
  {
    "content": "Save and deploy your form\n\nSelect SAVE AND DEPLOY. Result: The system prompts you to confirm that you want to deploy the form. Select DEPLOY. Result: The system makes the form available in your Mobile App. Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. your Mobile App as shown in the following image. Result: Your form is now visible in the Forms section of your Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/PF_QuickStart.htm",
      "title": "TrueContext Quick Start",
      "section": "Save and deploy your form"
    }
  },
  {
    "content": "Submit a form\n\nOpen the TrueContext Mobile App. Select Forms. Result: The Forms page opens with a list of all your available forms. Select the new form you created, Site Inspection. Select the Customer Information page. Answer the questions in the form. The following is an example of the form filled out. Select Send. Result: The Mobile App prompts you to confirm that you want to send your form. Select Send to confirm. Result: The Mobile App confirms your submission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/PF_QuickStart.htm",
      "title": "TrueContext Quick Start",
      "section": "Submit a form"
    }
  },
  {
    "content": "View your submitted form\n\nGo to the Web Portal and sign in. Go to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Select the Reference Number of your Form Submission as shown in the following image. Result: The Form Submission details page opens. In this page, you can see all the answers you submitted from your mobile device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/PF_QuickStart.htm",
      "title": "TrueContext Quick Start",
      "section": "View your submitted form"
    }
  },
  {
    "content": "Introduction\n\nYou’re a busy field technician who needs to get the job done right the first time! The company you work for decided to use the TrueContext platform to help you get the work done safely and efficiently. Now, you need to learn how to use the TrueContext Mobile App. To help you, we’ve developed a series of “quick start” videos that show you some basic and advanced features. Tip:The forms in these videos are designed to demonstrate a variety of commonly-used features. The forms you use in the field may be formatted differently or include features not found in these videos. Available on all tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/Mobile%20App%20Quick%20Start%20Guide/QuickStartLandingPage.htm",
      "title": "TrueContext Mobile App Quick Start Videos",
      "section": "Introduction"
    }
  },
  {
    "content": "Videos\n\nOpen a dispatched form Begin at the beginning! This video shows you how to: Check your Inbox for the jobs assigned to you. Get driving directions to the job site. Learn more: Dispatch Metadata and Inbox Views: Available Inbox Views In-Form Navigation Reconcile or Send/Receive Complete a site hazard inspection We value safety above all. This video shows you how to: Check that you have the equipment and training that you need to do the job safely. Perform a site inspection and efficiently record your findings. List any hazards and how you’ll remove them before you start work. Learn more: Answer Exceptions: How Exceptions work Side-by-Side Sections: Side-by-Side Sections in the Mobile App Repeatable Sections on the Mobile App Complete an HVAC system inspection Inspect all of your customer’s units during a single site visit. This video shows you how to: Compare unit details to select the correct unit from a list. Copy and edit entries with similar answers to save time. Quickly",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/Mobile%20App%20Quick%20Start%20Guide/QuickStartLandingPage.htm",
      "title": "TrueContext Mobile App Quick Start Videos",
      "section": "Videos"
    }
  },
  {
    "content": "update your list of safety hazards with information about how you addressed them. Tip:If you’re watching this video on a mobile device, rotate your device to view it in landscape mode. Learn more: Multi-Column View and Default Sort Options Repeatable Sections on the Mobile App Submit a form Submit your inspection results before you leave the job site! This video shows you how to: Check a summary of your form to make sure you answered everything correctly. Add your signature to confirm the inspection. Get customer sign-off before you send the form to head office. Submit your completed form. Learn more: Review a Summary of a mobile form before submitting Submit a Form Complete an HVAC repair Get started on the repair with all the information you need. This video shows you how to: Check the job details based on the initial inspection results. Follow detailed work instructions and track your progress. Use in-app help to look up reference material. Learn more: Add Help Options to Questions:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/Mobile%20App%20Quick%20Start%20Guide/QuickStartLandingPage.htm",
      "title": "TrueContext Mobile App Quick Start Videos",
      "section": "Videos"
    }
  },
  {
    "content": "How Help Options work Using Camera to Text to Answer Questions Complete a post-repair inspection Double-check the work on the repaired unit. This video shows you how to: Open the inspection form from the map view of your Inbox. Check the repair details and record the final inspection results. Sign and submit the form. Learn more: Dispatch Metadata and Inbox Views Submit a Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/Mobile%20App%20Quick%20Start%20Guide/QuickStartLandingPage.htm",
      "title": "TrueContext Mobile App Quick Start Videos",
      "section": "Videos"
    }
  },
  {
    "content": "Configure Custom Branding\n\nThis section includes the following content: Customize TrueContext with your Brand and LogoUpload a Logo to your AccountWhite Label Product Guide",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ConfigCustomBranding.htm",
      "title": "Configure Custom Branding",
      "section": "Configure Custom Branding"
    }
  },
  {
    "content": "About\n\nCustom branding allows teams to use their own logo/header: in the TrueContext Mobile App (for iOS and/or Android devices) in the Web Portal on PDF/Word/HTML documents This feature can help enhance your organization's professional image and heighten the confidence of customers as they are filling in or signing forms. Custom branding also allows you to choose a \"light\" or \"dark\" theme for the Mobile App and the Web Portal. With custom branding configured, the TrueContext \"checkmark\" background will also be removed from the background of the empty Forms, Inbox, Drafts, Outbox, and Sent Box screens. Important Notes: The TrueContext app icon on the mobile device home screen is not affected by custom branding, nor is the app login screen. The Android and iOS light and dark theme colors differ slightly. Your logo image should have a transparent background for best results.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "About"
    }
  },
  {
    "content": "Set up Custom Branding\n\nIn the Web Portal: Enter the Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. by hovering over your username in the main menu. This option will only appear for TrueContext Admin users. Select the Custom Branding tab on the resulting screen. Hover over the dropdown beside Actions and select Configure Custom Branding. Select the check mark beside the platform you would like to add custom branding to. Choose a theme and upload a logo. The recommended banner logo size is: 1200px x 400px. Note: Branding changes may take up to 10 minutes to take effect.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Set up Custom Branding"
    }
  },
  {
    "content": "Logo\n\nThe ideal logo size for Android devices is 1200x400 pixels. Note that on the Android App, when custom branding is turned on, your TrueContext team name (\"Documentation Demo\" in the examples below) appears on the device if you don’t upload a logo.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Logo"
    }
  },
  {
    "content": "Theme\n\nSelect a light or dark theme to suit your branding. Note: Light theme is only available for clients running an Android version greater than 4.0. All devices operating on an older version of Android will display your chosen branding information in our default dark theme.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Theme"
    }
  },
  {
    "content": "Samples:\n\nDefault No Logo Logo",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Samples:"
    }
  },
  {
    "content": "Logo\n\nThe ideal logo size for iOS devices is 1000 x 290 px (500 x 145 pt). Note that in the iOS App, when custom branding is turned on, your TrueContext team name (\"Documentation Demo\" in the screenshots below) will appear on the device if you have not selected a logo but will be hidden if you have uploaded one. If a logo is chosen, be sure to include any desired text in the logo image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Logo"
    }
  },
  {
    "content": "Theme\n\nSelect a light or dark theme to suit your branding.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Theme"
    }
  },
  {
    "content": "Samples:\n\nDefault No Logo Logo",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Samples:"
    }
  },
  {
    "content": "Logo\n\nThe ideal logo size for iOS devices is up to 60 pixels high, and up to 800 pixels wide. If \"No Logo\" is selected, the team’s name (\"Documentation Demo\" in the screenshots below) will be shown at the top of the page. If a logo is chosen, be sure to include any desired text in the logo image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Logo"
    }
  },
  {
    "content": "Theme\n\nSelect a light or dark theme to suit your branding. Default (No Customization) Dark Theme (No Logo) Light Theme (No Logo) Dark Theme (With Logo) Light Theme (With Logo)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Theme"
    }
  },
  {
    "content": "Logo\n\nAdd your own logo to your PDF, Word, and HTML Data Record Documents. The ideal image size depends on your document settings and print settings. Default (No Customization) No Logo Custom Logo",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "Logo"
    }
  },
  {
    "content": "White Label\n\nIf you require more customization than the branding and logo can offer, please read: White Label Product Guide. When requesting a white label app, you control: Colors and splash screens displayed on the app. Branding and icons displayed in the app and on the device. Delivery of updates to your users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501428.html",
      "title": "Customize TrueContext with your Brand and Logo",
      "section": "White Label"
    }
  },
  {
    "content": "About\n\nEasily add your own logo to the mobile app, the web portal, and your PDF documents. Read here for more details about custom branding. Watch the video below to learn how to upload a logo to your account.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493738_UploadLogoToAccount.html",
      "title": "Upload a Logo to your Account",
      "section": "About"
    }
  },
  {
    "content": "Upload your Logo\n\nIn the web portal, mouse over your username in the top right corner. Select \"Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information..\" You must be logged in as an admin to access these settings. Enter the custom branding tab. Mouse over Actions and select \"Configure Custom Branding.\" Check the box next to the client or location you would like to add your logo to. Note:Custom branding on the Essentials tier is only available on Documents. Upload your logo file. The recommended size for the banner logo is 1200px long by 400px wide. Select Update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493738_UploadLogoToAccount.html",
      "title": "Upload a Logo to your Account",
      "section": "Upload your Logo"
    }
  },
  {
    "content": "White Label Product Guide Available as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on White Labeling gives your company a personalized version of the TrueContext app in mobile device app stores. The app, under your company name and branding, allows quick access for employees, subcontractors, and customers. Deploying a white label app is an easy process (unlike developing your own custom app). Take advantage of out years of experience in producing quality apps, and familiarity with the process of building, publishing, and maintaining them. With a white label app, you can: leverage our years of native mobile app development experience, publish apps using your own company name across multiple app stores, maintain a unified brand in front of your customers, streamline onboarding for employees and subcontractors by directing them to your App Store. When requesting a white label app, you control: colours and splash screens displayed on the app,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115007831367.html",
      "title": "White Label Product Guide"
    }
  },
  {
    "content": "branding and icons displayed in the app and on the device, delivery of updates to your users. If you are interested in a white label build, please contact your Sales Account Manager.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115007831367.html",
      "title": "White Label Product Guide"
    }
  },
  {
    "content": "Configure Team and Mobile App Settings\n\nThis section includes the following content: Customize the Mobile App TabsTeam SettingsSet up Problem Contact Email AddressesLanguage Settings and TranslationsTime Zone SettingsCustomize the Mobile App \"Support Information\"Push Notifications OverviewTurn On Push Notifications for your TeamTurn Off Push Notifications for Select Actions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ConfigTeam&MobileSettings.htm",
      "title": "Configure Team and Mobile App Settings",
      "section": "Configure Team and Mobile App Settings"
    }
  },
  {
    "content": "About\n\nAdmin users can control the visibility of the Sent, Forms, and Inbox tabs on the mobile devices of all users on a team. Teams who ONLY dispatch forms may wish to hide the \"Forms\" tab. Teams who NEVER dispatch forms may wish to hide the \"Inbox\" tab. Some teams may wish to hide the \"Sent\" tab to reduce clutter, or to eliminate visibility of data to mobile users who are not supposed to see the results of submitted forms. Note:If the \"Inbox\" tab is hidden, and users are dispatched forms, they will not be able to see or use them. Similarly, if the \"Forms\" tab is hidden, and a user is assigned user-initiated forms, they will not be able to see or use them.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501418.html",
      "title": "Customize the Mobile App Tabs",
      "section": "About"
    }
  },
  {
    "content": "Hide, Show, or Reorder Tabs\n\nIn the web portal: Enter the Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. by mousing over your username in the main menu. This option will only appear if you are an Admin user. Select the Mobile Device Settings tab on the resulting screen. Mouse over the dropdown beside Actions under Device Configuration and select Update Custom Configuration. Under Tabs, select the tabs that should be visible to users. The Drafts tab cannot be disabled.Info:The Search tab is only available on the Advanced and Enterprise tiers. The topic Get Started with Mobile Search describes this option in more detail.The Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501418.html",
      "title": "Customize the Mobile App Tabs",
      "section": "Hide, Show, or Reorder Tabs"
    }
  },
  {
    "content": "on from the Group Inbox. tab is only available on the Enterprise tier. The topic Set up Group Dispatching: Display the Group Inbox for your team describes the steps to set this up.The Resources tab is only available on the Enterprise tier. The topic Set Up the Resource Library describes this option in more detail. Under Tab Order, re-order the tabs by clicking, dragging and dropping them into the desired order.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501418.html",
      "title": "Customize the Mobile App Tabs",
      "section": "Hide, Show, or Reorder Tabs"
    }
  },
  {
    "content": "About\n\nTeam administrators can manage and administer their team's accounts in the TrueContext web portal. Access Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. by mousing over your username in the web portal and selecting Team Settings. Within this profile, there are four tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "About"
    }
  },
  {
    "content": "General Settings\n\nThis tab displays a summary of your team information, primary contact for your team, and preferences. Team Settings Team ID: The team's unique identifier. Not editable. Team Name: This is viewable in the TrueContext web administration portal. Problem Contact Email Addresses: Read more about Problem Contact Email Addresses. Language: The default language for your users; when new users are created, this will be their default language setting for contact emails and web portal. Any user settings will override this. Notify users of push updates via Push Notification messages: Read more about Push Notifications. Document and Data Display Settings Team Time Zone: This time zone applies to: Dates and times displayed in the Web Portal for your team. Note:New users on the team have their Preferred Time Zone set to the Team Time Zone by default. Users can change their Preferred Time Zone. Dates and times in your team’s output documents. The time zone only applies to a document",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "General Settings"
    }
  },
  {
    "content": "if you set your Document Time Zone Source to Team Preference Setting. Default Document Language: The default language for Document metadata labels. Primary Business Contact: Name: First and last name of the primary contact for your account. Email: Email address of the primary contact for your account. Phone Number: Phone number of the primary contact for your account. Reseller Account Executive: For those TrueContext customers paying through a carrier, the Reseller Account Executive section contains the contact information of the account executive employed by the Carrier who is responsible for issues with TrueContext. This individual works in tandem with TrueContext to ensure full support for the entire TrueContext solution. These fields are automatically populated with values upon signing up with TrueContext and do not need to be changed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "General Settings"
    }
  },
  {
    "content": "Mobile Device Settings\n\nThis tab provides statistical data about the mobile devices being used within your team. Many mobile app settings are controlled entirely on the mobile device; read about iOS App Settings and Android App Settings. Max Form Submissions in Sent Box: Sets the maximum number of submitted forms each device can store. When the limit is reached, the oldest forms are removed automatically from the Sent Box. Default New User Allowed Device Count: Each new user can register up to three devices. When the limit is reached, adding another device deactivates the oldest one, which must be reactivated to use the app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Mobile Device Settings"
    }
  },
  {
    "content": "Device Configuration\n\nThis tab also includes information on the mobile app tabs configured to show on your users' mobile devices, like the Sent box and Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Device Configuration"
    }
  },
  {
    "content": "Device Support/Help Information\n\nThis tab also includes Device Support Information for your team; by default, this information is set to TrueContext Support information. Please read more on how to to customize your Device Support Information or add support information for different languages.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Device Support/Help Information"
    }
  },
  {
    "content": "Billing and Usage\n\nThis tab lists your TrueContext subscriptions, billing methods and usage.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Billing and Usage"
    }
  },
  {
    "content": "Custom Branding\n\nThis tab allows you to customize the appearance of the Mobile App on your mobile users' iOS and Android devices, as well as the TrueContext web portal and your data record documents, by applying your own branding. Info:On the Essentials tier, custom branding is only available in Documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Custom Branding"
    }
  },
  {
    "content": "Security\n\nUse the Security tab to set up security settings to protect your data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Security"
    }
  },
  {
    "content": "App-to-App Allow List\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The allow list gives Admin users control over where the TrueContext Mobile App sends data from a form. This helps to protect your data from malicious actors. This is especially important if you’ve configured custom callback parameters that contain answers to questions in a form. You configure the allow list at the team level.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "App-to-App Allow List"
    }
  },
  {
    "content": "Password Policy\n\nEnforce a password policy to help your team set secure passwords. A password policy sets requirements for passwords, including: Password length. The number of lowercase, uppercase, numbers, and special characters the password must include. Character sequences that a password cannot contain. How often a user must change their password. Info:The topic Configure a Password Policy describes how to set up a password policy in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Password Policy"
    }
  },
  {
    "content": "Multi-Factor Authentication\n\nMulti-Factor Authentication (MFA) provides an extra layer of security for users signing into TrueContext. When a user signs in with their username and password, TrueContext requests an additional authentication method to verify the user’s identity. The MFA feature applies only to “native login”, where users enter their credentials directly into the Mobile App or Web Portal. TrueContext MFA does not affect Single Sign-On (SSO) that you set up outside of TrueContext. Tip:Your organization can use both MFA and SSO within your TrueContext implementation. For example, you can set up employee users for SSO and third-party contractor users for MFA native login. Info:The topic Set Up Multi-Factor Authentication describes the available authentication methods in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Multi-Factor Authentication"
    }
  },
  {
    "content": "Single Sign-On\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise TrueContext provides Security Assertion Markup Language (SAML) based Corporate Login/Single Sign-On (SSO). This allows users to log in to TrueContext using their corporate credentials. TrueContext Corporate Login can be used with a number of identity providers, including Okta, OneLogin, Microsoft Entra ID, and Active Directory Federation Services (ADFS). Info:The topic Set up corporate login (Single Sign-On) describes SSO options in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Single Sign-On"
    }
  },
  {
    "content": "Security Contacts\n\nSecurity contacts are designated people in your company that TrueContext contacts by email if security or compliance issues come up. You can enter up to 12 security contact email addresses.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Security Contacts"
    }
  },
  {
    "content": "Session Length\n\nThe session length sets the amount of time a user can stay logged in without activity before being forced to reauthenticate. You can set different session lengths for the TrueContext Mobile App and Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501378.html",
      "title": "Team Settings",
      "section": "Session Length"
    }
  },
  {
    "content": "How Problem Contact Emails work\n\nTrueContext sends a notification email to Problem Contact Email Addresses when one of the following data-processing issues occurs: TrueContext fails to process a submitted form. A Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. execution fails. A Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. fails to fetch data. A CSV export or scheduled CSV export fails. The team exceeds their API call limit (Advanced and Enterprise tiers only). We recommend that you include the email",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501368_ProblemContactEmail.html",
      "title": "Set up Problem Contact Email Addresses",
      "section": "How Problem Contact Emails work"
    }
  },
  {
    "content": "addresses of relevant system administrators in your organization. For example, if the FTP server for an FTP destination is down, the system notifies your Problem Contact Emails. The right person in your organization can then investigate the issue.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501368_ProblemContactEmail.html",
      "title": "Set up Problem Contact Email Addresses",
      "section": "How Problem Contact Emails work"
    }
  },
  {
    "content": "Set up Problem Contact Email Addresses\n\nYou can add Problem Contact Email Addresses at the team level and at the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. level. FormSpace-level Problem Contacts override team-level Problem Contacts. This means that if you have an issue specific to a FormSpace, the system only notifies the FormSpace-level Problem Contacts. If you don’t configure FormSpace Problem Contacts, the system notifies your Team Problem Contacts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501368_ProblemContactEmail.html",
      "title": "Set up Problem Contact Email Addresses",
      "section": "Set up Problem Contact Email Addresses"
    }
  },
  {
    "content": "Prerequisite\n\nYou must be a TrueContext Admin user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501368_ProblemContactEmail.html",
      "title": "Set up Problem Contact Email Addresses",
      "section": "Prerequisite"
    }
  },
  {
    "content": "Team-Level Settings\n\nIn the Web Portal, go to Your Name > Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information.. Result: The system opens your Team Settings on the General tab. Under Problem Contact Email Addresses, enter up to 12 email addresses separated by a comma, semicolon, or new line. Select Update to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501368_ProblemContactEmail.html",
      "title": "Set up Problem Contact Email Addresses",
      "section": "Team-Level Settings"
    }
  },
  {
    "content": "FormSpace-Level Settings\n\nGo to Forms & Integrations > List FormSpaces. Result: The system opens a list of your FormSpaces. Find the FormSpace you want to update. Select the settings icon, and then select Update. Under Problem Contact Email Addresses, enter up to 12 email addresses separated by a comma, semicolon, or new line. Select Update to save your changes. Note:Keep in mind that this setting overrides the team-level Problem Contact Email Addresses.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501368_ProblemContactEmail.html",
      "title": "Set up Problem Contact Email Addresses",
      "section": "FormSpace-Level Settings"
    }
  },
  {
    "content": "Overview of TrueContext language support\n\nLanguage support across the platform TrueContext provides all types of users with the option to work in their preferred languages. You can set up Teams, Users, Documents, Data Sources, the Mobile App, your device, and your browser to display content in different languages. For example, a form designer can work in English, a field user in Spanish, and a Web Portal admin in Japanese.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Overview of TrueContext language support"
    }
  },
  {
    "content": "Language support across the platform\n\nTrueContext provides all types of users with the option to work in their preferred languages. You can set up Teams, Users, Documents, Data Sources, the Mobile App, your device, and your browser to display content in different languages. For example, a form designer can work in English, a field user in Spanish, and a Web Portal admin in Japanese.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Language support across the platform"
    }
  },
  {
    "content": "Language support for the Mobile App and forms\n\nThis example shows the TrueContext Mobile App framework in Spanish, based on the device language and locale settings. The following example shows the form in Spanish. Info:In this example, the Form Designer created the form in Spanish. To provide your field users with a choice of languages for a single form, you’ll need the Multi-Language add-on. The next example shows how the user’s selected device language affects the date format when they answer a question. Tip:When entering text, a user can type answers in any language that their device keyboard supports.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Language support for the Mobile App and forms"
    }
  },
  {
    "content": "Language support for the Web Portal\n\nThis example shows the submitted form displayed in the Web Portal. In this example, the user profile language is set to Japanese. Info:For questions that use the Date or Date/Time Data Types, TrueContext stores dates in the format yyyy-MM-dd. The Web Portal displays the date format based on the user profile language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Language support for the Web Portal"
    }
  },
  {
    "content": "Language support for the Form Builder\n\nThe following example shows the Form Builder with the user profile language set to Japanese. Note:When you enter a Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. for a page, section, or question, use only letters (with no accent marks) and numbers. Other characters in a Unique ID could cause unexpected behavior.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Language support for the Form Builder"
    }
  },
  {
    "content": "Language support for Documents\n\nThe system uses the Source Language for metadata labels and other system-generated content, such as page numbering. Metadata labels apply to the fields that you select when you set up a document, such as: Reference Number Form Name Submitter Name Submission Date The following example shows the metadata labels in Japanese. The metadata values are not translated. Info:If you want to translate more than metadata and system-generated content, you’ll need the Multi-Language add-on. Without the Multi-Language add-on, documents do not include translations for question text, answers, or built-in form content.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Language support for Documents"
    }
  },
  {
    "content": "How TrueContext determines the language to display\n\nThe following table describes different language settings and the content that they control. Info:None of the following settings affect the built-in form or document content. If you want to offer Forms and Documents in multiple languages, you’ll need the Multi-Language add-on. In the following table: Chinese (China) is Chinese (Simplified). Chinese (Hong Kong SAR China) is Chinese (Traditional). Setting Content Languages supported by TrueContext Device language In the TrueContext iOS, macOS, Android, and Windows OS: Menus Settings Messages Notifications Tip:The device language does not change the language of the form content. Chinese (Simplified) Chinese (Traditional) English French German Japanese Portuguese Russian Spanish Turkish Keyboard language In the Mobile Apps, entries that you type into a field. All languages that your keyboard supports. Browser language In the Web Portal, the browser language affects the sign-in screen. All",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "How TrueContext determines the language to display"
    }
  },
  {
    "content": "languages supported by your browser. In Customer Feedback forms, the browser language affects the framework, such as: Action buttons Confirmation messages Error messages English German Spanish French Japanese Portuguese Russian Turkish TrueContext User profile Web Portal and message display language, including: New user welcome email Menus and other user interface elements Settings Confirmation messages Error messages Emails and notifications English French Japanese Spanish TrueContext Form Builder Form Builder display language English Japanese Spanish TrueContext Team settings General > Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Language: Emails that the system sends to problem contact email addresses. Default language for new user profiles. You can choose a different language",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "How TrueContext determines the language to display"
    }
  },
  {
    "content": "when you create the user profile. Users can also sign into the Web Portal to change their language themselves. Tip:This setting does not change the language of the form content or answers. English French Japanese Spanish General > Document and Data Display Settings > Default Document Language Default Source Language for new documents. Tip:You can select a different Source Language when you set up the Source Language for a document. The Source Language affects translations for: Metadata labels, such as Reference Number and Form Name. System-generated content, including: Single Checkbox yes/no answers Page x of y text View Map links x of y numbering for rows in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Info:If you want to translate other document content, you’ll need the Multi-Language add-on. Arabic",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "How TrueContext determines the language to display"
    }
  },
  {
    "content": "Chinese (China) Chinese (Hong Kong SAR China) Czech Danish Dutch English Finnish French German Greek Hebrew Hindi Italian Japanese Korean Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Thai Turkish Ukrainian Vietnamese Note:TrueContext does not officially support right-to-left languages. You might find, however, that a form built using a right-to-left language displays correctly on the Mobile App and in some types of Documents.If you use a right-to-left language to build your form, test thoroughly on all devices and in Documents generated for submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "How TrueContext determines the language to display"
    }
  },
  {
    "content": "Change the language of the TrueContext Mobile App\n\nThe language setting on your device determines the language displayed in the TrueContext Mobile App. How you change those settings depends on: The type of device. The Operating System (OS) version. Whether your organization uses a Mobile Device Management (MDM) system. Note:Keep in mind that:Changes to the device language only affect the language of the Mobile App framework, not the content of the form itself.If you set your device to a language that isn’t one of our supported languages, the Mobile App defaults to English. For more information about how to set up your device language, refer to the manufacturer’s help pages.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Change the language of the TrueContext Mobile App"
    }
  },
  {
    "content": "Change the language for problem contacts and new user defaults\n\nThe team-level Language setting determines the: Language used in emails that the system sends to problem contact email addresses. Default language displayed when you set up a new user. You can change the default language to a different language when you create the user. They can also sign into the Web Portal to change the language themselves. As a TrueContext Admin user, select Team Settings. On the General tab, in the Team Settings section, select a Language. Select Update at the bottom of the page to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Change the language for problem contacts and new user defaults"
    }
  },
  {
    "content": "Change the language for the Customer Feedback form framework\n\nBrowser settings determine the language used to display the Customer Feedback form framework (built-in navigation, messages, and notifications). How you change those settings depends on your browser and device. On an iPhone, go to the Settings, select a browser app, and then select the language. On a Mac, go to System Preferences > Language & Region > Apps. On an Android or Windows device, open the browser, go to the browser settings, and then select the language. Tip:If you set your device to a language that isn’t one of our supported languages, the Customer Feedback form framework defaults to English.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Change the language for the Customer Feedback form framework"
    }
  },
  {
    "content": "Change the language for form submission Documents\n\nIn a visual document (PDF, Microsoft Word, or HTML), you can display some of the labels in different languages. The team-level Default Document Language setting determines the default Source Language for new documents. The Source Language is used to display metadata labels and system-generated content. When you set up a document: Choose a Source Language that’s the same as or different from the team-level Default Document Language. Select a font. The list includes only those fonts that support the Source Language. Info:The topic Supported Fonts in PDF, Word, and HTML Documents lists the fonts that TrueContext supports and the languages they work with. Note:Documents do not include translations for question text, answers, built-in form content, and Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Change the language for form submission Documents"
    }
  },
  {
    "content": "options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. values. If you want to translate more than metadata and system-generated content, you’ll need the Multi-Language add-on.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Change the language for form submission Documents"
    }
  },
  {
    "content": "Change the language for the Web Portal and Form Builder\n\nYour user profile Language setting determines the display language for both the Web Portal and the Form Builder. The Form Builder does not currently offer support for French. If you select French under Language settings in your user profile, the Web Portal will display in French, but the Form Builder will remain in English. Go to Username > User Profile: Select Update from the menu next to your username. On the Account tab, in the Locale section, select a language. Select Update at the bottom of the page to save your changes. Once the page loads, your user profile changes to the new language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024271492.html",
      "title": "Language Settings and Translations",
      "section": "Change the language for the Web Portal and Form Builder"
    }
  },
  {
    "content": "About\n\nTime zones in TrueContext can be set at multiple levels: the team level, the user level, on particular documents, and on user devices. The TrueContext server converts Coordinated Universal Time (UTC) to display the desired time zone. Note:Always choose your time zones based on the city. If yours is not listed, try to find the one close to you. Certain countries, states, and provinces do not observe Daylight Savings Time, and therefore choosing solely based on time zone may cause an hour's difference while Daylight Savings Time is in effect.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217746878.html",
      "title": "Time Zone Settings",
      "section": "About"
    }
  },
  {
    "content": "Team Settings\n\nThe Team Time Zone you set in Team Settings applies to: Dates and times displayed in the Web Portal for your team, including Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). times. The Team Time Zone does not apply to times in Data Records sent from mobile devices. Dates and times in your team’s output documents. The time zone only applies if you set your Document Time Zone Source to Team Preference Setting.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217746878.html",
      "title": "Time Zone Settings",
      "section": "Team Settings"
    }
  },
  {
    "content": "User Profile Settings\n\nNot all users will be in the same time zone. TrueContext has a user Preferred Time Zone setting in the User Profile. The user time zone overrides the team time zone for dates and times displayed in the Web Portal. It does not apply to output documents. This setting matches the team time zone by default. This feature is useful if most of the team is in one place, like New York, but this particular user is in Colorado. While other users will still see a time of 10:00AM (EST) in the web portal, this user will see it as 8:00AM (MST).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217746878.html",
      "title": "Time Zone Settings",
      "section": "User Profile Settings"
    }
  },
  {
    "content": "Document Time Zone Source\n\nData records (form submissions) can be made available to download in the form of a document -- PDF/Word/HTML, CSV, XML/JSON, and more. Each document configuration has an option to choose a document time zone source. This sets what time zone any dates/times collected in the form will be translated to in this particular document. By default, documents are set to the Form Submission time zone. Team Preference Setting: Shows dates and times using the Team Time Zone. Form Submission: Shows dates and times in the device time zone, as submitted by the user. Custom: Set a custom time zone to display dates and times.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217746878.html",
      "title": "Time Zone Settings",
      "section": "Document Time Zone Source"
    }
  },
  {
    "content": "Mobile Device Settings\n\nYour mobile device will automatically detect what time zone you are in. Dates in mobile forms, in the sent tab, etc., will automatically be shown in the time zone your device is in. There is a Time Zone setting in the Account Details pane of the Settings screen. This changes the logged in user's time zone in the web portal and does not change the time zone displayed on the device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217746878.html",
      "title": "Time Zone Settings",
      "section": "Mobile Device Settings"
    }
  },
  {
    "content": "About\n\nSupport Information, including a web address, phone number and email address, can be found in the TrueContext Settings on iOS and Android devices. By default, this page displays the contact information for TrueContext Support. A team admin can customize this support information -- for example, to include contact information for their own corporate help desk. This will show up in the TrueContext Settings on the devices of all users in the team. Support Info can appear in a number of different languages and can be HTML formatted.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501408.html",
      "title": "Customize the Mobile App \"Support Information\"",
      "section": "About"
    }
  },
  {
    "content": "Customize Support Information\n\nEnter the Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. by mousing over your username in the main menu. This option will only appear if you are a TrueContext Admin user. Enter the Mobile Device tab. On the right side of Device Support Information, mouse over Actions and select Override Standard Support Information. Edit the Support Information and save changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501408.html",
      "title": "Customize the Mobile App \"Support Information\"",
      "section": "Customize Support Information"
    }
  },
  {
    "content": "Add Support Information in Multiple Languages\n\nIt is possible to provide different Support Information (including contact information) to users based on the selected language in their mobile device's general settings. For example, English and Spanish users on the same team could be provided with different phone numbers to contact to get telephone support in their respective languages. To add support for users of specific languages, click the \"+\" tab. Select a language and edit the Support Information as desired. Click the \"+\" tab to add more languages. If a user on the team has a language configured on their mobile device that does not match any of the languages selected, they will receive the \"Any\" support information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501408.html",
      "title": "Customize the Mobile App \"Support Information\"",
      "section": "Add Support Information in Multiple Languages"
    }
  },
  {
    "content": "In the Mobile App\n\nSupport information is found in the Mobile App Settings, under Contact Support.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501408.html",
      "title": "Customize the Mobile App \"Support Information\"",
      "section": "In the Mobile App"
    }
  },
  {
    "content": "About Push Notifications\n\nPush notifications A push notification is an automatic message sent to users to inform them of an update to the content of their TrueContext Mobile App. A team admin can enable or suppress push notifications. let your mobile app users know instantly when there is something new for them on the Mobile App. TrueContext uses \"native push\" -- even if the app is not running on the device, a notice pops up and invites you to click, start the app if necessary, and perform a send/receive with the server.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501358.html",
      "title": "Push Notifications Overview",
      "section": "About Push Notifications"
    }
  },
  {
    "content": "What is Pushed?\n\nNotifications may be pushed if one of the following occurs: A new form dispatch is assigned to your user account A new form is added for a user (newly created, copied, etc.) An existing form is updated The content of a data source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. or form resource is updated Note: Users will only get a push notification if they have \"can submit\" permissions on the form or data source that has changed. Depending on the device notification configuration, an initial prompt will normally show in the device notifications area. Selecting the notifications area will show details. Tapping on the notification text will launch TrueContext and begin a normal reconcile to download the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501358.html",
      "title": "Push Notifications Overview",
      "section": "What is Pushed?"
    }
  },
  {
    "content": "updates.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501358.html",
      "title": "Push Notifications Overview",
      "section": "What is Pushed?"
    }
  },
  {
    "content": "Configuring Push Notifications\n\nTo enable push notifications in your TrueContext solution, follow the steps for both the TrueContext server and on the mobile device. Follow the links below for details: Turn On Push Notifications for your Team Team Level Controls FormSpace Controls Enable Push Notifications on a Mobile Device",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501358.html",
      "title": "Push Notifications Overview",
      "section": "Configuring Push Notifications"
    }
  },
  {
    "content": "Suppressing Push Notifications on Specific Actions\n\nAdministrators making changes in the web portal generates many push notifications to mobile users. Some mobile users may find this undesirable. Administrators can check the \"Suppress Push Notifications for this Action\" option at the bottom of \"create\" or \"edit\" pages. This gives administrators the ability to make a series of changes without notifying users until the end. For more information about which actions have suppressible push notifications, follow this link. The option to suppress push messages has also been added to the REST API call for Updating a Data Source (Lookup).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501358.html",
      "title": "Push Notifications Overview",
      "section": "Suppressing Push Notifications on Specific Actions"
    }
  },
  {
    "content": "Push Notification Hierarchy\n\nPlease keep in mind that the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. push notification setting will take precedence over the team level setting. This allows a team to turn on push notifications globally, and then turn off push notification just for specific FormSpaces (like testing FormSpaces). When using the \"Suppress Push Message notification...\" option, it will override the FormSpace and team level setting. The hierarchy is therefore: Data Source (or any Create/Update user action that has the \"Suppress Push Notification\" option. FormSpace Team Please note that you can only configure push notifications at the FormSpace or team level; you cannot permanently enable push notifications for data source updates.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501358.html",
      "title": "Push Notifications Overview",
      "section": "Push Notification Hierarchy"
    }
  },
  {
    "content": "About\n\nControl of whether or not the TrueContext server will push notifications to mobile users is available at both the Team and FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. levels, with FormSpace settings overriding Team controls. Users will only receive notifications regarding changes to forms they have access to. Mobile device users must have the app set up to receive push notifications.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501348.html",
      "title": "Turn On Push Notifications for your Team",
      "section": "About"
    }
  },
  {
    "content": "Turn On/Off Push Notifications for Your Team\n\nThis will enable push notifications for all forms and data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. for your team. To enable push notifications: While logged in as a TrueContext Admin user, mouse over the username in the top right corner. Select Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information.. Enter the General Settings tab. Under Team Settings, check (or uncheck to turn off) the \"Notify Users of updates via Push Notification messages\" box and save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501348.html",
      "title": "Turn On Push Notifications for your Team",
      "section": "Turn On/Off Push Notifications for Your Team"
    }
  },
  {
    "content": "Turn On/Off Push Notifications at the FormSpace Level\n\nThere is a FormSpace-level control for push notifications. This control overrides the Team Settings if selected. This lets you enable or disable push notifications for the forms in that FormSpace. Go to the FormSpaces page, select the gear icon and select Update. Under the Edit FormSpace tab, select the desired setting. Select Update at the bottom of the page to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501348.html",
      "title": "Turn On Push Notifications for your Team",
      "section": "Turn On/Off Push Notifications at the FormSpace Level"
    }
  },
  {
    "content": "About\n\nAdministrators making changes in the Web Portal generate many push notifications to mobile users. Some mobile users may find this undesirable. Administrators can check the Suppress Push Notifications for this Action option on some actions. These action-specific settings will override FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. and Team push notification settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501398.html",
      "title": "Turn Off Push Notifications for Select Actions",
      "section": "About"
    }
  },
  {
    "content": "Suppressing Push Notifications on Specific Actions\n\nAdministrators can suppress push notifications for certain actions in the Web Portal. This gives administrators the ability to make a series of changes without notifying users until the end. This option is available for the following actions: Editing, copying, or merging a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. Adding or editing a Resource. Copying or moving a form. Finish edits to the item. Select the box next to Suppress Push message notification to users for this action at the bottom of the page. Select Update at the bottom of the page to save your changes. The option to suppress push messages has also been added to the REST API call for Updating a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501398.html",
      "title": "Turn Off Push Notifications for Select Actions",
      "section": "Suppressing Push Notifications on Specific Actions"
    }
  },
  {
    "content": "Data Source (Lookup) (Advanced and Enterprise tiers only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501398.html",
      "title": "Turn Off Push Notifications for Select Actions",
      "section": "Suppressing Push Notifications on Specific Actions"
    }
  },
  {
    "content": "Suppress Push Notifications after a Data Source Fetch\n\nSome Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. that fetch data on a schedule will send a push notification on every fetch. If it is not essential that users get the updated Data Source immediately, you can turn off push notifications for that specific Data Source. Hover over the Forms & Integrations tab. If the team has multiple FormSpaces, confirm that you are in the desired FormSpaces, and select Data Sources. Select the desired Data Source from the list. To update the Data Source settings, hover over the data source name and select Edit, or select Edit Data Source. To turn off push notifications for the Data Source, select the box next to Suppress",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501398.html",
      "title": "Turn Off Push Notifications for Select Actions",
      "section": "Suppress Push Notifications after a Data Source Fetch"
    }
  },
  {
    "content": "Push message notification to users for this action at the bottom of the page. Select Update at the bottom of the page to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501398.html",
      "title": "Turn Off Push Notifications for Select Actions",
      "section": "Suppress Push Notifications after a Data Source Fetch"
    }
  },
  {
    "content": "Form Builder Push Notification Controls\n\nPush notifications A push notification is an automatic message sent to users to inform them of an update to the content of their TrueContext Mobile App. A team admin can enable or suppress push notifications. are sent whenever an administrator saves changes to a form in the Form Builder if the mobile user has \"Can Submit\" permissions on that form. Administrators can use FormSpaces and user permissions to limit push notifications when testing new forms. However, they may still want to suppress push notifications when working on active forms. Finish editing the desired form. Select Save and Deploy. Select the box next to Suppress the push message notification of this action. Select Deploy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501398.html",
      "title": "Turn Off Push Notifications for Select Actions",
      "section": "Form Builder Push Notification Controls"
    }
  },
  {
    "content": "About\n\nEach TrueContext account is intended for use on one mobile device. To use TrueContext on more mobile devices, add another user. When you add a user, you can control how much access users have to the web portal. Users on your team can also access your mobile forms in the app. Watch the video below to learn how to add a user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493748_AddUsers.html",
      "title": "Add Users",
      "section": "About"
    }
  },
  {
    "content": "Add a User\n\nUnder the Users & Groups tab, select Create User. In the Account tab, fill in the new user's Username, Email Address, and Name. Please use a specific email address, as this is where the welcome email will be sent. Tip:If your team uses Multi-Factor Authentication, TrueContext sends a 6-digit authentication code to the user’s email address each time they sign in. If you want to set up MFA, ensure every user on your team has a valid email address associated with their account. Under the same heading, assign the user a Role. This will determine what control and how much access users have to the web portal. Also under Account, assign the user a Group. The user's Group determines what forms users have access to in the mobile app. You can select Send Welcome Email on Create, which will notify the user of their new account. For security reasons, we cannot send user passwords in emails. If you choose Set a password now, you will be responsible for letting the user know what their",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493748_AddUsers.html",
      "title": "Add Users",
      "section": "Add a User"
    }
  },
  {
    "content": "password is. Alternatively, choose to send a link so users can set their own password. Once you're satisfied, scroll to the bottom of the page, and select Create to save the user. Note: The welcome email might go to the user’s spam or trash folders. If the user can’t find the welcome email, check that their email address is correct. The welcome email should look like the following image:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493748_AddUsers.html",
      "title": "Add Users",
      "section": "Add a User"
    }
  },
  {
    "content": "Set up Data Sources and Destinations\n\nThis section includes the following content: Connections OverviewData Sources OverviewSimple Examples of Data Source SetupBest Practices for Data Source SizeData Destinations Overview",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/SetUpDataSources&Destinations.htm",
      "title": "Set up Data Sources and Destinations",
      "section": "Set up Data Sources and Destinations"
    }
  },
  {
    "content": "Connection reuse\n\nConnections streamline the process of creating new Data Sources and Destinations. Each Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and Destination can simply use an existing Connection without the need to re-enter credentials. This is especially useful for organizations that have multiple Data Sources and Destinations connected to the same service. For example, the Amazon Web Services Connection can be used by the Amazon S3 Data Source and the Amazon Glacier, Amazon S3, and Amazon SNS Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Connection reuse"
    }
  },
  {
    "content": "Credentials and data access\n\nIn TrueContext, when a Team Admin sets up a Connection, they enter the account credentials for the third-party system. Once they save the Connection, it becomes available to TrueContext and other users for Data Source and Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. setup. This means that other TrueContext users on the team can fetch and access data available to the third-party user account. Note:We recommend that you create a dedicated Integration User account for your third-party system and use that account to set up TrueContext Connections. Set up the Integration User with specific permissions and limited access to the third-party system data. This ensures that TrueContext Admin users and users with “Can Create” permissions can only access the data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Credentials and data access"
    }
  },
  {
    "content": "that they need.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Credentials and data access"
    }
  },
  {
    "content": "Create a Connection\n\nConnections can be created from the Connections page or directly from the configuration options for any Data Source or Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Create a Connection"
    }
  },
  {
    "content": "Connections page\n\nFrom the main menu, hover over Forms & Integrations. Select Connections. On the following page, select Create Connection. Follow the configuration instructions for the selected connection type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Connections page"
    }
  },
  {
    "content": "Data Source or Destination Connection tab\n\nWhen creating or editing a Data Source or Destination, go to the Connection tab. Select Create a New Connection. Follow the configuration instructions for the selected connection type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Data Source or Destination Connection tab"
    }
  },
  {
    "content": "Generic Backend Integration\n\nAvailable on all tiers: Essentials Advanced Enterprise Email Connection FTP/Secure FTP Connection Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise HTTP Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Generic Backend Integration"
    }
  },
  {
    "content": "Business Software Integration\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise SharePoint Server Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Business Software Integration"
    }
  },
  {
    "content": "Cloud Service Integration\n\nAvailable on all tiers: Essentials Advanced Enterprise Dropbox Connection Google Connection Microsoft OneDrive Connection Microsoft 365 Connection Box Connection ShareFile Connection Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Salesforce Connection ServiceNow Connection Zendesk Connection Available on the Enterprise tier only: Essentials Advanced Enterprise Amazon Web Services Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500558_ConnectionsOverview.html",
      "title": "Connections Overview",
      "section": "Cloud Service Integration"
    }
  },
  {
    "content": "Common uses\n\nData Sources can provide a list of values for the mobile user in a Dropdown, Multiselect, or Radio Button question. This makes completing a form easier, faster, and more accurate. Errors are more easily avoided when the user selects an answer from a list of preset options. Tip:You can use a Data Source within any type of section, including a Repeatable Section. Set up a lookup question, and then select Use Data Source for Options. With a Data Source, you can auto-populate a series of questions in the form based on a single selection. For example, the mobile user could select a customer name and have fields for customer contact information prefilled for them. Data sources can be filtered or partitioned to limit the data available to specific users or user groups. If you have the Multi-Language add-on, you can set up a lookup question to display the options in the user’s selected language. Info:Customers on the Enterprise tier can use the Multi-Column View and Default Sort",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Common uses"
    }
  },
  {
    "content": "Options. These make it easier for field users to select the right answer to a Dropdown, Multiselect, or Radio Button question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Common uses"
    }
  },
  {
    "content": "Maintaining Data Sources\n\nWe store Data Sources as tables (rows and columns) in the TrueContext system. Several options are available for maintaining your Data Sources. Retrieve (fetch) data dynamically from cloud-based services like ServiceNow, Microsoft SharePoint Lists, Salesforce, ServiceMax, Dropbox or Amazon S3, or from a Google Apps Spreadsheet. Use the TrueContext API from within a script or application to update data sources. Dynamically retrieve data from a server by means of an HTTP GET request. Use the TrueContext User List Data Source to get information about TrueContext users in a selected group. This makes it easy to create and maintain a list of users to select from in a form. Manage data by means of manual uploads of CSV, XML, JSON, and Excel files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Maintaining Data Sources"
    }
  },
  {
    "content": "Using a single Data Source in multiple forms\n\nOne of the key benefits of Data Sources is the ability to integrate data sets from business operations within forms. Data Sources can be used in multiple questions within a single form, and across multiple forms within a TrueContext FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. This enables businesses to centralize their data within a few TrueContext objects. Data Sources are created within a FormSpace. You can use a Data Source with any form within the same FormSpace. The Web Portal provides information on whether a Data Source is in use and which forms reference it: Forms & Integrations > Data Sources Note:You can’t delete a Data Source that’s “in use” by an Active or Draft A draft form is a partially filled-out",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Using a single Data Source in multiple forms"
    }
  },
  {
    "content": "form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Using a single Data Source in multiple forms"
    }
  },
  {
    "content": "How the system schedules Data Source fetches\n\nThe system prevents overload by staggering fetch times with a random minute offset. Hourly fetches The system assigns the same random minute each hour. The random minute is different for each Data Source. For example, if your random minute is 29, fetches occur at 4:29, 5:29, 6:29, and so on. Daily, weekly, and monthly fetches The system applies the random minute offset to the scheduled time. The system schedules fetches around midnight in your specified time zone, plus the random minute offset. This prevents too many Data Sources from fetching simultaneously and improves system performance.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "How the system schedules Data Source fetches"
    }
  },
  {
    "content": "Data Sources in the Forms Library\n\nThe Forms Library The Forms Library is a resource available to form designers that provides a list of customizable form and Data Source templates. Users can select a form from the Forms Library when they create a new form. also contains Data Sources that users can import for use within forms. To find a Data Source in the library: Sign in to the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., and then go to the Get Started page. If you can’t see that page: Update your user profile. On the Advanced tab, select Show ‘Get Started’ tab, and then select Update. Or, go directly to https://live.truecontext.com/library/sources and then go to step 4. In the Resources section, select the Forms Library. Select the Data Sources tab. To view the details, select the right arrow. To import the Data Source, select the + icon. Some sample forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Data Sources in the Forms Library"
    }
  },
  {
    "content": "found in the TrueContext Library also have Data Sources associated with them. When you import a form that uses a Data Source, both the form and the Data Source are imported.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500328DataSourcesOverview.html",
      "title": "Data Sources Overview",
      "section": "Data Sources in the Forms Library"
    }
  },
  {
    "content": "Set up a list of options\n\nIn this example, the mobile user needs to complete a work order that includes required parts. First, set up the parts list Data Source, and then use that Data Source in a Dropdown, Multiselect, or Radio Button question. Create your Data Source and connect it to TrueContext. The following example shows the “Parts” column. Parts 2\" Screw 3\" Screw 2\" Washer 3\" Washer 2\" Nut 3\" Nut Add or edit a Dropdown, Multiselect, or Radio Button lookup question. Select the Options tab, select Use Data Source for Options, and then choose the parts list Data Source. Select the column that contains the list of parts that you want to display to the field user. Save the question, and then Save and Deploy the form. Result: The field user can select a part from the list. Info: If you have the Multi-Language add-on, you can set up a lookup question to display the options in the user’s selected language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500368_UsingDataSourcesUseCases.html",
      "title": "Simple Examples of Data Source Setup",
      "section": "Set up a list of options"
    }
  },
  {
    "content": "Set up different display and data values\n\nUsing a similar parts list, this example shows how to collect a part number for your records. To make it easier for users to select the correct part, set up different display and data (server) values. The Data Source must have two separate columns, one for Part Name and one for Part Number: Part Name Part Number 2\" Screw SCR2IN 3\" Screw SCR3IN 2\" Washer WSR2IN 3\" Washer WSR3IN 2\" Nut NT2INC 3\" Nut NT3INC Create your Data Source and connect it to TrueContext. Add or edit a Dropdown, Multiselect, or Radio Button lookup question. Select the Options tab, select Use Data Source for Options, and then choose the parts list Data Source. Select the column that contains the list of parts to display to the field user. Select the column that contains the values to record as answers. Save the question, and then Save and Deploy the form. Result: The field user can select a part name from the list. The data sent to the server includes the part number.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500368_UsingDataSourcesUseCases.html",
      "title": "Simple Examples of Data Source Setup",
      "section": "Set up different display and data values"
    }
  },
  {
    "content": "Info:Customers on the Enterprise tier can use the Multi-Column View and Default Sort Options. These make it easier for field users to select the right answer to a Dropdown, Multiselect, or Radio Button question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500368_UsingDataSourcesUseCases.html",
      "title": "Simple Examples of Data Source Setup",
      "section": "Set up different display and data values"
    }
  },
  {
    "content": "Related topics\n\nData Sources Overview Create and Manage Data Sources Use Data Sources in Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500368_UsingDataSourcesUseCases.html",
      "title": "Simple Examples of Data Source Setup",
      "section": "Related topics"
    }
  },
  {
    "content": "Recommendations for Data Source size\n\nWe recommend that you keep your Data Sources as small as possible for the following reasons. Enhanced user experience The larger the Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., the longer it takes to download data to the mobile device, especially on older hardware and platforms. TrueContext makes downloads as fast as possible, and smaller Data Sources contribute to an experience of quick access to forms and data. The same amount of data downloads faster when split into multiple Data Sources—use multiple, smaller Data Sources rather than one large one. Because we use multiple connections, more than one Data Source can download at the same time. Processing times increase",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Recommendations for Data Source size"
    }
  },
  {
    "content": "when the TrueContext Mobile App has to search through a large data set to display the data for a specific question in a form. Tip:A frustrated user might complete an outdated version of a form using data that’s not current. Use smaller Data Sources to give your users quick access to your forms. Data integrity Your organization must regularly maintain and update the data that’s used in a TrueContext Data Source. Organize your data logically so that it’s easier for you to maintain. For example, it’s easier to maintain 1,000 rows of data than it is to maintain 50,000 rows. Smaller Data Sources make it easier to avoid duplication and to maintain data integrity. For high volumes of data, follow best practices for database normalization. This reduces the amount of data to transfer. Make sure your data model is designed to maximize efficiency. Tip:You can also partition a Data Source (Enterprise tier only) to optimize mobile device performance, but this doesn’t reduce the actual Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Recommendations for Data Source size"
    }
  },
  {
    "content": "size.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Recommendations for Data Source size"
    }
  },
  {
    "content": "Why we limit the size of your Data Sources\n\nData Source size limits are a way to help you optimize mobile device performance. The more data that you load on a device, the longer it takes for the device to reconcile. The size limits apply when you upload, fetch, or update a Data Source. The system enforces a column and character limit for all tiers. Other size limits vary by tier, as shown in the following table. Tier Maximum number of cells Maximum number of rows Maximum number of columns Maximum number of characters in a cell Maximum file size Essentials 100,000 10,000 500 32,767 500 MB (Except Excel files, which have a limit of 50MB). Advanced 500,000 50,000 Enterprise 2,000,000 (default) 200,000 (default)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Why we limit the size of your Data Sources"
    }
  },
  {
    "content": "File size\n\nThe system limits the size of manually uploaded and dynamically fetched Data Source files to 500 MB. If your file exceeds the limit, the system blocks you from uploading or using the file. Note:Excel files have a maximum file size of 50 MB. This limit applies to both manually uploaded and dynamically fetched files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "File size"
    }
  },
  {
    "content": "Rows and cells\n\nThe TrueContext system limits the size of each Data Source based on the number of rows and cells (rows multiplied by columns). The system calculates the number of rows and cells compares these numbers to the limits for your tier, and determines whether the Data Source exceeds the size limits. If there are too many rows or cells, the system uploads the data but cuts off (truncates) any rows and cells that exceed the limit. In this case, the system displays an on-screen message and emails the problem contact email address.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Rows and cells"
    }
  },
  {
    "content": "Columns and characters\n\nIf a Data Source has more than 500 columns or 32,767 characters in one cell, regardless of tier, the system displays an error message and does not upload any data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Columns and characters"
    }
  },
  {
    "content": "How to resolve a Data Source size limit issue\n\nRemember that large Data Sources can cause a device to take longer to reconcile. This might result in a poor mobile user experience. To resolve the issue of truncated data, try one of the following options. Reduce the Data Source size by removing columns or rows. Use multiple Data Sources instead of one. For example, you can separate customer data from equipment data. Upgrade to a higher tier (contact your Account Manager or your Customer Success Manager for details).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "How to resolve a Data Source size limit issue"
    }
  },
  {
    "content": "Size limit increases for Enterprise customers\n\nTip:We recommend that you follow the recommendations for Data Source size before you request a size limit increase. If you’re an Enterprise customer, you can contact Support to discuss a size limit increase. Please provide Support with the following information: Are all columns in the data source required? Could you remove some to reduce the size? Will partitions be configured? If yes, how many rows and cells will the largest partition contain? What is the business reason for the cell increase? How often will you need to update the Data Source? We’ll pass this information along to our development team to evaluate the request and implement the change.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/DataSourceSizeLimits.htm",
      "title": "Best Practices for Data Source Size",
      "section": "Size limit increases for Enterprise customers"
    }
  },
  {
    "content": "About\n\nData Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. control where data is sent when a form is submitted. Data is automatically routed to the chosen service in the format of your choice, making data sharing and storage an automated process. Data Destinations can: Deliver information in structured data formats, such as XML and JSON. Route form submission data to cloud and enterprise services. Create and update records in field-based systems such as Salesforce and Microsoft SharePoint. Email user-friendly PDF or Word documents to customers. Send notifications through SMS or social media. One data destination can be linked to any number of forms in the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "About"
    }
  },
  {
    "content": "multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. Multiple Data Destinations can also be linked to the same form, allowing your data to be delivered to a variety of locations simultaneously. Don't want your forms sent anywhere? You can still download them from the portal. The following video shows you the basics of how to set up a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. using the example of a Box account. Data Destinations that Require a Document The following table describes the Data Destinations that support or require a document. Requires a Document Can have a Document, but is not required Not compatible with Documents Microsoft SharePoint Server Amazon Glacier Amazon SNS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "About"
    }
  },
  {
    "content": "Salesforce Apex REST Amazon S3 Google Sheets ShareFile Box Dispatch WebDAV (HTTP PUT or PATCH) Customer Feedback Microsoft SharePoint List Dropbox SMS Email Zendesk Ticket FTP/Secure FTP Google Drive HTTP HTTP File Upload Microsoft OneDrive Microsoft OneDrive for Business Microsoft SharePoint Document Library Salesforce (except Apex REST) ServiceNow Table",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "About"
    }
  },
  {
    "content": "Data Destinations that Require a Document\n\nThe following table describes the Data Destinations that support or require a document. Requires a Document Can have a Document, but is not required Not compatible with Documents Microsoft SharePoint Server Amazon Glacier Amazon SNS Salesforce Apex REST Amazon S3 Google Sheets ShareFile Box Dispatch WebDAV (HTTP PUT or PATCH) Customer Feedback Microsoft SharePoint List Dropbox SMS Email Zendesk Ticket FTP/Secure FTP Google Drive HTTP HTTP File Upload Microsoft OneDrive Microsoft OneDrive for Business Microsoft SharePoint Document Library Salesforce (except Apex REST) ServiceNow Table",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "Data Destinations that Require a Document"
    }
  },
  {
    "content": "Testing and Troubleshooting\n\nSet up at least one problem contact email address to receive information on Data Destination problems (i.e., connection issues, FTP unavailable). If data fails to send (e.g. if your SFTP server is down), TrueContext will retry the delivery of the data automatically. Read more about testing and troubleshooting Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "Testing and Troubleshooting"
    }
  },
  {
    "content": "Generic Backend Integration\n\nAvailable on all tiers: Essentials Advanced Enterprise Email Data Destination: Send forms by email. FTP/Secure FTP (SFTP) Data Destination: Upload forms to an FTP or SFTP server. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise WebDav (HTTP PUT) Data Destination: Upload forms to your WebDAV-enabled wiki, content management system, or web server. HTTP File Upload Data Destination: Send forms to the file upload feature on your web server. HTTP Data Destination: Send forms to your web application.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "Generic Backend Integration"
    }
  },
  {
    "content": "System Integration\n\nDispatch Data Destination: Dispatch forms directly from a mobile device. This Data Destination is only available on the Advanced and Enterprise tiers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "System Integration"
    }
  },
  {
    "content": "Cloud Service Integration\n\nAvailable on all tiers: Essentials Advanced Enterprise Dropbox Data Destination: Upload forms to a Dropbox folder. Google Drive Data Destination: Upload forms to a Google Drive folder. Google Sheets Data Destination: Use forms to create or update a spreadsheet. Microsoft OneDrive Data Destination: Upload forms to Microsoft OneDrive. Microsoft OneDrive for Business Data Destination: Upload forms to a folder in a Microsoft OneDrive for Business account Box Data Destination: Upload forms to a Box folder. SMS Data Destination: Send notifications of form submissions via SMS. ShareFile Data Destination: Upload forms to a ShareFile folder. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Microsoft SharePoint Document Library Data Destination: Send forms to your Microsoft SharePoint/Microsoft 365 Document Library folder. Zendesk Ticket Data Destination: Use form data to create a Zendesk ticket. Available on the Enterprise tier only:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "Cloud Service Integration"
    }
  },
  {
    "content": "Essentials Advanced Enterprise Amazon S3 Data Destination: Upload forms to an S3 bucket. Amazon Glacier Data Destination: Upload forms into an Amazon Glacier Vault. Amazon SNS Data Destination: Publish a notification of form submissions via Amazon SNS.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "Cloud Service Integration"
    }
  },
  {
    "content": "Salesforce\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Currently, TrueContext works with Salesforce API version 63. Salesforce Lead Data Destination: Create or update a lead in Salesforce. Salesforce Account Data Destination: Create or update an account in Salesforce. Salesforce Contact Data Destination: Create or update a contact in Salesforce. Salesforce Case Data Destination: Create or update a case in Salesforce. Salesforce Custom Object Data Destination: Create or update a custom object record in Salesforce. Apex REST Data Destination: Customize what happens in Salesforce with an Apex script.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "Salesforce"
    }
  },
  {
    "content": "ServiceNow\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise ServiceNow Table Data Destination: Create or update records in tables.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500098_DataDestinationsOverview.html",
      "title": "Data Destinations Overview",
      "section": "ServiceNow"
    }
  },
  {
    "content": "Create a Form\n\nThis section includes the following content: Form Building BasicsImport a Form from the Forms LibraryOverview: Unique IDsAdd a Repeatable Section to a FormAdd Conditional Logic to a FormBest Practices for Form Building, Testing, and Deployment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateAForm.htm",
      "title": "Create a Form",
      "section": "Create a Form"
    }
  },
  {
    "content": "Video demo\n\nThis video provides a brief demo of how to create a form in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Video demo"
    }
  },
  {
    "content": "What are Pages?\n\nPages are the main way to structure a form—they are equivalent to a “screen” in the Mobile App. They form the main navigation of a form, dividing a form into a sequence of clear steps. Tip:When mobile users need to scroll a lot, they are more likely to miss a question or get lost on a page—especially on smaller devices like mobile phones. To minimize scrolling, make sure no more than 40 questions will be shown on a page at once (and break them up into multiple sections). If you have more than that, it’s time for a new page!",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "What are Pages?"
    }
  },
  {
    "content": "Pages in the Form Builder\n\nPages in a form are listed in the left navigation panel of the Form Builder. The contents of the currently selected page are listed on the right.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Pages in the Form Builder"
    }
  },
  {
    "content": "What are Sections?\n\nSections are containers for questions within a page. They are shown in the right panel of the Form Builder. There are different types of sections and layouts to choose from.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "What are Sections?"
    }
  },
  {
    "content": "Sections and Layouts\n\nThe following table describes each section type and layout. Section type Layout Example Works best for… Regular Full-width, over-under (“stacked”) Long question text or answers Question types that display best as full-width Regular with Multicolumn Layout (Enterprise tier only) Flexible, questions flow from one column to the next Fitting a lot of information into a single, concise view Giving form designers precise control over how questions are presented to field users Side-by-Side (Enterprise tier only) Two-column, with configurable ratio Short question text Short answer text Short option descriptions Template-Based (Enterprise tier only) Full-width, over-under (same as a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer.) Reusable groups (blocks) of questions to help the Admin build forms more quickly and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Sections and Layouts"
    }
  },
  {
    "content": "consistently, such as audit-based forms Repeatable Summary Table for quick reference and editing Note:Use a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. only for its intended purpose of adding information in a repeating subform. Do not use a Repeatable Section to achieve a particular layout. If you need additional layout options for questions in a Regular Section, consider upgrading to the Enterprise tier, which includes a Multicolumn Layout. Sets of questions in a subform that users can complete multiple times, to create the number of line items required When a field user opens a row to add or edit answers, displays as a “subform”. The subform layout can be Regular, Regular with a Multicolumn Layout A Multicolumn Layout is an Enterprise tier option for questions in a Regular Section. This highly",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Sections and Layouts"
    }
  },
  {
    "content": "flexible layout gives form designers control over how question are displayed on the Mobile App., or Side-by-Side. Summary Table Enterprise tier options Compact view The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. options include: Wrap rows to new line Hide headers This example shows rows wrapped and headers hidden: The Full view The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. (View All) options that help field users to show only relevant information include: Allow users to sort by columns Allow users to filter by one column This example shows the filter option: When the subform",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Sections and Layouts"
    }
  },
  {
    "content": "opens, the layout can be over-under, Multicolumn, or Side-by-Side Info:The topic Form Layout Options provides more details about the different layouts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Sections and Layouts"
    }
  },
  {
    "content": "Regular Sections\n\nA Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. Regular Sections divide questions into logical groups, visually breaking them up and making it easier for mobile users to navigate a page. Regular Sections group your questions under headers in the right panel of the Form Builder. Tip:When mobile users are faced with a lot of questions with no visual separation, the form is harder to use and they are more likely to miss a question. A Regular Section should have no more than 10 questions shown at once. If you have more than that, it's time to create a new section! Customers on the Enterprise tier can use a Multicolumn Layout or Side-by-Side Sections to display questions in a condensed view. Info:The topic Regular Sections describes in detail how to use a Regular Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Regular Sections"
    }
  },
  {
    "content": "Side-by-Side Sections (Enterprise tier only)\n\nIn a Side-by-Side Section, questions and answers appear next to each other in a two-column layout. This layout removes unnecessary space, which helps the field user efficiently scan and answer questions. The Form Index displays the Side-by-Side icon next to the Side-by-Side section name. When you add questions to the section, the Form Builder shows the questions in a two-column layout. Tip: Use the Change Section Type setting to easily switch between Regular and Side-by-Side sections. You don’t have to re-create existing sections. Edit the section to change its type. When you select a question-answer ratio, think about the question types you plan to include in the section. Wider question types, like Button Group, don’t fit well in smaller answer widths, especially on smaller devices. Info:The topic Side-by-Side Sections describes in detail how to set up a Side-by-Side Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Side-by-Side Sections (Enterprise tier only)"
    }
  },
  {
    "content": "Repeatable Sections\n\nA Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Repeatable Sections are typically used to collect the same set of information about different items, such as parts, quantity, and price. Field users benefit from a summary view of the data collected. Each entry is displayed as a line item in the Summary Table. Note:Use a Repeatable Section only for its intended purpose of adding information in a repeating subform. Do not use a Repeatable Section to achieve a particular layout. If you need additional layout options for questions in a Regular Section, consider upgrading to the Enterprise tier, which includes a Multicolumn Layout. Repeatable Sections look like a table in the right panel of the Form Builder. This is not a preview of how the Mobile App displays the form. Info:The topic Overview: Repeatable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Repeatable Sections"
    }
  },
  {
    "content": "Sections describes in detail how to use a Repeatable Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Repeatable Sections"
    }
  },
  {
    "content": "Template-Based Sections (Enterprise tier only)\n\nTemplate-Based Sections allow you to quickly and easily create and edit groups of questions that follow a repeated pattern. These kinds of repeated sets of questions are often seen in inspection, audit, or checklist-based forms. Template-Based Sections appear in the Form Builder as blocks of questions that reference a specific template. Info:The topic Building Template-Based Sections describes in detail how to use a Template-Based Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Template-Based Sections (Enterprise tier only)"
    }
  },
  {
    "content": "What are Questions?\n\nQuestions are what mobile users interact with in the mobile form. Users can type with a keyboard, select from a list of options, or attach files in order to provide answers. There are many kinds of questions that can be added to a form. Question Type determines how users interact with the question and what it looks like (such as manually typing in a response rather than selecting it from a list). Data Type determines the kind of information the question should collect (such as a number, a date, or a signature, for example). Info:The topic Question and Data Types in the Form Builder provides a complete list of all the available options. Tip:We recommend that you use different types of questions in your form. This helps to keep the field user’s attention and to capture data accurately. When consecutive questions are all the same type, the form can get monotonous and cause users to miss a question. Vary your question types. Button Group questions, for example, use",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "What are Questions?"
    }
  },
  {
    "content": "color to highlight the answer. Your forms will be more usable, and your mobile users will appreciate it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "What are Questions?"
    }
  },
  {
    "content": "Questions in the Form Builder\n\nQuestions are found in sections and are shown in the right panel of the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Questions in the Form Builder"
    }
  },
  {
    "content": "Create Your Form\n\nFrom Forms & Integrations in the Web Portal, select Create New Form. Select Build a Mobile Form from the window that appears. Once the Form Builder has loaded, you'll be on the General Information screen. Give your form a Form Name and Form Description. You'll be able to edit this later if you desire.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Create Your Form"
    }
  },
  {
    "content": "Add a Page\n\nIn the left navigation pane of the Form Builder, select Add a Page. Name your page. Mobile users will see this name in the mobile form in the left navigation, and at the top of the screen. (Optional) Customize the page's Unique Identifier. This identifier is referenced in Conditional Logic, analytics, and other parts of the Form Builder. (Optional) Select where the page should go in your form. By default, new pages are inserted at the end of the current page listing. Select Save at the bottom of the page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Add a Page"
    }
  },
  {
    "content": "Edit, Delete, or Copy a Page\n\nThese actions can all be accessed from the menu icon beside the page name in the right panel of the Form Builder. Edit: This will bring up the Page Information screen, where you can modify the page name and Unique Identifier. Copy Page: The page will be copied. If copying a page with self-contained Conditional Logic (i.e., all rules and effects are contained within the page), then the Conditional Logic rules will also be copied. Delete Page: This will permanently remove the page from the form. This may impact and cause errors in other parts of your form or Conditional Logic. Delete Multiple Form Elements: This opens a window that lists all the form elements. Select multiple form elements to delete at once. If Conditional Logic rules or other questions reference an element, deleting it might create conflicts or errors in parts of your form. Info:The topic Form Building Basics: Delete Multiple Form Elements describes how to delete multiple form elements in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Edit, Delete, or Copy a Page"
    }
  },
  {
    "content": "more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Edit, Delete, or Copy a Page"
    }
  },
  {
    "content": "Move a Page\n\nIn the left navigation, select and hold the dotted icon while dragging the page to the desired location. Or edit the page and select the desired location under Page Placement.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Move a Page"
    }
  },
  {
    "content": "Add a Section\n\nMake sure you are on the desired page. Select Add a Section at the bottom of the right panel. Choose your Sections and Layouts. Name your section. Mobile users will see this name in the header above each section in the mobile form. If you don't name your section, the header won't show up, and there will be no visual separation between sections. This is usually done for the first section on a page. (Optional) Customize the section's Unique Identifier. This identifier is referenced in Conditional Logic and other parts of the Form Builder. Choose whether to Show Section Header on Mobile Device. If OFF, the header will not show in the mobile form, but it WILL show in documents. If ON, there are two additional options: Allow mobile user to collapse and expand this section: Using the and icons, your mobile users can make the questions in the section shown or hidden. This is useful for space saving on larger forms. Start section in collapsed state: Users will have to manually",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Add a Section"
    }
  },
  {
    "content": "tap the button to expand the section. Tip:On the Mobile App, a headerless section will collapse or expand with the section above it. For example, if your form has a section with a header followed by three headerless sections, all four sections will collapse together. (Side-by-Side Sections only) Select a question-answer ratio for the section layout. The question-answer ratio affects how the Side-by-Side Section appears on form pages in the Mobile App. It has no effect on the summary view, document formats, or Web Portal display. Tip:Side-by-Side Sections are only available on the Enterprise tier. Select Save to add the section to your form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Add a Section"
    }
  },
  {
    "content": "Edit, Delete, Move or Copy a Section\n\nThese actions can all be accessed from the menu icon beside the Section name in the right panel of the Form Builder. Edit: This will bring up the Section Information page. You can change between Regular and Side-by-Side sections from this page. Side-by-Side Sections are only available on the Enterprise tier. Copy Section: The section will be copied. If copying a section with self-contained Conditional Logic (i.e., all rules and effects are contained within the section), then the Conditional Logic rules will also be copied. Move Section: This will open a list of sections in the form. You can choose to move this section to after any of the listed sections. Delete Section: This will permanently remove the section from the form. This may impact and cause errors in other parts of your form or Conditional Logic. Delete Multiple Form Elements: This opens a window that lists all the form elements. Select multiple form elements to delete at once. If",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Edit, Delete, Move or Copy a Section"
    }
  },
  {
    "content": "Conditional Logic rules or other questions reference an element, deleting it might create conflicts or errors in parts of your form. Info:The topic Form Building Basics: Delete Multiple Form Elements describes how to delete multiple form elements in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Edit, Delete, Move or Copy a Section"
    }
  },
  {
    "content": "Add a Question\n\nNavigate to the desired section. Add a question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. Choose a Question Type. Provide Question Text. This is the “Question” you are asking users to respond to, or instructions on what kind of information to enter. You can format the question text to make it easier for your users to read. Customers on the Enterprise tier can choose to Hide question text on device. This saves space in a Regular Section with an over-under or Multicolumn layout. (Optional) Customize the Unique Identifier. This identifier is referenced in Conditional Logic and other parts of the Form Builder. Choose a Data type Data types describe the format in which a user",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Add a Question"
    }
  },
  {
    "content": "answers a question. For example, a user might enter a name (Text) in one question, and a dollar amount (Currency) in another. A data type also supports validation (making sure that mobile users enter a valid email address format, for example).. The list of available data types will differ depending on what question type you chose. For more information on Data Types, please read: Question and Data Types in the Form Builder Select any necessary Restrictions: Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections only) The remaining configuration options (In the Options and Properties tabs, if present) will differ based on your question and data type. For more information please read: Question and Data Types in the Form Builder. (Optional, Advanced and Enterprise tiers only) Add Help Properties. Read more here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Add a Question"
    }
  },
  {
    "content": "Edit a Question\n\nTo edit a question, simply select the question. Its properties will open again.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Edit a Question"
    }
  },
  {
    "content": "Delete, Move or Copy a Question\n\nThese actions can all be accessed from the menu icon beside the Question in the right panel of the Form Builder. Copy Question: The question will be copied. Move to Section: This will open a list of sections in the form. You can choose to move this question into any of the listed sections. You can also drag and drop the question within the same page or onto different pages. Move within section: This opens a menu of questions in the same section. You can choose to move the question before or after any of the questions listed. Delete Question: This will permanently remove the question from the form. This may impact and cause errors in other parts of your form or Conditional Logic. Delete Multiple Form Elements: This opens a window that lists all the form elements. Select multiple form elements to delete at once. If Conditional Logic rules or other questions reference an element, deleting it might create conflicts or errors in parts of your form. Info:The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Delete, Move or Copy a Question"
    }
  },
  {
    "content": "topic Form Building Basics: Delete Multiple Form Elements describes how to delete multiple form elements in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Delete, Move or Copy a Question"
    }
  },
  {
    "content": "Delete Multiple Form Elements\n\nTip: We recommend saving your form before performing bulk actions. If you delete pages, sections, or questions in error, exit the draft without saving your changes. If you already saved the draft, go back to a version of the form prior to the deletion. Select the menu next to a page, section, or question, and then select Delete Multiple Form Elements. Result: A window with a list of form elements opens. Select every element you want to delete. The element you selected to open the window, and any nested elements, are selected by default. Note:Deleting a form element also deletes any nested elements. For example, if you delete a page, any nested sections and questions will also be deleted. Select Delete > Confirm.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Delete Multiple Form Elements"
    }
  },
  {
    "content": "Save your Form\n\nOnce you have finished building your form, there are several options to save it. These options can be found at the top right of the Form Builder. Save as Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. Saves the current form as a draft. Drafts are only deployed to Admin users and users who have “Can Test” permissions. Save and Deploy Saves the form as an Active version and deploys it to mobile devices. Save and deploy is typically used only when a form has been completed and is ready to be deployed to end users. This option is not available if there is an error in your form. exit Prompts you to save a draft or discard your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008282248.html",
      "title": "Form Building Basics",
      "section": "Save your Form"
    }
  },
  {
    "content": "About\n\nAdministrators can quickly import templates from the Forms Library The Forms Library is a resource available to form designers that provides a list of customizable form and Data Source templates. Users can select a form from the Forms Library when they create a new form., making it easy to get their paperless business solution up and running in no time. In many cases, a form imported from the Forms Library will be suitable for use without any changes, but it is always possible to use the web-based form builder to adapt and customize a form to meet an organization's specific needs. Note:Please note: Some forms may use features that are not available on your billing tier. You will be unable to successfully import these forms to your team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499768_ImportAFormFromFormsLibrary.html",
      "title": "Import a Form from the Forms Library",
      "section": "About"
    }
  },
  {
    "content": "Importing a Form\n\nHover over the Forms & Integrations tab and select \"Create New Form\" from the dropdown menu. From the Create Form menu, choose \"Select a Form from the Forms Library.\" Optionally filter results by selecting an Industry or Business Function from the dropdown menus. Select the form, then click Import. The form is now available to your team. Once imported, the form can be deployed and used as-is or edited and customized in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499768_ImportAFormFromFormsLibrary.html",
      "title": "Import a Form from the Forms Library",
      "section": "Importing a Form"
    }
  },
  {
    "content": "Importing a Data Source\n\nRepeat Steps 1 and 2 from Importing a Form. Select the Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. tab. Optionally filter results by selecting an Industry or Business Function from the dropdown menus. Locate the desired Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., and select Import. Select the destination for the Data Source, and name it. You may also specify if this Data Source will replace any existing Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499768_ImportAFormFromFormsLibrary.html",
      "title": "Import a Form from the Forms Library",
      "section": "Importing a Data Source"
    }
  },
  {
    "content": "Sources. When done, select Import.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499768_ImportAFormFromFormsLibrary.html",
      "title": "Import a Form from the Forms Library",
      "section": "Importing a Data Source"
    }
  },
  {
    "content": "Next Steps\n\nData sources can be added to and/or referenced by a form through the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. using a radiobutton, dropdown, or multiselect type question. Customize the options in dropdown fields using part, customer, and employee lists by Customizing Data Sources. Read the article on Data Source Essentials for even more information on working with data sources.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499768_ImportAFormFromFormsLibrary.html",
      "title": "Import a Form from the Forms Library",
      "section": "Next Steps"
    }
  },
  {
    "content": "About\n\nUnique IDs are a way to identify specific things in a form and use them in anything further along in your business process, from analytics to documents to destinations. This article will discuss what Unique IDs are used for, where to find them, and how to set them up.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "About"
    }
  },
  {
    "content": "What are Unique IDs used for?\n\nUnique IDs are a central part of the internal structure of your form: when you create a Conditional Logic rule, the form uses the page, section, or questions' unique IDs to structure that rule; when you create an Analytics project, you use questions' unique IDs to send the answers to the analytics system (this is why changing the unique ID can break analytics projects, data destinations, and other 'downstream' parts of the form workflow). Unique IDs are also the main way you control what answers are included in destinations and documents: use Data Reference Expression Language (DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.) to refer to: the answer(s) to a particular question a question's text the answer to an Additional Comment on a question the metadata associated with a question information inside a repeatable section",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "What are Unique IDs used for?"
    }
  },
  {
    "content": "Examples of Using Unique IDs\n\nTo help put the use of Unique IDs into context, this section will offer some common examples.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Examples of Using Unique IDs"
    }
  },
  {
    "content": "Custom Excel Document (Advanced and Enterprise tiers only)\n\nThe Custom Excel document allows you to map Unique IDs into an Excel spreadsheet. When a form submission is made, it will generate an Excel file with your desired formatting and send it to the people and places configured with data destinations. To do this, it uses Data Record Expression inside the spreadsheet template: Please read our documentation on the Excel Document for more information on how unique IDs are used.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Custom Excel Document (Advanced and Enterprise tiers only)"
    }
  },
  {
    "content": "Custom Filter Rules for Data Destinations\n\nUsing DREL inside a Custom Filter for a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. allows you to route a form submission to different destinations based on the answers inside the form. For example, if an inspection is marked as failed, it might go to a different destination than the same inspection form marked as passed. This is done by pulling the answer to the Pass/Fail question via DREL and the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. and putting it in the Data Destination's rules configuration. For more information on custom",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Custom Filter Rules for Data Destinations"
    }
  },
  {
    "content": "filter rules, please read: Apply Filtering to Data Destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Custom Filter Rules for Data Destinations"
    }
  },
  {
    "content": "Sorting Form Submissions into Folders\n\nWhen using data destinations that send data to cloud services, form submissions are automatically sorted into folders. You can customize how forms are sorted and named using unique IDs, making it easy to organize and retrieve data. For example, you can use the unique ID to the Customer Name question to set up customer-specific folders: For more information on using unique IDs to create file paths for your form submissions, please read: Change How Form Submissions Are Named and Organized in Cloud Services.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Sorting Form Submissions into Folders"
    }
  },
  {
    "content": "Analytics Project Reports\n\nTrueContext analytics uses unique IDs to collect and display data based on one or multiple forms, making easy-to-read charts out of the answers provided using those unique IDs. For example, you might have five different inspection forms that each have a \"Total Score\" question and want to create an analytics display based on that question. If your \"Total Score\" question has the same unique ID in each form, your analytics project can report on all those questions, showing the inspection scores across all the inspection forms. Standardizing unique IDs across your forms can not only help your form building but also create more opportunities for integrations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Analytics Project Reports"
    }
  },
  {
    "content": "In the Form Builder\n\nThe form builder is the first place you'll encounter Unique IDs, and where you can customize them at need. Questions You can find the Unique ID for questions at the top of the question display in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. The Unique ID is automatically generated based on the question text when you are setting up the question, but can be edited to a custom ID in the Question Information page. Pages/Sections You can find the Unique ID for pages or sections inside the Page/Section Information view, accessible by selecting Edit from the menu next to the page/section name.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "In the Form Builder"
    }
  },
  {
    "content": "In the Web Portal\n\nOne of the easiest places to find your form's unique IDs is the Pages & Questions tab: To find a Document unique identifier, go to Forms & Integrations Integration refers to secure communication and data sharing between TrueContext and a third-party system, such as Salesforce or ServiceMax. Connections, Data Sources, Data Destinations, and App-to-App calls and callbacks can be used as part of an integration solution. > Documents, and then select a document from the list. Result: The Document Unique Identifier is displayed at the top of the Information section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "In the Web Portal"
    }
  },
  {
    "content": "Excel Form Report\n\nThe Excel Form Report is an Excel spreadsheet that provides a detailed look at a form's structure, including listing the unique IDs:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "Excel Form Report"
    }
  },
  {
    "content": "How Do I Customize Unique IDs?\n\nUnique IDs are set in the Information screens of the respective pages, sections, and questions. While they are automatically generated based on the section or page name, or question text, they can be customized in the Information screen. Note: changing a unique ID after setting up references in destinations or documents can cause those references to break. Please set up your unique IDs before setting up destinations, documents, or analytics. To edit the Unique ID on a Page, Question, or Section: Navigate to the Information page. Select the Unique Identifier... bar. Type your new Unique ID:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020428732.html",
      "title": "Overview: Unique IDs",
      "section": "How Do I Customize Unique IDs?"
    }
  },
  {
    "content": "About\n\nRepeatable Sections let you to easily build structured, lightweight mobile forms to easily gather information about a variable number of line items for the same set of questions (like parts, labor, or assets). The Summary Table format allows your mobile forms to look like their familiar paper counterparts and allows for easy review of entered information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429563.html",
      "title": "Add a Repeatable Section to a Form",
      "section": "About"
    }
  },
  {
    "content": "Videos\n\nReview the video below for a demonstration of Repeatable Sections in the Mobile App. Review the video below for instructions on adding a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. to a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429563.html",
      "title": "Add a Repeatable Section to a Form",
      "section": "Videos"
    }
  },
  {
    "content": "Create a Repeatable Section\n\nGo the place in your form where you would like to add a Repeatable Section; this can be after a Regular or Side-by-Side Section (Enterprise tier only) on an existing page, or on a brand-new page. Select the Add a Section button. Choose Repeatable as the section type. Name the section, then select Save. The Repeatable Section will be created. It will be easily identifiable by the table view. Tip:When you add a Repeatable Section to your form, the system creates a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. inside the Repeatable Section. When you enter the Repeatable Section, you can add more sections, or change existing Regular Sections to Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429563.html",
      "title": "Add a Repeatable Section to a Form",
      "section": "Create a Repeatable Section"
    }
  },
  {
    "content": "complete, and confirm the answers in a form.. The section type determines the layout when a user opens a row (entry).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429563.html",
      "title": "Add a Repeatable Section to a Form",
      "section": "Create a Repeatable Section"
    }
  },
  {
    "content": "Add Questions to a Repeatable Section\n\nNavigate to your Repeatable Section. Select Edit Summary Table or Questions to launch into your Repeatable Section. You will now be inside your Repeatable Section. Add a question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. Add the question as you normally would. For information on adding questions to a Repeatable Section, please read: Repeatable Sections: Building Repeatable Sections. As you add questions, the first three will automatically be added as columns in the Summary Table. To add additional questions in the Summary Table, select Add a Column. Select Return to Main Form to go back to your main form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429563.html",
      "title": "Add a Repeatable Section to a Form",
      "section": "Add Questions to a Repeatable Section"
    }
  },
  {
    "content": "Add a Rule\n\nOpen the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Ensure you have created all the questions/sections/pages that will be involved in your Conditional Logic rule. Select Conditional Logic > Add a Rule. Enter a Rule Name (required) and Rule Description (optional). In the If statement, define the condition that must be met to trigger the actions. This might be a specific answer to a single question or a combination of answers to multiple questions. In the Then statement, define what the form should do when the If statement is true. You can show or hide pages and sections and show, hide, require, clear, or assign values to questions. Some Conditional Logic rules have multiple Then statements. If your rule has a long list of Then statements,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432466.html",
      "title": "Add Conditional Logic to a Form",
      "section": "Add a Rule"
    }
  },
  {
    "content": "organize the statements to run in a logical order. To move a Then statement, select the handle to the left of the statement and drag the row to a new place. You can also add a new Then statement anywhere in the list. Hover between two Then statements and select the plus sign [+] to add a new statement. Info:The topic Best Practices for Conditional Logic Rules describes the benefits of reordering Then statements in more detail. Else statements define what the form should do when the If statement is false. The form automatically builds Else statements that undo the Then statements. (Optional) To add, change, or delete one or more Else statements, select Custom Actions. Save the form. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432466.html",
      "title": "Add Conditional Logic to a Form",
      "section": "Add a Rule"
    }
  },
  {
    "content": "About\n\nBest practice for Form Building, Testing, and Deployment for TrueContext is well supported by the tools provided on the TrueContext Portal. Below is the suggested methodology for creating new Forms in a production environment, with suggestions for the most thorough testing, which will ensure that new Forms successfully launch into your production environment. The first step that a TrueContext Administrator should take is to create a test environment within their Production Team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "About"
    }
  },
  {
    "content": "Create a Test FormSpace\n\nWhile it is not completely necessary to create a separate FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. for form development (as access to forms can be managed entirely through form states and permissions), most organizations find it easier to manage their \"Test\" forms if they are maintained separately, particularly if the team has many forms. Learn how to manage FormSpaces. When creating a development FormSpace, it is best to give it a descriptive name -- like \"Test FormSpace\"-- to avoid confusion. We recommend that you add at least one Problem Contact Email Address with the email of the main developer of the forms. If any-server side problems occur in this FormSpace, this email address will be notified.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test FormSpace"
    }
  },
  {
    "content": "Create a Test Group\n\nCreating a \"Test Group\" with correctly configured permissions allows certain users to access and submit data against your development forms. Permissions The permissions you set may vary depending on your exact testing method. For example, you may want \"Test\" users to only be able to submit data against \"deployed\" forms in your Test FormSpace, if \"draft\" versions are being actively worked on. Can Test: Allows users to access and submit data against Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. forms in this FormSpace. Can Submit: Allows users to access and submit data against Active forms in this FormSpace. You can also add \"Can View\" permissions (which allow users to view submitted data records for this FormSpace) and \"Can Create\" permissions (which allow them to build forms in this FormSpace). Note that these permissions are not consistent with those",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test Group"
    }
  },
  {
    "content": "normally recommended in Production FormSpaces and will allow Groups assigned to the Test FormSpace all the permissions they might require to make and test forms. It is not recommended to add users other than those required for the Built and Test process to Groups with these permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test Group"
    }
  },
  {
    "content": "Create a Test Form\n\nDepending on the complexity of your form, this step may be quick or time-consuming. Prior to adding any Pages or Questions to your Form, it is best if you have sketched out a rough outline of the Form’s desired layout. When creating this layout consider the: Questions you’d like to ask, order that the Form should follow, segmentation of Questions on Pages, type of Question (or control) you’d like to use, and the type of data that each Question will collect. For complex logic, it might be useful to draw a flow chart to make sure you understand the steps required. Many different types of input may be desired for the new Form and builder should be aware of the various types of controls that can be used. Read more about Form Controls and Data Types. Form Building Tips: When setting a Name your new Form, use a prefix which identifies it as a Test Form, for example “test_New Form”. This will make it easier for users who have both test and production forms on their",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test Form"
    }
  },
  {
    "content": "devices, so they do not submit production data against test forms. You may find it easier to build your form in stages; for example, if one page employs some tricky logic or calculations, it may be best to test and ensure that everything is working before creating more questions that rely on this page. Forms can exist in one of two states: Draft and Active. The Draft State is useful for building forms, and forms can be left in this state while being built to reduce excess form versions. However, only Active forms have incremental versioning; if large errors are made in building, it is easy to revert to an older version of the form. You can also compare versions, and find in which version an error began, in order to pinpoint the cause.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test Form"
    }
  },
  {
    "content": "Testing Your Form\n\nRun through the form as if you are a field user, not the form builder; ensure the workflow makes sense for actual use, and that instructions are clear. It may be wise, once the form is working smoothly, to have a strictly mobile user test the form for this. Be sure to test every step of the process, from filling out the form, to submitting data to the TrueContext server. If the form will be dispatched, test this process. Create test data submissions with a variety of inputs. Submit typical, correct data, but also test with incorrect data; users will make mistakes, and it is important that these mistakes do not prevent the form from functioning correctly. Remember that you can set limits on some questions (maximum decimal places, minimum and maximum values) to guide your users; they will receive a detailed error if they enter values not within these limits. Submit forms with some questions unanswered, and some pages unanswered. You may find that some questions need to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Testing Your Form"
    }
  },
  {
    "content": "be marked as \"Required\" for optimal functioning. Test calculations with various inputs (including 0's). Do the math yourself and compare to make sure the calculations are correct. Test any new or updated Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. at this point as well. If filtering is configured, submit tests that meet the filter rules, and other test submissions that don't. If the form will use data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., be sure to use them in your tests; incorrect data source Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Testing Your Form"
    }
  },
  {
    "content": "sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. configuration can cause error messages or lead to incorrect data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Testing Your Form"
    }
  },
  {
    "content": "Create a Test Data Destination\n\nIt is important to have a test data destination set up in the test FormSpace that mirrors what is in the production FormSpace, but which is configured to uniquely identify records generated from test submissions. However, it is also important to keep the test data destination separate from production data, to ensure forms do not engage with it when not testing. When creating a development Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., it is best to give it a descriptive name -- like \"Test Data Destination\"-- to avoid confusion. When using a cloud storage destination like Dropbox, configure the test submissions to go into a path like: /TrueContext/TEST/form01 while production submissions go into a path like: /TrueContext/form01. Data destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test Data Destination"
    }
  },
  {
    "content": "cannot be copied between FormSpaces, so it is important the test destination mirrors the production destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Create a Test Data Destination"
    }
  },
  {
    "content": "Testing Your Data Destination\n\nEnsure that filtering functions correctly, and the destination only executes when you want it to. This is particularly important in the case of Custom Filter rules, which use regular expressions, and a single incorrect character may break the expression. Test filter rules by submitting forms in a test environment, testing all answers referenced in filter rules to determine if the rules behave as expected. Run through the form as if you are a field user. Create test data submissions with a variety of inputs. Submit typical, correct data, but also test with incorrect data. Create tests that meet the filter rules, and other test submissions that don't. Submit a form linked to the data destination, check that the execution has not failed, and check that every document/notification was successfully delivered to the configured locations/recipients. Check your test data destination to ensure all documents have been uploaded correctly.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Testing Your Data Destination"
    }
  },
  {
    "content": "Deploying Forms to Production\n\nOnce the Form has been completed, use the Copy Form function to make a copy of the Form into the appropriate production FormSpace. At this time, ensure that you remove the prefix that indicates that the Form is a Test Form. In this way, those users that are in the Test Group will be able to discern Test Forms from Production Forms. Also ensure that you use the Copy as Active Form option, so that the copy that is placed into the production FormSpace will be in the Active State. If this is a test version of an existing form, choose \"Copy as New Version.\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Deploying Forms to Production"
    }
  },
  {
    "content": "Copying Forms with Data Sources\n\nData Sources that are attached to the Test Form will by default also be copied into the production FormSpace. If a Data Source with the same name already exists in the production FormSpace, care needs to be taken to ensure that the correct data source remains linked with the correct form, and that no data is unintentionally overwritten. Various options are given in the Advanced settings when creating and copying Data sources to ensure no data is lost. For example, to keep the testing data source, Overwriting Target Resources will copy any resources linked to the form into the target FormSpace, replacing any target FormSpace resources that have the same name. Another option is to Repoint Form to Target Resources. This ensures that existing sources will be used, rather than the test ones. It is also possible to Copy and Rename Original Resources, which will use the data source already linked to the form but will rename it. If you are not sure about how to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Copying Forms with Data Sources"
    }
  },
  {
    "content": "proceed in copying forms with data sources, please see the article on Moving and Copying Forms for further information, or contact TrueContext Support for advice.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499388_BestPracticesFormBuildingTestingDeployment.html",
      "title": "Best Practices for Form Building, Testing, and Deployment",
      "section": "Copying Forms with Data Sources"
    }
  },
  {
    "content": "Dispatch the Form to a Mobile Device\n\nThis section includes the following content: Set Up a Form for DispatchingDispatch Forms to a User",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DispatchFormToMobileDevice.htm",
      "title": "Dispatch the Form to a Mobile Device",
      "section": "Dispatch the Form to a Mobile Device"
    }
  },
  {
    "content": "About\n\nIn order to dispatch a form to users, it must be set up to allow dispatching. Follow the steps below to enable dispatching for a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501048.html",
      "title": "Set Up a Form for Dispatching",
      "section": "About"
    }
  },
  {
    "content": "Set Up a Form for Dispatching\n\nHover over Forms & Integrations, and then select List Forms. Result: The system displays a list of all available forms. From the list, select the desired form. Select Edit Form. Result: The system displays the selected form in the Form Builder. Under Settings > Workflow Settings > Form Initiation Methods, select one of two options: Inbox (Dispatched Forms): If selected, users can only receive the form in their Inbox via dispatches. Inbox and Forms Box: (Default) If selected, users can open the form from both their Inbox (if dispatched) and Forms list. Allow mobile users to decline forms dispatched to them: (Optional) If selected, mobile users can decline to fill out forms dispatched to their Inbox. Info:The topic Set Up Form Properties describes all three Form Initiation Methods in more detail.If you're on the Enterprise tier, you can dispatch a record to a user, a group, or to all groups in a FormSpace. Enable the Group Inbox The Group Inbox on your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501048.html",
      "title": "Set Up a Form for Dispatching",
      "section": "Set Up a Form for Dispatching"
    }
  },
  {
    "content": "mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox. by following the steps in the topic Set up Group Dispatching. Note:When you use a Dispatch Data Destination(Advanced and Enterprise tiers only), you must set the form the destination dispatches to one of the Inbox options. Select Save and Deploy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501048.html",
      "title": "Set Up a Form for Dispatching",
      "section": "Set Up a Form for Dispatching"
    }
  },
  {
    "content": "Submit a Form on a Mobile Device\n\nThis section includes the following content: Get Started with the Mobile AppDownload the TrueContext Mobile AppSubmit a Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/SubmitFormOnMobileDevice.htm",
      "title": "Submit a Form on a Mobile Device",
      "section": "Submit a Form on a Mobile Device"
    }
  },
  {
    "content": "About TrueContext\n\nTrueContext has two main components: The Web Portal: Forms can be built, submitted forms can be viewed, and connections to other systems can be set up. The Mobile App: Forms can be filled out by users and submitted. You can fill out and save forms when your device is offline. To submit a form, your device must be connected to the internet. If you submit a form when you’re offline, the TrueContext Mobile App stores the form in your Outbox until you’re online again.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499088_GetStartedMobileApp.html",
      "title": "Get Started with the Mobile App",
      "section": "About TrueContext"
    }
  },
  {
    "content": "Log in to the Mobile App\n\nIf you haven't already, download the mobile app. Launch the TrueContext Mobile App from the home screen of your mobile device. Enter your username and password. These credentials are the same as what you use to log into the Web Portal. If you have an account but forgot your password, select the Forgot password link. When you enter a valid username and password, TrueContext registers the device. The app then reconciles and downloads any new forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499088_GetStartedMobileApp.html",
      "title": "Get Started with the Mobile App",
      "section": "Log in to the Mobile App"
    }
  },
  {
    "content": "Change your Password\n\nRead our FAQ article on how to change a password.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499088_GetStartedMobileApp.html",
      "title": "Get Started with the Mobile App",
      "section": "Change your Password"
    }
  },
  {
    "content": "Download the Mobile App on iOS\n\nNote:You must have an Apple ID to download the Mobile App on iOS. Go to the App Store. Search for “truecontext”. Select GET, and then follow the instructions on your device. Result: The Mobile App downloads to your device. Your device automatically places an icon for the app on your home screen. Select OPEN to launch the app. Result: The app opens on your device. You can sign in to your TrueContext account. Note:We recommend that you always keep the Mobile App updated to the latest version. Depending on your device settings, the app might update automatically. You can also go to the App Store to manually update the app. Download the Mobile App on macOS The macOS app is available from the App Store. To download the TrueContext Mobile App from the store, you must have an Apple ID. You can create the ID without a credit card. Tip:We recommend that you enable FileVault on your macOS device to protect filesystem data. Open the App Store, and enter",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/217493668_DownloadMobileApp.html",
      "title": "Download the TrueContext Mobile App",
      "section": "Download the Mobile App on iOS"
    }
  },
  {
    "content": "“truecontext” in the search box. Result: The TrueContext Mobile App displays in the search results. Download and install the Mobile App. Open the TrueContext macOS app to complete setup and sign in. Tip:Use the Finder to search for the app after it downloads. Note:We recommend that you always keep the Mobile App updated to the latest version. Depending on your device settings, the app might update automatically. You can also go to the App Store to manually update the app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/217493668_DownloadMobileApp.html",
      "title": "Download the TrueContext Mobile App",
      "section": "Download the Mobile App on iOS"
    }
  },
  {
    "content": "Download the Mobile App on macOS\n\nThe macOS app is available from the App Store. To download the TrueContext Mobile App from the store, you must have an Apple ID. You can create the ID without a credit card. Tip:We recommend that you enable FileVault on your macOS device to protect filesystem data. Open the App Store, and enter “truecontext” in the search box. Result: The TrueContext Mobile App displays in the search results. Download and install the Mobile App. Open the TrueContext macOS app to complete setup and sign in. Tip:Use the Finder to search for the app after it downloads. Note:We recommend that you always keep the Mobile App updated to the latest version. Depending on your device settings, the app might update automatically. You can also go to the App Store to manually update the app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/217493668_DownloadMobileApp.html",
      "title": "Download the TrueContext Mobile App",
      "section": "Download the Mobile App on macOS"
    }
  },
  {
    "content": "Download the Mobile App on Android\n\nNote:You must have a Google account to download the TrueContext Mobile App on Android. Go to the Google Play Store. Search for “truecontext”. Select Install. Result: The Mobile App downloads to your device. You can access the app from your app menu. Tip:For easy access, you can drag the Mobile App icon from your app menu to your home page. Select Open to launch the app. Result: The app opens on your device. You can sign in to your TrueContext account. Note:We recommend that you always keep the Mobile App updated to the latest version. Depending on your device settings, the app might update automatically. You can also go to the Google Play Store to manually update the app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/217493668_DownloadMobileApp.html",
      "title": "Download the TrueContext Mobile App",
      "section": "Download the Mobile App on Android"
    }
  },
  {
    "content": "Download the Mobile App on Windows\n\nNote:You must have a Microsoft account to download the Mobile App on Windows. From the Start menu, go to the Microsoft Store. Search for “truecontext”. Select Get to download and install the app. Result: The Mobile App downloads and installs to your device. Select Open. Result: The Mobile App opens on your device. You can sign in to your TrueContext account. Tip:You can also open the app from the Start menu. Note:We recommend that you always keep the Mobile App updated to the latest version. Depending on your device settings, the app might update automatically. You can also go to the Microsoft Store to manually update the app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/217493668_DownloadMobileApp.html",
      "title": "Download the TrueContext Mobile App",
      "section": "Download the Mobile App on Windows"
    }
  },
  {
    "content": "Sign in to the Mobile App\n\nLaunch the Mobile App on your device. Enter your TrueContext Username and Password. These credentials are the same as your Web Portal sign-in credentials. Info:If you forget your password, you can reset it on the Mobile App. The topic Forgot Your Password? describes how to reset your password. To get started using the app, refer to the topic TrueContext Quick Start.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/217493668_DownloadMobileApp.html",
      "title": "Download the TrueContext Mobile App",
      "section": "Sign in to the Mobile App"
    }
  },
  {
    "content": "About\n\nCompleting and submitting mobile forms from a smartphone or tablet is easy and intuitive. Users can collect rich data like signatures, images, and barcodes, and embed these in forms. A number of sample forms related to your industry will automatically be available in your Forms screen. You can use these forms as-is, or make edits to them. You can import different pre-made forms from our forms library. You can build your own custom forms. Watch the video below to see how to submit a form with the Mobile App. Tip:It's possible to navigate form submissions using a Bluetooth keyboard connected to your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493708_SubmitAForm.html",
      "title": "Submit a Form",
      "section": "About"
    }
  },
  {
    "content": "Reconcile\n\nReconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. (Send/Receive) in the TrueContext Mobile App before filling out forms. This ensures you have the most recent data available. The Reconcile button can be found: At the bottom left of the Home screen on iOS devices In the TrueContext menu (accessed through the Android Menu button) on Android devices",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493708_SubmitAForm.html",
      "title": "Submit a Form",
      "section": "Reconcile"
    }
  },
  {
    "content": "Fill Out a Form\n\nSelect Forms on the home screen where all available forms are listed. Tap on the form you want to fill out to open it.Alternately, if your team is utilizing dispatching, tap Inbox to start a form. Different types of questions (\"control types\") determine how information is collected, and what kind of information can be entered. For example: Plain textboxes are displayed as a black line. Tap and enter an answer using the keyboard that appears. Dropdown controls are displayed as a blue rectangle. Tap and select an option from the list. Date/time selectors are displayed as a blue rectangle. Tap and choose a date/time using the scroller. Additionally, different Question Restrictions affect how you interact with questions.Required questions must be answered before you can go to the next page. They are distinguishable by the asterisks (*) beside them.Read-only questions are prefilled, and you cannot edit the answer. They are distinguishable by their light gray text. Tap on",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493708_SubmitAForm.html",
      "title": "Submit a Form",
      "section": "Fill Out a Form"
    }
  },
  {
    "content": "the white box below the question to answer it.Different question types control the information you can enter. \"Required\" questions must be answered before you can go to the next page.\"Read-Only\" questions are prefilled, and you cannot edit the answer. Navigation between pages can be done either by touch and swipe, or by using the up and down arrows at the top right of the page. Swipe left / tap down to go to the next page. Swipe right / tap down to go to the previous page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493708_SubmitAForm.html",
      "title": "Submit a Form",
      "section": "Fill Out a Form"
    }
  },
  {
    "content": "Submit the Form\n\nA Send button will appear on the index page of the form.Tap this button to submit the form.Once you submit a data record, no changes can be made to it. The app will reconcile after you submit the form. You will be notified when the form reaches the Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493708_SubmitAForm.html",
      "title": "Submit a Form",
      "section": "Submit the Form"
    }
  },
  {
    "content": "View Sent Forms\n\nEnter the Sent tab to view submitted forms. See the status of a submission, as well as the date and time submitted. Tap on the form for options. Select a file format to view your form in. The document will open on your device. The appearance of this document can be customized in the Web Portal. Use the Share button on the top right to open the sent document menu. Note: In addition to being able to view your submitted forms in your Sent box, you will also receive an email with a PDF of your submitted data. This email will be sent to the email address you provided when signing up for TrueContext, and the PDF is exactly the same as what you will see in the Sent box.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493708_SubmitAForm.html",
      "title": "Submit a Form",
      "section": "View Sent Forms"
    }
  },
  {
    "content": "Review Submitted Forms in the Web Portal\n\nThis section includes the following content: Review Your Data on the Web Portal",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ReviewSubmittedinWP.htm",
      "title": "Review Submitted Forms in the Web Portal",
      "section": "Review Submitted Forms in the Web Portal"
    }
  },
  {
    "content": "About\n\nWhen Form Submissions are made, they are synced to the web administration portal. Here, you can filter submissions to find ones that match your criteria, review the submitted data and images in the Web Portal, or download a list of submissions in a spreadsheet. Read more about reporting in TrueContext for more advanced options. Watch the video below to see how to view your data in the web portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493678_ReviewYourDataOnThePortal.html",
      "title": "Review Your Data on the Web Portal",
      "section": "About"
    }
  },
  {
    "content": "From the Form:\n\nGo to the desired form. Select GO TO SUBMISSIONS near the form name. You will land on the Form Submissions page. It will list all submissions made for this form. By default, the list shows submissions made in the last 30 days. To easily find specific submissions, open Search Options to add some filters (workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\"., submitter, or date). Select Filter to get the new results. Search Options filter Form Submissions to the last 30 days by default. Select the reference number of the desired submission to review the full information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493678_ReviewYourDataOnThePortal.html",
      "title": "Review Your Data on the Web Portal",
      "section": "From the Form:"
    }
  },
  {
    "content": "From the Data and Analytics tab:\n\nSelect the Data & Analytics item in the top navigation, or hover over it then select Submissions (by Form). In the pop-up, find the name of the desired form. You can type the Form name or FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. name to filter the list. Select the form, then select Continue. You will land on the Form Submissions page. It will list submissions made for this form from the last 30 days. Select the reference number of the desired submission to review the full information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493678_ReviewYourDataOnThePortal.html",
      "title": "Review Your Data on the Web Portal",
      "section": "From the Data and Analytics tab:"
    }
  },
  {
    "content": "Download a Submission as a PDF\n\nNavigate to an individual form submission. Hover over the arrow beside the reference number. Select a file format to download the data in. The document should start to download immediately. Open the file to view it. Note that the appearance of this document can be customized, and your own branding can be added.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493678_ReviewYourDataOnThePortal.html",
      "title": "Review Your Data on the Web Portal",
      "section": "Download a Submission as a PDF"
    }
  },
  {
    "content": "Troubleshooting\n\nThis section includes the following content: Supported Versions and Operating Systems for the Mobile AppFeature Support by Operating System (OS)Enable Camera Access in Apps and Web Browsers",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/GetStartedTroubleshooting.htm",
      "title": "Troubleshooting",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Supported operating systems\n\nTrueContext currently supports the following operating systems: Operating System Version iOS Any device running iOS 17.0 or later Android Any device running Android 9.0 or later (10.0 or later recommended) Windows Desktop/Laptop PC–Windows 10 Version 1909 (build 18363) or later macOS Any Intel or M1 device running Sonoma (14.0) or later If you’re using an unsupported operating system, you can’t install the newest version of the Mobile App. As a result, you won’t have access to newer features.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/SupportedOSforPF.html",
      "title": "Supported Versions and Operating Systems for the Mobile App",
      "section": "Supported operating systems"
    }
  },
  {
    "content": "Supported Mobile App versions\n\nAs of September 1, 2024, TrueContext Mobile App versions earlier than 12.0 are no longer compatible with the TrueContext service. This includes apps for iOS (iPhones and iPads), Android, and Windows. Some users might be unable to update their app to a supported version. This can happen if: The app was not installed through a public app store and automatic updates are not available. The mobile device operating system is outdated and doesn’t support the updated app versions. If you encounter these issues, work with your organization’s IT support or find out how to contact TrueContext Support.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/GetStarted/SupportedOSforPF.html",
      "title": "Supported Versions and Operating Systems for the Mobile App",
      "section": "Supported Mobile App versions"
    }
  },
  {
    "content": "About\n\nTrueContext offers a wide variety of features across all of our mobile apps. In some cases, due to technical restrictions, certain features are unsupported on different platforms. This article lists the features where there is a difference in support across different platforms. Feature iOS Android Windows Camera to Text (Enterprise tier only) ✔ ✔ ✘ Document Scanning (Enterprise tier only) ✔ ✔ ✘ Device-Level Passcode Enforcement ✔ ✔ ✘ Note: These features are also impacted by app version.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/221681548.html",
      "title": "Feature Support by Operating System (OS)",
      "section": "About"
    }
  },
  {
    "content": "macOS\n\nTo enable camera access from the system preferences, go to Control access to your camera on Mac in the macOS user guide and follow the steps provided. To enable camera access in your web browser, follow the steps provided in the following links. Apple® Safari®—go to Change Websites preferences in Safari on Mac in the Safari user guide. Google Chrome™—go to Use your camera & microphone in the Google Chrome help Mozilla Firefox—go to How to manage your camera and microphone permissions with Firefox in the Mozilla support.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CameraControl.htm",
      "title": "Enable Camera Access in Apps and Web Browsers",
      "section": "macOS"
    }
  },
  {
    "content": "Windows\n\nTo enable camera access from Windows Settings, go to Windows camera, microphone, and privacy in the Microsoft support and follow the steps provided. To enable camera access in your web browser, follow the steps provided in the following links. Firefox—go to How to manage your camera and microphone permissions with Firefox in the Mozilla support. Microsoft Edge—go to Windows camera, microphone, and privacy in the Microsoft support. Scroll down to the How to allow a website to use your camera or microphone while browsing in Microsoft Edge section. Chrome—go to Use your camera & microphone in the Google Chrome help.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CameraControl.htm",
      "title": "Enable Camera Access in Apps and Web Browsers",
      "section": "Windows"
    }
  },
  {
    "content": "iOS\n\nTo enable camera access from the system Settings: Go to Settings > Privacy > Camera. Result: A list of all apps that have requested access to the camera opens. Turn on camera access for your browser and the Mobile App. To enable camera access in Safari: Select aA in the address bar as shown in the following image. Select Website Settings > Camera > Allow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CameraControl.htm",
      "title": "Enable Camera Access in Apps and Web Browsers",
      "section": "iOS"
    }
  },
  {
    "content": "Android\n\nTo enable camera access from the system Settings, go to Change permissions for apps on your Android phone in the Android help and follow the steps provided. To enable camera access in Chrome, go to Use your camera & microphone in the Google Chrome Help and follow the steps provided.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CameraControl.htm",
      "title": "Enable Camera Access in Apps and Web Browsers",
      "section": "Android"
    }
  },
  {
    "content": "Use the TrueContext Mobile App\n\nThis section includes the following content: Overview of the TrueContext Mobile AppTrueContext Mobile App Quick Start VideosIn-Form NavigationUse Form Tags in the Mobile App to Filter a List of FormsCompleting FormsMobile App Autosave FeatureSave a Draft in the TrueContext Mobile AppReconcile or Send/ReceiveRefresh Form Version and Data in the Mobile AppDocument to PDF ScanningReview a Summary of a mobile form before submittingRepeatable Sections on the Mobile AppUsing the “Sent” ListUsing the Map ViewiOS Client Installation and SettingsInstall the iOS TrueContext Mobile AppThe Mobile App Tiles: iOSiOS Client SettingsClear or change Geo Location questions in iOSHow to Install a TestFlight Version for iOSmacOS Client Installation and SettingsInstall and Use the macOS TrueContext Mobile AppmacOS SettingsDifferences Between the macOS and iOS Apps Android Client Installation and SettingsInstall the Android TrueContext Mobile AppMobile App Navigation for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/UsetheMobileApp.htm",
      "title": "Use the TrueContext Mobile App",
      "section": "Use the TrueContext Mobile App"
    }
  },
  {
    "content": "AndroidAndroid Client SettingsZebra Android Barcode ScannerSubmit a Form: AndroidWindows Client Installation and SettingsInstall the Windows TrueContext Mobile AppWindows App SettingsMobile App FAQsUsing Camera to Text to Answer QuestionsUsing the Sketch Pad ControlEnable Push Notifications on a Mobile Device“Data Type Launcher” FunctionalityVoice to Text FunctionalityEnterprise Mobility Management SolutionsUse Apple Business Manager to manage the TrueContext Mobile App on your devicesManaging TrueContext Mobile Apps with an AppConfig EMMEmbedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/UsetheMobileApp.htm",
      "title": "Use the TrueContext Mobile App",
      "section": "Use the TrueContext Mobile App"
    }
  },
  {
    "content": "Overview of the TrueContext Mobile App\n\nThis section includes the following content: TrueContext Mobile App Quick Start VideosIn-Form NavigationUse Form Tags in the Mobile App to Filter a List of FormsCompleting FormsMobile App Autosave FeatureSave a Draft in the TrueContext Mobile AppReconcile or Send/ReceiveRefresh Form Version and Data in the Mobile AppDocument to PDF ScanningReview a Summary of a mobile form before submittingRepeatable Sections on the Mobile AppUsing the “Sent” ListUsing the Map View",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/OverviewMobileApp.htm",
      "title": "Overview of the TrueContext Mobile App",
      "section": "Overview of the TrueContext Mobile App"
    }
  },
  {
    "content": "About\n\nThe TrueContext Mobile App allows field users to quickly and easily fill in and submit forms. As such, this core functionality is simple and intuitive to use. The specific look and content of the form will be based entirely on what has been configured by the TrueContext administrator. A few screen captures of very basic sample forms are shown here and are in no way intended to be representative of the content that may be displayed on your forms. Tip:You can use a Bluetooth keyboard that’s connected to an iOS device to navigate through a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "About"
    }
  },
  {
    "content": "Open a Form\n\nIn the Forms list, simply tap on the name of a form to open it. Info:If your admin set up a form to Refresh on Form Open, you might see an alert when the form opens.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Open a Form"
    }
  },
  {
    "content": "Select a language\n\nAvailable as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on If your team has the Multi-Language Forms add-on, you might see the option to select a language. The language that you choose applies to the page, section, and question text displayed in the form. Some parts of the form might still display in the language used by the Form Designer when they built the form. Note:Once you open a form and select a language, you can’t change it later. You can also choose to set a preferred language. This option automatically opens new forms in the selected language if the form is set up for that language. Tip:As with all app settings, the preferred language only applies to your settings on this particular device. Info:The topic Language Settings and Translations: How TrueContext determines the language to display provides more information about the language settings on your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Select a language"
    }
  },
  {
    "content": "Navigating between pages\n\nNavigating between pages is by touch and swipe. To move to the next page, simply tap on the right side of the screen and drag to the left. It is also possible to navigate using the arrows on the top right of the form. On iOS, left will go backwards in the form, and right will go forward. On Android 6.8 and above, the arrows are also right and left.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Navigating between pages"
    }
  },
  {
    "content": "Submit a Form\n\nOn Android, use the arrow button at the top right of the form to submit. On iOS, enter the Index/Page Listing and select Send on the top right to submit the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Submit a Form"
    }
  },
  {
    "content": "Index Pages\n\niOS Android On the Page Listing screen, users can view the pages in the form. The Page Listing is accessible by tapping the back arrow in any form. When the Index is enabled, the Page Listing shows all pages in the form and the user can skip ahead. When the Index is disabled, the Page Listing will only display pages already visited by the user. The user cannot skip ahead. Read more about the Index page in a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Index Pages"
    }
  },
  {
    "content": "\"Help\" Content\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Help content in mobile forms allows users access to support and other resources out in the field. Any question in the form can include a link to YouTube videos, TrueContext Support articles, or work instructions, reference tables and images. A question with help content associated will have a question mark next to it. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "\"Help\" Content"
    }
  },
  {
    "content": "The In-Form Menu\n\niOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "The In-Form Menu"
    }
  },
  {
    "content": "iOS Devices:\n\nTo access the menu on an iOS device, select the back arrow in the top left to return to the Index page. Then, select the menu icon to display the following options: Summary—View a summary of the record before submitting it. The Summary page only displays if the Form Designer sets it up in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. Mobile App Settings. Details—View the record metadata. Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "iOS Devices:"
    }
  },
  {
    "content": "field technicians in their work. (Enterprise tier only)—Access a library of reference materials without closing the record. Info:This option displays after a Work Manager or team lead enables the Resources tab. Two more options display at the top of the Index: Close—Close the record without submitting it. You have two options: Discard Changes—Discard the record and all information you entered. This cannot be undone. Save as Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder.—Save your progress on the record. Record drafts save to your Drafts. If you opened the record from your Inbox, the draft also saves to the Inbox. Info:It’s important to regularly save a draft as you work through a form. The topic Save a Draft in the TrueContext Mobile App describes in detail how to save and open a draft. Send—Submit the record to the TrueContext server. Tip:You can’t update a submitted record",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "iOS Devices:"
    }
  },
  {
    "content": "unless the Form Designer allows Corrections (Editing) (Advanced and Enterprise tiers only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "iOS Devices:"
    }
  },
  {
    "content": "Android Devices:\n\nThere are two buttons available in Android: Send—Submits the form data to the TrueContext server. Tip:You can’t update a submitted record unless the Form Designer allows Corrections (Editing) (Advanced and Enterprise tiers only). Menu—displays the following options: Close—Close the record without submitting it. You have two options: Discard—Discard the record and all information you entered. This cannot be undone. Save—Save your progress on the record. Record drafts save to your Drafts. If you opened the record from your Inbox, the draft also saves to the Inbox. Info:It’s important to regularly save a draft as you work through a form. The topic Save a Draft in the TrueContext Mobile App describes in detail how to save and open a draft. Summary—View a summary of the record before submitting it. The Summary page only displays if the Form Designer sets it up in the Form Builder Mobile App Settings. Resource Library (Enterprise tier only)—Access a library of reference",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Android Devices:"
    }
  },
  {
    "content": "materials without closing the record. Info:This option displays after a Work Manager or team lead enables the Resources tab. Details—View the record metadata. You can also access the Summary, Details, and Resource Library from the side navigation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499078_InFormNavigation.html",
      "title": "In-Form Navigation",
      "section": "Android Devices:"
    }
  },
  {
    "content": "Demo: Form tags in action\n\nYour browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/115003849986_UseFormTags.html",
      "title": "Use Form Tags in the Mobile App to Filter a List of Forms",
      "section": "Demo: Form tags in action"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be a mobile device user with Can Submit FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. You must have access to forms that have tags added by your supervisor. Info:The topic Set Up Form Properties describes how to add tags to each form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/115003849986_UseFormTags.html",
      "title": "Use Form Tags in the Mobile App to Filter a List of Forms",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Open a list of tags\n\nIn the TrueContext Mobile App on your device, select Forms, Inbox, Drafts, or Sent. Result: The app displays a list of available forms. How you open a list of tags to choose from depends on your device. Tip:The app only displays the tags option if the form designer configured a tag for at least one form in the list. iOS and macOS: Select the filter option, and then select one or more tags. Android: Select the filter option, and then select one or more tags. Windows: Select the filter option, and then select one or more tags. Result: The app opens a list of tags you can select. Do you want to display forms that match All the tags that you select? If yes, select All. If no, select Any to display a list of forms that match at least one of the selected tags. Select the tags you want to filter by. In the following example, the user selects the All filter option and the “campus” and “inspection” tags. Select Done to apply the filter. Result: The app displays a list of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/115003849986_UseFormTags.html",
      "title": "Use Form Tags in the Mobile App to Filter a List of Forms",
      "section": "Open a list of tags"
    }
  },
  {
    "content": "matching forms based on the filter option: If you selected All, the app displays a list of forms that match both the “campus” and “inspection” tags. If you selected Any, the app displays a list of forms that match either the “campus” or the “inspection” tags or both.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/115003849986_UseFormTags.html",
      "title": "Use Form Tags in the Mobile App to Filter a List of Forms",
      "section": "Open a list of tags"
    }
  },
  {
    "content": "Related topics\n\nSet Up Form Properties TrueContext Quick Start",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/115003849986_UseFormTags.html",
      "title": "Use Form Tags in the Mobile App to Filter a List of Forms",
      "section": "Related topics"
    }
  },
  {
    "content": "About\n\nWith TrueContext, filling out mobile forms is incredibly intuitive. No special training is required; all that is needed is a basic understanding of general navigation on your mobile device. Tip:If your team has the Multi-Language add-on on the Advanced or Enterprise tier, your TrueContext administrator can set up a form in different languages. Once you select a language, or when the language is preselected for you, the form is displayed in that language. Your admin can also set up questions that present you with a list of options to display in the selected language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "About"
    }
  },
  {
    "content": "Textbox/Text Area\n\nTap on the box to enter text. Some fields will only accept letters; others will only accept numbers. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Textbox/Text Area"
    }
  },
  {
    "content": "Yes/No\n\nA Yes/No question allows a single checkbox to be checked or unchecked. Tap on the box to check/uncheck. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Yes/No"
    }
  },
  {
    "content": "Button Group\n\nButton group questions allow the user to select one option out of a possible five. Tap to select. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Button Group"
    }
  },
  {
    "content": "Dropdown and Radio Button Questions\n\nDropdown questions allow users to select one answer from a list of options. Tap to view the options. The options available may vary depending on answers to previous questions. Radio Button questions are similar. The options are listed directly within the main screen of the form. Both Dropdown and Radio Button questions allow users to select only one answer. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Dropdown and Radio Button Questions"
    }
  },
  {
    "content": "Multiselect Questions\n\nMultiselect questions are like Radio Button questions, but they allow users to select more than one answer. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Multiselect Questions"
    }
  },
  {
    "content": "Date/Time and Duration Selectors\n\nThese questions collect Date only, Time only, both Date/Time, or Duration. iOS Android Date Android Time",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Date/Time and Duration Selectors"
    }
  },
  {
    "content": "Image Attachment\n\nThe image attachment tool allows users to either attach an image already saved on the device, or to take a new photo and attach it to the form. iOS Android Reorder Images with Drag-and-Drop You can rearrange images or sketches captured in a form by dragging and dropping them into the desired order. Use this feature when working with Image or Sketch form controls that allow multiple captures. To Reorder Images or Sketches: Open the form that contains the Image or Sketch control. If you can add more than one image or sketch to that question, the reorder option will be available. Press and hold the image or sketch you want to move. Drag it to the new position in the sequence. Release it to drop into place.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Image Attachment"
    }
  },
  {
    "content": "Signature Capture\n\nSignature capture fields allow users to add their signature on a form. Simply tap on the question, draw a signature on-screen by touch, and select Done/Save. Select Clear to erase a signature and start over. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Signature Capture"
    }
  },
  {
    "content": "Barcode\n\nBarcode questions allow users to scan a barcode with the camera of the mobile device. This is supported on most, but not all, devices that have a fairly high-resolution camera with auto-focus. If the camera on your mobile device does not have auto-focus capability, you can still capture and decode barcodes, however you must manually place the camera and/or barcode so that is in focus. Certain Android devices will come with barcode scanning functionality built in, while others will require that you download a barcode scanning app from the Google Play app store.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Barcode"
    }
  },
  {
    "content": "Advanced Question Types\n\nThe Sketch pad control allows users to draw on an image or a blank page using an array of drawing tools.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Advanced Question Types"
    }
  },
  {
    "content": "Required\n\nRequired questions must be answered before proceeding to the next page of a form or submitting a form. Any type of question can be a Required question. On iOS devices, Required questions are marked with an asterisk. On Android devices, text entry fields will show the text \"Required.\" If a user attempts to move to the next page without answering a Required question, an error message will appear advising the user that there are unanswered Required questions. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Required"
    }
  },
  {
    "content": "Read-Only\n\nRead-only questions are not editable on mobile devices. These fields usually either contain data filled out by an administrator in the case of a dispatched form or are auto-populated/prefilled based on selections made earlier in the form. A lock icon will be displayed next to the data to indicate its read-only status. iOS Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Read-Only"
    }
  },
  {
    "content": "Auto-populated Questions\n\nSome fields can be auto-populated (auto-filled) based on previous answers in a form. For example, the first question in a form might ask for a customer name to be selected from a list. The following questions can then be auto-populated with other information, like the customer's address and contact information. Learn more about configuring form questions to auto-populate.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499068_CompletingForms.html",
      "title": "Completing Forms",
      "section": "Auto-populated Questions"
    }
  },
  {
    "content": "When does the Mobile App autosave?\n\nThe Mobile App autosaves when you: Move to a new page in the form. Save and close a Repeatable Section entry. Navigate between Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. entries. Open your device’s camera to take a picture. Open your device’s photo library to upload an image. Open a Sketchpad question. The Mobile App also autosaves in Sketchpad questions whenever you: Upload an image from your device’s photo library. Select a satellite map image. The autosave runs in the background without interrupting your work. Tip:Sometimes, you might do a lot of work on a single page, or your work might take longer than one shift. In these cases, you might want to manually save a draft.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/AutosaveOnMobileApp.htm",
      "title": "Mobile App Autosave Feature",
      "section": "When does the Mobile App autosave?"
    }
  },
  {
    "content": "Best practice to ensure timely autosaves\n\nBreak up a long form into different pages. The app autosaves when users move from one page to another. Another benefit is that field users can access a page index to help them find a specific page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/AutosaveOnMobileApp.htm",
      "title": "Mobile App Autosave Feature",
      "section": "Best practice to ensure timely autosaves"
    }
  },
  {
    "content": "When should you save a draft?\n\nYou might want to save a draft when you: Keep a record open for more than one shift. Leave your device for an extended period of time, such as during lunch or overnight. Switch between apps on your device. For example, you might want to save a draft when you minimize or close the TrueContext Mobile App. Info:The TrueContext Mobile App performs autosaves for some actions, but we recommend that you save a draft before you:Set a record aside for the day.Close the Mobile App.Upgrade your device OS or the Mobile App version.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/SaveWorkOnMobileApp.htm",
      "title": "Save a Draft in the TrueContext Mobile App",
      "section": "When should you save a draft?"
    }
  },
  {
    "content": "iOS and macOS\n\nAre you currently on the form index page? If yes, go to step 2. If no, select the back arrow in the upper left corner of the page, and then go to step 2. On the form index page, select Close. Result: The TrueContext Mobile App prompts you to discard your progress, save your changes, or cancel the action. Select Save as Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder.. Result: The Mobile App closes your record and saves it as a draft.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/SaveWorkOnMobileApp.htm",
      "title": "Save a Draft in the TrueContext Mobile App",
      "section": "iOS and macOS"
    }
  },
  {
    "content": "Android\n\nSelect the Action Menu in the top right corner of the page. Select Close. Result: The TrueContext Mobile App prompts you to discard your work, save your changes, or cancel the action. Select Save. Result: The Mobile App closes your record and saves it as a draft.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/SaveWorkOnMobileApp.htm",
      "title": "Save a Draft in the TrueContext Mobile App",
      "section": "Android"
    }
  },
  {
    "content": "Windows\n\nSelect the back arrow in the top left corner of the app. Result: The TrueContext Mobile App prompts you to discard your work, save your changes, or cancel the action. Select Save. Result: The Mobile App closes your record and saves it as a draft.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/SaveWorkOnMobileApp.htm",
      "title": "Save a Draft in the TrueContext Mobile App",
      "section": "Windows"
    }
  },
  {
    "content": "Step-by-step: How to open a draft\n\nHow you open a draft depends on whether you initially opened the record from the Forms list or your Inbox. The Forms list contains all forms available for you to work on. If you open a record from Forms and save your changes, the draft saves to your Drafts. To find a record in your Drafts, select form tags or enter keywords in the search bar. The Inbox displays records a work manager dispatches or assigns to you and records that you claim. If you open a record from your Inbox and save your changes, the draft is saved to both your Inbox and Drafts. In both locations, an icon marks Inbox records that you saved as drafts. To find a record in your Inbox, you can: Select form tags. Enter keywords in the search bar. Sort by Due Date or Priority.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/SaveWorkOnMobileApp.htm",
      "title": "Save a Draft in the TrueContext Mobile App",
      "section": "Step-by-step: How to open a draft"
    }
  },
  {
    "content": "About\n\n\"Reconciling\" performs a send/receive from the Mobile App to the TrueContext server. This syncs new form versions, Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., and dispatches from the Web Portal to the Mobile App, to ensure that mobile users are working with up-to-date resources. This also syncs new form submissions from the Mobile App to the Web Portal, to ensure that work completed by a mobile user gets properly submitted and sent through Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. A network",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "About"
    }
  },
  {
    "content": "connection is required in order for a reconcile or send/receive to be successfully completed. Info: (Enterprise tier only) An admin can also set a form to refresh (download updates) between reconciles, when the form opens in the Mobile App. The topic Refresh Form Version and Data in the Mobile App describes this feature in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "About"
    }
  },
  {
    "content": "How Do I Manually Reconcile?\n\nThe Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. button can be found: At the bottom left of the Home screen on iOS devices At the top right of the screen on Android (TrueContext 6.8) devices. On the top or bottom right of the home screen on Windows devices. The device platforms that TrueContext runs on limit any apps' ability to sync while the app is in the background (not on-screen). Ensure that the TrueContext Mobile App remains in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "How Do I Manually Reconcile?"
    }
  },
  {
    "content": "foreground when performing a reconcile so that it is not interrupted. Do not close the app before the Reconcile is complete. Do not switch to other apps or screens before the Reconcile is complete. Note: On some platforms, the app may continue to reconcile for a few moments once the app is off-screen, but each OS has a limit on how long this may happen. Note that the larger the form (take photos, etc. into consideration) the longer it will take to reconcile, although this is still usually complete within a few seconds. Please make sure that you have a good network connection when you are reconciling your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "How Do I Manually Reconcile?"
    }
  },
  {
    "content": "When does the mobile app automatically reconcile?\n\nIn order to preserve the battery life of your mobile device and minimize unnecessary usage of cellular data, the Mobile App does not constantly sync to the Web Portal. However, several things can trigger a reconcile to ensure that users have the most up to date resources possible when working online. Keep in mind that a reconcile can only be initiated and completed when: A user is working online, and the TrueContext Mobile App has access to either Wi-Fi or cellular data The TrueContext Mobile App is open and on-screen The device platforms that TrueContext runs on limit any apps' ability to sync while the app is in the background (not on-screen). Ensure that the TrueContext Mobile App remains in the foreground when performing a reconcile so that it is not interrupted.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "When does the mobile app automatically reconcile?"
    }
  },
  {
    "content": "User actions that trigger an automatic reconcile:\n\nSome user actions lead to the Mobile App initiating a reconcile. Opening the Mobile App when it has not been reconciled in over an hour: When launching the TrueContext Mobile App, if it detects that it has not been reconciled in over an hour, it will attempt to reconcile if the device is online. This helps ensure that users working online are not using resources that are more than an hour out of date. Submitting a form: When a mobile user submits a form and is working online, the app will automatically try to reconcile. If it is successful, the form will reach the TrueContext server. If not, it will remain in the device's outbox until the next reconcile is triggered. This helps ensure that submitted forms make it to the Web Portal as soon as possible, and to sync any new updates from the Web Portal (new forms, etc.) at the same time.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "User actions that trigger an automatic reconcile:"
    }
  },
  {
    "content": "Web portal actions that trigger a reconcile through a push notification:\n\nSome actions performed in the Web Portal cause a push notification to be sent to the Mobile App. Push notifications A push notification is an automatic message sent to users to inform them of an update to the content of their TrueContext Mobile App. A team admin can enable or suppress push notifications. are only received while a user is working online. Automatic reconcile after a push notification: If a user has the Mobile App open and is on a List screen (Forms, Inbox, Drafts, Sent) when they receive a push notification, the Mobile App will automatically reconcile with no user intervention. User-triggered reconcile after a push notification: When a user taps on a push notification, the Mobile App will open and reconcile. This is true regardless of what they are currently doing on their mobile device (i.e., on their device home screen, in another app, reading their email).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "Web portal actions that trigger a reconcile through a push notification:"
    }
  },
  {
    "content": "When does the Mobile App NOT automatically reconcile?\n\nWhile working offline While a user is currently working on a submission that is on-screen in the Mobile App When the app is in the background (not on-screen): This means that if a user was working offline and created several form submissions that are in their Outbox, they will need to manually re-open the TrueContext Mobile App and reconcile once they are back online, in order for these to sync to the Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "When does the Mobile App NOT automatically reconcile?"
    }
  },
  {
    "content": "What if I Need to Work Offline?\n\nThe TrueContext Mobile App is designed to work offline. Users can fill out and submit forms when their device does not have a network connection. No data will be lost. Submitted forms can be sent in by reconciling once a network connection is available. However, the device does still need to be reconciled periodically, especially in order for submitted forms to be sent to the server. Otherwise, submitted forms will be stored locally (only on the device) in the app's Outbox. If workers are frequently in areas with no network connection, administrators should plan accordingly, and not expect field users to have new data the moment the administrator makes changes to a form or data. If an update to a form or Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "What if I Need to Work Offline?"
    }
  },
  {
    "content": "easy to provide mobile users with only the relevant, most current data. has been made that is absolutely essential for users to have, you can: Set up a form to Refresh on Form Open (Enterprise tier only). Send out a communication to all users reminding them to reconcile before beginning work on their forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499188_ReconcileSendReceive.html",
      "title": "Reconcile or Send/Receive",
      "section": "What if I Need to Work Offline?"
    }
  },
  {
    "content": "How a refresh works\n\nRefresh on Form Open Note:Your device must be online when you open the form. If you started a Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. (Sync) before opening the form, the refresh starts after the reconcile finishes. The app displays a progress message when the refresh starts: TrueContext checks and updates the following types of form data: The latest version of the form. Any Resource Images and Resource Documents used in the form.Data Source values",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshMobileAppData.htm",
      "title": "Refresh Form Version and Data in the Mobile App",
      "section": "How a refresh works"
    }
  },
  {
    "content": "from the most recent fetch.User lists for TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms that field users can transfer directly to another user. If the refresh completes successfully, you can start work on the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshMobileAppData.htm",
      "title": "Refresh Form Version and Data in the Mobile App",
      "section": "How a refresh works"
    }
  },
  {
    "content": "Alerts and options when a refresh fails\n\nIf the refresh fails, the app can display an alert. The alert message and your options depend on the form setup and type of failure. Form setupReason for failed refreshAlert displayed on the Mobile AppWhat you can doIgnoreDevice is offlineNoneStart work on the form.Network or system errorNoneWarnDevice is offlineOne of the following:Move to an area where you have network connectivity and try again.Start work on the form with the version and data you already have.Note:If you Continue, you risk not having the most recent form version and data. For example, if your admin updates the options in a Dropdown question, you won’t have the latest options.If you Discard and try another refresh, make sure that your device is online.Network or system errorBlockDevice is offlineMove to an area where you have network connectivity and try again. You must refresh before you can start work on the form.Network or system error",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshMobileAppData.htm",
      "title": "Refresh Form Version and Data in the Mobile App",
      "section": "Alerts and options when a refresh fails"
    }
  },
  {
    "content": "Differences between Reconcile and Refresh\n\nThe Reconcile (or Sync) action performs a send/receive between the TrueContext Mobile App and the TrueContext server. This synchronizes all new form versions, Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., Resources, user lists, Dispatches, and the Outbox.Info:The topic Reconcile or Send/Receive describes the reconcile action in more detail, including when the app reconciles automatically.The Refresh on Form Open action checks and updates the form version and related data for a single form. The refresh happens when you or another app on your device attempts to open the form. Unlike a reconcile, this action does not send data from the Mobile App to the server.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataFreshness/RefreshMobileAppData.htm",
      "title": "Refresh Form Version and Data in the Mobile App",
      "section": "Differences between Reconcile and Refresh"
    }
  },
  {
    "content": "About\n\nDocument scanning saves you time in the field by automatically converting documents to a searchable PDF file using Optical Character Recognition (OCR), also known as camera-to-text functionality. Instead of having to take photographs of each page of a document and attach each separately, document scanning allows you to accurately and quickly compile multiple pages into a single PDF, attach them to your form submission, and send them to the appropriate Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. As it scans the original document rather than requiring any typing, it'll also ensure higher accuracy and clear, auditable source material. The document scanning function works with the File Upload question type. Note:This feature works on the Android and iOS mobile apps. It is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032399852.html",
      "title": "Document to PDF Scanning",
      "section": "About"
    }
  },
  {
    "content": "currently not supported on Windows.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032399852.html",
      "title": "Document to PDF Scanning",
      "section": "About"
    }
  },
  {
    "content": "Using the Document Scanner Function\n\nDocument scanning uses the device's camera function to photograph a document, and then convert it to a searchable PDF. Open the correct form and navigate to a File Upload question Select the File Upload Question in your form. Select Scan Document from the list of input options: Follow the prompts on screen to take a photo of the document you wish to scan, then tap the 'take photo' button. If scanning a multi-page document on an iOS device, ensure Multi-Page is selected at the top left. Crop and edit/filter any screenshots in the Scan Results view as desired, and then select Done. This may take some time to convert the photos to searchable PDF. Once the document is converted and ready, it will be shown as an answer to the question in the form: To Preview the document on your device, long-press on the document name and select Preview. You can select text from the scanned document, copy it, and more:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032399852.html",
      "title": "Document to PDF Scanning",
      "section": "Using the Document Scanner Function"
    }
  },
  {
    "content": "Language Support\n\nCurrently, this functionality only works on languages that use the Latin alphabet and Arabic numeral systems. It does not currently recognize other alphabets.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032399852.html",
      "title": "Document to PDF Scanning",
      "section": "Language Support"
    }
  },
  {
    "content": "Fonts and Handwriting\n\nThis functionality is best used with standardized fonts rather than handwriting. Errors may occur with handwriting; for example, lower-case L may become |, or B may be read as 3. If using this functionality, please consider the source of the writing being transcribed and ensure it is somewhat standardized.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032399852.html",
      "title": "Document to PDF Scanning",
      "section": "Fonts and Handwriting"
    }
  },
  {
    "content": "Rotated/Upside-Down Text\n\nTaking a photo where the text is upside-down or heavily rotated may result in the text not being recognized or readable by the mobile device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032399852.html",
      "title": "Document to PDF Scanning",
      "section": "Rotated/Upside-Down Text"
    }
  },
  {
    "content": "Set up the Summary Page in the Form Builder\n\nThe Summary Page Options control whether field users can view and share the Summary Page. Tip:If you want to limit access to sensitive data, clear the option to allow users to share the Summary Page. They won’t be able to print the summary or share by text or email.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499158_ReviewASummaryofAForm.html",
      "title": "Review a Summary of a mobile form before submitting",
      "section": "Set up the Summary Page in the Form Builder"
    }
  },
  {
    "content": "View a Summary on iOS\n\nOn the Mobile App when filling a form, open the page listing by tapping back. Select Summary. A summary will open listing all answered questions. Skipped pages will not be summarized. Note:Viewing a summary does not submit the form. Tap Close to return to the form and submit it from there. To print or share the summary, tap the share button, and select the preferred sharing method. To return to the form, close the summary by tapping Close.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499158_ReviewASummaryofAForm.html",
      "title": "Review a Summary of a mobile form before submitting",
      "section": "View a Summary on iOS"
    }
  },
  {
    "content": "View a Summary on Android\n\nOn the Mobile App when filling a form, open the page listing by tapping the options menu. Select Summary. A summary will open listing all answered questions. Skipped pages will not be summarized. Note:Viewing a summary does not submit the form. Tap Close to return to the form and submit it from there. To save the summary, tap PRINT and select the preferred save method. Tip:To share the summary, open your preferred email or messaging app and send as an attachment. To return to the form, close the summary by tapping your phone's back button.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499158_ReviewASummaryofAForm.html",
      "title": "Review a Summary of a mobile form before submitting",
      "section": "View a Summary on Android"
    }
  },
  {
    "content": "View a Summary on the Windows app\n\nIn the Windows app, open the form that you want to work on. After you answer some or all of the questions, select the action menu to display the Index. From the Index, select Summary. Result: The summary opens and displays all answered questions. Skipped pages are not included in the summary. Do you want to print the summary? If yes, select the print icon. Result: A printable version opens, which you can save and then share. If no, select the check mark icon to return to the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499158_ReviewASummaryofAForm.html",
      "title": "Review a Summary of a mobile form before submitting",
      "section": "View a Summary on the Windows app"
    }
  },
  {
    "content": "What does a Repeatable Section look like?\n\nYou can easily recognize a Repeatable Section by the Summary Table view and the Add Entry option.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "What does a Repeatable Section look like?"
    }
  },
  {
    "content": "Add entries\n\nTap Add Entry to open the repeating subform. The subform contains all of the questions in the section, not just what’s displayed in the Summary Table. Enter the information. When you’re done, you can: Complete the entry (select the “check mark” icon). Complete the entry and open a new one, all in one step (select the “plus” icon). Tip:This saves you time when you have a lot of line items to enter.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Add entries"
    }
  },
  {
    "content": "Change, copy, and delete entries\n\nOnce you’ve added entries, you can: Open an entry and change your answers. Delete an entry. Copy and edit an entry. This can save you time when you only need to change a few answers for the new entry. Note:When you copy an entry:Attachments are not copied.Date/Time Stamps and Geo Stamps are automatically set to new values.Hidden data is copied to the new row.You must edit the copied row to avoid duplicating data. The following examples describe the actions you can take for each type of device. iOS and macOS Tap the “More Options” (three dots) menu, and then choose an option. Tip:You can also tap a row to open an entry for editing. Android To copy or open an entry, swipe right, and then tap an option. Tip:You can also tap a row to open an entry for editing. To delete an entry, swipe left, and then tap the delete option. Windows Right-click a row, and then choose an option. On a touch screen, select and hold a row to open the menu, and then choose an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Change, copy, and delete entries"
    }
  },
  {
    "content": "option. Tip:You can also click a row to open an entry for editing.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Change, copy, and delete entries"
    }
  },
  {
    "content": "Move (reorder) entries\n\nYou can move rows around in the Summary Table view as needed. This changes the order of the entries when you submit the form. iOS and Android Tap and hold, then drag the row to a different line. macOS and Windows Simply drag the row to a different line. Note:If you can’t add, edit, delete, copy, or reorder an entry, the Repeatable Section properties might be set to prevent these actions. Check with your admin if you have questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Move (reorder) entries"
    }
  },
  {
    "content": "Compact view\n\nThe main form shows the Summary Table compact view The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table.. Here’s an example of a compact view that’s set up to wrap rows (Enterprise tier only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Compact view"
    }
  },
  {
    "content": "Full view\n\nIf you choose to View All, the Summary Table full view The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. opens. You can scroll down through the entries and still see the header row. We call these “sticky” or “fixed” headers. This example shows how you can filter the table to only show the information that you need (Enterprise tier only). You can also sort the table Enterprise tier only). Info:The topic Repeatable Sections: Summary Table describes the different ways that form designers can set up the Summary Table.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Full view"
    }
  },
  {
    "content": "Inline editing\n\nForm designers can set up inline editing to make it easier for you to change answers directly in the Summary Table. With inline editing, you don’t have to open the whole subform. The following example shows how a Button Group question opens so that you can edit it. This example shows you can change a text answer within the Summary Table itself (Enterprise tier only). Your browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005283246.html",
      "title": "Repeatable Sections on the Mobile App",
      "section": "Inline editing"
    }
  },
  {
    "content": "About\n\nThe Mobile App Sent list allows users to view forms they have submitted. This makes reviewing data easy to do in the field, with no need to leave the Mobile App. When the Sent list is enabled for a team, the tile will appear alongside the Forms, Inbox, Outbox and Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. tiles. Tapping on Sent reveals download options. You can download form submissions as PDF, Word, or HTML documents. If Data Record Passthrough is enabled, then mobile users can’t view their form submissions from the Sent list. Android/Windows and iOS have different layouts for the Sent list, shown below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "About"
    }
  },
  {
    "content": "The Sent list: Android and Windows\n\n1. Select Sent to view submitted forms. 2. Tap on an item in the list to display several form document download actions. Tapping one of these will download the document to the Mobile App. 3. Select which app you wish to use to open the document. This will vary depending on the apps on your device. Your form submission will open in the selected app. 4. (Primarily PDF) From the preview, tap the menu icon in the upper right of the screen to allow for the document to be passed to other relevant functions and apps on the device. This will vary depending on the apps on your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "The Sent list: Android and Windows"
    }
  },
  {
    "content": "Sent list FAQs\n\nWhy can't I see the Sent list? Admins control what’s visible in the app. The lists can also be rearranged, and some can be hidden. Read more about customizing the mobile app tiles. When do my submitted forms move to the Sent list? Just like the other lists, the Sent list is updated when the app is reconciled. The Sent list updates after the Outbox, in order to allow time for submitted forms leaving the Outbox to upload to the Web Portal. How many/how long are items held in the Sent list? By default, the Sent list can hold 250 items, and Sent items are stored for 7 days. An admin can change this. Note:The Sent list is reported back to the device from the TrueContext server. This means that if a submission is deleted from the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. (whether manually deleted or deleted automatically after the retention",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "Sent list FAQs"
    }
  },
  {
    "content": "period), the Sent item also disappears from the device. What controls the naming of Sent items? The naming of items in the Sent, Drafts, and Outbox lists are all controlled by Data Record Naming. By default, submissions are named according to the following convention: \"%f - %d %t\" (Form Name - Submission Date - Submission Time). Custom naming can be configured to insert other text (like a customer name or work order number collected in the form) in the name of Sent items to make them more easily identifiable and easier to review. Read more about naming of items on the mobile app. What information is available for Sent items? The following information will be shown for each item listed: Submission name (see above for details on naming) The submission's unique reference number The submission's status -- uploaded or processed Last modified date",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "Sent list FAQs"
    }
  },
  {
    "content": "The Sent list: iOS\n\n1. Select Sent to view submitted forms. 2. Tap on an item in the list to display several data record document download actions. Tapping one of these will download the document to the Mobile App. 3. Select which document type you wish to open. 4. From the preview, tap the menu icon in the upper right of the screen to allow for the document to be passed to other relevant functions and apps on the device. This will vary depending on the apps on your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "The Sent list: iOS"
    }
  },
  {
    "content": "Sent list FAQs\n\nWhy don't I have a Sent list? Admins control what is visible in the app. The tiles can also be rearranged, and some can be hidden. The Outbox will hold submissions until the app is reconciled and the items are processed. Read more about customizing the mobile app tiles. When do my submitted forms move to the Sent list? When a user submits a form, the Mobile App sends it to the Outbox. The Outbox is a temporary queue for the submitted form before it uploads to the TrueContext Web Portal. Once the submitted form successfully uploads, it moves to the Sent list. Note:Forms can only be uploaded to the server when the device is online. How many/how long are items held in the app? By default, the Sent list can hold 250 items, and Sent items are stored for 7 days. An admin can change this. Note that the Sent list is reported back to the device from the TrueContext server. This means that if a submission is deleted from the TrueContext Web Portal (whether manually deleted, or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "Sent list FAQs"
    }
  },
  {
    "content": "deleted automatically after the retention time), the Sent item will also disappear from the device. What controls the naming of Sent items? The naming of items in the Sent/Outbox and Drafts lists are all controlled by Data Record Naming. By default, submissions are named according to the following convention: \"%f - %d %t\" (Form Name - Submission Date - Submission Time). Custom naming can be configured to insert other text (like a customer name or work order number collected in the form) in the name of Sent items to make them more easily identifiable and easier to review. Read more about naming of items on the mobile app. What information is available for Sent items? The following information will be shown for each item listed: Submission name (see above for details on naming) The submission's unique reference number The submission's status -- uploaded or processed Last modified date",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499128_UsingTheSentTab.html",
      "title": "Using the “Sent” List",
      "section": "Sent list FAQs"
    }
  },
  {
    "content": "Video demo\n\nThis video shows you a quick overview of how the map and list views work. Note:You must enable location services on your device.If the TrueContext Mobile App can’t find your location:It can’t perform the distance calculations.The map displays a zoomed-out view.The list displays distances of 0.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218907137.html",
      "title": "Using the Map View",
      "section": "Video demo"
    }
  },
  {
    "content": "Map view\n\nThe following example shows how you can use the map view to select a site that’s close to your current location. You can tap and hold a point on the map to drop a pin at that location. The new pin becomes the current location, and the distance calculation is based on this new point. The circle also shifts to be centered on the new pin.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218907137.html",
      "title": "Using the Map View",
      "section": "Map view"
    }
  },
  {
    "content": "List view\n\nYou can also get a list view of locations that shows the closest location at the top of the list. Tip:The distance units—either miles or kilometers—depend on your device locale settings. Info:The topic Display a Map View for Lookup Questions describes how a Form Designer sets up the map view.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218907137.html",
      "title": "Using the Map View",
      "section": "List view"
    }
  },
  {
    "content": "iOS Client Installation and Settings This section includes the following content: Install the iOS TrueContext Mobile AppThe Mobile App Tiles: iOSiOS Client SettingsClear or change Geo Location questions in iOSHow to Install a TestFlight Version for iOS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/iOSClientInstall&Settings.htm",
      "title": "iOS Client Installation and Settings"
    }
  },
  {
    "content": "To install the iOS client application:\n\nFind the App Store icon on the home screen of your device. Tap the icon to launch the App Store. If you haven’t set up an Apple ID on your device, the App Store prompts you to set it up. Once in the App Store, locate the search icon (a magnifying glass), and then search for “truecontext”. Select TrueContext from the list of results, and then tap Get. Result: Once the app successfully installs, you can open the TrueContext Mobile App by selecting the app icon on your device:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498938_InstallIOsApp.html",
      "title": "Install the iOS TrueContext Mobile App",
      "section": "To install the iOS client application:"
    }
  },
  {
    "content": "Home page tile numbers\n\nEach number in the Forms, Drafts, Inbox, Sent, and Outbox tiles indicates the number of items in each list. The following example shows seven blank forms in the Forms list and one dispatched form in the Inbox:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Home page tile numbers"
    }
  },
  {
    "content": "Forms\n\nThe Forms screen lists all forms available for the user to fill out. To open a form, simply tap on it. If there are multiple forms, scroll to view all available forms. Where are my Forms? If there are no forms listed on the Forms screen, it means no forms have been assigned. Forms must be assigned to users by a team administrator. Read here for the steps to follow if no forms/no new forms are appearing on your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Forms"
    }
  },
  {
    "content": "Inbox\n\nWhile forms that appear in the Forms list can be started by the user, forms that appear in the Inbox have been initiated (or Dispatched) by a TrueContext administrator. By default, forms are listed in the Inbox in alphabetical order. Read more about how an administrator can customize the form naming convention. About Dispatched forms: An administrator prefills some information on a form, uploads the data to the web administration portal, and dispatches the partially filled form to the mobile device of a user. Customer information and job details are items typically filled out by an administrator before dispatching. Prefilled fields may be set by an administrator to Read-Only so they cannot be edited on the mobile device. Forms in the Inbox can be opened by tapping on them, as with all forms. The remaining fields in the form can be filled out and the form can be submitted normally. Tip:If a field technician opens a record from their Inbox and saves their changes, the draft saves",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Inbox"
    }
  },
  {
    "content": "to both Inbox and Drafts. In both locations, an icon marks Inbox records that were saved as drafts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Inbox"
    }
  },
  {
    "content": "Drafts\n\nIf a field technician works on a record and saves their changes without submitting, the record saves to their Drafts. The field technician can select any record in their Drafts to continue working on it. The Drafts list includes records the field technician opened from their Inbox and then saved. Any data in a draft will remain on the device and will not appear on the TrueContext server until the form has been submitted by the user. Once a form is submitted, it will disappear from the Drafts list. Delete Drafts: On the Drafts list, swipe the Form name to the left and a red icon with a trash can will show up. Select the trash can and it will remove the Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. Form from that folder. By default, forms are listed as Drafts in alphabetical order. Read more about how an administrator can customize the form naming convention.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Drafts"
    }
  },
  {
    "content": "Outbox\n\nWhen a user submits a form, the Mobile App sends it to the Outbox. The Outbox is a temporary queue for the submitted form before it uploads to the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. Once the submitted form successfully uploads, it moves to the Sent list. Note:Forms can only be uploaded to the server when the device is online. By default, forms are listed in the Outbox in alphabetical order. Warning: You can’t edit forms in the Outbox, but you can delete them. If you delete a form from the Outbox, you’ll lose the data that’s in the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Outbox"
    }
  },
  {
    "content": "Sent\n\nThe Sent list contains a mobile user’s submitted forms. By default, the Sent list can store up to 20 different submissions of a single form for seven days. Admins can configure the storage limits of individual forms in the Form Builder. Note: If Data Record Passthrough is enabled, mobile users can’t view submitted forms in the Sent list. An admin can set specific forms to not display in the Sent list. Mobile users cannot check for these submitted forms in the Mobile App once they complete the form. Users can view the names and submission dates of their submitted forms in the Sent list. Depending on the form configuration, users can also: Download and open a document report to review the submitted form’s details. Edit answers of a submitted form and re-submit it. By default, forms are listed in order of submission date and time, with the most recently submitted form at the top. Info:The topic The Sent list: iOS describes in more detail how to navigate the Mobile App Sent list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498958_TheMobileAppTabsiOS.html",
      "title": "The Mobile App Tiles: iOS",
      "section": "Sent"
    }
  },
  {
    "content": "Access the Settings\n\nYou can start work right away without changing any of the default settings. Some of the settings that you might want to check include: Setting Description Change Password Reset your account password. Log Out Sign out and delete any Drafts and forms in your Outbox. Contact Support Get help by phone or email, or go to our self-service website. Application Settings Customize how you capture and display information on your app, including alerts for specific actions. Passcode Lock Set up an app-level passcode for added security. To access the TrueContext Settings, select the gear icon on the lower right of the Home screen.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Access the Settings"
    }
  },
  {
    "content": "Username\n\nThis shows you the username of the signed-in user. If the app shows the wrong username, sign out, and then sign in with the correct username.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Username"
    }
  },
  {
    "content": "Change Password\n\nYou can change your account password from the app—you don’t have to go to the Web Portal to change your password. Use your new password the next time you sign into the app or Web Portal. Tip:You must know your current password in order to create a new one. If you can’t remember your password, select Forgot Password and enter your email address. The system sends you an email that includes a link and instructions to reset your password.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Change Password"
    }
  },
  {
    "content": "Account Details\n\nThis page lists your team and user information. You can also view and edit your contact information here. Tip:Once you save your new contact details, you can’t edit them again on the app. Instead, sign in to the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. to make further changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Account Details"
    }
  },
  {
    "content": "Log Out\n\nThis action logs you out of the Mobile App. When you log out, the system permanently deletes all Drafts and Outbox forms and resets app settings to their default values. Note:Deleted data can’t be recovered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Log Out"
    }
  },
  {
    "content": "Contact Support\n\nSelect the Support email address, phone number, or URL to start an email, phone call, or web browser. By default, this is the contact information for TrueContext Support, but a TrueContext Admin user can customize this information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Contact Support"
    }
  },
  {
    "content": "Image Quality\n\nImage resolution (Image Quality) and file size (Image Compression) both affect image quality. Note:Your admin can set a maximum resolution and file size in the question properties. This limits the image and file size, regardless of your app-level setting. If the admin chooses to Use device settings, your app-level settings determine the image quality. You only need to change the image settings when: Your device is low on storage space. Your admin doesn’t know how large the images should be to display properly. Your admin has selected Use device settings. The Image Quality setting controls the size of the image itself. The larger the image, the better the resolution (quality). The Medium (default) option works well in most cases. Tip: Only choose a large image size when you really need to. A form that has lots of large images increases the form submission size, processing times, and data usage on the mobile device. There are four Image Quality options: Option Maximum",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Image Quality"
    }
  },
  {
    "content": "length of the long edge Small 640 pixels Medium (Default) 1024 pixels Original Original resolution and display size Custom Custom value",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Image Quality"
    }
  },
  {
    "content": "Image Compression\n\nThe Image Compression setting controls the size of the image file. A higher compression reduces both the file size and the image quality. Tip:If you choose a higher compression, we advise that you also choose a smaller Image Quality.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Image Compression"
    }
  },
  {
    "content": "Advanced Settings\n\nThe Advanced Settings include device and notification options. You don’t need to change these unless you’re getting too many alerts or your network connectivity is weak or intermittent. Advanced Settings is a nested menu under Application Settings. Repeat Row Settings Confirm Row Copy Display a prompt to confirm that you want to copy a row from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table. The prompt displays when you open an existing entry and select the copy icon. From the Summary Table, you can also swipe the row right and then select the copy option. Confirm Row Delete Display a prompt to confirm that you want to delete a row from a Repeatable Section Summary Table. The prompt displays when you swipe the row left and then select the delete option. Limit Repeat",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Display By default, the Summary Table in a Repeatable Section displays a row for each entry. Enable the Limit Repeat Display option when you want to show only a limited number of rows. If you’re working in the Repeatable Section and need to show a row that’s not displayed, select View All. Other Application Settings Audio Quality Change the quality of audio files that you attach to your forms. Medium Quality (the default) should suffice for most recordings. Note:A higher audio quality increases the file size, which affects the form submission size, processing time, and cellular data usage.The question settings override the Mobile App settings if the admin selects the Enforce audio quality option. Barcode Camera Choose either the front- or rear-facing camera (default) for scanning barcodes. Driving Directions Provider Select the app that you want to use for driving directions. You can launch driving directions from a Geo Location question. Preferred Form Language (Available with the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Multi-Language Forms add-on for the Advanced and Enterprise tiers.) This setting shows that you selected the Make this my preferred language option when you opened a form. To switch off this setting, select Ask me on form open. Result: The app saves the previously selected language in case you want to use it again. Confirm Send Display a prompt to confirm that your form is ready to send. This gives you a chance to go back and edit the form before you send it. Confirm Receive Display a notification when the TrueContext server confirms that it received your submitted form. Confirm Discard Display a prompt to confirm that you want to discard changes to an open form. Note:We recommend that you keep this enabled to prevent accidentally losing work that you’ve completed. Confirm Clear For Text Area questions, when you select Clear, display a prompt to confirm that you want to clear your answer. This prevents accidentally deleting long answers. Serial Uploads By default, pending forms in your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Outbox upload all at once when your device is back online. This makes the upload faster, but it takes more bandwidth. If you regularly experience poor or intermittent network service, you can switch on Serial Uploads. This sets the Mobile App to send forms one at a time. Serial uploads take longer but use less bandwidth, making it more likely that each form will upload successfully. Diagnostics When the TrueContext Mobile App detects a problem, it displays the Diagnostics settings. The support team will tell you how to use these options to help them troubleshoot issues. Send Forms to Support Send an email that includes a zip file version of a form in your Outbox. Send Drafts to Support Send an email that includes a zip file version of a form in your Drafts list. Send Logs to Support Send an email that includes a zip file version of logs that can help the support team troubleshoot any issues. Log Level As advised by the support team, use this option to change how much information the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "logs collect. Log Download Items As advised by the support team, use this option to add a list of items that are pending download to the log file. You won’t see anything happen when you select this option because the app adds the info in the background. Reset Options Reset Forms The support team might tell you to Reset Forms if the forms or other data on your device aren’t working. This action re-downloads data from the server and stores it on your device. You won’t lose any information that you already entered in a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Passcode Lock\n\nFor added security, you can set up an app-level passcode. After you set up a passcode lock, the Mobile App prompts you for your passcode the next time you open the app. Only a user who knows the passcode can access TrueContext data. You can also unlock the app with Touch or Face ID if you’ve set them up on your device. Info:The topic TrueContext Mobile App Passcode Lock describes the passcode lock setting in more detail. Erase Data option When you set up your passcode, you can also choose to Erase Data after 10 failed passcode attempts. Switch this option on to permanently delete all drafts, pending submissions, and app settings. Warning:You can’t get the local data back once it’s deleted. Change Passcode You can change your passcode any time after you set it up. In the Security Settings, select Change Passcode. The app prompts you to enter your old passcode, and then to enter and reenter your new passcode.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "Passcode Lock"
    }
  },
  {
    "content": "About\n\nVersion Displays the version and build of the installed TrueContext Mobile App. Tip:We recommend that you always run the most recent version of TrueContext. Terms of Use Opens a browser that displays the TrueContext Subscription Agreement. Privacy Policy Opens a browser that displays the TrueContext Privacy Policy. Licenses Displays a list of the third-party licenses used by TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498948_iOSClientSettings.html",
      "title": "iOS Client Settings",
      "section": "About"
    }
  },
  {
    "content": "Clear or change Geo Location questions in iOS Available on all tiers: Essentials Advanced Enterprise The Geo Location question type enables you to enter your current location in a form. Unlike Android or Windows apps, the iOS app doesn't have an obvious way to change the data in a Geo Location question. However, there is a way to clear or change map coordinates in the iOS app. With a location already entered, select the map icon next to the answer. This takes you to the map area and the location currently selected. From there, select the pin to display the option to forward or delete the location in question. The following image shows the delete option highlighted. To clear the location, select the delete option. The form shows an empty Geo Location question. You can now enter a new location. Need more help? Find out how to contact Support for assistance.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360041529651.html",
      "title": "Clear or change Geo Location questions in iOS"
    }
  },
  {
    "content": "About\n\nThis article explains what steps are required when testing the latest version of TrueContext using an iOS device (Apple iPhone, iPad). Note: This article is intended for clients who are already involved in a TrueContext beta program.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224248467.html",
      "title": "How to Install a TestFlight Version for iOS",
      "section": "About"
    }
  },
  {
    "content": "Before You Begin\n\nPlease ensure you have: Your iOS device. Internet access. An Apple ID and the ability to download apps from the App Store.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224248467.html",
      "title": "How to Install a TestFlight Version for iOS",
      "section": "Before You Begin"
    }
  },
  {
    "content": "Using a TestFlight Link to Download a Beta Client\n\nTestFlight is the service that allows you to beta test the latest versions of TrueContext. It allows multiple testing strategies, and one is simply a publicly accessible link which will be emailed to you along with other beta program details. Simply select the link and install the app as described below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224248467.html",
      "title": "How to Install a TestFlight Version for iOS",
      "section": "Using a TestFlight Link to Download a Beta Client"
    }
  },
  {
    "content": "Your Beta Invitation Email\n\nIf the beta program is more limited, you will receive an email invitation from TestFlight with a subject line of TestFlight: TrueContext Inc. invited you to test TrueContext – Mobile Forms. TestFlight is the service that allows you to beta test the latest versions of TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224248467.html",
      "title": "How to Install a TestFlight Version for iOS",
      "section": "Your Beta Invitation Email"
    }
  },
  {
    "content": "Getting Started with TestFlight and TrueContext\n\nWhile viewing the email on your device or using the public link, tap Start Testing. This will take you to a screen with the test version of TrueContext listed and three steps: Get TestFlight from the App Store. Open TestFlight and choose Redeem. Enter invite code and start testing. Tap Get TestFlight from the App Store. Install TestFlight by tapping GET. Accept the Terms and Conditions for TestFlight by tapping “Accept” at the bottom right of the following screen. When TestFlight has finished installing, it will take you to the TestFlight page for TrueContext. Tap Install. Sign into TrueContext as normal. Note: If TestFlight asks for a code to install the test version of TrueContext, please enter the code from the invitation instruction page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224248467.html",
      "title": "How to Install a TestFlight Version for iOS",
      "section": "Getting Started with TestFlight and TrueContext"
    }
  },
  {
    "content": "macOS Client Installation and Settings\n\nThis section includes the following content: Install and Use the macOS TrueContext Mobile AppmacOS SettingsDifferences Between the macOS and iOS Apps",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/macOSClientInstallAndSettings.htm",
      "title": "macOS Client Installation and Settings",
      "section": "macOS Client Installation and Settings"
    }
  },
  {
    "content": "System requirements\n\nOperating System macOS Big Sur (13.0) or later Hardware Intel or M1 chip RAM No specific requirements Free space Enough to store the macOS app and auxiliary files such as attachments, images, and logs",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/InstallMacOS.htm",
      "title": "Install and Use the macOS TrueContext Mobile App",
      "section": "System requirements"
    }
  },
  {
    "content": "Install the macOS app\n\nThe macOS app is available from the App Store. To download the TrueContext Mobile App from the store, you must have an Apple ID. You can create the ID without a credit card. Tip:We recommend that you enable FileVault on your macOS device to protect filesystem data. Open the App Store, and enter “truecontext” in the search box. Result: The TrueContext Mobile App displays in the search results. Download and install the Mobile App. Open the TrueContext macOS app to complete setup and sign in. Tip:Use the Finder to search for the app after it downloads.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/InstallMacOS.htm",
      "title": "Install and Use the macOS TrueContext Mobile App",
      "section": "Install the macOS app"
    }
  },
  {
    "content": "Description of the Home screen\n\nInfo:The Home page display depends on the team configuration. The topic Team Settings explains the options in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/InstallMacOS.htm",
      "title": "Install and Use the macOS TrueContext Mobile App",
      "section": "Description of the Home screen"
    }
  },
  {
    "content": "Keep the TrueContext Mobile App up to date\n\nYou must have the latest version of the app to access all of the latest functionality. Set your system to automatically check for upgrades, or set a reminder to check the App Store periodically.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/InstallMacOS.htm",
      "title": "Install and Use the macOS TrueContext Mobile App",
      "section": "Keep the TrueContext Mobile App up to date"
    }
  },
  {
    "content": "Access the settings\n\nYou can start work right away without changing any of the default settings. Some of the settings that you might want to check include: Setting Description Change Password Reset your account password. Log Out Sign out and delete any Drafts and forms in your Outbox. Contact Support Get help by phone or email, or go to our self-service website. Application Settings Customize how you capture and display information on your app, including alerts for specific actions. Passcode Lock Set up an app-level passcode for added security. Access the TrueContext Settings from the gear icon in the bottom right of the Home screen.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Access the settings"
    }
  },
  {
    "content": "Username\n\nThis shows you the username of the signed-in user. If the app shows the wrong username, sign out, and then sign in with the correct username.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Username"
    }
  },
  {
    "content": "Change Password\n\nYou can change your account password from the app—you don’t have to go to the Web Portal to change your password. Use your new password the next time you sign into the app or Web Portal. Tip:You must know your current password in order to create a new one. If you can’t remember your password, select Forgot Password and enter your email address. The system sends you an email that includes a link and instructions to reset your password.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Change Password"
    }
  },
  {
    "content": "Account Details\n\nThis page lists your team and user information. You can also view and edit your contact information here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Account Details"
    }
  },
  {
    "content": "Log Out\n\nThis action logs you out of the Mobile App. When you log out, the system permanently deletes all Drafts and Outbox forms and resets app settings to their default values. Note:Deleted data can’t be recovered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Log Out"
    }
  },
  {
    "content": "Contact Support\n\nSelect the Support email address, phone number, or URL to start an email, phone call, or web browser. By default, this is the contact information for TrueContext Support, but a TrueContext Admin user can customize this information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Contact Support"
    }
  },
  {
    "content": "Image Quality\n\nImage resolution (Image Quality) and file size (Image Compression) both affect image quality. Note:Your admin can set a maximum resolution and file size in the question properties. This limits the image and file size, regardless of your app-level setting. If the admin chooses to Use device settings, your app-level settings determine the image quality. You only need to change the image settings when: Your device is low on storage space. Your admin doesn’t know how large the images should be to display properly. Your admin has selected Use device settings. The Image Quality setting controls the size of the image itself. The larger the image, the better the resolution (quality). The Medium (default) option works well in most cases. Tip: Only choose a large image size when you really need to. A form that has lots of large images increases the form submission size, processing times, and data usage on the mobile device. There are four Image Quality options: Option Maximum",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Image Quality"
    }
  },
  {
    "content": "length of the long edge Small 640 pixels Medium (Default) 1024 pixels Original Original resolution and display size Custom Custom value",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Image Quality"
    }
  },
  {
    "content": "Image Compression\n\nThe Image Compression setting controls the size of the image file. A higher compression reduces both the file size and the image quality. Tip:If you choose a higher compression, we advise that you also choose a smaller Image Quality.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Image Compression"
    }
  },
  {
    "content": "Advanced Settings\n\nRepeat Row Settings Confirm Row Copy Display a prompt to confirm that you want to copy a row from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table. The prompt displays when you open an existing entry and select the copy icon. From the Summary Table, you can also swipe the row right and then select the copy option. Confirm Row Delete Display a prompt to confirm that you want to delete a row from a Repeatable Section Summary Table. The prompt displays when you swipe the row left and then select the delete option. Limit Repeat Display By default, the Summary Table in a Repeatable Section displays a row for each entry. Enable the Limit Repeat Display option when you want to show only a limited number of rows. If you’re working in the Repeatable Section and need to show a row",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "that’s not displayed, select View All. Other Application Settings Audio Quality Change the quality of audio files that you attach to your forms. Medium Quality (the default) should suffice for most recordings. Note:A higher audio quality increases the file size, which affects the form submission size, processing time, and cellular data usage.The question settings override the Mobile App settings if the admin selects the Enforce audio quality option. Driving Directions Select the app that you want to use for driving directions. You can launch driving directions from a Geo Location question. Preferred Form Language (Available with the Multi-Language Forms add-on for the Advanced and Enterprise tiers.) This setting shows that you selected the Make this my preferred language option when you opened a form. To switch off this setting, clear the Use preferred form language checkbox. Result: The app saves the previously selected language in case you want to use it again. Confirm Send Display a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "prompt to confirm that your form is ready to send. This gives you a chance to go back and edit the form before you send it. Confirm Receive Display a notification when the TrueContext server confirms that it received your submitted form. Confirm Discard Display a prompt to confirm that you want to discard changes to an open form. Note:We recommend that you keep this enabled to prevent accidentally losing work that you’ve completed. Confirm Clear For Text Area questions, when you select Clear, display a prompt to confirm that you want to clear your answer. This prevents accidentally deleting long answers. Serial Uploads By default, pending forms in your Outbox upload all at once when your device is back online. This makes the upload faster, but it takes more bandwidth. If you regularly experience poor or intermittent network service, you can switch on Serial Uploads. This sets the Mobile App to send forms one at a time. Serial uploads take longer but use less bandwidth, making it more",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "likely that each form will upload successfully. Diagnostics Send Logs to Support Send an email that includes a zip file version of logs that can help the support team troubleshoot any issues. Log Level As advised by the support team, use this option to change how much information the logs collect. Log Download Items As advised by the support team, use this option to add a list of items that are pending download to the log file. You won’t see anything happen when you select this option because the app adds the info in the background. Reset Options Reset Forms The support team might tell you to Reset Forms if the forms or other data on your device aren’t working. This action re-downloads data from the server and stores it on your device. You won’t lose any information that you already entered in a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Passcode Lock\n\nFor added security, you can set up an app-level passcode. After you set up a passcode lock, the Mobile App prompts you for your passcode the next time you open the app. Only a user who knows the passcode can access TrueContext data. Info:The topic TrueContext Mobile App Passcode Lock describes the passcode lock setting in more detail. Change Passcode You can change your passcode any time after you set it up. In the Security Settings, select Change Passcode. The app prompts you to enter your old passcode, and then to enter and reenter your new passcode. Erase Data When you set up your passcode, you can also choose to Erase Data after 10 failed passcode attempts. Switch this option on to permanently delete all drafts, pending submissions, and app settings. Warning:You can’t get the local data back once it’s deleted.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Passcode Lock"
    }
  },
  {
    "content": "Version\n\nDisplays the version and build of the installed TrueContext Mobile App. Tip:We recommend that you always run the most recent version of TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Version"
    }
  },
  {
    "content": "Terms of Use\n\nOpens a browser that displays the TrueContext Subscription Agreement.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Terms of Use"
    }
  },
  {
    "content": "Privacy Policy\n\nOpens a browser that displays the TrueContext Privacy Policy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Privacy Policy"
    }
  },
  {
    "content": "Licenses\n\nDisplays a list of the third-party licenses used by TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/macOSSettings.htm",
      "title": "macOS Settings",
      "section": "Licenses"
    }
  },
  {
    "content": "Differences Between the macOS and iOS Apps Available on all tiers: Essentials Advanced Enterprise The macOS app was developed using the macOS Software Development Kit (SDK). Due to limitations in the SDK, some of the features supported on iOS are not supported on macOS. Unsupported in macOS Effect on the macOS app Optical Character Recognition (OCR) keyboard Users can’t use OCR to add text from camera images. Google Maps There’s no option to Choose Satellite Image in Sketch Pad questions that Allow sketching on a map. Document scanning Document scanning is not supported for File Upload questions. Passcode lock A passcode lock is an added security feature that field users can set up on their Mobile Apps. A passcode lock ensures that only the user who knows the passcode can access the data. Touch ID and Face ID are supported on iOS and macOS versions of the Mobile App. The TrueContext Mobile App window doesn’t obscure like it does on an iPhone. To trigger the passcode lock, the user must",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/MacOSKnownIssues.html",
      "title": "Differences Between the  macOS and iOS Apps"
    }
  },
  {
    "content": "quit the app or hide the window. Device passcodes Because users must always sign in on their Macs, a device passcode isn’t needed and has no effect.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/MacOS%20Client%20Installation%20and%20Settings/MacOSKnownIssues.html",
      "title": "Differences Between the  macOS and iOS Apps"
    }
  },
  {
    "content": "Android Client Installation and Settings\n\nThis section includes the following content: Install the Android TrueContext Mobile AppMobile App Navigation for AndroidAndroid Client SettingsZebra Android Barcode ScannerSubmit a Form: Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/AndroidClientInstall&Settings.htm",
      "title": "Android Client Installation and Settings",
      "section": "Android Client Installation and Settings"
    }
  },
  {
    "content": "To install the Android client application:\n\nFind the Google Play Store icon on your device. Tap the icon to launch the Play Store. If you haven’t already set up a Google account on your device, the Play Store prompts you to set one up. In the Play Store, locate the search icon (a magnifying glass), and then search for “truecontext”. Select TrueContext from the list of results, and then tap Install. Result: Once the app successfully installs, you can open the TrueContext Mobile App by selecting the app icon on your device: Optionally, if TrueContext is commonly used, it may be desirable to place the TrueContext icon on one of the device's home screens. While specific capabilities may vary by device, it is typically possible to tap and HOLD on the TrueContext icon, and then drag it out onto a home screen, this makes TrueContext particularly easy to access in the future.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499278_InstallAndroidApp.html",
      "title": "Install the Android TrueContext Mobile App",
      "section": "To install the Android client application:"
    }
  },
  {
    "content": "Home screen\n\nThere are five tiles on the Android Mobile App Home Screen: Forms, Inbox, Drafts, Outbox, and Sent. The boxes seen may vary (and may appear in a different order) based on team settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Home screen"
    }
  },
  {
    "content": "Forms\n\nForms lists all forms available for the user to fill out. To open a form, simply tap on it. If there are multiple forms, scroll to view all available forms. Where are my Forms? If there are no forms listed, no forms have been assigned to the user in the FormSpace or the user has incorrect Group permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Forms"
    }
  },
  {
    "content": "Inbox\n\nWhile forms that appear in the Forms box can be started by the user, forms that appear in the Inbox have been initiated (or Dispatched) by a TrueContext team administrator. By default, forms in the Inbox are listed by \"Form Name - Date and Time last edited\". Read more about how an administrator can customize this naming convention. About Dispatched forms: An administrator prefills some information on a form, uploads the data to the Web Portal, and dispatches the partially-filled form to the mobile device of a user. Customer information and job details are items typically filled out by an administrator before dispatching. Prefilled fields may be set by an administrator to Read-Only so they cannot be edited on the mobile device. Forms in the Inbox can be opened by tapping on them, as with all forms. The remaining fields in the form can be filled out and the form can be submitted normally. Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Inbox"
    }
  },
  {
    "content": "customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Notes Where applicable, dispatch notes appear beneath dispatches. These usually contain job-relevant information included when the home user sends out the dispatch to the mobile user. Sorting The Inbox is sorted alphabetically. Dispatches in black italics are non-declinable dispatches, while dispatches in blue can be declined. If an edit is requested on a dispatch, it will be black, with a blue Edit Requested. Tip:If a field technician opens a record from their Inbox and saves their changes, the draft saves to both Inbox and Drafts. In both locations, an icon marks Inbox records that were saved as drafts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Inbox"
    }
  },
  {
    "content": "About Dispatched forms:\n\nAn administrator prefills some information on a form, uploads the data to the Web Portal, and dispatches the partially-filled form to the mobile device of a user. Customer information and job details are items typically filled out by an administrator before dispatching. Prefilled fields may be set by an administrator to Read-Only so they cannot be edited on the mobile device. Forms in the Inbox can be opened by tapping on them, as with all forms. The remaining fields in the form can be filled out and the form can be submitted normally. Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Notes Where applicable, dispatch notes appear beneath dispatches. These usually contain job-relevant information",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "About Dispatched forms:"
    }
  },
  {
    "content": "included when the home user sends out the dispatch to the mobile user. Sorting The Inbox is sorted alphabetically. Dispatches in black italics are non-declinable dispatches, while dispatches in blue can be declined. If an edit is requested on a dispatch, it will be black, with a blue Edit Requested. Tip:If a field technician opens a record from their Inbox and saves their changes, the draft saves to both Inbox and Drafts. In both locations, an icon marks Inbox records that were saved as drafts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "About Dispatched forms:"
    }
  },
  {
    "content": "Declining a Dispatch\n\n1. Navigate to the Inbox. 2. Tap and hold the dispatch you wish to delete, then select the trash can icon to decline. 3. Select OK when asked to confirm. You can check declined dispatches in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.: Data & Analytics > Submissions (by Form) > FormName. A red arrow indicates a declined dispatch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Declining a Dispatch"
    }
  },
  {
    "content": "Drafts\n\nIf a field technician works on a record and saves their changes without submitting, the record saves to their Drafts. The field technician can select any record in their Drafts to continue working on it. The Drafts list includes records the field technician opened from their Inbox and then saved. Any data in a draft will remain on the device and will not appear on the TrueContext server until the form has been submitted by the user. Once a form is submitted, it will disappear from the Drafts box. By default, forms in the Drafts box are listed by \"Form Name - Date and Time last edited\". Read more about how an administrator can customize this naming convention. Delete Drafts If a user no longer needs to keep their draft forms, they can delete them from their device. Select individual drafts to delete by tapping and holding the item until a checkbox appears. Then tap on additional drafts you wish to delete and select the trash can icon.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Drafts"
    }
  },
  {
    "content": "Outbox\n\nWhen a user submits a form, the Mobile App sends it to the Outbox. The Outbox is a temporary queue for the submitted form before it uploads to the TrueContext Web Portal. Once the submitted form successfully uploads, it moves to the Sent list. Note:Forms can only be uploaded to the server when the device is online. By default, forms are listed in the Outbox in alphabetical order. Warning: You can’t edit forms in the Outbox, but you can delete them. If you delete a form from the Outbox, you’ll lose the data that’s in the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Outbox"
    }
  },
  {
    "content": "Sent\n\nThe Sent list holds forms that have been submitted to and received by the TrueContext Web Portal. Info:The topic Using the “Sent” List describes how the Sent list works in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499258_AndroidMobileAppNavigation.html",
      "title": "Mobile App Navigation for Android",
      "section": "Sent"
    }
  },
  {
    "content": "Access the Settings\n\nYou can start work right away without changing any of the default settings. Some of the settings that you might want to check include: Setting Description Change Password Reset your account password. Log Out Sign out and delete any Drafts and forms in your Outbox. Contact Support Get help by phone or email, or go to our self-service website. Application Settings Customize how you capture and display information on your app, including alerts for specific actions. Passcode Lock Set up an app-level passcode for added security. Access the TrueContext Settings from the gear icon in the bottom right of the Home screen.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Access the Settings"
    }
  },
  {
    "content": "Username\n\nThis shows you the username of the signed-in user. If the app shows the wrong username, sign out, and then sign in with the correct username.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Username"
    }
  },
  {
    "content": "Change Password\n\nYou can change your account password from the app—you don’t have to go to the Web Portal to change your password. Use your new password the next time you sign into the app or Web Portal. Tip:You must know your current password in order to create a new one. If you can’t remember your password, select Forgot Password and enter your email address. The system sends you an email that includes a link and instructions to reset your password.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Change Password"
    }
  },
  {
    "content": "Account Details\n\nThis page lists your team and user information. You can also view and edit your contact information here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Account Details"
    }
  },
  {
    "content": "Log Out\n\nThis action logs you out of the Mobile App. When you log out, the system permanently deletes all Drafts and Outbox forms and resets app settings to their default values. Note:Deleted data can’t be recovered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Log Out"
    }
  },
  {
    "content": "Contact Support\n\nSelect the Support email address, phone number, or URL to start an email, phone call, or web browser. By default, this is the contact information for TrueContext Support, but a TrueContext Admin user can customize this information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Contact Support"
    }
  },
  {
    "content": "Photo Size\n\nImage resolution (Photo Size) and file size (Photo Compression) both affect image quality. Note:Your admin can set a maximum resolution and file size in the question properties. This limits the image and file size, regardless of your app-level setting. If the admin chooses to Use device settings, your app-level settings determine the image quality. You only need to change the image settings when: Your device is low on storage space. Your admin doesn’t know how large the images should be to display properly. Your admin has selected Use device settings. The Photo Size setting controls the size of the image itself. The larger the image, the better the resolution (quality). The Medium (default) option works well in most cases. Tip: Only choose a large image size when you really need to. A form that has lots of large images increases the form submission size, processing times, and data usage on the mobile device. There are four Photo Size options: Option Maximum length of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Photo Size"
    }
  },
  {
    "content": "long edge Small 640 pixels Medium (Default) 1024 pixels Original Original resolution and display size Custom Custom value",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Photo Size"
    }
  },
  {
    "content": "Photo Compression\n\nThe Photo Compression setting controls the size of the image file. A higher compression reduces both the file size and the image quality. Tip:If you choose a higher compression, we advise that you also choose a smaller Photo Size.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Photo Compression"
    }
  },
  {
    "content": "Audio Quality\n\nChange the quality of audio files that you attach to your forms. Medium Quality (the default) should suffice for most recordings. Note:A higher audio quality increases the file size, which affects the form submission size, processing time, and cellular data usage.The question settings override the Mobile App settings if the admin selects the Enforce audio quality option.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Audio Quality"
    }
  },
  {
    "content": "Advanced Settings\n\nServer Settings Use Push Push Notifications tell you when there are updates to forms and other content. You can reconcile (sync) to get these updates. Unregister Device This is an advanced setting that you shouldn’t use unless TrueContext Support directs you to. Security Settings Passcode Lock For added security, you can set up an app-level passcode. After you set up a passcode lock, the Mobile App prompts you for your passcode the next time you open the app. Only a user who knows the passcode can access TrueContext data. The Android Mobile App does not support face or touch recognition as alternatives to entering a passcode. Info:The topic TrueContext Mobile App Passcode Lock describes the passcode lock setting in more detail. Change Passcode You can change your passcode any time after you set it up. In the Security Settings, select Change Passcode. The app prompts you to enter your old passcode, and then to enter and reenter your new passcode. Erase Data When you",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "set up your passcode, you can also choose to Erase Data after 10 failed passcode attempts. Switch this option on to permanently delete all drafts, pending submissions, and app settings. Warning:You can’t get the local data back once it’s deleted. Diagnostics Send Logs Send an email that includes a zip file version of logs that can help the support team troubleshoot any issues. Log Level As advised by the support team, use this option to change how much information the logs collect. Reset Options Reset Forms The support team might tell you to Reset Forms if the forms or other data on your device aren’t working. This action re-downloads data from the server and stores it on your device. You won’t lose any information that you already entered in a form. Repeat Row Settings Row Copy Confirmation Display a prompt to confirm that you want to copy a row from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "because the field user can complete the same subform more than once, which creates multiple entries. Summary Table. The prompt displays when you open an existing entry and select the copy icon. From the Summary Table, you can also swipe the row right and then select the copy option. Row Delete Confirmation Display a prompt to confirm that you want to delete a row from a Repeatable Section Summary Table. The prompt displays when you swipe the row left and then select the delete option. Other Use Preferred Form Language (Available with the Multi-Language Forms add-on for the Advanced and Enterprise tiers.) This setting shows that you selected the Make this my preferred language option when you opened a form. To switch off this setting, clear the Use preferred form language checkbox. Result: The app saves the previously selected language in case you want to use it again. Visit Portal Reminder When the TrueContext server receives a submitted form, display a prompt to check items in your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Sent list. Send Form Confirmation Display a prompt to confirm that your form is ready to send. This gives you a chance to go back and edit the form before you send it. Clear Confirmation For Text Area questions, when you select Clear, display a prompt to confirm that you want to clear your answer. This prevents accidentally deleting long answers. External Camera Select this option if you want to use a camera app other than the TrueContext built-in camera app. Select a barcode scanner Choose between the built-in TrueContext scanner or ZXing, an open-source barcode scanner available in the Play Store. Note:ZXing is the only third-party scanner that works with the TrueContext Mobile App. It is available for Android versions 13 and below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Advanced Settings"
    }
  },
  {
    "content": "Version\n\nDisplays the version and build of the installed TrueContext Mobile App. Tip:We recommend that you always run the most recent version of TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Version"
    }
  },
  {
    "content": "Terms of Use\n\nOpens a browser that displays the TrueContext Subscription Agreement.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Terms of Use"
    }
  },
  {
    "content": "Privacy Policy\n\nOpens a browser that displays the TrueContext Privacy Policy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Privacy Policy"
    }
  },
  {
    "content": "Licenses\n\nDisplays a list of the third-party licenses used by TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499268_AndroidClientSettings.html",
      "title": "Android Client Settings",
      "section": "Licenses"
    }
  },
  {
    "content": "How Zebra barcode scanning works in TrueContext\n\nWith the TrueContext Mobile App installed on your Zebra Android device, you can quickly scan barcodes into a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/ZebraTechnologies/ZebraAndroidMobileDevices.htm",
      "title": "Zebra Android Barcode Scanner",
      "section": "How Zebra barcode scanning works in TrueContext"
    }
  },
  {
    "content": "Regular and Side-by-Side sections\n\nTip:Side-by-Side sections are available on the Enterprise tier only. Open a page that has one or more Barcode Scanner questions. The questions must be visible, not hidden by Conditional Logic Conditional logic is a tool in the Form Builder that establishes the workflow of a form. By using the \"If This, Then That\" structure, questions or sections will be displayed, hidden, or automatically populated based on answers to preceding questions. rules. Press the button on your device to scan a barcode. Result: TrueContext automatically enters the data in the first empty Barcode Scanner question on the page. You don’t have to open each question separately. Repeat steps one and two. Result: TrueContext enters the data in the next empty Barcode Scanner question on that page. To scan or rescan a barcode for a specific question, tap to open the question. Is the question empty? If yes, scan the barcode. If no (a value was already entered), you can overwrite the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/ZebraTechnologies/ZebraAndroidMobileDevices.htm",
      "title": "Zebra Android Barcode Scanner",
      "section": "Regular and Side-by-Side sections"
    }
  },
  {
    "content": "current value. When you tap to open the question, TrueContext prompts you to confirm that you want to overwrite the answer. Select OK, and then scan the new barcode. Note: The Barcode Scanner questions must be on the page that’s open and visible (not hidden by a Conditional Logic rule). If a question requires a specific type of barcode, the barcode that you scan must match.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/ZebraTechnologies/ZebraAndroidMobileDevices.htm",
      "title": "Zebra Android Barcode Scanner",
      "section": "Regular and Side-by-Side sections"
    }
  },
  {
    "content": "Repeatable sections\n\nTo scan barcodes in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., select Add Entry to open the set of questions. Then, you can scan barcodes until you’ve answered all Barcode Scanner questions in the section. Repeat this process for each entry.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/ZebraTechnologies/ZebraAndroidMobileDevices.htm",
      "title": "Zebra Android Barcode Scanner",
      "section": "Repeatable sections"
    }
  },
  {
    "content": "Requirements\n\nOn a Zebra Android device that has DataWedge installed, install the TrueContext mobile app for Android. Open the TrueContext Mobile App. Result: When you open the app for the first time, it automatically creates a DataWedge profile on your device. Check your TrueContext DataWedge profile and change it if required. Note: The TrueContext DataWedge profile must be enabled if you want to use the Zebra scanner with the TrueContext Mobile App. Don’t delete or disable the profile. If you delete the TrueContext DataWedge profile, the app shows the error Data Wedge Profile is not found or disabled. To create a new DataWedge profile: In the TrueContext Mobile App, go to Settings > Advanced Settings > Choose barcode scanner. Select another option, and then re-select the Zebra scanner. This resets your selection and creates a new DataWedge profile. If you disable the profile, you must go to the DataWedge profile and enable it again. The TrueContext Mobile App automatically sets the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/ZebraTechnologies/ZebraAndroidMobileDevices.htm",
      "title": "Zebra Android Barcode Scanner",
      "section": "Requirements"
    }
  },
  {
    "content": "default scanner to Zebra when it detects your Zebra Android device. To check or change the scanner settings, go to Settings > Advanced Settings > Select a barcode scanner. Select a camera or the Zebra scanner.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/ZebraTechnologies/ZebraAndroidMobileDevices.htm",
      "title": "Zebra Android Barcode Scanner",
      "section": "Requirements"
    }
  },
  {
    "content": "About\n\nCompleting and submitting mobile forms from a phone or tablet is easy and intuitive. Users can collect rich data like signatures, images, and barcodes, and embed these in forms. A number of sample forms related to your industry will automatically be available in your Forms screen. You can use these forms as-is, or make edits to them. You can import different pre-made forms from our forms library. You can build your own custom forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493658_SubmitFormAndroid.html",
      "title": "Submit a Form: Android",
      "section": "About"
    }
  },
  {
    "content": "Reconcile\n\nReconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. (Send/Receive) the TrueContext app to ensure you have the most recent data available. To reconcile on an Android device, tap the action menu and select Send/Receive.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493658_SubmitFormAndroid.html",
      "title": "Submit a Form: Android",
      "section": "Reconcile"
    }
  },
  {
    "content": "Fill Out a Form\n\nNavigate to the Forms list where all available forms are listed. Tap on the form you want to fill out to open it. Alternately, if your team is utilizing dispatching, tap Inbox to start a form. Different types of questions determine (\"control types\") how information is collected, and what kind of information can be entered. For example: Plain textboxes are displayed as a black line. Tap and enter an answer using the keyboard that appears. Dropdown controls are displayed as a blue rectangle. Tap and select an option from the list. Date/time selectors are displayed as a blue rectangle. Tap and choose a date/time using the scroller. Additionally, different Question Restrictions affect how you interact with questions. Required questions must be answered before you can go to the next page. They are distinguishable by the asterisks (*) beside them. Read-only questions are prefilled, and you cannot edit the answer. They are distinguishable by their light gray text. Navigation",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493658_SubmitFormAndroid.html",
      "title": "Submit a Form: Android",
      "section": "Fill Out a Form"
    }
  },
  {
    "content": "between pages is by touch and swipe. Swipe left to go to the next page. Swipe right to go to the previous page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493658_SubmitFormAndroid.html",
      "title": "Submit a Form: Android",
      "section": "Fill Out a Form"
    }
  },
  {
    "content": "Submit the Form\n\nTap the Send button at the top right of the screen to submit the form. Once a form is submitted, no changes can be made to it. The app will reconcile after you submit the form, and you will be notified when the form reaches the Web Portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493658_SubmitFormAndroid.html",
      "title": "Submit a Form: Android",
      "section": "Submit the Form"
    }
  },
  {
    "content": "View Sent Forms\n\nEnter the Sent list to view submitted forms. Here, you can see the status of a submission, as well as the date and time submitted. Tap on the form for options. Select a file format in which you want to view your form.The document will open on your device. The appearance of this document can be customized in the Web Portal. If enabled, submitters will also receive an email with a PDF of their submitted data. This email will be sent to the email address provided when signing up for TrueContext, and the PDF is exactly the same as what is in the Sent list. Read more about data destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217493658_SubmitFormAndroid.html",
      "title": "Submit a Form: Android",
      "section": "View Sent Forms"
    }
  },
  {
    "content": "Windows Client Installation and Settings\n\nThis section includes the following content: Install the Windows TrueContext Mobile AppWindows App Settings",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/WindowsClientInstall&Settings.htm",
      "title": "Windows Client Installation and Settings",
      "section": "Windows Client Installation and Settings"
    }
  },
  {
    "content": "About\n\nYou can quickly install the TrueContext Mobile App on a Windows-based device and start to fill out forms. Note:You must have a Microsoft account to download this app from the store.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499238_InstallWindowsApp.html",
      "title": "Install the Windows TrueContext Mobile App",
      "section": "About"
    }
  },
  {
    "content": "Get the App\n\nLaunch the Microsoft Store from the task bar or start menu. Search for “truecontext”, and then select Get.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499238_InstallWindowsApp.html",
      "title": "Install the Windows TrueContext Mobile App",
      "section": "Get the App"
    }
  },
  {
    "content": "Sign In\n\nLaunch the Mobile App from the Start menu or apps page. Enter your TrueContext Username and Password. These credentials are the same as your Web Portal sign-in credentials. Result: The app displays the Home page. To get started using the app, see the topics in the Use the TrueContext Mobile App section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499238_InstallWindowsApp.html",
      "title": "Install the Windows TrueContext Mobile App",
      "section": "Sign In"
    }
  },
  {
    "content": "Access the Settings\n\nYou can start work right away without changing any of the default settings. Some of the settings that you might want to check include: Setting Description Change Password Reset your account password. Log Out Sign out and delete any Drafts and forms in your Outbox. Contact support Get help by phone or email, or go to our self-service website. Account Customize how you capture and display information on your app, including alerts for specific actions. Passcode lock Set up an app-level passcode for added security. Access the TrueContext Settings from the gear icon in the bottom right of the Home screen.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Access the Settings"
    }
  },
  {
    "content": "Username\n\nThis shows you the username of the signed-in user. If the app shows the wrong username, sign out, and then sign in with the correct username.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Username"
    }
  },
  {
    "content": "View Account Details\n\nThis page lists your team and user information. You can also view and edit your contact information here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "View Account Details"
    }
  },
  {
    "content": "Change Password\n\nYou can change your account password from the app—you don’t have to go to the Web Portal to change your password. Use your new password the next time you sign into the app or Web Portal. Tip:You must know your current password in order to create a new one. If you can’t remember your password, go to the Web Portal, select Forgot Password and enter your email address. The system sends you an email that includes a link and instructions to reset your password.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Change Password"
    }
  },
  {
    "content": "Log Out\n\nThis action logs you out of the Mobile App. When you log out, the system permanently deletes all Drafts and Outbox forms and resets app settings to their default values. Note:Deleted data can’t be recovered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Log Out"
    }
  },
  {
    "content": "Image quality settings\n\nResolution Image resolution (Resolution) and file size (Compression) both affect image quality. Note:Your admin can set a maximum resolution and file size in the question properties. This limits the image and file size, regardless of your app-level setting. If the admin chooses to Use device settings, your app-level settings determine the image quality. You only need to change the image settings when: Your device is low on storage space. Your admin doesn’t know how large the images should be to display properly. Your admin has selected Use device settings. The Resolution setting controls the size of the image itself. The larger the image, the better the resolution (quality). The Medium (default) option works well in most cases. Tip: Only choose a large image size when you really need to. A form that has lots of large images increases the form submission size, processing times, and data usage on the mobile device. There are four Resolution options: Option Maximum",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Image quality settings"
    }
  },
  {
    "content": "length of the long edge Small 640 pixels Medium (Default) 1024 pixels Original Original resolution and display size Custom Custom value Compression The Compression setting controls the size of the image file. A higher compression reduces both the file size and the image quality. Tip:If you choose a higher compression, we advise that you also choose a smaller Resolution.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Image quality settings"
    }
  },
  {
    "content": "Advanced settings\n\nRepeat row settings Confirm row copy Display a prompt to confirm that you want to copy a row from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table. The prompt displays when you open an existing entry and select the copy icon. From the Summary Table, you can also select and hold (or right-click) the row and then select the copy option. Confirm delete row Display a prompt to confirm that you want to delete a row from a Repeatable Section Summary Table. The prompt displays when you select and hold (or right-click) the row and then select the delete option. Other settings Confirm send Display a prompt to confirm that your form is ready to send. This gives you a chance to go back and edit the form before you send it. Confirm discard Display a prompt to confirm that you want to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Advanced settings"
    }
  },
  {
    "content": "discard changes to an open form. Note:We recommend that you keep this enabled to prevent accidentally losing work that you’ve completed. Use preferred form language (Available with the Multi-Language Forms add-on for the Advanced and Enterprise tiers.) This setting shows that you selected the Make this my preferred language option when you opened a form. To switch off this setting, set Use preferred form language to Off. Result: The app saves the previously selected language in case you want to use it again. Diagnostics Send forms to support Send an email that includes a zip file version of a form in your Outbox. Send drafts to support Send an email that includes a zip file version of a form in your Drafts list. Send Logs Send an email that includes a zip file version of logs that can help the support team troubleshoot any issues. Log level As advised by the support team, use this option to change how much information the logs collect. Reset Unregister device This is an advanced",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Advanced settings"
    }
  },
  {
    "content": "setting that you shouldn’t use unless TrueContext Support directs you to. Reset forms The support team might tell you to Reset Forms if the forms or other data on your device aren’t working. This action re-downloads data from the server and stores it on your device. You won’t lose any information that you already entered in a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Advanced settings"
    }
  },
  {
    "content": "Passcode lock\n\nFor added security, you can set up an app-level passcode. After you set up a passcode lock, the Mobile App prompts you for your passcode the next time you open the app. Only a user who knows the passcode can access TrueContext data. The Windows Mobile App does not support Hello Fingerprint or Hello Face as alternatives to entering a passcode. Info:The topic TrueContext Mobile App Passcode Lock describes the passcode lock setting in more detail. Erase all content... option When you set up your passcode, you can also choose to Erase all content… after 10 failed passcode attempts. Switch this option on to permanently delete all drafts, pending submissions, and app settings. Warning:You can’t get the local data back once it’s deleted. Change Passcode You can change your passcode any time after you set it up. In the Passcode Lock Settings, select Change Passcode. The app prompts you to enter your old passcode, and then to enter and reenter your new passcode.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Passcode lock"
    }
  },
  {
    "content": "Version\n\nDisplays the version and build of the installed TrueContext Mobile App. Tip:We recommend that you always run the most recent version of TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Version"
    }
  },
  {
    "content": "Terms of Use\n\nOpens a browser that displays the TrueContext Subscription Agreement.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Terms of Use"
    }
  },
  {
    "content": "Privacy Policy\n\nOpens a browser that displays the TrueContext Privacy Policy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Privacy Policy"
    }
  },
  {
    "content": "Contact support\n\nSelect the Support email address, phone number, or URL to start an email, phone call, or web browser. By default, this is the contact information for TrueContext Support, but a TrueContext Admin user can customize this information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Contact support"
    }
  },
  {
    "content": "Third Party Libraries\n\nDisplays a list of the open source libraries and APIs used by the TrueContext for Windows app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/219485008.html",
      "title": "Windows App Settings",
      "section": "Third Party Libraries"
    }
  },
  {
    "content": "Mobile App FAQs\n\nThis section includes the following content: Using Camera to Text to Answer QuestionsUsing the Sketch Pad ControlEnable Push Notifications on a Mobile Device“Data Type Launcher” FunctionalityVoice to Text Functionality",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/MobileAppFAQs.htm",
      "title": "Mobile App FAQs",
      "section": "Mobile App FAQs"
    }
  },
  {
    "content": "About\n\nCamera to text functionality (also known as Optical Character Recognition, or OCR) saves you time in the field: simply snap a photo of that model plate or serial number, and let the camera do the work of transcribing it into your form. This functionality also improves accuracy, as it simply requires a photo rather than manually keying in a mixture of letters and numbers that can easily be misread or are difficult to type. The camera-to-text function can be used to fill any text-based entry, and (iOS only) filter long dropdown lists based on a model number. The camera to text functionality works on the Android and iOS mobile apps. It is currently not supported on Windows.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "About"
    }
  },
  {
    "content": "Using the Camera to Text Function\n\nThe Camera to Text 'keyboard' uses the device camera -- there's no need to learn a new function on your device. Below is an iOS walkthrough of using the camera to capture a long string of information without having to enter it manually. Open the correct form, in this case, a Ship Inspection Form. Select the question you wish to answer, then tap the camera icon to open the camera. Take a photo of the item with the required text. Select the appropriate text and move on to the next question. You can use the same image to answer multiple questions; if you select a question that does not support the camera to text function, the image will disappear. On Android devices, interacting with an applicable question will display the camera icon, as shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "Using the Camera to Text Function"
    }
  },
  {
    "content": "Supported Question/Data Types\n\nThere is no need to configure questions in the form builder to use this functionality, but not all question or data types make sense to use with the camera to text functionality -- it can't, for example, take a photo of something and describe it in text. The camera to text functionality is compatible with the following question and data types in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.: Text Field Email Address Phone Number URL (Spaces will be removed) Integer (Spaces will be removed) Decimal (Spaces will be removed) Currency (Spaces will be removed) Text Area \"Other\" selections (Dropdown, Radio button, Multiselect) that spawn a text box Additional Comments: Where using a text or numeric data type, Additional",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "Supported Question/Data Types"
    }
  },
  {
    "content": "Comments can use the same functionality as a Text Field. Dropdown Filter Text (iOS only): Use the camera to text function to filter long dropdown lists and push information to subsequent questions. Barcodes (iOS only): Instead of using the Barcode question type, you can simply use the camera to text function to read barcodes and enter the encoded information in plain text. Supported barcode types are: Code128Code39Code93CodabarEAN13EAN8ITFUPCAUPCEQR codePDF417AztecData Matrix",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "Supported Question/Data Types"
    }
  },
  {
    "content": "Language Support\n\nCurrently, this functionality only works on languages that use the Latin alphabet and Arabic numeral systems. It does not currently recognize other alphabets.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "Language Support"
    }
  },
  {
    "content": "Fonts and Handwriting\n\nThis functionality is best used with standardized fonts rather than handwriting. Errors may occur with handwriting; for example, lower-case L may become |, or B may be read as 3. If using this functionality, please consider the source of the writing being transcribed and ensure it is somewhat standardized.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "Fonts and Handwriting"
    }
  },
  {
    "content": "Rotated/Upside-Down Text\n\nTaking a photo where the text is upside-down or heavily rotated may result in the text not being recognized or readable by the mobile device. For example:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029355831.html",
      "title": "Using Camera to Text to Answer Questions",
      "section": "Rotated/Upside-Down Text"
    }
  },
  {
    "content": "Launch the Sketch Pad\n\nTo begin, select Launch Sketch Pad (on an Android device) or Tap to Select Photo (on an iOS device). Note:The Sketch Pad question type supports PNG and JPG/JPEG files. To answer a Sketch Pad question, a mobile user can: Take a photo with the device camera to sketch on. Choose a photo from the camera roll to sketch on. Choose a photo from local files or a cloud service, such as OneDrive, Dropbox, or Google Drive. Choose a satellite map image to sketch on. Sketch on a blank canvas. Sketch on a resource image provided by the Form Designer. The options available to the mobile user depend on how the question is set up in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Tip:When a mobile user submits a record, TrueContext converts each",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Launch the Sketch Pad"
    }
  },
  {
    "content": "attachment to a compressed JPEG image. This may reduce image quality if the original attachment is a PNG file. For the best image quality in submitted records, attach JPEG images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Launch the Sketch Pad"
    }
  },
  {
    "content": "Choose a photo from local files or a cloud service\n\nNote: To upload a file from a cloud service, you must first set up the cloud service on your device. The following table describes how to upload photos from your local files or a cloud service: Device type Procedure iOS Select Choose from Files > Browse. macOS Select Choose from Files, and then go to the relevant folder. Android Select Choose Photo, and then browse to the file you want to upload. Windows Select Pictures Library, and then go to the relevant folder. Upon completion of all sketch activities, tap Save (on Android) or Done (on iOS) to return to the form. Android iOS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Choose a photo from local files or a cloud service"
    }
  },
  {
    "content": "Menus\n\nOn Android devices, the menu is visible at the top of the screen. Placement and appearance vary by device. From left to right, the menu exhibits: Shape, which allows the user to draw shapes Text, which allows the user to input text Width, which changes the width of lines Color, which changes the color drawn The Undo/Redo arrows will undo or reinstate the last action performed (other than \"Clear\"). Clear will erase the entire canvas and can’t be undone. Save to accept changes and go back to the form. On iOS devices, the menu is already open at the bottom of the screen. From left to right, icons are shown depicting: Shape, which allows the user to choose which shapes to use, including Free, Line, Rectangle, Round and Text Width, which changes the width of lines Color, which changes the color drawn Undo will undo the last action (other than \"Clear\") Clear will erase the entire canvas and can’t be undone. At the top right, tap Done to accept changes and go back to the form. Android",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Menus"
    }
  },
  {
    "content": "iOS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Menus"
    }
  },
  {
    "content": "Color\n\nLaunch the color picker by selecting the eyedrop icon from the menu on Android devices or tapping the Color icon on iOS devices. Once the color is selected, tap \"Done\" or \"OK\" to return to the canvas. Colors can be changed as often as desired; however, colors chosen will not affect lines/shapes previously sketched. Android iOS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Color"
    }
  },
  {
    "content": "Width\n\nThere are four options for width in the Sketch Pad Control. The options available are: Thin Medium Thick Extra thick On Android devices, adjust width by selecting \"Width\" from the menu. On iOS devices, adjust width using the slider at the bottom of the screen. Android iOS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Width"
    }
  },
  {
    "content": "Shape\n\nTo use the shape or free draw tools, simply tap and drag. Various shape tools are available: Free Draw gives the ability to free draw Line gives the ability to draw a straight line Rectangle gives the ability to draw a rectangle Oval/Round gives the ability to draw circles and ovals Arrow gives the ability to draw arrows For text on iOS, select Text from the popup menu, tap where the line of text should begin, and start typing when a cursor appears. For text on Android, select the Text icon, tap to place it, and type when a textbox appears. Move the text around once it's been placed by dragging it. Note: In iOS, choose color and width before placing lines/shapes/text. These properties cannot be edited afterwards. Android iOS",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Shape"
    }
  },
  {
    "content": "Zoom and Pan\n\nZoom in on an image to sketch more accurately. Unpinch/spread fingers to zoom in; pinch fingers to zoom back out Once zoomed in, move up/down or side to side by dragging 2 fingers across the screen",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499098_SketchPadControl.html",
      "title": "Using the Sketch Pad Control",
      "section": "Zoom and Pan"
    }
  },
  {
    "content": "Before You Begin\n\nFor push notifications to appear on the mobile device, they must be enabled in the TrueContext portal by an administrator. For details, consult Turn On Push Notifications for your Team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499008_EnablePushNotificationsMobileDevice.html",
      "title": "Enable Push Notifications on a Mobile Device",
      "section": "Before You Begin"
    }
  },
  {
    "content": "Enable Push Notifications for TrueContext on Android Devices\n\nPush notifications A push notification is an automatic message sent to users to inform them of an update to the content of their TrueContext Mobile App. A team admin can enable or suppress push notifications. are enabled from within the settings of the TrueContext mobile app. With the TrueContext app open to one of the main navigation screens, tap the Android menu button. Enter Settings. Select Advanced to access the advanced settings for TrueContext. Toggle the checkbox next to Use Push to control whether your Android device receives push notifications.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499008_EnablePushNotificationsMobileDevice.html",
      "title": "Enable Push Notifications on a Mobile Device",
      "section": "Enable Push Notifications for TrueContext on Android Devices"
    }
  },
  {
    "content": "Enable Push Notifications for TrueContext on iOS Devices\n\nOn iOS devices, you must allow notifications in your general device settings to enable push notifications. On your iOS device (not in the TrueContext app), find and tap Settings. Select Notifications. In the list of apps, locate and select TrueContext. Set the TrueContext app to allow notifications. Configure other settings as desired.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499008_EnablePushNotificationsMobileDevice.html",
      "title": "Enable Push Notifications on a Mobile Device",
      "section": "Enable Push Notifications for TrueContext on iOS Devices"
    }
  },
  {
    "content": "About\n\nThe \"Data Type Launcher\" functionality allows a mobile user to tap on an icon next to an email, URL, or phone number answer in a mobile form. This will automatically launch the appropriate function on their device; create an email, access the URL in a web browser, or dial the phone number/SMS. This feature will help avoid user errors—like mis-dialing numbers—and save users time in the field. While mobile users can certainly fill out answers and immediately use the icon to launch an email, map, etc., on their device, this functionality is particularly useful with dispatched forms. For example, an administrator can dispatch a form to a user with a phone number prefilled. This could be the contact number for the mobile user's next site visit; the user can simply tap on the phone number icon and launch a call automatically to let the customer know he is on his way. It is also possible to launch a map application from a URL to provide users with driving directions to their next site.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499108_DataTypeLauncher.html",
      "title": "“Data Type Launcher” Functionality",
      "section": "About"
    }
  },
  {
    "content": "The availability of this feature to users is controlled from the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. in the properties of any applicable control type, although the default options are configured to allow the launcher functionality. Please note that an email, URL, or phone call can only be launched from form controls specific to these types of data. A URL entered in a simple text box, for example, will be read as a string of text rather than a URL, and therefore cannot be launched in a browser.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499108_DataTypeLauncher.html",
      "title": "“Data Type Launcher” Functionality",
      "section": "About"
    }
  },
  {
    "content": "Email\n\nIn the Form Builder Mouse over an Email control and select Edit Properties. Enter the Email Properties tab and check off \"Allow the user to click the address to start an email.\" On the Mobile Device Tap on the envelope icon next to the question to begin composing an email to the entered address.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499108_DataTypeLauncher.html",
      "title": "“Data Type Launcher” Functionality",
      "section": "Email"
    }
  },
  {
    "content": "URL\n\nRead about how to launch a map using a URL. In the Form Builder Mouse over an URL control and select Edit Properties. Enter the URL Properties tab and check off both \"Allow the user to click the address to open the link\" and \"Open the link in the user's external browser.\" On the Mobile Device In a regular, Mobile App form, tap the globe icon next to the question to open the link in a browser. In a Customer Feedback form, copy and paste the URL into the address bar of another browser window or tab. This prevents data loss when you navigate away from the Customer Feedback form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499108_DataTypeLauncher.html",
      "title": "“Data Type Launcher” Functionality",
      "section": "URL"
    }
  },
  {
    "content": "Phone\n\nIn the Form Builder Mouse over a Phone Number control and select Edit Properties. Enter the Phone Number Properties tab. Check off \"Allow the user to click the phone number to start a call\", \"Allow the user to click the phone number to send an SMS\", or check off both. On the Mobile Device Tap on the phone icon next to the question to launch a call or text message (the user will be prompted to decide whether to call or send a message).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499108_DataTypeLauncher.html",
      "title": "“Data Type Launcher” Functionality",
      "section": "Phone"
    }
  },
  {
    "content": "About\n\nSome devices allow users to enter data into Textboxes and Text Areas using voice to text technology. Voice to text is useful for field work where users need to take extensive notes, or need to be able to use their hands while recording text data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499138_VoiceToTextFuncionality.html",
      "title": "Voice to Text Functionality",
      "section": "About"
    }
  },
  {
    "content": "Use Voice-to-Text\n\nSelect the textbox or text area question you want to dictate into. When the keyboard pops up, tap the microphone icon. Voice to text is not available if a numeric keyboard is set as the default for the question. Note: If no microphone icon is present on an alphanumeric keyboard, read below how to enable voice to text.iOSAndroid Begin speaking to record. iOS: To pause or finish a dictation, tap Done. If more dictation is required, tap the microphone icon again. If done, move on to the next question as usual. Android: Tap the red microphone icon to pause a dictation. Tap the white microphone icon to dictate more. If done filling in the question, move on to the next question as usual.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499138_VoiceToTextFuncionality.html",
      "title": "Voice to Text Functionality",
      "section": "Use Voice-to-Text"
    }
  },
  {
    "content": "Enable Voice to Text\n\nIf the options above are not available on a device, voice to text may not be enabled on the device itself.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499138_VoiceToTextFuncionality.html",
      "title": "Voice to Text Functionality",
      "section": "Enable Voice to Text"
    }
  },
  {
    "content": "iOS\n\nBefore using voice to text - known on iOS devices as Dictation - it must be enabled on the device. Navigate to Device Settings > General > Keyboard Enable Dictation. If the Dictation option is not present, the device may not support voice to text.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499138_VoiceToTextFuncionality.html",
      "title": "Voice to Text Functionality",
      "section": "iOS"
    }
  },
  {
    "content": "Android\n\nBefore using voice to text - known on Android as Voice Typing - it must be enabled on the device. Download Gboard - the Google Keyboard from the Play Store. Go to Device Settings > Language and Input Turn on Google Keyboard (English US) and Google Voice Typing. If these options are not available, the device may not support voice to text.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499138_VoiceToTextFuncionality.html",
      "title": "Voice to Text Functionality",
      "section": "Android"
    }
  },
  {
    "content": "Enterprise Mobility Management Solutions\n\nThis section includes the following content: Use Apple Business Manager to manage the TrueContext Mobile App on your devicesManaging TrueContext Mobile Apps with an AppConfig EMMEmbedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/EMMSolutions.htm",
      "title": "Enterprise Mobility Management Solutions",
      "section": "Enterprise Mobility Management Solutions"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext account must be in the Advanced or Enterprise tier. You must have access to your Apple Business Manager account. Take note of your Apple Business Manager Organization Name and Organization ID. Make sure to set the Apple Business Manager Custom Apps setting to Enabled.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/iOS%20Client%20Installation%20and%20Settings/AppleBusinessManager.htm",
      "title": "Use Apple Business Manager to manage the TrueContext Mobile App on your devices",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Find your Apple Business Manager Organization Name and Organization ID\n\nOpen Apple Business Manager. Select Settings > Enrolment Information. Result: The Enrolment Information page opens with the Organization Name and Organization ID.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/iOS%20Client%20Installation%20and%20Settings/AppleBusinessManager.htm",
      "title": "Use Apple Business Manager to manage the TrueContext Mobile App on your devices",
      "section": "Find your Apple Business Manager Organization Name and Organization ID"
    }
  },
  {
    "content": "Set the Apple Business Manager Custom Apps setting to Enabled\n\nMake sure that the Custom Apps setting is set to Enabled. To do that: Open Apple Business Manager. Select Settings > Enrolment Information. Result: The Enrolment Information page opens showing the Custom Apps setting.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/iOS%20Client%20Installation%20and%20Settings/AppleBusinessManager.htm",
      "title": "Use Apple Business Manager to manage the TrueContext Mobile App on your devices",
      "section": "Set the Apple Business Manager Custom Apps setting to Enabled"
    }
  },
  {
    "content": "Request access to the TrueContext Mobile App in the Apple Business Manager\n\nTo access the TrueContext Mobile App from your Apple Business Manager, you need to request access from TrueContext. Contact the support team at support@truecontext.com and provide the following information: Apple Business Manager Organization Name Apple Business Manager Organization ID Info:The section Find your Apple Business Manager Organization Name and Organization ID describes how to find your Organization Name and Organization ID. The support team will create a ticket to grant you access to the TrueContext Mobile App from Apple Business Manager.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/iOS%20Client%20Installation%20and%20Settings/AppleBusinessManager.htm",
      "title": "Use Apple Business Manager to manage the TrueContext Mobile App on your devices",
      "section": "Request access to the TrueContext Mobile App in the Apple Business Manager"
    }
  },
  {
    "content": "Access the TrueContext Mobile App in the Apple Business Manager\n\nNote:Make sure to request access to the TrueContext Mobile App in the Apple Business Manager. In the Apple Business Manager, select Custom Apps. Select the TrueContext Mobile App. Result: The TrueContext Mobile App details page opens with the option to purchase licenses. Distribute the licenses to your users with your mobile device management solution. Info:The Apple Business Manager User Guide describes how to select and buy content from the Apple Business Manager in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/iOS%20Client%20Installation%20and%20Settings/AppleBusinessManager.htm",
      "title": "Use Apple Business Manager to manage the TrueContext Mobile App on your devices",
      "section": "Access the TrueContext Mobile App in the Apple Business Manager"
    }
  },
  {
    "content": "Stop automatic updates of the TrueContext Mobile App on your existing devices\n\nOpen Apple Business Manager. Select APPS & BOOKS > Native > Purchased. Result: A list of your purchased apps opens. Select the TrueContext Mobile App. Select MORE ACTIONS > Disable Auto Updates. Result: Apple Business Manager stops the distribution of any automatic updates to the TrueContext Mobile App. You can test the app before you manually deploy it to your users. Note: Apple Business Manager installs the latest version of the TrueContext Mobile App on new devices by default. The Disable Auto Updates setting only stops the distribution of automatic updates to your company’s existing devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Use%20the%20Mobile%20App/iOS%20Client%20Installation%20and%20Settings/AppleBusinessManager.htm",
      "title": "Use Apple Business Manager to manage the TrueContext Mobile App on your devices",
      "section": "Stop automatic updates of the TrueContext Mobile App on your existing devices"
    }
  },
  {
    "content": "About\n\nThe AppConfig Community is an EMM (enterprise mobility management) specification designed to standardize app configuration and management. There is a growing number of EMM vendors who support the AppConfig approach. TrueContext is one of the AppConfig partners, meaning it's easy to deploy secure and scalable solutions for mobile workforces within an EMM framework. As the world moves towards Unified Endpoint Management (UEM), or the ability to bring together all kinds of devices and platforms into one solution, AppConfig partners stand ready to provide seamless out-of-the-box experiences and secure work-ready apps with minimal setup. The AppConfig specification covers most of the device and application management features used by enterprises today. For mobility software vendors, AppConfig provides a specification to develop against that provides very valuable management and security features, without the effort and complexity of app wrapping or SDK embedding. The following",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "About"
    }
  },
  {
    "content": "article describes the technical capabilities and deployment the native mobile TrueContext app to devices based on the best practices documented by the AppConfig Community. Reference EMM vendor specific setup documentation available on the AppConfig Community site for details on how to configure each of these capabilities with the EMM vendor of your choice.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "About"
    }
  },
  {
    "content": "App Deployment\n\nEMM solutions can deploy native applications that live on the public app stores to devices. Operating systems such as iOS, Android, and Windows provide EMM vendors native built-in APIs as part of the MDM (Mobile Device Management) protocols documented by the operating systems to make this possible. Using this capability, the TrueContext app in the public app store can be installed automatically or via a self-service catalog with EMM platforms participating in AppConfig Community. Alternatively, white label customers may elect to deploy as an internal or in-house app. EMM vendors participating in the AppConfig Community have the capability to deploy these types of apps as well.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "App Deployment"
    }
  },
  {
    "content": "App Configuration\n\nEMM vendors participating in AppConfig Community can auto-configure these settings. The end user no longer has to input these values themselves. Please reference the table below for more information. Configuration Key Description Value Type iOS Support Android Support Log Level (PFManagedLogLevel) Select the application log level Info string ✔ ✔ PFManagedUserName TrueContext Login User ID Null string ✔ PFManagedPassword User Password Null string ✔ Compression (0-100) PFManagedPhotoCompression Greater amounts of compression lead to smaller file sizes and lower quality photos. 30 Numeric ✔ ✔ Resolution PFManagedPhotoResolution Select the maximum size of the long edge of the image string ✔ ✔ PFManagedConfirmSend Confirm that form submissions have been sent. Click this checkbox to enable True boolean ✔ ✔ PFManagedConfirmReceive Click this checkbox to enable True boolean ✔ PFManagedConfirmDiscard Confirm discard of form in progress. Check this box to enable True boolean ✔",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "App Configuration"
    }
  },
  {
    "content": "PFManagedConfirmClear Confirm clearing of all answers in in-progress form. Check this box to enable. True boolean ✔ Custom Maximum Size PFManagedPhotoResolutionCustomSize Only if Resolution is “Custom” – allows users to set a maximum size of images in <insert type here>. Please enter the custom maximum size (minimum 200). No default (can only be specified if resolution is “Custom” Numeric ✔ ✔ Audio Quality PFManagedAudioQuality Select the quality level of recorded audio Medium Quality Low/Medium/High ✔ ✔ Show Hints PFManagedShowHints Give helpful tips and ideas on how to use the app. Click this checkbox to enable. True True/False ✔ ✔ PFManagedBarcodeCamera Select front or rear. Rear string ✔",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "App Configuration"
    }
  },
  {
    "content": "Single Sign On\n\nTrueContext supports delegating the login process to a company’s SAML identity provider. EMM vendors participating in AppConfig Community can auto-deploy the appropriate certificates and credentials to the mobile device to auto-login the user into this SAML identity provider that has been setup. Note: The SAML identity provider used must support the native SSO capabilities documented in the AppConfig Community. Visit the SSO section of the AppConfig Community Dev Center for an up-to-date list of identity providers that have been tested to work successfully with single sign-on. The following SSO protocols are supported in the TrueContext app: SSO Support iOS Support (Y/N) Android Support (Y/N) Certificate based authentication to SAML identity provider Y Y Kerberos based authentication to SAML identity provider N N When using the certificate-based authentication approach, the following App Configuration key/value pairs must be used to initiate the SSO process. Info:We’re",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "Single Sign On"
    }
  },
  {
    "content": "now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Configuration Key Description Value Type iOS Support Android Support Relay State N/A Y Y Audience Prontoforms.com/prod Note:If your IdP requires a unique entity ID for each of your TrueContext teams, contact support@truecontext.com. The Support team will start the process of setting you up with a unique entity ID per team. URL Y Y Recipient Who will receive the certificate https://live.prontoforms.com/saml/SSO URL Y Y ACS (Consumer) URL Validator ^https:\\/\\/live\\.prontoforms\\.com\\/saml\\/SSO$ URL Y Y ACS (Consumer) URL https://live.prontoforms.com/saml/SSO URL Y Y Single Logout URL https://live.prontoforms.com/saml/SSO URL Y Y",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "Single Sign On"
    }
  },
  {
    "content": "Access Control\n\nFor security reasons, enterprises may want to prevent users from downloading TrueContext to their unmanaged or unapproved device. The following approaches to preventing access to the TrueContext app on unapproved devices are supported: Access Control Support Type iOS Support (y/n) Android Support (y/n) SAML Identity provider-based access control Y Y App Config Based Access Control Not Supported Not Supported",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "Access Control"
    }
  },
  {
    "content": "Security Policies\n\nSome organizations may require the TrueContext app to have more granular security and data loss protection within itself to prevent sensitive data and documents from leaking outside company control. EMM can leverage the native OS protocols to wipe and remove all corporate data on the device and uninstall the TrueContext app. Security Policy iOS Support (Y/N) Android Support (Y/N) Native OS Encryption Y (enforced with device PIN code) Y (enforced with device PIN code) Managed Open In Y (iOS managed open in policy) Y (Android for Work policy) Copy / Paste Control Not Supported Y (Android for Work policy) Screenshot Control Not Supported Y (Android for Work policy)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115006387887.html",
      "title": "Managing TrueContext Mobile Apps with an AppConfig EMM",
      "section": "Security Policies"
    }
  },
  {
    "content": "About\n\nTrueContext works with Enterprise Mobility Management (EMM) solutions, allowing companies to securely integrate TrueContext into their devices' work profiles. There are three ways to integrate TrueContext with your EMM solution: AppConfig, AppConnect, and embedded APKs. Each has its own strengths and can be tailored to a company's needs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224443668.html",
      "title": "Embedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
      "section": "About"
    }
  },
  {
    "content": "What is Enterprise Mobility Management?\n\nEnterprise Mobility Management (EMM) solutions include Mobile Device Management (MDM) and Mobile App Management (MAM) to allow enterprise level customers to register and secure their work devices. Most EMM solutions allow: Device control: Whether you allow employees to bring their own devices (BYOD) or company-supplied, EMM solutions allow you to secure and track use of all devices. App Installation: Install a work suite of apps for daily use. Increase your standardization and ease of communication. Remote Support: Update firmware, apps, and more without requiring employees to turn in their devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224443668.html",
      "title": "Embedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
      "section": "What is Enterprise Mobility Management?"
    }
  },
  {
    "content": "TrueContext and AppConfig\n\nAppConfig is a universal way of embedding an app in an EMM solution. It allows TrueContext to be embedded into a package of tools to be installed in a secure, safe way on devices used for work or containing sensitive information. TrueContext is an AppConfig Member, working to allow for the use of the mobile app in a seamless and secure manner. When using AppConfig, you can customize configuration options by: choosing what libraries to load or include in the app securely configuring app options by remote.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224443668.html",
      "title": "Embedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
      "section": "TrueContext and AppConfig"
    }
  },
  {
    "content": "TrueContext and App Wrapping\n\nApp Wrapping works similarly to AppConfig but is proprietary. Each EMM solution has its own version of App Wrapping, where an app is essentially placed in a secure box and packaged with others. As it is not universal, it varies from EMM solution to solution. TrueContext has been exploring App Wrapping with multiple companies providing EMM solutions. All libraries are embedded when using App Wrapping.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224443668.html",
      "title": "Embedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
      "section": "TrueContext and App Wrapping"
    }
  },
  {
    "content": "TrueContext and SDK Embedding\n\nSoftware Development Kits, or SDKs, are sets of tools used to create apps. When embedding an app in an EMM solution, the app developer links their app's SDK in with a group of other apps' SDKs, creating a whole package.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/224443668.html",
      "title": "Embedding the TrueContext Mobile App in Enterprise Mobility Management Solutions",
      "section": "TrueContext and SDK Embedding"
    }
  },
  {
    "content": "Build and Manage Forms\n\nThis section includes the following content: How Forms WorkFormSpaces and User AccessForms LibraryCreate or Edit a Form with the Form BuilderIntroduction to the Form BuilderForm Pages and SectionsQuestion TypesQuestion PropertiesData TypesWork Instructions and User HelpConditional LogicForm Builder “Recipes”TrueContext ConnectionsData SourcesCreate and use a Data SourceApply Data Source FiltersData DestinationsCreate and use a Data DestinationApply Data Destination filtersResponse Data HandlingTroubleshoot Data DestinationsCustomer Feedback FormsOverview: Customer Feedback FormsCreate or Edit a Customer Feedback FormCustomer Feedback DestinationSignatures in Customer Feedback FormsEmbed a Customer Feedback FormFile Upload Questions in Customer Feedback FormsImage Questions in Customer Feedback formsDispatch Images in Customer Feedback formsDispatch an Image with a Customer Feedback DestinationUse URL Parameters to Prepopulate a Customer Feedback FormManage Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/BuildManageForms.htm",
      "title": "Build and Manage Forms",
      "section": "Build and Manage Forms"
    }
  },
  {
    "content": "in the Web PortalReview Form DetailsTest and Deploy Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/BuildManageForms.htm",
      "title": "Build and Manage Forms",
      "section": "Build and Manage Forms"
    }
  },
  {
    "content": "How Forms Work\n\nThis section includes the following content: FormSpaces and User AccessFind ID Values using the Web PortalFind the FormSpace and Data Source IDsManaging FormSpacesMoving and Copying FormsCopying a Draft Version of a FormForms LibraryThe Forms LibraryHow-To: Import a Form from the Library",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/HowFormsWork.htm",
      "title": "How Forms Work",
      "section": "How Forms Work"
    }
  },
  {
    "content": "FormSpaces and User Access\n\nThis section includes the following content: Find ID Values using the Web PortalFind the FormSpace and Data Source IDsManaging FormSpacesMoving and Copying FormsCopying a Draft Version of a Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormSpacesUserAccess.htm",
      "title": "FormSpaces and User Access",
      "section": "FormSpaces and User Access"
    }
  },
  {
    "content": "Find a Form ID\n\nSelect Forms & Integrations > FormName. The Form ID displays in the form details below the form name, as shown in the following example.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Form ID"
    }
  },
  {
    "content": "Find a Form Iteration or Version ID\n\nHover over the Forms & Integrations dropdown in the main navigation panel, and select List Forms. Select the name of the desired form. Hover over the form name dropdown and select Version History. Select the desired form version. On the following page, look at the address bar. The Form Iteration (or version) ID appears after \"Iterations\" (between the two forward slashes), as indicated in red in the screen capture below . Info:The topic Form Versions describes form versions in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Form Iteration or Version ID"
    }
  },
  {
    "content": "Find a User ID or Username\n\nWhen dispatching a form from the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. or via the TrueContext API, the dispatcher must indicate the ID values for the form and for the user who will receive the dispatch. As an alternative to the user ID, the username could be specified in the dispatch. Hover over Users & Groups in the main navigation panel and select List Users. Select the display name of the desired user to access their profile. On the following page, look at the address bar. The User ID appears after \"users\" (between the two forward slashes), as indicated in red in the screen capture below. The user's username appears on this page as well, as indicated in red below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a User ID or Username"
    }
  },
  {
    "content": "Find a Document ID\n\nHover over the Forms & Integrations dropdown in the main navigation panel and select Documents. Click on the name of the desired document. On the following page, look at the address bar. The Document ID appears after \"documents\", as indicated in red in the screen capture below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Document ID"
    }
  },
  {
    "content": "Find a Form Submission ID\n\nHover over the Data & Analytics dropdown in the main navigation panel and select All Form Activity. Select the Reference # of the desired form submission. On the following page, look at the address bar. The Form Submission ID appears after the word \"data\" in the URL, as indicated in the following illustration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Form Submission ID"
    }
  },
  {
    "content": "Find an Attachment ID\n\nHover over the Data & Analytics dropdown in the main navigation panel and select All Form Activity. Select the Reference # of the Form Submission where the desired attachment is. On the following page, scroll down to the attachment image. Hover mouse over the image and look at the bottom of the browser window. The Attachment ID appears after \"attachments\", as indicated in red in the screen capture below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find an Attachment ID"
    }
  },
  {
    "content": "Find a Billing ID\n\nGo to YOUR NAME > TEAM SETTINGS. Select the Billing and Usage tab. Select the name of a subscription from the list. Result: The Subscription details page opens, and the system displays the Billing ID in the URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Billing ID"
    }
  },
  {
    "content": "Find a Group ID\n\nGo to USERS & GROUPS > Groups… > List Groups. Select the name of a Group from the list. Result: The Group details page opens, and the system displays the Group ID in the URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Group ID"
    }
  },
  {
    "content": "Find a Destination ID\n\nGo to Forms & Integrations > Data Destinations. Select a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. from the list. Result: The Data Destination details page opens, and the system displays the Destination ID in the URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Find a Destination ID"
    }
  },
  {
    "content": "Related Topics\n\nDispatch Forms to a User Dispatch Data Destination Set Up a Form for Dispatching Supported Data Formats and Data/Question Types",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/How%20Forms%20Work/217501008_FindIDvalues.html",
      "title": "Find ID Values using the Web Portal",
      "section": "Related Topics"
    }
  },
  {
    "content": "Find the FormSpace and Data Source IDs\n\nAvailable on all tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/Manage%20Data%20Sources%20with%20the%20API/FindFormSpaceDataSourceIDs.htm",
      "title": "Find the FormSpace and Data Source IDs",
      "section": "Find the FormSpace and Data Source IDs"
    }
  },
  {
    "content": "Find a FormSpace ID\n\nGo to Forms & Integrations > List FormSpaces. Select a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. from the list. Result: The FormSpace opens, and the system displays the FormSpace ID in the URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/Manage%20Data%20Sources%20with%20the%20API/FindFormSpaceDataSourceIDs.htm",
      "title": "Find the FormSpace and Data Source IDs",
      "section": "Find a FormSpace ID"
    }
  },
  {
    "content": "Find the FormSpace and Data Source ID for a specific Data Source\n\nGo to the FormSpace that contains the Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.: Forms & Integrations > List FormSpaces. Result: The page displays the number of Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. in each FormSpace. In the row for the FormSpace that contains the Data Source, select the number in the # of Data Sources column. Select a Data Source from the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/Manage%20Data%20Sources%20with%20the%20API/FindFormSpaceDataSourceIDs.htm",
      "title": "Find the FormSpace and Data Source IDs",
      "section": "Find the FormSpace and Data Source ID for a specific Data Source"
    }
  },
  {
    "content": "list. Result: The system displays the Data Source details, and you can see the formSpaceID and sourceID in the URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/Manage%20Data%20Sources%20with%20the%20API/FindFormSpaceDataSourceIDs.htm",
      "title": "Find the FormSpace and Data Source IDs",
      "section": "Find the FormSpace and Data Source ID for a specific Data Source"
    }
  },
  {
    "content": "About\n\nForms are organized in folders called \"FormSpaces\". Forms are usually grouped into FormSpaces based on business unit, location, or function. In cases where all users can have access to all forms, sometimes one FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. is enough. FormSpaces control: Which TrueContext users get which forms (FormSpace Permissions) Which users can test a draft version of a form before deploying it Which users can create or update forms or view users' completed forms (User Permissions)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "About"
    }
  },
  {
    "content": "Current FormSpace\n\nFormSpaces contain forms, data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., data destinations, and more. When you are looking at any of these objects, you are working inside a specific FormSpace. This is your Current FormSpace. To determine your current FormSpace: Check the Forms & Integrations top navigation item. The Current FormSpace is the first line. Or, if you are working on a page that is inside of a FormSpace, look for the folder icon below the top navigation. The Current FormSpace is also listed here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Current FormSpace"
    }
  },
  {
    "content": "Navigating Within a FormSpace\n\nInside of your current FormSpace, navigate through all the items the FormSpace contains using the large icons on the top right. Forms will list the Forms in your current FormSpace. Resources will list the Resources in your current FormSpace. Sources will list the Data Sources in your current FormSpace. Documents will list the Documents in your current FormSpace. Destinations will list the Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. in your current FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Navigating Within a FormSpace"
    }
  },
  {
    "content": "Switch FormSpaces\n\nSwitching FormSpaces will allow you to work inside a different FormSpace. To switch which FormSpace you are working in, mouse over the arrow beside the FormSpace name, and select Switch FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Switch FormSpaces"
    }
  },
  {
    "content": "List FormSpaces\n\nTo list all FormSpaces on a team: Hover over Forms & Integrations in the main menu and select List FormSpaces. Or, hover over the arrow beside your current FormSpace, and select List FormSpaces. You will land on the FormSpaces list. On the FormSpaces List: FormSpaces are listed in alphabetical order. You can add a number or symbol to the beginning of the name to make it appear at the top of the list. The number of forms, data sources, resources, and data destinations each FormSpace contains is listed. Hover over the gear icon for quick access to options to view FormSpace details, edit a FormSpace, or delete it. Note:Deleting a FormSpace will delete everything it contains, including forms, Data Sources, and Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "List FormSpaces"
    }
  },
  {
    "content": "Default FormSpace\n\nThe Default FormSpace is automatically the \"current\" FormSpace when users log in to the Web Portal. For teams with more than one FormSpace, the most-edited FormSpace can be set as the Default FormSpace for ease of navigation. On the FormSpaces page, the Default FormSpace is indicated with a yellow star. Simply select the star beside the desired FormSpace to make it the default FormSpace. There can only be one default FormSpace per team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Default FormSpace"
    }
  },
  {
    "content": "Create a FormSpace\n\nFrom the FormSpaces page, select Create FormSpace. Name the FormSpace. Optionally Notify users of updates to this FormSpace via Push messages. Users will receive a Push Notification through the mobile app when changes have been made. They will be prompted to refresh/reconcile the app to retrieve new data from TrueContext. This will help prevent users from submitting data against out-of-date forms. Note:Users must also have their mobile app set up to receive push notifications. Upload New Logo: If a logo is uploaded in the FormSpace, it will override the Team-level logo for all forms in the FormSpace. This logo will show on all PDF, Word, and HTML documents for forms in the FormSpace. The recommended size for the banner logo is 1200x400px, and supported file types include PNG (recommended) and JPG. Assign groups to the FormSpace. Users in these groups can use the forms in this FormSpace. A FormSpace can be assigned to multiple groups, and a group can be assigned",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Create a FormSpace"
    }
  },
  {
    "content": "multiple FormSpaces. Assign Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection. to the FormSpace. Connections are required to link Data Destinations and Data Sources to external services.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Create a FormSpace"
    }
  },
  {
    "content": "Edit or Delete a FormSpace\n\nTo edit or delete a FormSpace: Navigate to the FormSpaces page. Hover over the gear icon on the right of the desired FormSpace and select Update or Delete as desired. Note:Once a FormSpace is deleted, it cannot be recovered. Deleting a FormSpace will also permanently delete all forms, Data Sources, Data Destinations, and Resources contained in the FormSpace, and all form submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499898_ManagingFormSpaces.html",
      "title": "Managing FormSpaces",
      "section": "Edit or Delete a FormSpace"
    }
  },
  {
    "content": "Move a Form\n\nTo move a form to another FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace., it is necessary to have another FormSpace the form can be moved to. Read about managing multiple FormSpaces. To move a form to another FormSpace: Navigate to the desired form. Hover over the dropdown beside the form name. Select Move Form. Select the Target FormSpace. This is where the form will be moved to. Link the form to Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. in the Target FormSpace. Any data destinations set to “auto-link” will be attached automatically. In the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Move a Form"
    }
  },
  {
    "content": "Documents column, choose Documents for each Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. to send. You can only choose Documents that are already linked to the form. This includes Documents linked directly in the form settings (Settings > Documents) and Documents sent by linked Data Destinations. Tip: Some Data Destinations do not support Documents, and some can send multiple Documents. After you move a form to a new FormSpace, Documents in the target FormSpace become available to link to the moved form. Documents in the source FormSpace are no longer available to link to the form. Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can select languages for the document files. The topic Steps to attach a Multi-Language Document to a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Move a Form"
    }
  },
  {
    "content": "Data Destination describes the language options in more detail. Select additional Documents. These are the Documents that are available for download from the Web Portal, in the Sent tab of the Mobile App, and the TrueContext API. You can only choose Documents that are already linked to the form. This includes Documents linked directly in the form settings (SETTINGS > Documents) and Documents sent by linked Data Destinations. Documents linked in the form settings are selected by default.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Move a Form"
    }
  },
  {
    "content": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace\n\nWhen a form is moved/copied from one FormSpace to another, it will bring a copy of any connected resources (Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., Documents, Resource Images) with it. This option controls what happens during this copy if there is already a resource with the same name in the target FormSpace. Overwrite Target Resources: Copy any resources linked to the form into the target FormSpace. Replace any target FormSpace resources that have the same name. Note: This will affect all forms using these resources, not just the form being moved/copied. Repoint Form to Target Resources: If resources in the target",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "FormSpace have the same name as resources already linked to the form, the form will use those resources instead. No copy will be made. Tip:This option is selected by default Copy and Rename Original Resources: Copy any resources linked to the form into the target FormSpace. If these resources have the same name as existing resources in the target FormSpace, they will be renamed to avoid duplication. Copy a Form Navigate to the desired form. Mouse over the dropdown beside the form name. Select Copy Form. Select the Target FormSpace. This is where the copy of the form will be placed. In the Target Form section, choose whether to create a new form or update an existing form: Option Result Actions Create Form The system creates a copy of the form as a new form. Enter the name of the new form. Set the Target State: Draft (for testing) Active (for deployment) Go to step 7. Create as New Version of an Existing Form The system copies the form and saves it as a new version of an existing form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "Select the Target Form Name. This is the existing form to update with a new version. Set the Target State: Draft (for testing) Active (for deployment) Go to step 6. Choose how you want the system to link Data Destinations and Documents to the new form version: Option Description Action Keep the target form Data Destinations and Documents Add the same Data Destinations and Documents that are already linked to the target form. Go to step 10. Change and select Data Destinations and Documents Select the Data Destinations and Documents that you want to add to the new form version. Go to step 7. Link the copy to Data Destinations in the target FormSpace. Any data destinations set to “auto-link” will be attached automatically. In the Documents column, choose Documents for each Data Destination to send. You can only choose Documents that are already linked to the form. This includes Documents linked directly in the form settings (Settings > Documents) and Documents sent by linked Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "Destinations. Tip: Some Data Destinations do not support Documents, and some can send multiple Documents. After you copy a form to a new FormSpace, Documents in the target FormSpace become available to link to the moved form. Documents in the source FormSpace are no longer available to link to the form. Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can select languages for the document files. The topic Steps to attach a Multi-Language Document to a Data Destination describes the language options in more detail. Select additional Documents. These are the Documents that are available for download from the Web Portal, in the Sent tab of the Mobile App, and the TrueContext API. You can only choose Documents that are already linked to the form. This includes Documents linked directly in the form settings (SETTINGS > Documents) and Documents sent by linked Data Destinations. Documents linked in the form settings are selected by default. Set",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "the form Advanced Properties. Select Copy to save your changes. Advanced Properties Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace When a form is moved/copied from one FormSpace to another, it will bring a copy of any connected resources (Data Sources, Documents, Resource Images) with it. This option controls what happens during this copy if there is already a resource with the same name in the target FormSpace. Overwrite Target Resources: Copy any resources linked to the form into the target FormSpace. Replace any target FormSpace resources that have the same name. Note: This will affect all forms using these resources, not just the form being moved/copied. Repoint Form to Target Resources: If resources in the target FormSpace have the same name as resources already linked to the form, the form will use those resources instead. No copy will be made. Tip:This option is selected by default Copy and Rename Original Resources: Copy any resources",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "linked to the form into the target FormSpace. If these resources have the same name as existing resources in the target FormSpace, they will be renamed to avoid duplication.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "Copy a Form\n\nNavigate to the desired form. Mouse over the dropdown beside the form name. Select Copy Form. Select the Target FormSpace. This is where the copy of the form will be placed. In the Target Form section, choose whether to create a new form or update an existing form: Option Result Actions Create Form The system creates a copy of the form as a new form. Enter the name of the new form. Set the Target State: Draft (for testing) Active (for deployment) Go to step 7. Create as New Version of an Existing Form The system copies the form and saves it as a new version of an existing form. Select the Target Form Name. This is the existing form to update with a new version. Set the Target State: Draft (for testing) Active (for deployment) Go to step 6. Choose how you want the system to link Data Destinations and Documents to the new form version: Option Description Action Keep the target form Data Destinations and Documents Add the same Data Destinations and Documents that are already",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Copy a Form"
    }
  },
  {
    "content": "linked to the target form. Go to step 10. Change and select Data Destinations and Documents Select the Data Destinations and Documents that you want to add to the new form version. Go to step 7. Link the copy to Data Destinations in the target FormSpace. Any data destinations set to “auto-link” will be attached automatically. In the Documents column, choose Documents for each Data Destination to send. You can only choose Documents that are already linked to the form. This includes Documents linked directly in the form settings (Settings > Documents) and Documents sent by linked Data Destinations. Tip: Some Data Destinations do not support Documents, and some can send multiple Documents. After you copy a form to a new FormSpace, Documents in the target FormSpace become available to link to the moved form. Documents in the source FormSpace are no longer available to link to the form. Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Copy a Form"
    }
  },
  {
    "content": "select languages for the document files. The topic Steps to attach a Multi-Language Document to a Data Destination describes the language options in more detail. Select additional Documents. These are the Documents that are available for download from the Web Portal, in the Sent tab of the Mobile App, and the TrueContext API. You can only choose Documents that are already linked to the form. This includes Documents linked directly in the form settings (SETTINGS > Documents) and Documents sent by linked Data Destinations. Documents linked in the form settings are selected by default. Set the form Advanced Properties. Select Copy to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Copy a Form"
    }
  },
  {
    "content": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace\n\nWhen a form is moved/copied from one FormSpace to another, it will bring a copy of any connected resources (Data Sources, Documents, Resource Images) with it. This option controls what happens during this copy if there is already a resource with the same name in the target FormSpace. Overwrite Target Resources: Copy any resources linked to the form into the target FormSpace. Replace any target FormSpace resources that have the same name. Note: This will affect all forms using these resources, not just the form being moved/copied. Repoint Form to Target Resources: If resources in the target FormSpace have the same name as resources already linked to the form, the form will use those resources instead. No copy will be made. Tip:This option is selected by default Copy and Rename Original Resources: Copy any resources linked to the form into the target FormSpace. If these resources have the same name",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "as existing resources in the target FormSpace, they will be renamed to avoid duplication.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499438_MovingAndCopyingForms.html",
      "title": "Moving and Copying Forms",
      "section": "Action to perform on duplicate Data Sources, Documents and Resources in Target FormSpace"
    }
  },
  {
    "content": "Copying a Draft Version of a Form Available on all tiers: Essentials Advanced Enterprise When you select Copy from the menu next to the form name, the system copies the latest Active version. It does not copy the latest draft. To copy the Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. version, follow these steps: Select FormName > Version History.Result: The form Version History page opens. This page includes a table that lists Active, Archived, and Draft versions of the form. A form can only have one Draft version. Hover over the Draft version to display the options to copy or delete the version. Select Copy. Info:If you don’t see these icons or have any issues with these steps, find out how to contact Support.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035042691.html",
      "title": "Copying a Draft Version of a Form"
    }
  },
  {
    "content": "Forms Library\n\nThis section includes the following content: The Forms LibraryHow-To: Import a Form from the Library",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormsLibrary.htm",
      "title": "Forms Library",
      "section": "Forms Library"
    }
  },
  {
    "content": "About the Forms Library\n\nThe TrueContext Forms Library The Forms Library is a resource available to form designers that provides a list of customizable form and Data Source templates. Users can select a form from the Forms Library when they create a new form. is a free resource of pre-built, ready-to-use forms and data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. Hundreds of common forms are available, categorized by industry and business function for easy searching. Administrators can quickly import templates from the Library, making it easy to get their paperless business solution up and running in minutes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499778_AboutTheFormsLibrary.html",
      "title": "The Forms Library",
      "section": "About the Forms Library"
    }
  },
  {
    "content": "Browsing the Forms Library\n\nTo browse the Forms Library, first log into the TrueContext portal at https://live.truecontext.com. Mouse over the Forms & Integrations dropdown in the main menu and select Create New Form. From the Create Form menu, choose \"Select a Form from the Forms Library.\" Select the \"Forms\" tab to view forms to import, or \"Data Sources\" to view Data Sources to import. Optionally filter results by selecting an Industry or Business Function from the dropdown menus. To view details, click on the form/data source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. name. The resulting page displays the form or data source's activity rating, the languages it is available in, and related industries/business",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499778_AboutTheFormsLibrary.html",
      "title": "The Forms Library",
      "section": "Browsing the Forms Library"
    }
  },
  {
    "content": "applications. The Question Types a form uses. A form's associated data sources. These will be imported with the form. The content of a data source. Read here for more details on importing forms and data sources from the library.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499778_AboutTheFormsLibrary.html",
      "title": "The Forms Library",
      "section": "Browsing the Forms Library"
    }
  },
  {
    "content": "About\n\nThe Forms Library The Forms Library is a resource available to form designers that provides a list of customizable form and Data Source templates. Users can select a form from the Forms Library when they create a new form. is a free resource of pre-built, ready-to-use forms and data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. Hundreds of common forms are available, categorized by industry and business function. Note:Some forms may use features that are not on your billing tier. You will be unable to successfully import these forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499838_KB_HowToImportFormFromLibrary.html",
      "title": "How-To: Import a Form from the Library",
      "section": "About"
    }
  },
  {
    "content": "Import a Form\n\nMouse over the Forms & Integrations tab and select Create New Form from the dropdown menu. From the Create Form menu, choose Select a Form from the Forms Library. Optionally filter results by selecting an Industry or Business Function from the dropdown menus. Select the form, then select Import. The form is now available in your FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499838_KB_HowToImportFormFromLibrary.html",
      "title": "How-To: Import a Form from the Library",
      "section": "Import a Form"
    }
  },
  {
    "content": "Next Steps\n\nYou can view the form in your team, and from there it can be used out-of-the-box. However, Library forms are also completely customizable, from adding data destinations so completed forms will be sent automatically to users or cloud services, to changing form details to suit your business' needs. Read more about customizing Library Forms here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499838_KB_HowToImportFormFromLibrary.html",
      "title": "How-To: Import a Form from the Library",
      "section": "Next Steps"
    }
  },
  {
    "content": "Create or Edit a Form with the Form Builder\n\nThis section includes the following content: Introduction to the Form BuilderOverview: The Form BuilderSet Up Form PropertiesForm Builder: Icon GlossaryAttachment File NamingForm Pages and SectionsForm Layout OptionsRegular SectionsMulticolumn LayoutSide-by-Side SectionsOverview: Repeatable SectionsRepeatable Sections: Building Repeatable SectionsRepeatable Sections: Conditional LogicRepeatable Sections: Summary TableRepeatable Sections: FooterRepeatable Sections: SettingsOverview: Template-Based SectionsBuilding Template-Based SectionsManaging TemplatesQuestion TypesQuestion and Data Types in the Form BuilderQuestion Type: AggregationQuestion Type: Audio RecordingQuestion Type: Barcode ScannerQuestion Type: Button GroupQuestion Type: CalculationQuestion Type: Card ListQuestion Type: Date/Time Selector and StampQuestion Type: Digit ExtractionQuestion Type: Document EditorQuestion Type: Dropdown, Multiselect, and Radio ButtonQuestion Type:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateEditFormBuilder.htm",
      "title": "Create or Edit a Form with the Form Builder",
      "section": "Create or Edit a Form with the Form Builder"
    }
  },
  {
    "content": "Duration Calculation and Duration MathQuestion Type: Duration FieldQuestion Type: File UploadQuestion Type: Geo LocationQuestion Type: Image and Sketch PadQuestion Type: Information LabelQuestion Type: RecapQuestion Type: Resource ImageQuestion Type: SignatureQuestion Type: Single CheckboxQuestion Type: Stepper and SliderQuestion Type: String ConcatenationQuestion Type: Text AreaQuestion Type: Text FieldQuestion Type: Time-Based MathQuestion PropertiesAdditional Comments on QuestionsAnswer ExceptionsRouter SetupData TypesData Type: AttachmentData Types: Date, Time, and Date/TimeData Type: DurationData Type: Email Address, URL, and Phone NumberSupported Domains for Email Data Type QuestionsData Type: Free TextData Type: Integer, Decimal, and CurrencyWork Instructions and User HelpAdd Help Options to QuestionsQuestion Text FormattingConditional LogicConditional LogicCreate and Manage Conditional LogicBuilding Conditional Logic RulesConditional Logic: Operators and ActionsConditional",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateEditFormBuilder.htm",
      "title": "Create or Edit a Form with the Form Builder",
      "section": "Create or Edit a Form with the Form Builder"
    }
  },
  {
    "content": "Logic Regex MatchingBest Practices for Conditional Logic RulesForm Builder “Recipes”Calculate a Score or Average Using Button GroupsCreate a Unique Invoice NumberCustomize Dispatched, Saved, and Submitted Form Names with Data Record NamingEnsure Users Do Not Submit Forms without Filling All Required QuestionsStamping Data onto Images",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateEditFormBuilder.htm",
      "title": "Create or Edit a Form with the Form Builder",
      "section": "Create or Edit a Form with the Form Builder"
    }
  },
  {
    "content": "Introduction to the Form Builder\n\nThis section includes the following content: Overview: The Form BuilderSet Up Form PropertiesForm Builder: Icon GlossaryAttachment File Naming",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntroductionFormBuilder.htm",
      "title": "Introduction to the Form Builder",
      "section": "Introduction to the Form Builder"
    }
  },
  {
    "content": "New Form Builder Interface\n\nForm Building",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005070423.html",
      "title": "Overview: The Form Builder",
      "section": "New Form Builder Interface"
    }
  },
  {
    "content": "Full Documentation\n\nForm Building Basics Question and Data Types in the Form Builder Create and Manage Conditional Logic (Advanced and Enterprise tiers only) Repeatable Sections: Building Repeatable Sections Connecting Destinations and Documents to Forms Set Up Form Properties",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005070423.html",
      "title": "Overview: The Form Builder",
      "section": "Full Documentation"
    }
  },
  {
    "content": "Form Builder Settings page\n\nTo set up the properties of a specific form: Forms & Integrations > Form Name > Edit Form or Forms & Integrations > Create New Form, select the form type, and then enter the form name and description. Tip:The Summary Page Options view displays the description in the Mobile App. Select Settings. Result: The system displays the Settings page. From here, you can set up the form properties. Note:When you edit a form and then save your changes, the system creates a new version of the form. The Mobile App gets the new version the next time that the app reconciles. The following sections describe the properties in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Form Builder Settings page"
    }
  },
  {
    "content": "General Information\n\nForm Name A name that clearly identifies the form, such as Vehicle Inspection. Note: Changes to the Form Name could affect Documents and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Check all Document and Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. settings to determine the potential impact of any changes to the Form Name. Form Description Enter a short description of your form for future reference. The description also displays in the Forms list on the Mobile App. Tags Tags help your field users quickly find the form they need in the Forms, Inbox,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "General Information"
    }
  },
  {
    "content": "Drafts, and Sent lists. Field users can select or type tag names to display a list of matching forms. To add a tag, type it in the Tags field, and then select Return or Enter. Tip:Tags are not case-sensitive. The following example shows how to add the tags inspection and campus: Tags can have up to 12 alphanumeric, -, and _ characters. You can add up to 250 tags per form. Info:The topic Use Form Tags in the Mobile App to Filter a List of Forms describes tags in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "General Information"
    }
  },
  {
    "content": "Languages\n\nAvailable as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on If your team has the Multi-Language Forms add-on, you can add up to ten languages. Info:The topic Set Up a Multi-Language Form provides detailed steps to set up multiple languages. Info:The Multi-Language feature does not include app framework content (navigation, action buttons, and error messages, for example). This content is translated based on the user’s device locale, as described in the topic Language Settings and Translations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Languages"
    }
  },
  {
    "content": "Mobile App Settings\n\nThe Mobile App Settings control how Mobile App users navigate through the form and whether they can access a summary view. They also control whether they can store images locally on their devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Mobile App Settings"
    }
  },
  {
    "content": "Form Options\n\nForm Options control form navigation. Navigation index The navigation index is a list of the pages in a multi-page form. Show only visited pages—Users must answer all required questions on the current page before they can move to the next page. Once they’ve completed a page, they can go back to it. Show all pages—Users can work through the form in any order, even jumping ahead several pages. Note:If your form includes Conditional Logic, think carefully before you select the Show all pages option. Users might skip over a question that triggers a Conditional Logic rule. If the user goes back to a previous page and triggers that rule, some of their work could be changed or erased.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Form Options"
    }
  },
  {
    "content": "Summary Page Options\n\nUsers can access a Summary Page to review their answers before they submit the form. The Summary Page: Helps field users to confirm that they’ve entered all data correctly. Gives customers a clear view of the work completed before they sign off. To let users share the summary page, select Allow users to share summary page. Tip:If you want to limit access to sensitive data, clear the option to allow users to share the Summary Page. They won’t be able to print the summary or share by text or email.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Summary Page Options"
    }
  },
  {
    "content": "Image Options\n\nImage options control whether field users can save photos taken in the TrueContext Mobile App to their device. Note:This takes up storage space on the device, so enable this option only when it’s absolutely required.If you have HIPAA compliance requirements, we recommend that you do not enable the option to save images on devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Image Options"
    }
  },
  {
    "content": "Exception Categories\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Exceptions highlight issues in real time as your field users work through a form. Exceptions provide color-coded feedback directly in the form. This example shows three typical Exception categories, each with a different color. Info: If an answer triggers more than one Exception, the highest priority (top) category applies. The topic Answer Exceptions describes in detail how to set up your Exception categories. Once you define Exception categories, you can apply them to number-based and options-based questions throughout the form. You can also set up a Recap question to count the number of answers in each category. Then, you can use that value to drive Conditional Logic. For example, you can count the number of critical issues and enforce a specific workflow based on that count.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Exception Categories"
    }
  },
  {
    "content": "Documents\n\nDocuments display the contents of submitted forms in different formats. In the Documents section, you can make documents available for download from the Web Portal, the TrueContext REST API, and the Mobile App Sent and Search lists. This setting does not affect documents sent to a Data Destination. Select the Documents available for download field and choose a document from the list. To create a new document, select Add a new document. Info:The following topics provide more information:Documents OverviewUsing the Sent TabTrueContext REST APIReview Your Data on the Web Portal",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Documents"
    }
  },
  {
    "content": "Workflow Settings\n\nThe Workflow Settings control a sequence of processes by which a user can open a form. These include dispatched forms, edits to submitted forms, search options, TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. options, and App‑to‑App custom callback parameters.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Workflow Settings"
    }
  },
  {
    "content": "Form Initiation Methods\n\nConfigure how you want mobile users or supervisors to begin a workflow. Forms Box (User-initiated) Mobile users can open blank forms from the Forms list in the Mobile App. Inbox (Dispatched forms) Admins can dispatch a form to one or more mobile users. They can choose to prepopulate some of the answers to the form. Mobile users can access all forms dispatched to them from their Inbox in the Mobile App. Info:If you're on the Enterprise tier, you can dispatch a record to a user, a group, or to all groups in a FormSpace. Mobile users can claim records from the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox.. Once a user claims a record, it moves to their Inbox. The topic Set up Group Dispatching describes all of the required settings. Inbox and Forms Box Mobile users can open blank forms from the Forms list and dispatched",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Form Initiation Methods"
    }
  },
  {
    "content": "forms from their Inbox. Tip:Make sure that the Forms list or Inbox are enabled for your team. If you allow users to access dispatched forms from their Inbox, you can also allow users to decline them. When a user declines a dispatch, the form submission status changes to Cancelled. Note:If you enable the TrueContext Teamwork setting, users can’t decline dispatched forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Form Initiation Methods"
    }
  },
  {
    "content": "Refresh on Form Open\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise Refresh on Form Open is an advanced form-level setting that activates a check for form and data freshness. When a field user or an App‑to‑App request opens the form, TrueContext checks and updates the following types of data: The latest version of the form. Any Resource Images and Resource Documents used in the form. Data Source values from the most recent fetch. User lists for TrueContext Teamwork-enabled forms that field users can transfer directly to another user. Tip:You don’t need to refresh every form between reconciles. Use Refresh on Form Open only when you want to:Enforce a check for the latest form version and data. You can block or warn the user if the refresh can’t get the latest updates.Use an App‑to‑App request to launch the TrueContext Mobile App from a third-party app and enforce a check for form and data updates. Note:When you edit a form and then save your changes, the system",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Refresh on Form Open"
    }
  },
  {
    "content": "creates a new version of the form. The Mobile App gets the new version the next time that the app reconciles. This applies when you change any of the form settings. For Refresh on Form Open, remember that users must reconcile to get the form version that has this setting enabled. After that, the refresh action automatically checks for new form versions and data. The following table describes the options you can choose if a refresh fails to complete. Form setup Description Reason for failed refresh Alert displayed on the Mobile App Ignore Least restrictive, field users can open and work on the form. Users can work without interruption but might not have the latest form version and data. Device is offline None Network or system error None Warn More restrictive, notifies the field user that their form and data might not be up-to-date. Users can decide whether to proceed without the latest form version and data. Device is offline Network or system error Block Most restrictive, user must",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Refresh on Form Open"
    }
  },
  {
    "content": "refresh before they can start work on the form. Ensures that the form version and data are up-to-date before the user starts work. If the system can’t perform the data freshness check or updates, it blocks the user, even if their data is up-to-date. Warning: This option prevents field users from starting work if the data freshness check or updates fail. Use this option only when you know that field users will be online when they open the form. Device is offline Network or system error Info:This feature is only available to Enterprise-tier customers. The topic Refresh on Form Open describes in detail how this option works.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Refresh on Form Open"
    }
  },
  {
    "content": "Search Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Users can search for submitted forms or incomplete TrueContext Teamwork-enabled forms. Info:You must Enable the Mobile Search feature at the team level to use this setting. The topic Enable the Mobile Search Feature on your Form describes the form-level setup in more detail.If you're on the Enterprise tier, you can dispatch a record to a user, a group, or to all groups in a FormSpace. If you want to use this feature, you must Enable Search at the form level. The topic Set up Group Dispatching describes all of the required settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Search Options"
    }
  },
  {
    "content": "Corrections (Editing)\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise You can allow Mobile App users to correct (edit) a form after it’s been submitted. You can also specify whether users can initiate corrections for their own submissions, other users’ submissions, or both. Because you configure these options at the form level, you control which forms can be corrected and who can initiate corrections. From the Web Portal, you can send a record for corrections. You can send the record to the user who submitted the record or to a different user. Note: If you enable Data Passthrough, you can’t send forms for corrections (editing) or approvals. If you want users to initiate corrections from the Sent or Search lists, make sure to enable these in the team-level settings. Info:Unlike dispatched forms, forms sent for corrections can’t be declined. The topic Editing Form Submissions describes how corrections work in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Corrections (Editing)"
    }
  },
  {
    "content": "TrueContext Teamwork\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise The TrueContext Teamwork feature supports team collaboration by enabling your mobile users to transfer forms between them. With the TrueContext Teamwork feature, it's easy to implement a multi-user workflow. Some jobs require more than one technician to complete an assignment. Your mobile workforce can submit incomplete forms for other team members to complete. Supervisors or team leads can track the work’s progress in the Web Portal and take action (unassign or assign work) as needed. Note: This feature supports consecutive workflows. Only one mobile device user at a time can be assigned to a record. Tip:With any TrueContext Teamwork configuration, supervisors can always unassign and assign forms as needed. Info: This feature is only available to Enterprise-tier customers. If you enable this setting, users can’t decline dispatched forms. The topic Steps to Enable TrueContext Teamwork on a Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "TrueContext Teamwork"
    }
  },
  {
    "content": "describes the TrueContext Teamwork feature in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "TrueContext Teamwork"
    }
  },
  {
    "content": "App‑to‑App Callbacks\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise App‑to‑App callback parameters define the data to send back to a third-party app on the user’s device. For example, your Field Service Management (FSM) app launches a form that captures the job start date. You can configure a custom callback parameter to send the parameter name and value back to your FSM app. Info:This feature is only available to Advanced and Enterprise-tier customers. The topic Configure App‑to‑App Custom Callback Parameters describes how App‑to‑App callbacks work in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "App‑to‑App Callbacks"
    }
  },
  {
    "content": "Sent Box Options\n\nSent Box Options control whether a mobile user can view submitted records in the Sent box. You can also set the number of records the Sent box stores and how long a record stays in the Sent box. Remember to switch on the Sent box in the team settings if you want users to access their submitted records. The topic Team Settings: Mobile Device Settings describes how to select the tabs that display for your team on the Mobile App. Tip:Select Display submitted forms in the Sent box of the mobile app to show submitted forms in the mobile app's Sent box. This setting helps control form access for compliance requirements like GDPR. By default, the Sent box stores 20 records per form for seven days. You can change those values to store a maximum of 250 records per form for up to 45 days. Note:This setting only affects the current form version, not other submitted forms displayed in the Sent list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Sent Box Options"
    }
  },
  {
    "content": "Data Record Naming\n\nA Data Record Naming A Data Record Naming expression provides a way to create a unique name for dispatched, saved, and submitted forms. The naming expression also applies to forms that a user saves as draft on their device. A customized name helps you and your mobile users quickly search for and identify forms. expression provides a way to create a unique name for dispatched, saved, and submitted forms. The naming expression also applies to forms that a user saves as draft on their device. A customized name helps you and your mobile users quickly search for and identify forms. The system displays the unique, customized name at various stages of your workflow: Dispatched forms—in the Mobile App Inbox and in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. Saved forms—in the Mobile App Drafts Submitted forms—in the Mobile App Search, Outbox,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Data Record Naming"
    }
  },
  {
    "content": "and Sent lists and in the TrueContext Web Portal Info:The topic Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming describes in detail how to name Form Submissions.Data Record Naming does not affect the name of files sent through Data Destinations. The topic Change How Form Submissions Are Named and Organized in Cloud Services describes how to name files in Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Data Record Naming"
    }
  },
  {
    "content": "Data Passthrough\n\nData Passthrough is a setting you can enable on a form when you don’t want the TrueContext server to store your data. Use this feature when your organization’s security policies prohibit storing information on an external server. The Data Passthrough setting deletes submitted data from the TrueContext server 24 hours after submission. For this reason, any features that require data from a submitted form are not compatible with Data Passthrough. Your form must have two different types of Data Destinations added. This ensures that you have a backup in case your main Data Destination fails. Warning:If both of your Data Destinations fail, you will lose your data after 24 hours. Info:The topic Enable Data Passthrough on Forms describes the Data Passthrough feature in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Data Passthrough"
    }
  },
  {
    "content": "Advanced Options\n\nThe advanced options include geolocation and maximum submission size settings. Note: The Collect geo location setting depends on the mobile device location settings. Location services must be enabled on the device for the system to capture the geolocation. Info:The topic Geolocation Data describes in detail how the different geolocation options and questions work. A smaller submission size optimizes performance and storage for forms that capture image files and minimizes the impact to data plan usage. We recommend a maximum of around 2.00 MB—the default value—for best performance on all devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Advanced Options"
    }
  },
  {
    "content": "Unique Reference Number\n\nThe Form Submission Reference Number is the TrueContext unique identifier for a dispatched or submitted form. The Reference Number includes the dispatch or submission date (in UTC) and a form submission identifier. You can customize the Reference Number to work with your back-office systems and to provide context in lists of dispatches and submissions. The following example shows the unique reference number displayed in the Web Portal. You can customize the Reference Number by adding: A Reference Number Prefix—any string of text that helps to identify the form submission. Note:Unlike Data Record Naming, which doesn’t affect the reference number, you cannot use a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression in the prefix. The date and time of the dispatch or submission, displayed in UTC. The User ID of the user who submitted the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Unique Reference Number"
    }
  },
  {
    "content": "form or was sent the dispatched form. Info:The topic Find a User ID or Username describes how to find a User ID.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Unique Reference Number"
    }
  },
  {
    "content": "Related topics\n\nForm Building Basics Form Builder Icon Glossary Question and Data Types in the Form Builder",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/FormSettings.html",
      "title": "Set Up Form Properties",
      "section": "Related topics"
    }
  },
  {
    "content": "Selectable Icons\n\nThese icons are all selectable, meaning that clicking or tapping on them allows you to change things within the form. Edit Icon: Any element of the Form Builder that has this icon beside it can be edited. This will bring up that element's Information page, allowing you to edit its properties. For example, selecting this next to your Page Name brings up the Page Information screen, where you can change the name, unique identifier, and other page properties. Menu Icon: Any element of the Form Builder that has this icon beside it has multiple available options. The most common options within the menu icon are: Edit: Update the element. Copy: Copy the element. Delete: Delete the element. If Conditional Logic rules or other questions reference an element, deleting it might create conflicts or errors in parts of your form. Delete Multiple Form Elements: This opens a window that lists all the form elements. Select multiple form elements to delete at once. If Conditional",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Selectable Icons"
    }
  },
  {
    "content": "Logic rules or other questions reference an element, deleting it might create conflicts or errors in parts of your form. Info:The topic Form Building Basics: Delete Multiple Form Elements describes how to delete multiple form elements in more detail. For Questions, an additional option is available: Move Within Section: Move questions within the section. Drag and Drop Icon: This icon indicates parts of the Form Builder that can be dragged and dropped into different configurations. For example, this shows up next to each question in your form. If you want a particular question to be moved higher up in your form's section, you can drag the question and drop it in the appropriate spot.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Selectable Icons"
    }
  },
  {
    "content": "Static Icons\n\nThese icons are static, meaning that they cannot be selected. They are used to provide information about questions, sections, or pages.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Static Icons"
    }
  },
  {
    "content": "Question Type Icons\n\nThese icons are used to show what kind of question is being used in a form. They show up when you select Add a Question. For detailed information about each Question Type, please read: Question and Data Types in the Form Builder. Icon Description Icon Description Text Field: Capture text input in a single-line field. Geo Location: Capture your current location. Information Label: Show an informational message. Single Checkbox: A question with a single checkbox. Slider: Choose a number or range on a slider. Text Area: Capture text from a multi-line field. Button Group: Choose one of 2-5 color-coded options. Dropdown: Choose one option from a list. Multi Select: Choose multiple options from a list. Radiobutton: Choose one option from a short list. Stepper: Use + and - buttons to choose a number. Duration Field: Enter a time duration (hours, minutes, seconds). Date/Time Selector: Select a date/time. Date/Time Stamp: Automatically collect a date/time. Time-Based Math:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Question Type Icons"
    }
  },
  {
    "content": "Calculate a date/time based on another date/time and a duration. Enterprise customers have additional options. Duration Math: Calculate the duration between two date or date/time entries. Calculation: Calculate any number. Duration Calculation: Calculate a duration based on other durations or numbers. Image: Capture or attach photos. Sketch Pad: Annotate on top of photos, diagrams, or a blank canvas. Signature: Capture a signature. Audio Recording: Capture an audio recording. Barcode: Scan a barcode with your device's camera. Digit Extraction: Isolate numeric digits from mixed characters. String Concatenation: Build a string using answers and static text. File Upload: Attach a file. Recap: Count the number of triggered Exceptions of a certain type within the form. Aggregation: Perform various calculations on Repeatable Sections entries. (Repeatable Section Footer only) Card List: Choose one option from a list of 2-10 media cards. Document Editor: Annotate PDF documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Question Type Icons"
    }
  },
  {
    "content": "Data Types\n\nThese icons describe what kind of answers go into the question types. Data types determine the sort of data a question will be collecting. For example, different icons will show in the form builder if the question expects text, an image, or GPS coordinates from the mobile user. Integer: This is an integer (whole number) data type. Decimal: This is a numeric data type. You can set the number of decimal places. Currency: This is a numeric data type. Free Text: This is a data type that can contain alphanumeric characters. Email: This is a data type that checks if your mobile users have entered a valid example@email.com address. Date: This is a data type that uses a date selector to store answers as a Date value. Time: This is a data type that contains a Time value in standard UTF encoding. Date/Time: This is a data type that contains a date and time value in standard UTF encoding. URL: This is a data type that contains an http:// or https:// type URL. Phone Number: This is a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Data Types"
    }
  },
  {
    "content": "data type that collects a phone number. Duration: This is a data type that records a span of time. Attachment: This data type covers all attachments: image files, file upload, and audio files. Document: This is a data type that enables you to annotate a PDF file.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Data Types"
    }
  },
  {
    "content": "Restriction Icons\n\nThese icons are used on questions, sections, pages, and tabs to indicate what restrictions have been applied. Most of these restrictions have to do with mobile user behavior. Required: Required questions must be answered before proceeding to the next page of a form or submitting a form. If a user attempts to move to the next page or submit the form without answering a Required question, an error message will appear advising the user that there are unanswered Required questions. Read only: Read only questions cannot be edited on mobile devices. These fields usually either contain data filled out by an administrator in the case of a dispatched form, or are auto-populated/prefilled based on selections made earlier in the form. Hidden on device: Hidden on device questions cannot be seen by mobile users. These questions may contain sensitive information, or data used by questions later in the form. Hidden on reports: Hidden on reports questions are not kept on completed",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Restriction Icons"
    }
  },
  {
    "content": "documents and are not saved. Keep question width to 100%: Keep question width... questions in a Side-by-Side Section override the section’s question-answer ratio. These questions fill the whole width of the page instead of the Side-by-Side Section two-column layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Restriction Icons"
    }
  },
  {
    "content": "Other Static Icons\n\nError: This icon appears next to tabs, pages in the page index, and other form builder elements that contain problems that would prevent the form from deploying properly.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008168827.html",
      "title": "Form Builder: Icon Glossary",
      "section": "Other Static Icons"
    }
  },
  {
    "content": "Separate File Attachments with a Document\n\nThis default file attachment naming only applies when the relevant attachment files are sent separately from the submitted form. This setting is found under File Configuration on the Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. The default naming of attachments is controlled by both the control's unique ID and the linked document's designated Data Record Document Filename Expression. Attachment filenames are displayed as: [Data Record Document Filename Expression]_[unique ID]_# Or, for Repeatable Sections: [Data Record Document Filename Expression]_[unique ID]([Row Number])_# For example, this image filename uses the default naming scheme: Therefore, the filename is: 20160406-1837674070_Photos 8_1.jpg How to Create a Custom Filename",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218231348_AttachmentFileNaming.html",
      "title": "Attachment File Naming",
      "section": "Separate File Attachments with a Document"
    }
  },
  {
    "content": "Prefix A custom filename prefix for your attachment filenames allows you to identify the contents of the file without looking at the file itself. For example, DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. can reference previous question answers using the %a[unique ID] format to create a descriptive name for the file. This will override the Data Record Document Filename Expression, so attachment filenames will be displayed as: [Custom Prefix Expression]_[unique ID]_# Note: The custom filename prefix is limited to 140 characters. When using an answer from a form that allows long answers in an attachment name, any answer exceeding 140 characters will be cut off. Note: When creating a custom filename prefix that will be sent to a cloud destination such as Google Drive or Dropbox, be sure to add a reference that will make each filename unique. Using the reference number",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218231348_AttachmentFileNaming.html",
      "title": "Attachment File Naming",
      "section": "Separate File Attachments with a Document"
    }
  },
  {
    "content": "(%r[id]) will ensure each attachment filename will be unique and prevent overwriting of older files with the same name. To create a custom filename prefix, follow these instructions: Ensure you are in the correct FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. and select the appropriate form from your list of forms. Select Edit Form. On the Pages and Questions tab, create or edit one of the following question types: File Image Audio Signature While editing the question, add your DREL string under the Properties tab, in the Custom Filename Prefix section: Save and Deploy the form. Note: When creating a custom filename prefix that will be sent to a cloud destination such as Google Drive or Dropbox, be sure to add a reference that will make each filename unique. Using",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218231348_AttachmentFileNaming.html",
      "title": "Attachment File Naming",
      "section": "Separate File Attachments with a Document"
    }
  },
  {
    "content": "the reference number will ensure each attachment filename will be unique and prevent overwriting of older files with the same name.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218231348_AttachmentFileNaming.html",
      "title": "Attachment File Naming",
      "section": "Separate File Attachments with a Document"
    }
  },
  {
    "content": "Key Concepts\n\nA form consists of virtual pages, organized in a page index. Each page contains sections, and each section contains questions. You can set up the form to show or hide the section header (title). You can also make the section collapsible to save screen space.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Video Demo\n\nLearn from an expert! This video describes the structure of a form, including both Regular and Repeatable Sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Video Demo"
    }
  },
  {
    "content": "Comparison of section types and layouts\n\nThe following table describes each section type and layout. Section type Layout Example Works best for… Regular Full-width, over-under (“stacked”) Long question text or answers Question types that display best as full-width Regular with Multicolumn Layout (Enterprise tier only) Flexible, questions flow from one column to the next Fitting a lot of information into a single, concise view Giving form designers precise control over how questions are presented to field users Side-by-Side (Enterprise tier only) Two-column, with configurable ratio Short question text Short answer text Short option descriptions Template-Based (Enterprise tier only) Full-width, over-under (same as a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer.) Reusable groups (blocks) of questions to help the Admin build forms more",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Comparison of section types and layouts"
    }
  },
  {
    "content": "quickly and consistently, such as audit-based forms Repeatable Summary Table for quick reference and editing Note:Use a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. only for its intended purpose of adding information in a repeating subform. Do not use a Repeatable Section to achieve a particular layout. If you need additional layout options for questions in a Regular Section, consider upgrading to the Enterprise tier, which includes a Multicolumn Layout. Sets of questions in a subform that users can complete multiple times, to create the number of line items required When a field user opens a row to add or edit answers, displays as a “subform”. The subform layout can be Regular, Regular with a Multicolumn Layout A Multicolumn Layout is an Enterprise tier option for questions in a Regular Section. This",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Comparison of section types and layouts"
    }
  },
  {
    "content": "highly flexible layout gives form designers control over how question are displayed on the Mobile App., or Side-by-Side. Summary Table Enterprise tier options Compact view The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. options include: Wrap rows to new line Hide headers This example shows rows wrapped and headers hidden: The Full view The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. (View All) options that help field users to show only relevant information include: Allow users to sort by columns Allow users to filter by one column This example shows the filter option: When the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Comparison of section types and layouts"
    }
  },
  {
    "content": "subform opens, the layout can be over-under, Multicolumn, or Side-by-Side Info:The topic Form Layout Options provides more details about the different layouts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Comparison of section types and layouts"
    }
  },
  {
    "content": "Best practices\n\nItems to consider Guidelines TrueContext features you can use User devices Design your pages and sections to display clearly on the device and to minimize scrolling. Organize your pages so that the page index makes the form easy to navigate. Form-level page index settings Form Layout Options Section header visibility and behavior Move and copy pages and sections User experience Group relevant items into sections to provide your users with context. Organize the form in the order of tasks to be completed. Use a condensed layout for easier scanning and less scrolling. In each Repeatable Section, optimize the Summary Table display and enable row copying, row wrapping, and inline editing. Form Builder for pages, sections, and questions Side-by-Side Sections Multicolumn Layout Repeatable Sections Repeatable Sections: Summary Table Documents used as reports By default, a document created when the user submits the form is based on the page and section structure of the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Best practices"
    }
  },
  {
    "content": "Make sure the form structure works with your document requirements. Visual Documents Custom Documents Programmatic Documents for Integrations and Developers Information from: Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. Dispatched forms TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms (Enterprise tier only) For a large number of data points in a Repeatable Section, enable row copying and inline editing of the Summary Table. Use a custom column setup to combine",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Best practices"
    }
  },
  {
    "content": "different data points in a single display column. You can route or push data from a question to subsequent questions in the form. Place the source question before the target questions. Inline Editing Row Copy Custom Column Setup (DREL) Data Sources Router Setup Property Push Data to Other Questions from a Data Source Workflows and Business Logic For TrueContext Teamwork-enabled forms (Enterprise tier only), structure the form so that different field users can complete their parts efficiently. Structure the form so that you can show or hide whole sections or pages based on Conditional Logic Conditional logic is a tool in the Form Builder that establishes the workflow of a form. By using the \"If This, Then That\" structure, questions or sections will be displayed, hidden, or automatically populated based on answers to preceding questions.. You can hide a section header and still use Conditional Logic to display the block of questions within that section. This displays the block of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Best practices"
    }
  },
  {
    "content": "questions seamlessly between other blocks of questions in the form. Use the Answer Exceptions An Answer Exception is a form feature that displays color-coded feedback when a mobile user selects or enters an answer. Answer Exceptions typically show an inspection status (pass/fail) or prompt the user for additional information. Color-coding notifies the user of the Exception's severity. property along with a Recap question and Conditional Logic to drive your workflows. Structure your form so that you can show (is not ignored) or hide (ignore) pages and sections. TrueContext Teamwork Overview Conditional Logic Answer Exceptions Recap Question Integrations Integration refers to secure communication and data sharing between TrueContext and a third-party system, such as Salesforce or ServiceMax. Connections, Data Sources, Data Destinations, and App-to-App calls and callbacks can be used as part of an integration solution. You can send data from a submitted form directly to your system of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Best practices"
    }
  },
  {
    "content": "record. Structure the sections in your form to align with your third-party system requirements. For example, you might use SharePoint to store data for downstream processing by reporting or analytics platforms. You can map data from a Regular or Repeatable Section into one or more SharePoint columns as required by your third-party system. Use a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system. to send data from a Repeatable Section to Salesforce or SharePoint (Advanced and Enterprise tiers only). Set up the structure of your form so that it’s easy to map to the hierarchical structure of your third-party system. For example, use Regular and Repeatable Destinations to map data from different sections in your form to parent-child objects in Salesforce. Parent-child relationships could include Account and Contacts objects, or Work Order and Work Order Tasks objects. Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Best practices"
    }
  },
  {
    "content": "Destinations Repeatable Data Destinations Set Up a Salesforce Repeatable Destination Send Data from a Repeatable Section to a SharePoint List",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Best practices"
    }
  },
  {
    "content": "Form Building Cookbook\n\nGet “recipes” for best practices in setting up pages, sections, and questions in your forms. Form Building Basics Add a Repeatable Section to a Form Managing Templates",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Form Building Cookbook"
    }
  },
  {
    "content": "Troubleshooting\n\nReview Form Details Best Practices for Form Building, Testing, and Deployment Introducing and Testing New Form Versions in a Production Environment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormPagesSections.htm",
      "title": "Form Pages and Sections",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Regular Section Layout Options\n\nThe following examples show the different layout options for a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer.. Over-Under “Stacked” Use this layout for: Long question text or answers. Question types that display best at full-width. Info:A Template-Based Section A template-based section is an Enterprise tier tool that enables form designers to easily create and edit sections for forms with repeated structures. Template-based sections help create a consistent workflow for users, while saving form designers time by only having to edit questions in one place. (Enterprise-tier only) has the same over-under layout as a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Regular Section Layout Options"
    }
  },
  {
    "content": "answer.. Learn more about Regular sections Side-by-Side Enterprise Tier A Side-by-Side Section is a variation of a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer.. The term Side-by-Side refers to a condensed, two-column, question-answer layout. Use a Side-by-Side layout for: Short question text. Short answer text. Short text in options-based questions Options-based questions are questions that display a list of options for field users to choose from. These include Button Group, Card List, Dropdown, Multiselect, and Radio Button questions., such as Button Groups that have only “Pass” and “Fail” options. Tip:To ensure the best user experience, some question types always display at full width in a Side-by-Side section. Learn more about Side-by-Side sections Multicolumn “Flow” Enterprise Tier The Multicolumn Layout A Multicolumn Layout is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Regular Section Layout Options"
    }
  },
  {
    "content": "an Enterprise tier option for questions in a Regular Section. This highly flexible layout gives form designers control over how question are displayed on the Mobile App. gives you greater control over the presentation of Regular Sections. Questions “flow” from one to the next. The Multicolumn Layout includes options to: Display more than one question per line. Hide question text. Set up a question to span multiple columns. Insert manual line breaks. Learn more about the Multicolumn Layout",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Regular Section Layout Options"
    }
  },
  {
    "content": "Over-Under “Stacked”\n\nUse this layout for: Long question text or answers. Question types that display best at full-width. Info:A Template-Based Section A template-based section is an Enterprise tier tool that enables form designers to easily create and edit sections for forms with repeated structures. Template-based sections help create a consistent workflow for users, while saving form designers time by only having to edit questions in one place. (Enterprise-tier only) has the same over-under layout as a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer.. Learn more about Regular sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Over-Under “Stacked”"
    }
  },
  {
    "content": "Side-by-Side\n\nEnterprise Tier A Side-by-Side Section is a variation of a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer.. The term Side-by-Side refers to a condensed, two-column, question-answer layout. Use a Side-by-Side layout for: Short question text. Short answer text. Short text in options-based questions Options-based questions are questions that display a list of options for field users to choose from. These include Button Group, Card List, Dropdown, Multiselect, and Radio Button questions., such as Button Groups that have only “Pass” and “Fail” options. Tip:To ensure the best user experience, some question types always display at full width in a Side-by-Side section. Learn more about Side-by-Side sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Side-by-Side"
    }
  },
  {
    "content": "Multicolumn “Flow”\n\nEnterprise Tier The Multicolumn Layout A Multicolumn Layout is an Enterprise tier option for questions in a Regular Section. This highly flexible layout gives form designers control over how question are displayed on the Mobile App. gives you greater control over the presentation of Regular Sections. Questions “flow” from one to the next. The Multicolumn Layout includes options to: Display more than one question per line. Hide question text. Set up a question to span multiple columns. Insert manual line breaks. Learn more about the Multicolumn Layout",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Multicolumn “Flow”"
    }
  },
  {
    "content": "Repeatable Section Layout Options\n\nRepeatable Sections A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. display configurable Summary Table views that make it easy for field users to review, edit, and add information. The following examples show the different layout options for Summary Table views. Note:Use a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. only for its intended purpose of adding information in a repeating subform. Do not use a Repeatable Section to achieve a particular layout. If you need additional layout options for questions in a Regular Section, consider upgrading to the Enterprise tier, which includes a Multicolumn Layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Repeatable Section Layout Options"
    }
  },
  {
    "content": "Summary Table Compact View The Summary Table Compact View The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. is displayed in the main form. Enterprise Options—Compact View Enterprise Tier Customers on the Enterprise tier have additional layout options for the Summary Table Compact and Full views. Hide headers Choose the option to hide headers on the Mobile App if: You want to simplify the display, especially on small screens. Field users don't need the headers to understand what’s in each table cell. Wrap rows... and Show headers inset in cell This example shows what the Summary Table looks like when a row wraps to a new line. The headers are displayed within each table cell. Wrap rows... and Hide headers This example shows the Summary Table with both the Wrap rows… and Hide headers options selected. This simplifies the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Repeatable Section Layout Options"
    }
  },
  {
    "content": "on-screen display and saves space. Learn more about the Summary Table Summary Table Full View The Summary Table Full View The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. opens a new page that’s separate from the main form. Your browser does not support the video tag. Enterprise Options—Full View Enterprise Tier Allow users to sort by column This example shows the Summary Table full view sorted by the Cost column in ascending (increasing) order. Tip:Sorting only changes the row display order, not the actual row order in the subrecord. To change the actual order, users drag a row to move it. Allow users to filter by column This example shows the Summary Table full view filtered by the Availability column. Only the rows with matching values are",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Repeatable Section Layout Options"
    }
  },
  {
    "content": "displayed. Tip:You can filter on more than one column to limit the results even more. Learn more about the Summary Table Inline Editing Advanced and Enterprise TierS You can set up a Summary Table with inline editing to make it simpler for users to edit answers. When a field user taps the edit icon, only the selected question opens, not the whole subform. Inline editing works in both the Compact and Full views. The following example shows how inline editing works when the Button Group question is set to the Display Value. If you set up a column to display a Control, users can edit directly in the table (Enterprise tier only). Your browser does not support the video tag. Learn more about Inline Editing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Repeatable Section Layout Options"
    }
  },
  {
    "content": "Summary Table Compact View\n\nThe Summary Table Compact View The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. is displayed in the main form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Summary Table Compact View"
    }
  },
  {
    "content": "Enterprise Options—Compact View\n\nEnterprise Tier Customers on the Enterprise tier have additional layout options for the Summary Table Compact and Full views. Hide headers Choose the option to hide headers on the Mobile App if: You want to simplify the display, especially on small screens. Field users don't need the headers to understand what’s in each table cell. Wrap rows... and Show headers inset in cell This example shows what the Summary Table looks like when a row wraps to a new line. The headers are displayed within each table cell. Wrap rows... and Hide headers This example shows the Summary Table with both the Wrap rows… and Hide headers options selected. This simplifies the on-screen display and saves space. Learn more about the Summary Table",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Enterprise Options—Compact View"
    }
  },
  {
    "content": "Summary Table Full View\n\nThe Summary Table Full View The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. opens a new page that’s separate from the main form. Your browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Summary Table Full View"
    }
  },
  {
    "content": "Enterprise Options—Full View\n\nEnterprise Tier Allow users to sort by column This example shows the Summary Table full view sorted by the Cost column in ascending (increasing) order. Tip:Sorting only changes the row display order, not the actual row order in the subrecord. To change the actual order, users drag a row to move it. Allow users to filter by column This example shows the Summary Table full view filtered by the Availability column. Only the rows with matching values are displayed. Tip:You can filter on more than one column to limit the results even more. Learn more about the Summary Table",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Enterprise Options—Full View"
    }
  },
  {
    "content": "Inline Editing\n\nAdvanced and Enterprise TierS You can set up a Summary Table with inline editing to make it simpler for users to edit answers. When a field user taps the edit icon, only the selected question opens, not the whole subform. Inline editing works in both the Compact and Full views. The following example shows how inline editing works when the Button Group question is set to the Display Value. If you set up a column to display a Control, users can edit directly in the table (Enterprise tier only). Your browser does not support the video tag. Learn more about Inline Editing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/TechnicianExperience/FormLayoutsForUsability.htm",
      "title": "Form Layout Options",
      "section": "Inline Editing"
    }
  },
  {
    "content": "Regular Sections Available on all tiers: Essentials Advanced Enterprise About Regular Sections in the Mobile App More Information About Each page in your form contains one or more sections, and all questions are contained within sections. Use regular sections to: Help organize questions into logical groups. Make it easier for mobile users to navigate through a form in the app Structure information on PDF/Word/HTML documents Make it easier to build Conditional Logic rules, especially to hide or show a group of questions with a single Conditional Logic rule. Regular Sections in the Mobile App Regular Sections show as blue headers within a single form page. Regular Sections can be expanded or collapsed, making it easy for a mobile user to navigate through a page. Expanded sections are indicated by doubled downwards-pointing arrow icons on the far right side of the screen. An expanded section appears as shown below: To collapse a section, tap the icon on the far right. This will hide the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005278543.html",
      "title": "Regular Sections"
    }
  },
  {
    "content": "section without erasing any of your answers, making it easier to fill other sections without scrolling. A collapsed section appears as shown below: To expand a collapsed section, tap the icon on the far-right side of the screen. More Information More information on sections can be found here: Working with sections in the Form Builder Section appearance in PDF, Word, and HTML documents",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005278543.html",
      "title": "Regular Sections"
    }
  },
  {
    "content": "Video demo of how the Multicolumn Layout works\n\nYour browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MultiColumnLayout/MulticolumnLayoutTopic.htm",
      "title": "Multicolumn Layout",
      "section": "Video demo of how the Multicolumn Layout works"
    }
  },
  {
    "content": "Differences between the Multicolumn Layout and other layouts\n\nWith the Multicolumn Layout, you can set up multiple questions per line. Your field users can see more information at once than with other layouts and spend less time scrolling through the form. This layout is particularly useful when you need to present your field users with a lot of information in a single, concise view. Info:The Multicolumn Layout provides the most flexibility of all of our Form Layout Options.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MultiColumnLayout/MulticolumnLayoutTopic.htm",
      "title": "Multicolumn Layout",
      "section": "Differences between the Multicolumn Layout and other layouts"
    }
  },
  {
    "content": "How to set up a Multicolumn Layout\n\nYou set up the Multicolumn Layout in the Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. settings. Select the option to Display Multiple Columns per Line and choose from 2 to 10 columns per line. Once you enable the Multicolumn Layout in the section settings, you can set up each question. The question General tab displays the related properties. Tip:The Multicolumn Layout gives you a lot of flexibility! Make sure that you test your layout thoroughly with different devices, especially if you apply Conditional Logic or other adaptive features.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/MultiColumnLayout/MulticolumnLayoutTopic.htm",
      "title": "Multicolumn Layout",
      "section": "How to set up a Multicolumn Layout"
    }
  },
  {
    "content": "How Side-by-Side Sections work\n\nSide-by-Side sections display questions in a two-column layout in the TrueContext Mobile App. With Side-by-Side Sections, you can: Remove extra space in the form to reduce scrolling time. Fit more information on a single screen, which makes it easier for field users to scan for context within and across sections. Vary section formats to make a form easier to navigate. Note:Customer Feedback forms do not support Side-by-Side sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "How Side-by-Side Sections work"
    }
  },
  {
    "content": "Side-by-Side Sections in the Mobile App\n\nThe following example shows a comparison of a Side-by-Side and a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. in the Mobile App. The first example shows a Side-by-Side Section. The second example shows the same questions in a Regular Section. The two-column layout makes the Side-by-Side section shorter than the Regular Section. Two-column Side-by-Side layout Over-under Regular layout",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "Side-by-Side Sections in the Mobile App"
    }
  },
  {
    "content": "Side-by-Side Sections in the Form Builder\n\nWhen you create a Side-by-Side Section, you choose a question-to-answer ratio. The ratio determines the width of question text and answer field columns in the TrueContext Mobile App. By default, the ratio is 50:50, which works well for most questions. Some question types always display at full width. You can also Keep question width to 100% for specific questions within the Side-by-Side section. Side-by-Side section settings only apply to form pages in the Mobile App. They have no effect on the summary view, document formats, or Web Portal display. Tip: When you select a question-answer ratio, think about the question types you plan to include in the section. Wider question types, like Button Group, don’t fit well in smaller answer widths, especially on smaller devices. The Side-by-Side display works with views wider than 390 dp. Smaller view screens display the questions full width. Use the Change Section Type setting to easily switch between",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "Side-by-Side Sections in the Form Builder"
    }
  },
  {
    "content": "Regular and Side-by-Side sections. You don’t have to re-create existing sections. Edit the section to change its type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "Side-by-Side Sections in the Form Builder"
    }
  },
  {
    "content": "Side-by-Side Section setup\n\nTo add a Side-by-Side Section, fill in the section information, choose a question-to-answer ratio, and save your changes. The Form Index displays the Side-by-Side icon next to the Side-by-Side section name. When you add questions to the section, the Form Builder shows the questions in a two-column layout. Info:The topic Build Sections describes in detail how to add and set up a Side-by-Side section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "Side-by-Side Section setup"
    }
  },
  {
    "content": "When to use a Side-by-Side Section\n\nThe following table describes each section type and layout. Section type Layout Example Works best for… Regular Full-width, over-under (“stacked”) Long question text or answers Question types that display best as full-width Regular with Multicolumn Layout (Enterprise tier only) Flexible, questions flow from one column to the next Fitting a lot of information into a single, concise view Giving form designers precise control over how questions are presented to field users Side-by-Side (Enterprise tier only) Two-column, with configurable ratio Short question text Short answer text Short option descriptions Template-Based (Enterprise tier only) Full-width, over-under (same as a Regular Section) Reusable groups (blocks) of questions to help the Admin build forms more quickly and consistently, such as audit-based forms Repeatable Summary Table for quick reference and editing Note:Use a Repeatable Section A Repeatable Section is a subform that contains a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "When to use a Side-by-Side Section"
    }
  },
  {
    "content": "set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. only for its intended purpose of adding information in a repeating subform. Do not use a Repeatable Section to achieve a particular layout. If you need additional layout options for questions in a Regular Section, consider upgrading to the Enterprise tier, which includes a Multicolumn Layout. Sets of questions in a subform that users can complete multiple times, to create the number of line items required When a field user opens a row to add or edit answers, displays as a “subform”. The subform layout can be Regular, Regular with a Multicolumn Layout A Multicolumn Layout is an Enterprise tier option for questions in a Regular Section. This highly flexible layout gives form designers control over how question are displayed on the Mobile App., or Side-by-Side. Summary Table Enterprise tier options Compact view The term \"compact",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "When to use a Side-by-Side Section"
    }
  },
  {
    "content": "view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. options include: Wrap rows to new line Hide headers This example shows rows wrapped and headers hidden: The Full view The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. (View All) options that help field users to show only relevant information include: Allow users to sort by columns Allow users to filter by one column This example shows the filter option: When the subform opens, the layout can be over-under, Multicolumn, or Side-by-Side Info:The topic Form Layout Options provides more details about the different layouts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "When to use a Side-by-Side Section"
    }
  },
  {
    "content": "Full-width question types\n\nTo ensure the best user experience, the following question types always display at full width in all sections, including Side-by-Side: Audio Recording Card List Document Editor File Upload Image Information Label Resource Image Signature Sketch Pad",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/FormPagesAndSectionTypes/SideBySideSections.htm",
      "title": "Side-by-Side Sections",
      "section": "Full-width question types"
    }
  },
  {
    "content": "About\n\nRepeatable Sections allow users to enter a variable number of entries for the same set of questions -- typically used for entering things like parts, labor, or material line items. For example, a work order may collect several pieces of information, such as part number, quantity, and price, and allow users to collect that information for multiple parts. When building forms, Repeatable Sections let you build a single copy of these questions, and then specify how many times they can be re-used. This reduces the need for multiple pages in a form and makes entering information much faster. In the Mobile App, entered line items are laid out in a Summary Table view, making it easy for mobile users to review their work, and providing a form layout that looks more like the paper or Excel forms your mobile users may be familiar with.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "About"
    }
  },
  {
    "content": "Summary Table\n\nRepeatable Sections are easily identified in the Mobile App by the Summary Table format. The Summary Table displays all the entries that have been created in the Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. You have full control over which columns appear.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Summary Table"
    }
  },
  {
    "content": "Adding Entries\n\nSelect Add Entry. This will bring up a new screen with all the questions in the Repeatable Section. There is no limit on the allowed number of questions. When you have answered all the required questions, tap the check mark on the top right. This will take you back to the Summary Table view. The item will be added to the table. The \"Footer\" can automatically aggregate any numeric question, making calculations easy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Adding Entries"
    }
  },
  {
    "content": "Supported Features\n\nThe following sections explain which features are supported for forms with Repeatable Sections. There are some limitations on how you can use data that is contained within Repeatable Sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Supported Features"
    }
  },
  {
    "content": "Question and Data Types\n\nAll question and data types can be included in a Repeatable Section. There are some limitations on what can be included in the Summary Table or Footer. Supported Number-Based Questions Supported Options-Based Questions Supported Attachment-Based Questions Other Supported Question Types Supported Data Types Summary Table Calculation Date/Time Selector Date/Time Stamp Digit Extraction Duration Calculation Duration Field Duration Math Slider Stepper Button Group Card List (Advanced and Enterprise tiers only) Dropdown Multiselect Radio Button Audio Recording Document Editor (Enterprise tier only) File Upload Image Signature Sketch Pad Barcode Scanner Single Checkbox String Concatenation Text Area Text Field All Data Types Repeatable Section Footer Aggregation Calculation Text Field (Integer, Decimal, and Currency Data Types only) Currency Decimal Duration Integer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Question and Data Types"
    }
  },
  {
    "content": "Custom Column Setup\n\nYou can set up a custom column to provide your field users with additional context in a Summary Table. Note: DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. in a custom column can only reference questions within the same Repeatable Section. DREL in a nested section can only reference questions within that nested section. Fields in a custom column are read-only, and you can’t configure them for inline editing. If you don’t want to display hidden values to your end users, don’t reference those questions when using DREL. You can use DREL, static text, or both in a custom column to: Combine multiple answers and add static text to provide more context. Show the display value instead of the server value of an options-based question. Tip:You don’t have to use a custom column to show the display value of an options-based question. If you want to enable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Custom Column Setup"
    }
  },
  {
    "content": "inline editing:Add the question to the Summary Table.Set the Answer value to display to Display Value. The following example shows how you can set up a custom column to show multiple answers and static text: Floor: %a[Floor] Suite: %a[Suite] Room: %a[Room] This combines answers from three different questions in this Repeatable Section. The following table lists the DREL expressions that you can use in a custom column: %a Reference a question in the repeatable section. Repeatable Sections ✔ ([UniqueID] and [UniqueID][display]) Nested Repeatable Sections ✔ ([UniqueID] and [UniqueID][display]) Info:The topic Introduction to DREL describes how to construct a DREL expression in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Custom Column Setup"
    }
  },
  {
    "content": "Dispatching\n\nBulk Dispatching Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections ✔ Nested Repeatable Sections Portal UI Dispatching Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections (coming soon) Nested Repeatable Sections API Dispatching (Advanced and Enterprise tiers only) Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections ✔ Nested Repeatable Sections ✔ Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Destination (Advanced and Enterprise tiers only) Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections ✔ (automatic mapping only) Nested Repeatable Sections ✔ (automatic mapping only)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Dispatching"
    }
  },
  {
    "content": "Data Exports from the Web Portal\n\nMulti-Form Data Tab - Manual & Scheduled CSV Export Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections Form-Specific Data Tab - Manual & Scheduled CSV Export Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections ✔ Nested Repeatable Sections ✔",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Data Exports from the Web Portal"
    }
  },
  {
    "content": "Data Destinations\n\nEmail Destination Sending any document type ✔ Destinations sending PDF, Word, HTML only Regular Sections ✔ Side-by-Side Sections (Enterprise tier only) ✔ Repeatable Sections ✔ Destinations sending JSON, XML, CSV only Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections ✔* Google Sheets Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections ✔* Nested Repeatable Sections ✔* HTTP Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections ✔ Salesforce (Any) (Advanced and Enterprise tiers only) Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections ✔ (except for Apex REST) Nested Repeatable Sections ServiceNow Table (Advanced and Enterprise tiers only) Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections ✔ Nested Repeatable Sections Microsoft SharePoint Document Library (Advanced and Enterprise tiers only) Regular Sections Sending documents and attachments from any section in the form is supported. Side-by-Side Sections Repeatable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Data Destinations"
    }
  },
  {
    "content": "Sections Nested Repeatable Sections Microsoft SharePoint List (Advanced and Enterprise tiers only) Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections ✔ Nested Repeatable Sections SMS and Zendesk (Advanced and Enterprise tiers only) Regular Sections ✔ Side-by-Side Sections ✔ Repeatable Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217498738_OverviewRepeatableSections.html",
      "title": "Overview: Repeatable Sections",
      "section": "Data Destinations"
    }
  },
  {
    "content": "About\n\nRepeatable Sections allow users to enter a variable number of entries for the same set of questions—typically used for entering things like parts, labor, or material line items. Entered line items are laid out in a summary table view, making it easy for mobile users to review their work. Repeatable sections are easily configured in the Form Builder. This article describes how to add, edit, and delete Repeatable Sections and associated questions/features in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "About"
    }
  },
  {
    "content": "Videos\n\nReview the video below for a demonstration of Repeatable Sections in the Mobile App. Review the video below for instructions on adding a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. to a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Videos"
    }
  },
  {
    "content": "Create a Repeatable Section\n\nGo to the place in your form where you would like to add a Repeatable Section; this can be after a Regular or Side-by-Side Section on an existing page or on a new page.Select Add a Section.Choose Repeatable as the section type.Name the section, and optionally customize the Unique Identifier. Read more about general section properties here. Then, select Save.The Repeatable Section will be created. It will be easily identifiable by the table view. Tip:When you add a Repeatable Section to your form, the system creates a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. inside the Repeatable Section. When you enter the Repeatable Section, you can add more sections, or change existing Regular Sections to Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Create a Repeatable Section"
    }
  },
  {
    "content": "This can make it easier and faster for field users to scan, complete, and confirm the answers in a form.. The section type determines the layout when a user opens a row (entry).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Create a Repeatable Section"
    }
  },
  {
    "content": "Editing a Repeatable Section's Information\n\nTo edit a Repeatable Section's Information, simply select the menu icon next to the section name and select Edit. Here, you will be able to edit any options selected in the initial creation of the section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Editing a Repeatable Section's Information"
    }
  },
  {
    "content": "Deleting a Repeatable Section\n\nTo delete a Repeatable Section, select the menu icon next to the section day and select Edit. At the bottom of the settings and options page, select Delete Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Deleting a Repeatable Section"
    }
  },
  {
    "content": "Copying a Repeatable Section\n\nCopying a Repeatable Section can be done directly through the menu icon and selecting Copy Section. This will also copy any Conditional Logic contained within the Repeatable Section, but will not copy any Conditional Logic referring to or originating from outside the section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Copying a Repeatable Section"
    }
  },
  {
    "content": "Anatomy of a Repeatable Section\n\nRepeatable Sections appear as clean, easily read and managed sections on your mobile users' devices. This is an image from the Android client, demonstrating a filled-out Repeatable Section: For more information on each of these parts, please read: Building a Summary TableBuilding a Repeatable Section FooterConfigure Repeatable Section Settings",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Anatomy of a Repeatable Section"
    }
  },
  {
    "content": "Navigate into a Repeatable Section\n\nFind your Repeatable Section.Select Edit Summary Table or Questions to open your Repeatable Section.You will now be \"inside\" the Repeatable Section.All sections and questions listed on the right panel are inside of the Repeatable Section. How to identify that you are in a Repeatable Section The \"breadcrumbs\" in the title show the name of the main form, then the name of the Repeatable Section you are currently in.The form building tab says Repeatable Section Builder.The Return to Main Form button at the top of the left navigation menu.The nested left navigation menu (showing the sections inside of your Repeatable Section).The Summary Table Designer at the top of the right panel. To exit the Repeatable Section, select Return to Main Form, or select anywhere outside of the Repeatable Section in the left navigation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Navigate into a Repeatable Section"
    }
  },
  {
    "content": "Add Questions to a Repeatable Section\n\nCreating, editing, and managing questions inside of your Repeatable Section is done on the right panel. All the interactions are identical to adding these items into your main form, except for the following restrictions. Pushing Information to Other Questions You can configure some question types to populate answers in other questions. This functionality has some restrictions in Repeatable Sections. Questions inside of a Repeatable Section can only push answers into other questions inside of the same Repeatable Section (including Repeatable Sections nested within the current one).Questions that are outside of the Repeatable Section, but come before it, can push information into questions that are in Repeatable Sections.When you use the Router Setup property, (Enterprise tier only) the following limitations apply:A source question in a regular section can’t route data to questions in a Repeatable Section, except for questions in the footer.A source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Add Questions to a Repeatable Section"
    }
  },
  {
    "content": "question in a Repeatable Section can only route data to target questions within the same Repeatable Section.A source question in a nested Repeatable Section can only route data to target questions within the same nested Repeatable Section.A question in the footer of a Repeatable Section can’t route data to any question in the form. Referencing Other Questions Many types of questions, like Calculations, String Concatenation, or filtering of Dropdown questions, use references to previous answers in the form. There are some restrictions around this functionality and Repeatable Sections. A question in a Repeatable Section can reference back to: Previous questions in the same Repeatable Section.Previous footer questions in the same Repeatable Section.Questions one level up (i.e., in the main form) that come before the Repeatable Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Add Questions to a Repeatable Section"
    }
  },
  {
    "content": "How Many Questions can I have in a Repeatable Section?\n\nThere is no specific limit, but keep in mind that questions in a Repeatable Section are listed on a single form page. Too many questions on one page are difficult for a user in the field to handle. If you have too many questions on ANY page in a form, you may begin to run into performance issues on a mobile device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "How Many Questions can I have in a Repeatable Section?"
    }
  },
  {
    "content": "Moving Sections and Questions\n\nSections and questions that are inside of a Repeatable Section can only be rearranged within the Repeatable Section; they cannot be moved outside of it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Moving Sections and Questions"
    }
  },
  {
    "content": "Example of Nested Repeatable Sections\n\nYou can nest Repeatable Sections inside a main Repeatable Section. Nested Repeatable Sections can help you to keep collected information organized. The following example shows the summary of a Campus Inspection form with two levels of nested Repeatable Sections. The main Repeatable Section is Building Inspection. The inspector can add as many buildings as needed.The first nested Repeatable Section is Floor inspection. The inspector can add as many floors in a building as needed.The second nested Repeatable Section is Room inspection. The inspector can add as many rooms on a floor as needed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Example of Nested Repeatable Sections"
    }
  },
  {
    "content": "Steps to Add a Nested Repeatable Section\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up.Select EDIT FORM.Result: The form opens in edit mode.Do you have a Repeatable Section configured?If yes, go to the next step.If no, add the main Repeatable Section.Select EDIT SUMMARY TABLE OR QUESTIONS.Result: The Repeatable Section opens in edit mode.Select ADD A SECTION, and then select Repeatable.Result: The system adds a Repeatable Section nested inside the main section. You can add questions to the nested Repeatable Section, or add additional sections Note:You can only add two levels of nested Repeatable Sections inside a main Repeatable Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Steps to Add a Nested Repeatable Section"
    }
  },
  {
    "content": "Next Steps\n\nOnce you have created the sections and questions you want, here are the next steps you can take. Read more: Building a Summary TableSet up Conditional Logic in a Repeatable SectionBuilding a Repeatable Section FooterConfigure Repeatable Section SettingsSet Up a Salesforce Repeatable Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/115005432366_BuildingRepeatableSections.html",
      "title": "Repeatable Sections: Building Repeatable Sections",
      "section": "Next Steps"
    }
  },
  {
    "content": "Scenario 1: Conditional Logic sets an entire Repeatable Section to Ignored/Not Ignored\n\nThis kind of logic is built at the main level of the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432426.html",
      "title": "Repeatable Sections: Conditional Logic",
      "section": "Scenario 1: Conditional Logic sets an entire Repeatable Section to Ignored/Not Ignored"
    }
  },
  {
    "content": "Scenario 2: The Conditional Logic affects Repeatable section entries\n\nA) ALL Repeatable section entries are affected in the same way For example, you have a question in the main form where the mobile user indicates if they are doing an install or a repair. If they choose \"Repair\", all the questions related to \"Install\" are made not visible in every Repeatable section entry. This kind of Conditional Logic is built inside of the Repeatable section. B) Each entry behaves differently, based on the answers in it For example, in each entry in a timesheet you could declare if you worked overtime hours or not. If you worked overtime in that entry, the \"Overtime Hours\" section needs to show up. It should not show up in any entries where you did not declare overtime. This kind of Conditional Logic is built inside of the Repeatable section. Create a Conditional Logic Rule in a Repeatable Section Enter the desired Repeatable section. Enter the Conditional Logic tab. Select Add a Rule in the left",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432426.html",
      "title": "Repeatable Sections: Conditional Logic",
      "section": "Scenario 2: The Conditional Logic affects Repeatable section entries"
    }
  },
  {
    "content": "navigation. Configure the Conditional Logic rule. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432426.html",
      "title": "Repeatable Sections: Conditional Logic",
      "section": "Scenario 2: The Conditional Logic affects Repeatable section entries"
    }
  },
  {
    "content": "Restrictions on Conditional Logic inside of a Repeatable Section\n\nIF Statements The reference question can be... A question that comes before the current repeatable section in the main form (or in a parent repeatable section) A question that exists within the current repeatable section A footer question that is visible in the current repeatable section THEN and ELSE Statements The action target can be... A question or section in the current Repeatable section, as long as it appears after everything in the \"IF\" Viewing Repeatable Section Conditional Logic from the Web Portal Navigate to the desired form, and select the Pages and Questions tab. Scroll down to find your Repeatable section.Hint: It will have the label \"Repeatable\" on it. In the following example, the icon next to Logic Element and the grayed out statements denote an inactive rule.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432426.html",
      "title": "Repeatable Sections: Conditional Logic",
      "section": "Restrictions on Conditional Logic inside of a Repeatable Section"
    }
  },
  {
    "content": "About\n\nRepeatable Sections allow mobile users to provide multiple entries for the same set of questions—like line items on an invoice, parts or labor on a work order, or time entries on a timesheet. Once mobile users have added entries to a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., the entries are summarized in a table view in the main form in the Mobile App. This is called the \"Summary Table.\" Every Repeatable Section has one, and its purpose is to give mobile users a summary of the work they have completed. Info:The topic Repeatable Sections on the Mobile App describes the field user experience in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "About"
    }
  },
  {
    "content": "Video demo of a Repeatable Section Summary Table\n\nIn this video, you’ll learn about how Repeatable Sections and Summary Tables help you to: Handle the complexity of work in the field. Manage large amounts of data collected in the field. Assess the field situation at-a-glance. The video describes row-level features such as Custom Column Setup, Inline Editing, and how to set them up in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Video demo of a Repeatable Section Summary Table"
    }
  },
  {
    "content": "Inline editing\n\nYou can set up a Summary Table with inline editing to make it simpler for users to edit answers. When a field user taps the edit icon, only the selected question opens, not the whole subform. Inline editing works in both the Compact The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. and Full The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. views. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Inline editing"
    }
  },
  {
    "content": "Supported question types\n\nInline editing is available for the following question types: Button Group Geo Location Multiselect No more than nine options Manually-defined options only (not Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.) Radio Button No more than nine options Manually-defined options only (not Data Sources) Single Checkbox Slider Text Field",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Supported question types"
    }
  },
  {
    "content": "Display Value or Answer Text\n\nYou can set Button Group questions to show the Display Value, and Text Field questions to show the Answer Text. Users can still edit the question inline without opening the subform, but they edit the question in a separate window. The following example shows how inline editing works when a Button Group question is set to the Display Value.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Display Value or Answer Text"
    }
  },
  {
    "content": "Control\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise Users on the Enterprise tier can edit Button Group and Text Field questions directly in the Summary Table. To set these up, select Control as the Answer value to display. The following example shows how inline editing works when questions are set to Control. Your browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Control"
    }
  },
  {
    "content": "Enterprise tier options\n\nUsers on the Enterprise tier can further customize the display of Summary Tables in the Mobile App. The following image shows the display options available.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Enterprise tier options"
    }
  },
  {
    "content": "Wrap rows to new line\n\nOn a small screen, when a long row wraps to a new line, users can see all of the information without scrolling. This setting applies only to the compact view The term \"compact view\" refers to a Summary Table in a Repeatable Section. The compact view displays the Summary Table \"inline\" with the rest of the form. The \"full view\", by contrast, displays only the Summary Table. of the Summary Table. This example shows what the Summary Table looks like when a row wraps to a new line. The headers are displayed within each table cell.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Wrap rows to new line"
    }
  },
  {
    "content": "Hide headers\n\nChoose the option to hide headers on the Mobile App if: You want to simplify the display, especially on small screens. Field users don't need the headers to understand what’s in each table cell. Hiding the headers also applies when you set the compact view to Wrap rows.... This example shows the Summary Table with both the Wrap rows… and Hide headers options selected. This simplifies the on-screen display and saves space.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Hide headers"
    }
  },
  {
    "content": "Sort by column\n\nWith this option, users can sort all the rows in the Summary Table Full View The term \"full view\" refers to a Summary Table in a Repeatable Section. When a field user selects the \"View All\" option, the table opens in full view, and no other part of the form is visible. The \"compact view\", by contrast, displays the Summary Table \"inline\" with the rest of the form. based on a single column. If the contents of the column are numerical, the column is sorted in an ascending or descending order. If the contents are text-based, the column is sorted alphabetically. This example shows the Summary Table full view sorted by the Cost column in ascending (increasing) order. Info: Keep in mind that: Sorting only changes the row display order, not the actual row order in the subrecord. To change the actual order, users drag a row to move it. Field users can sort by values for specific data types: Barcode Currency Date Decimal Duration Email Free Text Integer Phone Number Time",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Sort by column"
    }
  },
  {
    "content": "Timestamp URL Yes No (for a Single Checkbox question)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Sort by column"
    }
  },
  {
    "content": "Filter by column\n\nWith this option, users can enter a filter to narrow down the number of rows displayed in the Summary Table Full View. If the row partially matches the filter, then the row is displayed. Users can add filters to multiple columns and further narrow down the data displayed. This example shows the Summary Table full view filtered by the Availability column. Only the rows with matching values are displayed. Tip:You can filter on more than one column to limit the results even more. Info:Keep in mind that:Filtering only hides rows from displaying in the Summary Table and does not remove them from the subrecord.Field users can use filtersfor these specific data types:BarcodeCurrencyDateDecimalDurationEmailFree TextIntegerPhone NumberTimeTimestampURLYes No (for a Single Checkbox question)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Filter by column"
    }
  },
  {
    "content": "Prerequisites:\n\nA Repeatable Section At least one question in it that is not an Information Label or Resource Image question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Prerequisites:"
    }
  },
  {
    "content": "Steps to add a column to the Summary Table\n\nNavigate to the Repeatable Section. Select Edit Summary Table or Questions. Result: The Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. displays the Repeatable Section main editing window. In the Summary Table area at the top, select Add a column. Choose the kind of column you want to add: If you want to create a column that displays an answer from the Repeatable Section, select the question from the list. Result: The Form Builder adds the column to the Summary Table. Optionally, you can Modify Column Settings to specify display options and make the column editable. If you want to set up a custom column to provide your field users with additional context, select Custom Column Setup (DREL Data Reference Expression",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Steps to add a column to the Summary Table"
    }
  },
  {
    "content": "Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.). Go to step 5. When you select Custom column (DREL), the Form Builder displays the configuration settings. Enter a name for the Column Header. Enter the Text Displayed in Cell. This can be a DREL expression, static text, or a combination of both. Info:The TrueContext Mobile App only accepts certain DREL expressions for custom Summary Table columns. The topic Overview: Repeatable Sections provides a list of supported DREL expressions for Repeatable Sections. Note: DREL in a custom column can only reference questions within the same Repeatable Section. DREL in a nested section can only reference questions within that nested section. Fields in a custom column are read-only, and you can’t configure them for inline editing. Set the column display properties. Select Save. Result: The Form Builder adds the custom column to the Summary Table.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Steps to add a column to the Summary Table"
    }
  },
  {
    "content": "Modify Column Settings\n\nSelect the pencil icon inside of the desired column. Result: The Edit Table Column window opens for the selected question. The following table describes each setting. Number Setting Description 1 Column Header Enter the text that you want to display as the column header in the Mobile App. The column header doesn’t have to match the question text. 2 Column display priority... Select a display priority for the column. Mobile devices can fit a different number of columns depending on their screen size. Priority determines which columns display on the device: Low priority columns hide first on smaller device screens. High priority columns stay visible even on smaller device screens. If a Summary Table has multiple High priority columns, smaller screens hide the rightmost columns. 3 Text Alignment Choose an alignment for the column text. For example, you may want numeric columns right-aligned and text columns left-aligned. 4 Minimum column width... Choose a minimum",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Modify Column Settings"
    }
  },
  {
    "content": "column width based on the column contents. For example, set a Text Area question column to Large since it may need more space to display the text properly. Device screens can display more Small columns at once than Large columns. 5 Answer value to display Show field users either the data Options-based questions have a display value and a data (server) value. The data value is the answer submitted to the TrueContext server. The Form Designer can choose whether the display and data values are the same or different. or display Options-based questions have a display value and a data (server) value. The display value is the answer shown in the Mobile App. The Form Designer can choose whether the display and data values are the same or different. value of an answer. This setting is available for the following options-based question types: Button Group Card List Dropdown Multiselect Radio Button (On the Enterprise tier, there’s also a Control option. This is useful for inline editing.) On the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Modify Column Settings"
    }
  },
  {
    "content": "Enterprise tier only, Text Field questions can display the Answer Text or the Control. These apply when you enable inline editing for the column. Tip:If you select the Display Value and your team has the Multi-Language add-on, the column shows the translated value on the device. 6 Column can be expanded... Select the checkbox to let the column expand to fill any empty space. For example, if the Summary Table has three columns, but the device can display 3.5, the column fills the extra space. 7 Allow users to edit answers... Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Select the checkbox to let Mobile App users edit their answers from the Summary Table without expanding the whole row. The following example shows what inline editing looks like on the device. In this example, a Button Group question is set to show the Display Value. The question opens for the user to edit. The inline editing option is available for the following question types: Button",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Modify Column Settings"
    }
  },
  {
    "content": "Group Geo Location Multiselect No more than nine options Manually-defined options only (not Data Sources) Radio Button No more than nine options Manually-defined options only (not Data Sources) Single Checkbox Slider Text Field Info:The section Inline editing includes more details about how inline editing works and how to set it up. On the Enterprise tier, you can set the Button Group to Control. The user edits directly in the table. Edit any of the column settings. Select Save to save your changes. Result: The system saves your changes and displays the Repeatable Section page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Modify Column Settings"
    }
  },
  {
    "content": "Remove a Column:\n\nSelect the pencil icon on the desired column to open the edit window. Select Remove Question from Table at the bottom of the pop-up. The column will be removed (the question it referenced will still exist in the Repeatable Section).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Remove a Column:"
    }
  },
  {
    "content": "Re-Order Columns:\n\nSelect and hold on the dotted \"move\" handle in the column header. Drag the column sideways to the appropriate spot in the table.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005432446SummaryTable.html",
      "title": "Repeatable Sections: Summary Table",
      "section": "Re-Order Columns:"
    }
  },
  {
    "content": "Repeatable Sections: Footer Available on all tiers: Essentials Advanced Enterprise About Add an Item to a Repeatable Section Footer About The footer of a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. displays summary information about the answers in a Repeatable section. It is typically used to aggregate numbers inside of a Repeatable section—to count a number of answers, to Sum a number of subtotals to create a total, etc.It is also a way to get answers out of a Repeatable section so that they can be referenced elsewhere or drive Conditional Logic (as answers inside of Repeatable sections cannot be referenced in any other way). For information on building repeatable sections: Building Repeatable Sections. Add an Item to a Repeatable Section Footer Find your Repeatable section in the Form, and press the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429503.html",
      "title": "Repeatable Sections: Footer"
    }
  },
  {
    "content": "Add Footer Item button underneath it. Choose your question type. The supported types are: Aggregation: Used to aggregate numeric questions within the repeatable section. Read more about this question type. Calculation: Used to perform mathematical operations on other items in the footer, or questions in the main level of the form. Cannot reference items in the Repeatable section. Read more about this question type. Text Field: Used to display other static information. Only numeric types are supported in the footer. Read more about this question type. Create the question, and it will be added to the footer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005429503.html",
      "title": "Repeatable Sections: Footer"
    }
  },
  {
    "content": "About\n\nThe repeatable sections settings screen gives you the ability to edit a number of your repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.'s properties, largely to do with restrictions on questions within. Any changes made will be saved to a new version of the form. For information on building repeatable sections: Building Repeatable Sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "About"
    }
  },
  {
    "content": "Repeatable Section Settings\n\nTo access the Settings, navigate to the appropriate repeatable section and select Settings from the top navigation bar:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Repeatable Section Settings"
    }
  },
  {
    "content": "Enforce a min and max number of entries\n\nThis setting allows you to ensure your users have at least one entry, or do not go over a certain number of entries. Toggling this setting on opens the Min and Max boxes. You may set a minimum and leave the maximum entries blank, or vice-versa. Setting a minimum number of entries can be used to make a section \"required\", for example.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Enforce a min and max number of entries"
    }
  },
  {
    "content": "Summary Table Display Properties (Enterprise Tier)\n\nUsers on the Enterprise tier can further customize the display of Summary Tables in the Mobile App. The following image shows the display options available. Info:The topic Repeatable Sections: Summary Table describes these settings in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Summary Table Display Properties (Enterprise Tier)"
    }
  },
  {
    "content": "Additional Restrictions\n\nThese restrictions are intended for forms where entries are created by dispatching or are populated from other questions. Read more about pushing data to other questions. These settings restrict actions by mobile users. Combine these options to restrict your mobile users from data entry errors. An example of this is if you want to prevent users from deleting entries if your repeat section is populated with a number of mandatory steps. Prevent users from adding entries: Users cannot add any new rows. Prevent users from editing entries: Users cannot edit any of the existing entries. Note:If you choose to prevent users from adding or editing entries, you can’t allow users to copy rows. Prevent users from deleting entries: Users cannot delete any existing entries. Prevent users from reordering entries (Enterprise tier only) : Users cannot move rows to change their order in the subrecord. Row Copy The Row Copy feature allows mobile users to duplicate a row in a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Additional Restrictions"
    }
  },
  {
    "content": "Repeatable Section. The user can edit the copied row without having to reenter data, which saves time and reduces errors. Note:When you copy an entry:Attachments are not copied.Date/Time Stamps and Geo Stamps are automatically set to new values.Hidden data is copied to the new row.Users must manually edit the copied row to avoid duplicating data. In the Form Builder, navigate to the Repeatable Section, and then select Edit Summary Table or Questions. Select the Settings tab. In the Row Copy section, select Allow users to copy all applicable answers…. Note:If you choose to prevent users from adding or editing entries, you can’t allow users to copy rows in the repeatable section. Select SAVE AND DEPLOY. Result: Mobile users can copy rows in the form’s Repeatable Section. When the mobile user copies a row, a duplicate row opens for them to edit and save. The row is added to the end of the table, and the user can drag and drop the row to reorder it. Info:Step 3 in the section Repeatable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Additional Restrictions"
    }
  },
  {
    "content": "Sections on the Mobile App describes how mobile users can perform this action.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Additional Restrictions"
    }
  },
  {
    "content": "Row Copy\n\nThe Row Copy feature allows mobile users to duplicate a row in a Repeatable Section. The user can edit the copied row without having to reenter data, which saves time and reduces errors. Note:When you copy an entry:Attachments are not copied.Date/Time Stamps and Geo Stamps are automatically set to new values.Hidden data is copied to the new row.Users must manually edit the copied row to avoid duplicating data. In the Form Builder, navigate to the Repeatable Section, and then select Edit Summary Table or Questions. Select the Settings tab. In the Row Copy section, select Allow users to copy all applicable answers…. Note:If you choose to prevent users from adding or editing entries, you can’t allow users to copy rows in the repeatable section. Select SAVE AND DEPLOY. Result: Mobile users can copy rows in the form’s Repeatable Section. When the mobile user copies a row, a duplicate row opens for them to edit and save. The row is added to the end of the table, and the user can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Row Copy"
    }
  },
  {
    "content": "drag and drop the row to reorder it. Info:Step 3 in the section Repeatable Sections on the Mobile App describes how mobile users can perform this action.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445123.html",
      "title": "Repeatable Sections: Settings",
      "section": "Row Copy"
    }
  },
  {
    "content": "Sample Inspection Form\n\nHow do Template Sections Work? Template-based sections are sections containing repeated question blocks based on a template. This makes it easy to quickly build and edit forms with a repeated structure. Most inspection forms are full of repeated questions and structures. An example is provided in Use Cases above. A Template is the pattern that the Template-Based Section follows. If multiple sections follow the same pattern, they can use the same template. For more information on templates, please read: Managing Templates. Question Blocks are the building blocks of template-based sections. Rather than adding questions to a section in the form builder, you add question blocks based on those in the Template. You can also use Conditional Logic to affect questions in a Question Block without having to configure multiple Conditional Logic rules: you can have hundreds of question blocks and only one Conditional Logic rule. For more details on how to build",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382323.html",
      "title": "Overview: Template-Based Sections",
      "section": "Sample Inspection Form"
    }
  },
  {
    "content": "Template-Based Sections, please read: Building Template-Based Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382323.html",
      "title": "Overview: Template-Based Sections",
      "section": "Sample Inspection Form"
    }
  },
  {
    "content": "Sample Inspection Form\n\nBuilding forms using Template-Based Sections just involves adding Question Blocks, which are copies of the questions and logic set up in a Template, with the opportunity to rename questions with unique text. In our sample inspection form, we have four repeated questions: Rating, Reason, Comments, and Picture. Therefore, we would first create a template with Template Questions containing: Rating: a Button Group question with the appropriate rating (Pass/Fail/N/A), listing what is to be inspected. Use Additional Comments to conditionally show a comments field on certain answers. Reason: A text box question. Picture: A Photo or Sketch Pad question. We can then add a Conditional Logic rule to: show or hide the Reason question depending on the answer to Rating. show or hide the Photo question depending on the answer to Rating. We can then duplicate these questions as question blocks throughout the form for each inspection item rather than having to build each",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382323.html",
      "title": "Overview: Template-Based Sections",
      "section": "Sample Inspection Form"
    }
  },
  {
    "content": "question separately. Now, imagine that you have to add another option to the Button Group question (such as N/A) -- you can go back to the template, make the change in one place, and all the blocks based on that template will be instantly updated.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382323.html",
      "title": "Overview: Template-Based Sections",
      "section": "Sample Inspection Form"
    }
  },
  {
    "content": "Question Blocks\n\nA Question Block is a group of questions that follows the format of the template. For example, if a template is made up of a button group, a text field, and a photo, a question block will consist of a button group, text field question, and a photo question. You can have as many copies of the same question block within the template-based section. To a mobile user, they are a series of questions inside a section. To add question blocks to the form: Select Add a Question Block inside the Template-Based Section. This will open the Question Block Editor: Unique Identifier for Question Block: Enter an identifier for this question block. It will become the prefix for the Unique IDs for each question inside the block. In our example above, if I entered \"Warehouse\" as the unique identifier, the questions would have labels of Warehouse_Clean, Warehouse_SurfacesFreeDustSpl, Warehouse_GlassAir, and so on. Question Text: If you have selected \"Unique text (defined per question",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001167446.html",
      "title": "Building Template-Based Sections",
      "section": "Question Blocks"
    }
  },
  {
    "content": "block\" in the Template, this is where you can set the unique question text. For more information, see Managing Templates: Adding Template Questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001167446.html",
      "title": "Building Template-Based Sections",
      "section": "Question Blocks"
    }
  },
  {
    "content": "Adding a Footer\n\nTemplate-based sections can have a footer, used to aggregate all the answers from a particular template question. For example, if you want to set up a weighted scoring for an inspection, using Questions 1, 3, and 5 multiplied by 2, then added to the total, you can use a calculation in the footer to do so. You can use the following kinds of questions in the footer: Text field (numeric) Aggregation: These questions are mostly used for getting a total score for the section and can only reference a numeric question within the template. It tallies all answers in all question blocks based on that template, i.e., if you have an Aggregation of an Inspection Score question, it will tally up all instances of that Inspection Score question. Calculation: These questions reference individual numeric questions and can be used to reference things before the template section, anything numeric in the template-based section, or anything numeric before it in the footer. This is most",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001167446.html",
      "title": "Building Template-Based Sections",
      "section": "Adding a Footer"
    }
  },
  {
    "content": "often used for weighted scoring. To add a Footer question: Ensure you are on the correct page in the form builder and select Add a Footer Item. Select the Question Type you wish to use. Set up the question as normal. Select Save.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001167446.html",
      "title": "Building Template-Based Sections",
      "section": "Adding a Footer"
    }
  },
  {
    "content": "Managing Templates About Create a Template Adding Template Questions Conditional Logic Settings Viewing Affected Sections Available on the Enterprise tier only: Essentials Advanced Enterprise About Templates are a form builder tool that allows you to quickly build and modify multiple copies of a similar set of questions. A Template is the pattern that a Template-Based Section follows. If multiple sections follow the same pattern, they can use the same template, including the Conditional Logic rules in the template. Without templates, you would have to individually create the questions and Conditional Logic rules, but with templates, you can create a single template and spawn as many copies of it as needed. Moreover, you can make an edit to the template and the edit will be reflected in the template-based sections -- no more having to edit each one individually. This article will discuss how to manage templates, including: how to create templates to create as many copies as needed, how",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382606.html",
      "title": "Managing Templates"
    }
  },
  {
    "content": "to create a single Conditional Logic rule to govern multiple template-based sections, how to see which sections are using a template, what happens when you edit or modify a template. Create a Template Creating a template is quick and easy. Make sure you're in the right form in the form builder, then: In the top navigation, select Templates. Select Add a Template from the left navigation pane. Give your new template a unique name, and optionally add a description, and Save. Select Edit Template. This will shift you into the Template Builder. To add questions to your template, select Add a Template Question. This will take you into the question editor. Adding Template Questions Questions in a template define the pattern of questions that will be used in Template-based sections. At least one question is required per Template. To add template questions: Once in the appropriate Template editor, select Add a Template Question. Select the appropriate Question Type. Under General properties,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382606.html",
      "title": "Managing Templates"
    }
  },
  {
    "content": "set: Question Text: Unique text (defined per question block): This will allow you to define unique question text when you add the Question Block to a Template-Based Section. This setting is usually selected for the first question in a Question Block, e.g., in an inspection form, this question would be defining what is being inspected.The same text for each question block (defined here): This will set static text for the question. This is most commonly used on questions where the question itself will not change. An example of this is in inspection forms where you have a \"Rating\" button group as a follow-up to a unique text box. If desired, set a Unique Identifier for the question. This will be part of the Unique ID for any Question Blocks based on the template. Conditional Logic You can use Conditional Logic to create effects within the template section, making a single rule that can be copied multiple times into the template-based sections. If you need to edit that rule, you only have",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382606.html",
      "title": "Managing Templates"
    }
  },
  {
    "content": "to do it once in the template -- no more having to edit every single instance of the Conditional Logic rule. All Conditional Logic in a template must be contained within that template. You cannot have a Conditional Logic rule in a template that affects something outside the template. An example of using Conditional Logic within a template is in an inspection form: If the user selects Pass on a question, do not show the Image question. If the user selects Fail on a question, show the Image Question and make it Required. For more information on Conditional Logic, please refer to our Conditional Logic documentation. Settings The Settings tab is where you can edit the template name and description. Viewing Affected Sections When Editing a Template, you can see the sections using that template in the left-side navigation pane:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000382606.html",
      "title": "Managing Templates"
    }
  },
  {
    "content": "Question Types\n\nThis section includes the following content: Question and Data Types in the Form BuilderQuestion Type: AggregationQuestion Type: Audio RecordingQuestion Type: Barcode ScannerQuestion Type: Button GroupQuestion Type: CalculationQuestion Type: Card ListQuestion Type: Date/Time Selector and StampQuestion Type: Digit ExtractionQuestion Type: Document EditorQuestion Type: Dropdown, Multiselect, and Radio ButtonQuestion Type: Duration Calculation and Duration MathQuestion Type: Duration FieldQuestion Type: File UploadQuestion Type: Geo LocationQuestion Type: Image and Sketch PadQuestion Type: Information LabelQuestion Type: RecapQuestion Type: Resource ImageQuestion Type: SignatureQuestion Type: Single CheckboxQuestion Type: Stepper and SliderQuestion Type: String ConcatenationQuestion Type: Text AreaQuestion Type: Text FieldQuestion Type: Time-Based Math",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/QuestionTypes.htm",
      "title": "Question Types",
      "section": "Question Types"
    }
  },
  {
    "content": "About\n\nForms are made of questions and answers. When adding questions, choose the right Question and Data Types to improve the usability of a form, and to control the data that will be collected. Question types describe what format a question is in. For example, a question where a user selects a single name from a list would likely use a dropdown question type. Data types describe what format the user answers a question in. For example, a user might need to have a name (Text) in one question, and a dollar amount (Currency) in another. This article will discuss question and data types and show which data types can be used with different questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "About"
    }
  },
  {
    "content": "Form Builder Question Views\n\nThe views and tabs shown when you add a question depend on the question type. Standard tabs include: General: Features the question’s general configuration and appearance. This includes: Question Text displayed on the device Customers on the Enterprise tier can choose to Hide question text on device. This saves space in a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. with an over-under or Multicolumn layout. Unique Identifier for Question used to reference the question in the form Data and Control Type to define how the question is displayed and how the field user enters information Restrictions, specifically, Required, Read only, Hidden on device, Hidden on reports, and Keep question width to 100% (questions in Side-by-Side sections only) Options: Used with certain question types to set question-specific",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Form Builder Question Views"
    }
  },
  {
    "content": "options (such as Button Group options). Properties: What properties are displayed depends on the question and data type chosen. Common ones might be: Validation Type Default Value Allowing certain actions based on the data type",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Form Builder Question Views"
    }
  },
  {
    "content": "Question Types\n\nThese icons are used to show what kind of question is being used in a form. They show up when you select Add a Question. Icon Description Icon Description Text Field: Capture text input in a single-line field. Text Area: Capture text from a multi-line field. Dropdown: Choose one option from a list. Button Group: Choose 1-5 options from a list. Radio Button: Choose one option from a short list. Multiselect: Choose multiple options from a list. Information Label: Show an informational message. Calculation: Calculate any number. Image: Capture or attach photos. Sketch Pad: Annotate on top of photos, diagrams, or a blank canvas. Signature: Capture a signature. Single Checkbox: A question with a single checkbox. Date/Time Selector: Select a date/time. Date/Time Stamp: Automatically collect a date/time. Geolocation: Capture your current location. Duration Field: Enter a time duration (hours, minutes, seconds). Stepper: Use + and - buttons to choose a number. Slider: Choose a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question Types"
    }
  },
  {
    "content": "number or range on a slider. String Concatenation: Build a string using answers and static text. Digit Extraction: Isolate numeric digits from mixed characters Duration Calculation: Calculate a duration based on other durations or numbers. Duration Math: Calculate the duration between two date or date/time entries. Time-Based Math: Calculate a date/time based on another date/time and a duration. Enterprise customers have additional options. Audio Recording: Capture an audio recording. Barcode: Scan a barcode with your device's camera. File Upload: Attach a file. Recap: Count the number of triggered Exceptions of a certain type within the form. This question type is available on the Advanced and Enterprise tiers only. Aggregation: Perform various calculations on Repeatable Sections entries. (Repeatable Section Footer only) Card List: Choose one option from a list of 2-10 media cards. This question type is available on the Advanced and Enterprise tiers only. Document Editor: Annotate PDF",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question Types"
    }
  },
  {
    "content": "documents. This question type is available on the Enterprise tier only.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question Types"
    }
  },
  {
    "content": "Data Types\n\nThese icons describe what kind of answers go into the question types. Data types determine the sort of data a question will be collecting. For example, different icons will show in the Form Builder if the question expects text, an image, or GPS coordinates from the mobile user. Integer: This is an integer (whole number) data type. Decimal: This is a numeric data type. You can set the number of decimal places. Currency: This is a numeric data type. Free Text: This is a data type that can contain alphanumeric characters. Email: This is a data type that checks if your mobile users have entered a valid example@email.com address. Date: This is a data type that uses a date selector to store answers as a Date value. Time: This is a data type that contains a Time value in standard UTF encoding. Date/Time: This is a data type that uses a standard UTF encoded date/time value. Duration: This is a data type that records a span of time. URL: This is a data type that contains an http://",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Data Types"
    }
  },
  {
    "content": "or https:// type URL. Phone Number: This is a data type that collects a phone number. Attachment: This data type covers all attachments: image files, file upload, and audio files. Document: This is a data type that enables you to annotate a PDF file. This data type is available on the Enterprise tier only. The data type affects the Properties tab of the question selection in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Data Types"
    }
  },
  {
    "content": "Question-Relevant Icon Display\n\nThe question and data type are shown on the right-hand side beneath the question text. Icons on the right-hand side show links to other questions or Conditional Logic, and any restrictions chosen for the question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question-Relevant Icon Display"
    }
  },
  {
    "content": "Question and Data Type Compatibility\n\nMost question types can use particular data types. This section has a list of each with their compatible data types, and what control types they can be changed to. Question Type Compatible Data Types Text Field Integer, decimal, currency, email, URL, Phone Number, Free Text Text Area Free Text Dropdown Integer, decimal, currency, email, URL, phone number, free text Button Group Integer, decimal, currency, email, URL, phone number free text Radiobutton Integer, decimal, currency, email, URL, phone number, free text Multiselect Integer, decimal, currency, email, URL, phone number, free text Card List Integer, decimal, currency, email, URL, phone number, free text Information N/A Single Checkbox Yes/No Image Image Sketch Image Document Editor Document Signature Image Audio Audio File File Upload File Attachment Date/Time Selector Time, Date, Date/Time Date/Time Stamp Date/Time Geo Location Geo Location Geo Stamp Geo Location Duration Field Duration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question and Data Type Compatibility"
    }
  },
  {
    "content": "Stepper Integer, Decimal, Currency Slider Integer, Decimal, Currency String Concatenation Free Text Digit Extraction Integer Calculation Integer, Decimal, Currency Duration Calculation Duration Duration Math Duration Time-Based Math Date/Time, Date (Enterprise tier only)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question and Data Type Compatibility"
    }
  },
  {
    "content": "Question Restrictions\n\nRestrictions control whether a question shows up for users, in reports, or whether it must be filled out to continue with the form submission process. These restrictions can interact with Conditional Logic to create workflow refinements. Available restrictions vary depending on the question and data type. Required: Required questions must be answered before proceeding to the next page of a form or submitting a form. If a user attempts to move to the next page or submit the form without answering a Required question, an error message will appear advising the user that there are unanswered Required questions. Read only: Read only questions cannot be edited on mobile devices. These fields usually either contain data filled out by an administrator in the case of a dispatched form or are auto-populated/prefilled based on selections made earlier in the form. Hidden on device: Hidden on device questions cannot be seen by mobile users. These questions may contain",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question Restrictions"
    }
  },
  {
    "content": "sensitive information, or data used by questions later in the form. Hidden on reports: Hidden on reports questions are not kept on completed documents and are not saved. Keep question width to 100%: Keep question width... questions in a Side-by-Side Section override the section’s question-answer ratio. These questions fill the whole width of the page instead of the Side-by-Side Section two-column layout. These icons will show up to the right side in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008467648.html",
      "title": "Question and Data Types in the Form Builder",
      "section": "Question Restrictions"
    }
  },
  {
    "content": "About\n\nAggregation questions are only used in the footer of a repeatable section. They are similar to a calculation: they are used to \"aggregate\" all the answers to a single question inside a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. For example, they may add up all the hours in a timesheet or add up all the \"line amounts\" to provide a total dollar amount for an invoice. For more information on repeatable sections, please read our documentation: Overview: Repeatable Sections. An example of three different Aggregation questions on an iOS device is shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, Aggregation questions appear as shown below: The Question Edit screen for the Aggregation question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Data Types Data Types are the kind of information used in the question. Setting a data type for the aggregation question ensures that the entered data can be used elsewhere in your business process, whether that's by other questions in the form, or in a data destination. The Aggregation question type supports the following data types: Integer Decimal Currency Duration Aggregation ✓ ✓ ✓ ✓ Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "General"
    }
  },
  {
    "content": "following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Aggregation ✘* ✓* ✓ ✓ * Aggregations are Read-Only by default, as the mobile user cannot interact with them. The question is also always answered (\"0\" is an answer), the question cannot be set to Required.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Aggregation questions allow you to select the aggregation type and set the question it pulls from. Aggregation Type The aggregation type sets up different kinds of processing or calculations based on all the answers to your source question inside the repeatable section entries. Sum: Add all of the answers to your source question together to arrive at a total value across all repeatable section entries. This is the most common aggregation type and is often used for things such as subtotals and hours-worked. In our example below, the Part Total is a sum aggregation of the Subtotal entries. Count: Count the number of times the source question is answered across repeatable section entries. For example, if the repeatable section has 12 entries, but the source question was only answered in 10 of them, the Count aggregation will output '10'. In our example below, the Count Test is a count aggregation. Average: Adds all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "Properties"
    }
  },
  {
    "content": "the answered questions to your source question up and then divides them by the number of answered questions to create an average value. In our example below, the Average Test is the average of the Subtotal. Note: rows without a value in the answered question will not be added to the average. Minimum Value: Displays the lowest value answer to your source question from all the repeatable section entries. In our example below, the Minimum Value Test is based on the Quantity column. Maximum Value: Displays the highest value answer in your source question from all the repeatable section entries. In our example below, the Maximum Value Test is based on the Quantity column. Standard Deviation: Quantifies the amount of variance or deviation within all entries in your source question, and outputs it as a number. In our example below, the Standard Deviation Test is a standard deviation aggregation based on the Subtotal entries. Note: rows without a value in the answered question will not be used",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "Properties"
    }
  },
  {
    "content": "in this calculation. Source Question Aggregations use information from a source question to perform different actions (based on the aggregation type). For example, if you want to know the average cost of parts within a repeatable section, you will select the \"Parts Subtotal\" question as the source question and set the aggregation type to Average. This would take all answers to the \"Parts Subtotal\" within the repeatable section, add them all together, and then divide by the number of answers to create an average price. Please note: the source question must be within:the repeatable section, ora footer item in a nested repeat. the data type you set for the aggregation should match the data type of the source question. Data Type Properties Some question properties change depending on the data type of the question. Integer/Decimal/Currency Duration Allowable Range (Min/Max) Decimal Place Precision (Decimal Data Type) Currency Precision (Hours, Hours & Minutes, etc.) Min/Max Value",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021786952.html",
      "title": "Question Type: Aggregation",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nThe Audio Recording question allows mobile users to make an audio recording in the TrueContext Mobile App and embed it in a form submission. Users can pause, re-record, and edit the recording. The Audio Recording question has a variety of uses. It allows users to collect data quickly and hands-free, such as during a site inspection/walk-through, or where multiple people must provide information in a single question. For users that require hands-free text collection, TrueContext also supports Voice to Text Functionality. The Audio Recording question type creates a file attachment using the default for the mobile user's device. iOS: MP4 macOS: MP4 Android: 3GP, MP3 (varies by manufacturer / Android version). Windows: Not Supported An example of an Audio Recording on an iOS device is shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Audio Recording question appears as shown below: The Question Edit screen for the Audio Recording question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "General"
    }
  },
  {
    "content": "a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Audio Recording ✓ ✓ ✓ ✓ ✓*",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nThe Audio Recording question type is simple to set up, with only one potential property setting. It uses the Attachment Data Type. Enforce audio quality (override device settings): If a form contains multiple attachment types (audio, images, signatures, etc.), it is recommended that this option be enabled. Set the quality to either medium or low to keep the submission size low. Low quality works well in most cases. Higher quality will create a larger attachment and larger form submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "Help Options"
    }
  },
  {
    "content": "Using the Audio Control\n\nTo record audio: To launch an audio recording, select Record Audio, or tap the microphone icon. Select Start Recording or the Record button to begin recording audio. Select Stop Recording or the Stop button when finished. Note:After you select Stop Recording on Android, you cannot continue recording. To record further, you must delete their initial entry to record further information or use an additional Audio Recording question, if present. To review or trim a recording: Select Open Recording, or simply tap on the Audio Recording question. Use the sliders to adjust the start and end time of your recording and select Trim. Replay the audio to ensure you have the necessary information. Select Done (iOS) or the Save icon (Android) at the top right corner. To delete a recording: (iOS) Tap on the recording and select Delete from the bottom navigation pane. (Android) In the main form, tap the X mark to the right of the question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022355032.html",
      "title": "Question Type: Audio Recording",
      "section": "Using the Audio Control"
    }
  },
  {
    "content": "About\n\nBarcode Scanner questions allow the user to scan a barcode with the device's camera. This feature is supported on most, but not all, devices that have a fairly high resolution camera with auto-focus. If the camera on a mobile device does not have auto-focus capability, it is still possible to capture and decode barcodes; however, the user must manually place the camera and/or barcode so that is in focus. TrueContext also supports the Zebra Android Barcode Scanner. The following example shows a Barcode Scanner question on an iOS device:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Barcode Scanner question looks like this: The Question Edit screen for the Barcode Scanner question type has three tabs: General, Properties, and Help Options (Advanced and Enterprise tiers only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. A Unique ID can either be auto-generated based on the question text, or customized. Tip:You can set either front- or rear-facing camera as the default for reading barcodes. This is especially useful when scanning barcodes on wall-mounted devices. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "General"
    }
  },
  {
    "content": "always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Barcode Scanner ✓ ✓ ✓ ✓ ✓",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. The Barcode Scanner question type has simple properties, allowing you to specify which kind of barcode will be scanned. You can also apply the Router Setup property to parse and route data to subsequent questions. Question Properties Where possible, specify the desired type of barcode in the Properties tab to aid the speed of barcode recognition. Barcode Standards supported by TrueContext are: UPC (A or E): Universal product code seen on almost all retail products in the USA and Canada. EAN (8 or 13): European Article Numbering international retail product code. Code 39: General-purpose code in very wide use world-wide. Code 128: Very capable code, excellent density, high reliability; in very wide use world-wide. QR Code: Used for material control and order confirmation. ITF: Interleaved 2 of 5 - Compact numeric code, widely used in industry, air cargo. The following types of barcodes are supported but might be",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "Properties"
    }
  },
  {
    "content": "difficult to scan on older devices: PDF 417: Stacked linear barcode format that can be used for postage or boarding passes, for example. Data Matrix: Encodes both text and numeric data, often used for labeling small items. Note:Other types of barcodes might work, depending on the device hardware capabilities. Test on your target devices before you deploy the form. Router Setup Available on the Enterprise tier only: Essentials Advanced Enterprise The Router Setup property is a question property available for Text Field, Text Area, File Upload, and Barcode Scanner question types. You can use the Router Setup to parse (subdivide) long strings of data captured by a question—such as from a barcode scan—into smaller substrings. You can then push the substrings to subsequent questions in your form. You can use the Router Setup property to route data from Barcode Scanner questions (source questions) to the supported target question types.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding “Help” content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. Info:The topic Add Help Options to Questions describes help options in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360024981372_BarcodeScanner.html",
      "title": "Question Type: Barcode Scanner",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nThe Button Group question type allows a mobile user to choose an answer from one to five color-coded buttons, providing easy visual feedback. Button Group questions are often used in inspection forms to show a Yes/No/Not Applicable question, and can collect additional comments when specified answers are selected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., a Button Group question displays as shown in the following image: The Button Group question type has four tabs: General, Options, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This topic describes each of these tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is used to reference the question in Conditional Logic, DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions, Destinations, and Documents. You can customize the Unique ID or let the system generate an ID based on the question text. Info:The topic Overview: Unique IDs describes how to use Unique IDs in more detail. Data Types Data types describe the format in which a user answers a question. For example, a user might select a name (Text) in one question, and a dollar amount (Currency) in another. A data type also supports validation. The Button Group question type supports the following data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "General"
    }
  },
  {
    "content": "types: Free Text Email URL Phone Number Integer Decimal Currency Button Group ✓ ✓ ✓ ✓ ✓ ✓ ✓ Choose a data type that matches the options in the question. Some data types allow you to use the data in other parts of the form, select where the form sends the data, or reference the data in Conditional Logic. Email: Use this data type to select an email address. If your form has an Email Data Destination, you can use this answer to identify the destination email. Integer, Decimal, and Currency: Use one of these numeric data types if the answer will be used in a calculation or aggregation later in the form. Tip:To calculate a score using Button Group questions, such as for an inspection form, use a numeric data type. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "General"
    }
  },
  {
    "content": "you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Button Group ✓ ✓ ✓ ✓ ✓",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "General"
    }
  },
  {
    "content": "Options\n\nThe Options tab is where you set up one to five answer choices. You can also select a display color for each option. Value submitted to server (required): This is the answer that will be sent to any Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. attached to the form if selected. These are validated depending on the selected data type for the question. This value is required. If the question has a numeric data type, the number must conform to the number data type. Text displayed on device: This is the answer visible to users in the form. This does not have to match the selected data type. If no display text is entered, buttons will be labeled with the Value. For example: A Numeric Button Question's display text can read “Excellent” while the value recorded is “10”. This is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Options"
    }
  },
  {
    "content": "useful for calculating average scores on text-based rating systems. Info:The topic Calculate a Score or Average Using Button Groups describes how to use Button Group questions in calculations in more detail. Tip:For any Documents that you link to the form, you can choose whether to show the display or server value.You can also use the DREL [display] property to reference the display value instead of the server value:%a[QuestionUniqueID][display] Info:If your team has the Multi-Language Forms add-on, you can translate the display value (but not the server value). When a field user selects a language, they see the translated display value.To show the translated display value in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table, edit the column settings and set the Answer value to display to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Options"
    }
  },
  {
    "content": "Display Value. Display color: Select from several pre-set colors or enter a hex code for custom colors.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Options"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Question Properties change depending on the data type chosen. Free Text Email/URL/Phone Number Integer/Decimal/Currency Validation Type: Validation checks that your users have entered information correctly. Default Value Allow mobile users to launch Email, Browser, SMS, or Phonecall to this entry Default Value Allowable Range (Min/Max) Decimal Place Precision (Decimal Data Type) Currency Default Value Answer Exceptions Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Answer Exceptions are used to categorize problems identified during the course of a field technician's work as the user completes a form. For example, if configured on an Inspection form, if a user selects \"No\" for an answer, an Exception could trigger that fails the entire inspection until problems are fixed. Info:The topic Configure Exceptions on individual questions describes how to set up Exceptions on individual",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Properties"
    }
  },
  {
    "content": "questions in more detail. Additional Comments Additional Comments are useful for when certain answers from a user require further information, like a comment or reason. On a Button Group question, the additional comment field shows up when a user selects a particular answer. For example, if the options are Yes, No, and N/A, a comment could be configured to appear on a \"No\" answer, requesting details. Info:The topic Additional Comments on Questions describes how additional comments work in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. Info:The topic Add Help Options to Questions describes how to set up help content in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020126172.html",
      "title": "Question Type: Button Group",
      "section": "Help Options"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Calculation question appears as shown below: The Question Edit screen for the Calculation question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Data Types Data Types are the kind of information your mobile users will be putting into these questions. Setting a data type forces users to enter the kind of information you want in the correct format. This also ensures that the entered data can be used elsewhere in your business process, whether that's by other questions in the form, or in a data destination. The Calculation question type supports the following data types: Integer Decimal Currency Calculation ✓ ✓ ✓ Restrictions Restrictions control how your mobile users interact with a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "General"
    }
  },
  {
    "content": "question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Calculation ✘* ✓* ✓ ✓ ✓ * Calculations are Read-Only by default, as the mobile user cannot interact with them. As the user cannot interact with the question, and the question is always answered (\"0\" is an answer), the question cannot be set to Required.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nCalculation Builder The calculation builder offers an easy, intuitive way to build your calculation questions. Calculation questions can only use information from numeric data type questions that come before it. It allows you to: Select appropriate, numeric data type questions from a dropdown. Filter questions based on text typed in the calculation field. Add constants to calculations by typing them in (press \"Enter\" to select them). View any errors as you work on the calculation, making it easy to correct. Set a Fallback/Default Value by clicking on the question in the calculation builder. This is the value that will be used if the question is not answered. The default setting is \"0\". If you are dividing by a question, the default value for the question should be set to \"1\" to avoid \"divide by zero\" errors. Data Type Properties Properties allow you to set up your question in various ways. Question Properties change depending on the data type chosen.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "Properties"
    }
  },
  {
    "content": "Integer/Decimal/Currency Allowable Range (Min/Max) Note: If the calculated value falls outside of the allowable range, the user will have to adjust the answers to the questions used in the calculation; they cannot edit the calculation's answer directly. Decimal Place Precision (Decimal Data Type) If the calculated answer has more decimal places than allowed, it will be rounded to an allowed number using banker's rounding.If it has fewer decimal places than allowed, .0's will be added Currency Answer Exceptions and Additional Comments As Calculation questions use Numeric Data Types, you will have the option to use Answer Exceptions and Additional Comments. Answer Exceptions Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Answer Exceptions are used to categorize problems identified during the course of a field technician's work as the user completes a form. For example, if the total cost of parts on an Estimate form is outside of a certain range, the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "Properties"
    }
  },
  {
    "content": "Calculation question can be highlighted to warn the user of a potential data entry error, or an excessive cost estimate. For more information on setting up Answer Exceptions, please read: Answer Exceptions Additional Comments Additional Comments are useful for when certain answers from a user require further information, like a comment or reason. Using the same example as above, if a user adds an excessive number of parts to an Estimate form, a comment could be useful to provide additional details on why that number of parts is necessary. For more information on configuring Additional Comments on questions, please read: Additional Comments on Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020921452.html",
      "title": "Question Type: Calculation",
      "section": "Help Options"
    }
  },
  {
    "content": "What is a Card List question?\n\nA Card List question contains between two and ten response options called Cards. Each Card contains a Resource Image resource, a brief description, and an associated server value. A technician can work more efficiently and accurately because they can compare the images to objects in front of them. When the technician submits the form, the system records the associated value as the answer to the Card List question. Tip:You can configure Conditional Logic rules with Card List questions to create a more dynamic workflow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "What is a Card List question?"
    }
  },
  {
    "content": "Example of a Card List question\n\nA technician might service multiple different smoke detector models during their shift. These smoke detectors have long serial numbers that look very similar to each other at a glance. Normally, the technician compares each unit’s serial number to the list on their form, which can be a slow and error-prone process. A Card List enables the technician to glance at an image instead of a serial number to find the correct unit. If two items look similar, then the technician can compare serial numbers from the Card description to select the correct unit. When the technician finds their answer to the Card List question, their selection is indicated by a blue outline and check mark. The technician can easily select another Card to change their answer before they submit the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Example of a Card List question"
    }
  },
  {
    "content": "When to use a Card List question\n\nA Card List behaves like a Button Group or Radio Button question combined with a Resource Image question. As with these options-based questions, a user can select only one response from the presented options. A Card List, however, provides a visual aid as the focus for each question option. The following table can help you decide if you need a Card List, Button Group, Radio Button, or Resource Image question: Question Type Number of Options/Attachments Visual Aid Type Card List Minimum: Two Maximum: Ten Card List options include both an image and text to help users quickly identify their selection. Tip:The server receives only the value of the submitted answer. This means that the linked Resource Images don’t contribute to the overall submission size limit. Button Group Minimum: One Maximum: Five You can apply a color to a Button Group response, but it only shows after the user selects it. Radio Button Minimum: One Maximum: No limit for manual lists",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "When to use a Card List question"
    }
  },
  {
    "content": "There is no visual aid—Radio Button answers contain only text. Resource Image Minimum: One Maximum: Ten Resource Image questions serve as read-only reference material for the user. Note:Forms have a limit on the number of Resource Image resources they can contain. The images in both Card List and Resource Image questions contribute to this limit. The Resource Image limitations are:10 images per question100 images per page100 images per form Create or edit a Card List question Prerequisites You must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Make sure that the images you want to use are already uploaded as Resource Images within your FormSpace. Info:The topic Resource Images",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "When to use a Card List question"
    }
  },
  {
    "content": "describes how to add and configure Resource Images. Steps to create or edit a Card List question Select the form you want to work on: Forms & Integrations > List Forms > FormName Select Edit Form. Result: The system opens the form in edit mode. Do you want to create a new Card List question? If yes, add a new question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. If no, select the existing Card List question you want to edit, and then go to step 5. On the Question Type page, select the Options-Based tab, and then select Card List from the list. Tip: To filter the list, start typing the name of the question type and then select an option. Result: The system displays the configuration page for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "When to use a Card List question"
    }
  },
  {
    "content": "the Card List question. Enter the Question Text and Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents., set the Data Type, and apply Restrictions. The following Data Types are available for Card List: Free Text Email Address URL Phone Number Integer Decimal Currency On the Options tab, configure the options fields: Value submitted to server: Enter the response that the server receives and displays after a user submits the form. This field has a maximum of forty characters. Tip:The server receives only the value of the submitted answer. This means that the linked Resource Images don’t contribute to the overall submission size limit. Text displayed on device (Optional): Enter a short description, such as a product name or code, for the user to see on the Card. This field has a maximum of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "When to use a Card List question"
    }
  },
  {
    "content": "forty characters. If you want to use the same text as the server value, leave this field blank. Tip:For any Documents that you link to the form, you can choose whether to show the display or server value.You can also use the DREL [display] property to reference the display value instead of the server value:%a[QuestionUniqueID][display] Info:If your team has the Multi-Language Forms add-on, you can translate the display value (but not the server value). When a field user selects a language, they see the translated display value.To show the translated display value in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table, edit the column settings and set the Answer value to display to Display Value. Image displayed on device: Select an image for the user to see on the Card. Images do not display on",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "When to use a Card List question"
    }
  },
  {
    "content": "the form submission details page or in documents. Note:The image file must be in your FormSpace Resource Images before you can select it. Repeat step 6 for up to ten options. Configure the question’s Properties (optional), including Answer Exceptions, Additional Comments, and Help Options. Select Save. Result: The system saves your changes to the new or edited question. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "When to use a Card List question"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Make sure that the images you want to use are already uploaded as Resource Images within your FormSpace. Info:The topic Resource Images describes how to add and configure Resource Images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to create or edit a Card List question\n\nSelect the form you want to work on: Forms & Integrations > List Forms > FormName Select Edit Form. Result: The system opens the form in edit mode. Do you want to create a new Card List question? If yes, add a new question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. If no, select the existing Card List question you want to edit, and then go to step 5. On the Question Type page, select the Options-Based tab, and then select Card List from the list. Tip: To filter the list, start typing the name of the question type and then select an option. Result: The system displays the configuration page for the Card List question. Enter the Question Text and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Steps to create or edit a Card List question"
    }
  },
  {
    "content": "Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents., set the Data Type, and apply Restrictions. The following Data Types are available for Card List: Free Text Email Address URL Phone Number Integer Decimal Currency On the Options tab, configure the options fields: Value submitted to server: Enter the response that the server receives and displays after a user submits the form. This field has a maximum of forty characters. Tip:The server receives only the value of the submitted answer. This means that the linked Resource Images don’t contribute to the overall submission size limit. Text displayed on device (Optional): Enter a short description, such as a product name or code, for the user to see on the Card. This field has a maximum of forty characters. If you want to use the same text as",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Steps to create or edit a Card List question"
    }
  },
  {
    "content": "the server value, leave this field blank. Tip:For any Documents that you link to the form, you can choose whether to show the display or server value.You can also use the DREL [display] property to reference the display value instead of the server value:%a[QuestionUniqueID][display] Info:If your team has the Multi-Language Forms add-on, you can translate the display value (but not the server value). When a field user selects a language, they see the translated display value.To show the translated display value in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Summary Table, edit the column settings and set the Answer value to display to Display Value. Image displayed on device: Select an image for the user to see on the Card. Images do not display on the form submission details page or in documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Steps to create or edit a Card List question"
    }
  },
  {
    "content": "Note:The image file must be in your FormSpace Resource Images before you can select it. Repeat step 6 for up to ten options. Configure the question’s Properties (optional), including Answer Exceptions, Additional Comments, and Help Options. Select Save. Result: The system saves your changes to the new or edited question. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Steps to create or edit a Card List question"
    }
  },
  {
    "content": "Translated Card List questions\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on If your company has the Multi-Language add-on, you can add translated resources to use in Multi-Language forms. If you have the same Resource Image in multiple languages, you can link the translations. When a field technician opens a Multi-Language form and selects a language, any images in Card List questions display in that language. If the field technician’s preferred language is unavailable, the images display in a primary language. A user with Can Create permissions selects the primary language when they set up the Resource Image. Info:The topic Resource Images: Set up multiple languages describes this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeCardList.htm",
      "title": "Question Type: Card List",
      "section": "Translated Card List questions"
    }
  },
  {
    "content": "Mobile App\n\nThe Date/Time stamp triggers when a mobile user opens the page the question is on. This is useful for recording the user’s progress through a form or for recording when a mobile user interacted with a page. The following image shows how the Date/Time Stamp displays on the Mobile App. With a Date/Time Selector question, mobile users manually select a date, time, or both. This is useful for recording dates or times in the past or future, such as license expiry dates or inspection times. The following image shows how the Date/Time Selector displays on the Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "Mobile App"
    }
  },
  {
    "content": "Form Builder\n\nThe following image shows how the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. displays the Date/Time Selector question. The following image shows how the Form Builder displays the Date/Time Stamp question. The Date/Time Selector question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). The Date/Time Stamp question type has only two tabs: General and Help Options (Advanced and Enterprise tiers only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is used to reference the question in Conditional Logic, DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions, Destinations, and Documents. You can customize the Unique ID or let the system generate an ID based on the question text. Info:The topic Overview: Unique IDs describes how to use Unique IDs in more detail. Data Types The Date/Time Selector and Date/Time Stamp support the following Data Types: Date Time Date/Time Date/Time Selector ✓ ✓ ✓ Date/Time Stamp ✘ ✘ ✓ Info:For questions that use the Date or Date/Time Data Types, TrueContext stores dates in the format yyyy-MM-dd. The Web",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "General"
    }
  },
  {
    "content": "Portal displays the date format based on the user profile language. You can use DREL to customize how the system formats dates sent to Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. and displayed in Documents. Restrictions Restrictions control how mobile users interact with a question. You can set restrictions on the question itself or manage restrictions with Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "General"
    }
  },
  {
    "content": "two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Date/Time Selector ✓ ✓ ✓ ✓ ✓ Date/Time Stamp ✘* ✓* ✓ ✓ ✓ * The Date/Time Stamp question cannot be Required because it records a date/time stamp without interaction from the mobile user. It is always Read-Only.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nThe Date/Time stamp does not have a Properties tab. However, the Date/Time Selector has two property settings: Range Validation—Ensure the mobile user selects a date in the past or future. For example, an incident report form expects the incident date to be in the past. Default Value Source—Save time by setting a default date/time value. This can be a static time, the time the mobile user opened the page, or the time they opened the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding “Help” content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a help icon next to a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. Info:The topic Add Help Options to Questions describes Help Content in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022594731.html",
      "title": "Question Type: Date/Time Selector and Stamp",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nDigit Extraction is used to pull numbers from mixed alphanumeric characters, phrases, or strings. Digit Extraction is often used to make unique invoice numbers by combining extracted numbers with other answers in a form. Use it to pull pieces of information out of longer strings, such as addresses or project numbers. To learn how to use Digit Extraction to create unique reference numbers, please read more here. An example of a Digit Extraction question is shown below on an iOS device:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Digit Extraction question type appears as shown below: The Question Edit screen for Digit Extraction has 3 tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "General"
    }
  },
  {
    "content": "a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Digit Extraction ✘* ✓* ✓ ✓ ✓ * This question type is Read-Only by default because the mobile user cannot directly edit the answer; all information comes from previous answers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. With Digit Extraction, the Properties tab is where you set up which questions you will be pulling information from, and how that data will be formatted or extracted. Our example below would pull the year, month, day, and time (in 12-hour format) from the Date/Time Question and combine it with the Site Contact Phone Number. For example, if the answer to the Date/Time question is: December 19, 2018, 5:27PM And the Site Contact Phone is: 4165550134 Then the answer to the Digit Extraction question would be: 2018121905274165550134 Each dropdown allows you to select an appropriate question to extract numeric digits from. The Extraction Pattern box allows you to set either a pattern of extraction, as in the case of Date/Time questions, or set a limit on the number of digits extracted. If extracting from a date/time question, set a date format string (e.g., yyMMddHHmmss) to extract that pattern from the source answer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "Properties"
    }
  },
  {
    "content": "Valid formats are listed in the Form Builder, as shown above.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021156451.html",
      "title": "Question Type: Digit Extraction",
      "section": "Help Options"
    }
  },
  {
    "content": "What is a Document Editor question?\n\nA Document Editor question uses Resource Documents that technicians can annotate. You can also allow technicians to upload PDFs from their device. In the TrueContext Mobile App, the technician can draw or type directly on the document page. In the Web Portal, on the Form Submissions page, you can download and view the annotated file from an attachment link. Info: You can add Resource Documents to the Resource Library. The Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. is a digital, searchable, multilanguage knowledge base that’s available to field technicians in the TrueContext Mobile App. A field technician can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "What is a Document Editor question?"
    }
  },
  {
    "content": "refer to a Resource Document in the Resource Library at any time, even if they’re not working on a form. However, library resources are view-only. You can’t annotate a document from the Resource Library.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "What is a Document Editor question?"
    }
  },
  {
    "content": "Example of a Document Editor question\n\nA contractor meets with a client for an on-site job evaluation and quote. The contractor opens their form to gather information about the job, such as cost estimates and additional client requests. With a Document Editor question, the contractor opens a PDF with a floor plan of the job site. They mark on the floor plan to show the client where new power sockets will be installed: The contractor saves their annotations and completes the rest of the form. If they need to make changes to the file, the contractor can open the PDF again with their previous notes intact. After the contractor submits the form, a TrueContext Admin user can view and download the annotated PDF file on the Form Submissions page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Example of a Document Editor question"
    }
  },
  {
    "content": "When to use a Document Editor question\n\nUse a Document Editor question when: You want technicians to annotate multiple pages in a single document. You need technicians to annotate multiple PDF files (up to three Resource Documents). Technicians have files on their local device to attach to the form and annotate. Your business back-end system requires an annotated PDF file.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "When to use a Document Editor question"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either a TrueContext Admin user, or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Make sure that the PDF files you want to use are already uploaded as Resource Documents within your FormSpace. Info:The topic Resource Documents describes how to add and configure Resource Document resources.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to create or edit a Document Editor question\n\nSelect the form you want to work on: Forms & Integrations > List Forms > FormName Select Edit Form. Result: The system opens the form in edit mode. Do you want to create a new Document Editor question? If yes, add a new question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. If no, select the existing Document Editor question you want to edit and then go to step 5. Select Document Editor from the list of question types. Tip: To filter the list, start typing the name of the question type and then select an option. Result: The system displays the configuration page for the Document Editor question. Enter the Question Text and Unique ID A Unique",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Steps to create or edit a Document Editor question"
    }
  },
  {
    "content": "ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents., and then apply Restrictions as needed. On the Properties tab, configure the question properties: Maximum Attachments: Select how many files a user can upload from their device, up to a maximum of ten files. Allow users to supply a PDF document from their device: (Optional) Select the checkbox to enable users to upload a PDF file from their device. Allow Users to Annotate Resource Documents: Switch on this property to select up to three unique Resource Documents to the question. Note:To save the question to your form, you must attach at least one Resource Document or enable users to upload files. Custom Filename Prefix: (Optional) Use DREL and static text to add a prefix to the submitted document’s filename. By default, the filename also contains the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Steps to create or edit a Document Editor question"
    }
  },
  {
    "content": "question Unique ID. (Optional) Configure the question’s Help Options. Select Save. Result: The system saves your changes to the new or edited question. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users. Translated Document Editor questions Available as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on If your company has the Multi-Language add-on, you can add translated resources to use in Multi-Language forms. If you have the same Resource Document in multiple languages, you can link the translations. When a field technician opens a Multi-Language form and selects a language, any documents in Document Editor questions display in that language. If the field technician’s preferred language is unavailable, the documents display in a default language. A user with Can Create permissions selects the primary language when they set up the Resource Document. Info:The topic Resource Documents: Set up multiple languages",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Steps to create or edit a Document Editor question"
    }
  },
  {
    "content": "describes how this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Steps to create or edit a Document Editor question"
    }
  },
  {
    "content": "Translated Document Editor questions\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on If your company has the Multi-Language add-on, you can add translated resources to use in Multi-Language forms. If you have the same Resource Document in multiple languages, you can link the translations. When a field technician opens a Multi-Language form and selects a language, any documents in Document Editor questions display in that language. If the field technician’s preferred language is unavailable, the documents display in a default language. A user with Can Create permissions selects the primary language when they set up the Resource Document. Info:The topic Resource Documents: Set up multiple languages describes how this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeDocumentEditor.htm",
      "title": "Question Type: Document Editor",
      "section": "Translated Document Editor questions"
    }
  },
  {
    "content": "What is an “options-based” question?\n\nAn options-based question is a question that displays a list of options as possible answers. The list can come from a Data Source, or you can manually define the list. We use the term lookup to describe a question that gets a list of options from a Data Source. The following examples show the same list of options displayed in a Dropdown, Radio Button, and Multiselect question. In a Dropdown question, a new view opens to display the options: Radio Button questions that have ten or fewer options are displayed in the main form (“inline”). Multiselect questions that have ten or fewer options are also displayed inline in the main form. Radio Button and Multiselect questions that have more than ten options open in a separate view, not inline.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "What is an “options-based” question?"
    }
  },
  {
    "content": "Data Source lookup\n\nWhen you set up an options-based question, you can choose to get the options from a Data Source. We call this a “lookup”. Lookups give you the ability to push information to other questions based on the field user’s selection. The following example shows how selecting the Site Contact name pushes information from the Data Source to later questions in the form. Info:You can set up filters to limit the options available from the Data Source.If your organization is on the Enterprise tier, you can also set up:A Multi-Column View to provide users with more information to help them select the right answer.Default Sort Options to organize the information displayed.If you have the Multi-Language add-on, you can set up a lookup question to display the options in the user’s selected language. The topic Data Source Translations describes in detail how to set up translations for a Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Data Source lookup"
    }
  },
  {
    "content": "Manually-defined\n\nIf you choose to Define Options Manually, you can enter a list of options to display. This works for short lists of options that don’t change, and when you don’t need to push answers to later questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Manually-defined"
    }
  },
  {
    "content": "When to use a lookup question\n\nLookup Lookup questions are options-based questions that \"look up\" the list of options from a Data Source. These include Dropdown, Radio Button, and Multiselect questions. questions, which reference a Data Source, help field users to enter information quickly and accurately. They can also improve data integrity by ensuring that answers match the values and data types stored in your system of record. Use a lookup question when you want to: Limit the answers available to a field user. Display information from a Data Source. Tip:You can set up a Data Source “fetch” schedule so that your field users have the most up-to-date answer options. Push information from a Data Source to later questions, based on the user’s selection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "When to use a lookup question"
    }
  },
  {
    "content": "Form Builder\n\nYou have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. A Dropdown question looks like this in the Form Builder: The Question Edit screen for these questions has four tabs: General, Options, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Data Types Data Types are the kind of information your mobile users will be putting into these questions. Setting a data type makes sure that you use the correct kind of information, in the right format. The data type can also influence whether the answer to a question can be used later in the form, or in the business process. These questions support the following data types: Free Text Email URL Phone Number Integer Decimal Currency Dropdown ✓ ✓ ✓ ✓ ✓ ✓ ✓ Radio Button ✓ ✓ ✓ ✓ ✓ ✓ ✓ Multiselect ✓ ✓ ✓ ✓ ✓ ✓ ✓ Note:Keep the following guidelines in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "General"
    }
  },
  {
    "content": "mind when you select the data type:Using Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.: Ensure the data in your selected Data Source column matches the data type. For example, if you choose an email data type and your Data Source contains an invalid email format, your mobile users won't be able to submit the form.Email: Use this data type if collecting an email address that you need to send an email to with an Email Data Destination.Integer, Decimal, and Currency: Use one of these data types if the answer needs to be used in a calculation or aggregation later in the form. Currency and Data Sources: When setting up a Data Source that uses currency—for example, a product list—don't add currency symbols (such as $",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "General"
    }
  },
  {
    "content": "or £). TrueContext marks that data as invalid as part of the Currency data type validation. This is particularly important when using a Data Source to push data to other questions based on the answer to a previous one. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Dropdown ✓ ✓ ✓ ✓ ✓ Radio Button ✓ ✓ ✓ ✓ ✓ Multiselect ✓ ✓ ✓ ✓ ✓",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "General"
    }
  },
  {
    "content": "Define Options Manually\n\nIf you select this option, you can define the possible answers to the question manually. This is good for short lists of options or lists that don’t change. The example below is of a Multiselect options list. Allow mobile user's username as an option: Adds the field user's username to the list. This option is only available if you selected the Free Text data type. Value submitted to server (required): This is the answer that’s sent to Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. attached to the form. The values must match the selected data type and validation settings. For example, for a question with an Integer data type, the value must be an integer. Text displayed on device: This is the answer displayed in the form, and the value does not have to match",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Define Options Manually"
    }
  },
  {
    "content": "the selected data type. If you don’t need to display a different value, keep the default setting Same as server value. For example, a question with an Integer data type can display the text “Excellent” in the form. When the field user submits the form, the Mobile App sends the value “10” to the server. This is useful for calculating average scores on text-based rating systems. Tip:For any Documents that you link to the form, you can choose whether to show the display or server value.You can also use the DREL [display] property to reference the display value instead of the server value:%a[QuestionUniqueID][display] Info:If your team has the Multi-Language Forms add-on, you can translate the display value (but not the server value). When a field user selects a language, they see the translated display value.To show the translated display value in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Define Options Manually"
    }
  },
  {
    "content": "field user can complete the same subform more than once, which creates multiple entries. Summary Table, edit the column settings and set the Answer value to display to Display Value. Collect a text response with an “Other” option: Allow your field users to add an answer that’s not predefined. The answers must match the question data type and validation settings. Unique Properties Data Types: Default Value When using the \"Define Options Manually\" option, you may set a default value. Answer Exceptions An Answer Exception is a form feature that displays color-coded feedback when a mobile user selects or enters an answer. Answer Exceptions typically show an inspection status (pass/fail) or prompt the user for additional information. Color-coding notifies the user of the Exception's severity. and Additional Comments If you have chosen to define your possible answers in the Options tab (as shown in the screenshot above) rather than using a Data Source, you will have the option to use Answer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Define Options Manually"
    }
  },
  {
    "content": "Exceptions and Additional Comments for Dropdown and Radio Button type questions. Answer Exceptions Answer Exceptions are used to categorize problems identified during the course of a field technician's work as the user completes a form. For example, if configured on an Inspection form, if a user selects a particular piece of equipment from a Radio Button list, TrueContext could show a warning containing information on what kind of protective equipment might be needed For more information on setting up Answer Exceptions, please read: Answer Exceptions. Additional Comments Additional Comments are useful for when certain answers from a user require further information, like a comment or reason. Using the same example as above, if a user selects a particular piece of equipment from a Radio Button list, TrueContext could request details on what Personal Protective Equipment the mobile user requires. For more information on configuring Additional Comments on questions, please read:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Define Options Manually"
    }
  },
  {
    "content": "Additional Comments on Questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Define Options Manually"
    }
  },
  {
    "content": "Use Data Source for Options\n\nLink your question to a Data Source to populate your list of options. This is useful when a form contains long lists of options such as: Parts lists Customer lists Lists that change frequently and can be automatically synced from your cloud or back-office system Lists that are shared across multiple forms For more information on Data Sources, please read: Data Sources Overview. To illustrate the use of Data Sources, we'll use a simple parts list in Excel. In the Form Builder, you set up the column to use as the answer and the column to display on the device. Column value displayed on device: This is the information that will be shown on your field users’ devices. In this example, field users select a Part Name, which makes it easier for them to choose the correct answer. Column value submitted to server: This is the information that the system saves as the answer and sends to your Data Destinations and Documents. The value doesn’t have to match the Column",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Use Data Source for Options"
    }
  },
  {
    "content": "value displayed on device. In this example, we display the Part Name for the user to select and send the Part ID to the back-office system. This improves the accuracy of answer selection and supports inventory tracking in the back-office system. Hide duplicate rows in dropdown: If your Data Source contains duplicate display column entries (Column value displayed on device), selecting this option hides the duplicates. Note:If you want to use a Multi-Column View to display the list of options, we recommend that you do not hide duplicate rows. There might be duplicate values in one column, but different values in other columns. Advanced Data Source Features Multi-Language Options (Multi-Language add-on only): Enable this option to display a list of translated options. Info:The topic Data Source Translations describes in detail how to set up translations for a Data Source. Multi-Column View A Multi-Column View is an Enterprise-tier display option for options-based questions that reference",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Use Data Source for Options"
    }
  },
  {
    "content": "a Data Source. The Multi-Column view displays more than one column from the Data Source to help users select the right answer. (Enterprise-tier only): A Multi-Column View is a way to display options-based questions that reference a Data Source (“lookup” questions). To help users select the right answer, the Multi-Column view displays more than one column from the Data Source. The topic What is a Multi-Column View? provides more details. Default Sort Options (Enterprise-tier only): Default Sort Options are columns and sort types that you set up to “pre-sort” the information displayed to your field users. The topic What are Default Sort Options? provides more details. Filter Options: Enabling this option filters the list of choices based either on who the user is or based on previous answers in the form. For more information on filtering Data Sources, please read: Filter a List of Options in a Lookup Question. Use Location-Based Features: Enabling this option allows you to sort location",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Use Data Source for Options"
    }
  },
  {
    "content": "data based on the mobile user's location and plot the Data Source rows on a map. For more information on location-based filtering, please read: Display a Map View for Lookup Questions. Push Data to Other Questions: This allows you to fill out other questions based on the answers to this dropdown. For more information, please read: Pushing Data to Other Questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Use Data Source for Options"
    }
  },
  {
    "content": "Common Properties\n\nProperties allow you to set up your question in various ways. Question Properties are affected by two things: the data type chosen the use of Defined Here options, or Data Source Options The common properties are based on the data type, as shown below: Free Text Email/URL/Phone Number Integer/Decimal/Currency Validation Type: Validation checks that your users have entered information correctly. Keyboard Type: Lets you define what keyboard your mobile users encounter. Allow mobile users to launch Email, Browser, SMS, or Phone call to this entry Allowable Range (Min/Max) Decimal Place Precision (Decimal Data Type) Currency Note:Don’t use validation with options-based questions that reference a Data Source. If there’s a validation error because there’s an error in the Data Source, mobile users can’t continue their work in the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Common Properties"
    }
  },
  {
    "content": "Help Options\n\nAdding “Help” content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001421923.html",
      "title": "Question Type: Dropdown, Multiselect, and Radio Button",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nDuration Calculations and Duration Math produce a Duration value based on the values of other answers. They are often used in timesheets or work orders to calculate time worked, or to estimate the amount of work needed. The Duration Math specifically calculates the duration between two date or date/time entries. The Duration Calculation is more flexible—it calculates a duration based on other duration questions or numbers. Both of these question types appear on a mobile device as a simple read-only duration question and will automatically update based on the answers to the source questions. A sample is shown below on an iOS device: If you need to display a date or time, use Date/Time Based Math.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Duration Math and Duration Calculation question types appear as shown below: The Question Edit screen for these question types has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Data Types Data Types control what kind of information can be considered an answer to the question. The Duration Calculation and Duration Math question types only accept one Data Type: Duration. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "General"
    }
  },
  {
    "content": "a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Duration Calculation ✘* ✓* ✓ ✓ ✓ Duration Math ✘* ✓* ✓ ✓ ✓ * The Duration Calculation and Duration Math question types cannot be made Required because they automatically take information from other questions without interaction from the mobile user. It is Read-Only by default for the same reason.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Duration Precision: Determines what unit of measurement is used (Hours, Hours and Minutes, Minutes, Minutes and Seconds, Seconds) Min/Max Value: Set a value beyond which the form cannot be submitted. Duration Calculation The Duration Calculation uses the Calculation Builder, enabling form designers to build calculations using questions with numeric data types that come before it in the form. Tip:If you don’t specify a Min Value, the minimum value defaults to 0 to ensure that the result is a positive number. Note: The calculation works with any questions that use an Integer or Duration data type. Make sure that the questions you select make sense for the result you want. If you want to calculate values other than a duration, use a Calculation question. Duration Math Duration Math questions require two previous Date or Date/Time questions to calculate the duration between them. Select the Start Date or Date/Time",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "Properties"
    }
  },
  {
    "content": "question, and then select the end Date or Date/Time question. Note: The Start and End questions must both use the same Data Type, either Date or Date/Time. Select a Precision unit that fits the situation in the field. For example, if a field user enters the start and end times of their work, use the Hours and Minutes unit, not Seconds.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023266131.html",
      "title": "Question Type: Duration Calculation and Duration Math",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nDuration fields describe a measure of time. For example, a timesheet would use a duration field to record the number of hours an employee has worked. A sample is shown below on an iOS device:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360025328271.html",
      "title": "Question Type: Duration Field",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Duration Field question type appears as shown below: The Question Edit screen for this question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360025328271.html",
      "title": "Question Type: Duration Field",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Data Types Data Types control what kind of information can be considered an answer to the question. The Duration Field question type only accepts one Data Type: Duration. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360025328271.html",
      "title": "Question Type: Duration Field",
      "section": "General"
    }
  },
  {
    "content": "always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Duration Field ✓ ✓ ✓ ✓ ✓",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360025328271.html",
      "title": "Question Type: Duration Field",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. As the Duration Field uses only one data type, its Properties are limited: Duration Precision: Determines what unit of measurement is used (Hours, Hours and Minutes, Minutes, Minutes and Seconds, Seconds) Min/Max Value: Set a value beyond which the form cannot be submitted. Default Value: Set a value that will show up as the initial answer to a question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360025328271.html",
      "title": "Question Type: Duration Field",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360025328271.html",
      "title": "Question Type: Duration Field",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nThe File Upload question type enables a mobile user to attach files currently saved on their mobile device to a form. TrueContext includes the uploaded files with the form submission, and you can view and download the files in the Web Portal. Info: You can set up your Data Destinations to send uploaded files as separate attachments. This is useful when you want to attach the files to an email or store them in a SharePoint document library, for example. You can also use File Upload Questions in Customer Feedback Forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "About"
    }
  },
  {
    "content": "Supported file types\n\nUsers can upload any type of file. Note:If your security policy doesn't allow this, do not add File Upload type questions to your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "Supported file types"
    }
  },
  {
    "content": "Access to uploaded files\n\nIn your Document settings, you can choose to display a secure link to the uploaded files. When a user selects the link, they are prompted to sign in to the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. to view or download the files. Note:Once a field user uploads a file, they can’t open that file in the Mobile App when:The form is open and in progress.The user views a submitted form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "Access to uploaded files"
    }
  },
  {
    "content": "File Upload questions in the Form Builder\n\nIn the Form Builder, a File Upload question looks like this: When you add or edit a File Upload question, the Form Builder displays the General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only) tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "File Upload questions in the Form Builder"
    }
  },
  {
    "content": "General\n\nQuestion Text This is the text displayed on the Mobile App to give the user instructions or ask questions. You can use question text formatting to improve readability and highlight important information. Unique Identifier The Unique Identifier (ID) is the reference for the question. You can let the Form Builder auto-generate a Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. based on the question text, or you can enter a specific Unique ID. Restrictions Restrictions control how your mobile users interact with a question. You can set restrictions on the question itself, or control this behavior by applying Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "General"
    }
  },
  {
    "content": "restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) File Upload ✓ ✓ ✓ ✓ ✓*",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Properties depend on the Data Type. File Upload questions use the Attachment Data Type, which supports the following Properties: Maximum Attachments Custom Filename Prefix Router Setup (Enterprise tier only) Info:You can only route data from one structured or unstructured text file. To enable the Router Setup property, set Maximum Attachments to 1.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding “Help” options to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "Help Options"
    }
  },
  {
    "content": "Dispatch\n\nDispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Destination Single or Bulk Dispatch from the Web Portal REST API Dispatch ✓ ✓ ✓ Dispatch Files Dispatch Forms to a User Dispatch Forms Info:The topic Dispatching Methods describes the different options in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "Dispatch"
    }
  },
  {
    "content": "File names for File Upload questions\n\nOnce a record with uploaded files is dispatched or submitted, the server generates new file names. Users don't see the names of the original uploaded or dispatched files. This applies to generated output documents—such as standard PDF, Word, or HTML—and documents dispatched to File Upload questions Note:Within the mobile app, attachments display their original filenames to provide clearer identification and better organization of uploaded files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "File names for File Upload questions"
    }
  },
  {
    "content": "File names in generated output documents\n\nYou can show file names as text and as clickable links in a PDF, Word, or HTML output document. The text and links display the server-generated file names, not the original file names. The server-generated file names include a custom prefix (if defined) and the question unique ID. Tip:The custom prefix-unique ID combination makes it easier to associate files with specific questions in the form. For example, if the question unique ID is documents: When you upload The output shows plumbing.docx documents_1.docx electrical.pdf documents_2.pdf",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "File names in generated output documents"
    }
  },
  {
    "content": "Step-by-step: Show attachment file names in a generated output document\n\nIf you want to show uploaded file names or create clickable links, you can easily set this up in your output document. In the output document settings, go to Formatting > Answer Format. Enable the Show photos, sketches… option. Result: The system displays more options. Select the Show attachment filenames… option. If you want to show clickable links, select the Include attachment hyperlinks… option. Only users who have access to submitted data in the Web Portal can follow clickable links. Info:The topic Standard layout options for PDF/Word/HTML documents describes how to set up an output document in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "Step-by-step: Show attachment file names in a generated output document"
    }
  },
  {
    "content": "File names in dispatched files\n\nFiles in Regular sections When you dispatch files to a File Upload question, the server generates a unique file name. Users see the server-generated name, not the original file name. On the Mobile App, the server-generated file names include a randomly-generated identifier, a custom prefix (if defined), and the question unique ID. This makes it easier to associate files with specific questions in the form. In the Web Portal and output documents, the server-generated name includes the custom prefix (if defined) and the question unique ID. Files in Repeatable sections If you dispatch files to questions in a Repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., the file names include the row number. The following example shows how a PDF output document displays the dispatched file",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "File names in dispatched files"
    }
  },
  {
    "content": "names.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021844992QuestionTypeFileUpload.html",
      "title": "Question Type: File Upload",
      "section": "File names in dispatched files"
    }
  },
  {
    "content": "About\n\nThe Geo Location question type takes location data and uses it in forms. It can be used as a: Selector (Location): Opens a map view on a mobile device and allows mobile users to select a location. This can also use dispatched coordinates. Users have the option to tap an icon to get driving directions in their default map/directions app on their mobile device. Stamp: Acquires the current location for use in forms. A stamp is collected whenever the page containing the stamp question is opened in the form. An example of a Geo Location question on a large-screen iOS device is shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Geo Location question appears as shown below: The Geo Location question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs in the following image.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Control Types The Geo Location question type supports two controls: Geo Stamp and Geo Location. Geo Stamp: When mobile users open the page containing the Geo Stamp question, the question collects a location. Users cannot edit the Geo Stamp question. If a user revisits the page after the Geo Stamp question has collected the location, the answer will not update. Geo Location: Geo Control allows users to acquire GPS coordinates on a map. It attempts to acquire location information when the user hits the Geo Location control map in the form. It can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "General"
    }
  },
  {
    "content": "also be used to open driving directions in the mobile device's default map app. Tips for Form Designers: Geo Stamps are best used to take a snapshot of where your mobile user is when they're filling out forms. It's useful, for example, to verify that an inspection was done at the inspection site. Geo Locations allow interaction from the user and can be dispatched to. Driving Directions: Use this control with a dispatched address and your mobile users can open driving directions directly from the TrueContext Mobile App. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100%",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "General"
    }
  },
  {
    "content": "(Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Geo Stamp ✘* ✓* ✓ ✓ ✓ Geo Location ✓ ✓ ✓ ✓ ✓ * Geo Stamp questions automatically collect location data. Users cannot interact with the answer, and therefore Geo Stamps are Read-Only by default. Required is disabled for Stamp because if location services are unavailable, this data cannot be found, which can interfere with data collection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nThe Geo Location question type has two property settings: Coordinate Format and Default Map View. Both settings control how the question displays location data on the TrueContext Mobile App. Coordinate Format Select the coordinate format the question should display to mobile users. To promote a consistent mobile user experience, set the format to what your company uses most often. Geo Location questions offer three coordinate format options: Coordinate format Example Decimal Degrees (DD) 45.3474, -75.9123 Degrees and Decimal Minutes (DDM) 45° 20.849' N, 75° 54.740' W Degrees, Minutes, and Seconds (DMS) 45° 20' 50.94\" N, 75° 54' 44.41\" W The coordinate format is set to Decimal Degrees by default. Select the format that is most familiar to your mobile users. Tip:Setting a coordinate format only affects how coordinates are displayed. Coordinates are always recorded as decimal degrees (DD) in submitted data. Default Map View The TrueContext Mobile App offers three map views in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Properties"
    }
  },
  {
    "content": "Geo Location questions: Standard view—Opens a standard road map. This is the default setting. Satellite view—Opens a satellite view of the area. Hybrid view—Opens a satellite view with map markers overlaid. Set the default map view based on the needs of your mobile users. For example, some mobile users prefer to choose a location based on landmarks and structures. These users might find it easier to select a location on a satellite map. Setting a default map view doesn’t hide the other options on the Mobile App. The mobile user can change the map view when they answer a Geo Location question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Help Options"
    }
  },
  {
    "content": "Driving Directions\n\nMobile users can use dispatched or selected Geo Location coordinates to launch driving directions from the TrueContext Mobile App. Simply tap the directions icon in the Map view once you've selected a location.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Driving Directions"
    }
  },
  {
    "content": "Location Services\n\nLocation Services must be enabled for TrueContext on your mobile device in order for a Geo Location to be collected. This is an OS-level setting. Note: The mobile device battery may discharge more quickly when Location Services is enabled. Read how to enable Location Services on your device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Location Services"
    }
  },
  {
    "content": "Location Accuracy and Working Indoors\n\nAs GPS technology only functions in areas where there is satellite visibility, most GPS devices do not work well indoors. On iPhone and Android devices, assisted GPS is used to determine location, using network information in addition to satellite data. Although less precise, these technologies can provide a location when indoors where a GPS signal is not available. Mobile users who work primarily outdoors are good candidates to use the Geo Location capability on any of the supported devices. Where some form of Geo Stamp/Control is still desired, although location precision is not as critical, the Android and iPhone Geo Location capability offer a network-based location that can usually be acquired indoors.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Location Accuracy and Working Indoors"
    }
  },
  {
    "content": "Location Fixes\n\nLocation fixes are split into two classifications depending on the accuracy: Fine and Coarse. This accuracy is determined by the system services used for the fix. GPS would be considered Fine, while Network would be considered Coarse. TrueContext stores the most recent location fine AND coarse location fix; whenever a new fix is returned, it replaces the previous fix for that accuracy. The logic to determine whether to grab the fine location fix or the coarse location fix is as follows: If a fine location fix was acquired within the last 5 minutes, use it. Otherwise, if only one of the fine or coarse location fixes are available and it is still considered valid (obtained within the last 5 minutes), use that. Finally, if both fine and coarse location fixes are available, grab the most recently obtained that is valid (within 5 minutes). Consequently, in areas of poor satellite visibility, the Geo Location information displayed in the form may be up to 5 minutes old. Note",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Location Fixes"
    }
  },
  {
    "content": "that the date/time collected with the Geo Location information will show the time the fix was acquired.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Location Fixes"
    }
  },
  {
    "content": "Dispatching into Geo Location Questions\n\nWhen dispatching into Geo Location data using Bulk Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API)., you must convert your addresses into latitude and longitude coordinates. If you need assistance doing this, third-party web-based tools may prove helpful. If dispatching via the Web Portal, simply enter an address and verify that it is correct on the map display:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021896371.html",
      "title": "Question Type: Geo Location",
      "section": "Dispatching into Geo Location Questions"
    }
  },
  {
    "content": "Mobile App\n\nInfo: If your company is on the Enterprise tier, you can add Resource Images to the Resource Library. The Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. is a digital, searchable, multilanguage knowledge base that’s available to field technicians in the TrueContext Mobile App. A field technician can refer to a Resource Image in the Resource Library at any time, even if they’re not working on a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Mobile App"
    }
  },
  {
    "content": "Image options\n\nTo answer an Image question, a mobile user can: Take a photo with the device camera. Choose a photo from the camera roll. Choose a photo from local files or a cloud service, such as OneDrive, Dropbox, or Google Drive.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Image options"
    }
  },
  {
    "content": "Sketch Pad options\n\nNote:The Sketch Pad question type supports PNG and JPG/JPEG files. To answer a Sketch Pad question, a mobile user can: Take a photo with the device camera to sketch on. Choose a photo from the camera roll to sketch on. Choose a photo from local files or a cloud service, such as OneDrive, Dropbox, or Google Drive. Choose a satellite map image to sketch on. Sketch on a blank canvas. Sketch on a resource image provided by the Form Designer. The options available to the mobile user depend on how the question is set up in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Tip:When a mobile user submits a record, TrueContext converts each attachment to a compressed JPEG image. This may reduce image quality if the original attachment is a PNG",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Sketch Pad options"
    }
  },
  {
    "content": "file. For the best image quality in submitted records, attach JPEG images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Sketch Pad options"
    }
  },
  {
    "content": "Choose a photo from local files or a cloud service\n\nNote: To upload a file from a cloud service, you must first set up the cloud service on your device. The following table describes how to upload photos from your local files or a cloud service: Device type Procedure iOS Select Choose from Files > Browse. macOS Select Choose from Files, and then go to the relevant folder. Android Select Choose Photo, and then browse to the file you want to upload. Windows Select Pictures Library, and then go to the relevant folder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Choose a photo from local files or a cloud service"
    }
  },
  {
    "content": "Example of iOS Sketch Pad options\n\nThe following example shows the options to take or select an image for a Sketch Pad question on iOS.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Example of iOS Sketch Pad options"
    }
  },
  {
    "content": "Sketch Pad drawing options\n\nSketch Pad questions provide the field user with a range of drawing tools, including: Freehand draw Lines and arrows Shapes Text boxes The user can draw in any color and adjust the stroke weight. Examples of both a Sketch Pad and an Image question on an iOS device are shown in the following images:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Sketch Pad drawing options"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, Image and Sketch Pad questions display as shown in the following image: Each question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). The following sections describe each of these tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is used to reference the question in Conditional Logic, DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions, Destinations, and Documents. You can customize the Unique ID or let the system generate an ID based on the question text. Info:The topic Overview: Unique IDs describes how to use Unique IDs in more detail. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "General"
    }
  },
  {
    "content": "you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Image ✓ ✓ ✓ ✓ ✓* Sketch Pad ✓ ✓ ✓ ✓ ✓*",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. While properties for most question types change with the data type chosen, Image and Sketch Pad questions support only one data type: Attachment (Image) Maximum Number of Attachments Custom Filename Prefix Quality Settings Question Properties Camera and gallery access: Select whether your mobile users must take a new photo, use their existing photo gallery on their mobile device, or must use a Resource Image (\"None\"). Tip:Select Allow camera only to ensure that mobile users take new photos and can’t reuse photos from a previous inspection or location. Sketch Pad-Only Options Allow sketching on a blank canvas (Sketch Pad Only): When enabled, mobile users can draw freehand on a white canvas. Allow sketching on a map (Sketch Pad Only): When enabled, mobile users can draw freehand on a satellite image based on their location. Allow Users to Sketch on Resource Images (Sketch Pad Only): Resource Images are images",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Properties"
    }
  },
  {
    "content": "uploaded in the Web Portal. These images can then be referenced in forms with a Sketch Pad control. They can be referenced in any form in the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. They are often used for images that do not change, but require daily referencing in the course of work, such as a site layout or a blueprint. Toggling this option allows you to choose from all Resource Images within the form's FormSpace. Info: If your company has the Multi-Language add-on, you can add translated resources to use in Multi-Language forms. If you have the same Resource Image in multiple languages, you can link the translations. When a technician opens a Multi-Language form and selects a language, any Resource Images in Sketch Pad questions display in that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Properties"
    }
  },
  {
    "content": "language.If the field technician’s preferred language is unavailable, the images display in a primary language. A user with Can Create permissions selects the primary language when they set up the Resource Image.The topic Resource Images: Set up multiple languages describes this process in more detail. Output Properties Custom Filename Prefix: Setting this allows you to configure a custom filename prefix to allow you to identify attachments to form submissions without opening them. For more information, please read: Attachment File Naming Convert images to black and white: Converts color images to black and white. This is most often used for printing reasons. Stamp Data on Images Both the Image and Sketch Pad question types allow you to stamp data on the images used. This allows you to easily identify when and where a photograph was taken, or where the mobile user was when they submitted the form. For detailed information on this feature, please read: Stamping Data onto Images Tip:Need",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Properties"
    }
  },
  {
    "content": "to know when or where a photo was taken and don't want to use a separate question for it? For Image questions, you can use the Data Stamping feature to automatically add date and time information, or a Geo Location using the Image Properties (EXIF data). Sketch Pad questions do not support EXIF-based data stamps.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding “Help” content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. Info:The topic Add Help Options to Questions describes how to set up help content in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022281291.html",
      "title": "Question Type: Image and Sketch Pad",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nInformation Labels are static text labels that can be added to your forms to display information. They are used to show static text, such as instructions, terms and conditions, or other messages to your users. Note:Information Labels have a maximum of 4000 characters. For text that exceeds this limit, use multiple Information Labels or set up question help. Tip: If you need to include a lot of text in an Information Label, consider putting it in help text instead so that your mobile users don't have to scroll past it every time they use the form. You can use question text formatting to apply common markdown styles (such as lists, headings, bold type, and italics) to your question. Below is an example of an Information Label question on an iOS device:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Information Label question appears as shown below: The Question Edit screen for the Information Label question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "General"
    }
  },
  {
    "content": "a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Information Label ✘* ✓* ✓ ✓ ✓* * The Information Label question type is automatically set to \"answered\" and Read-Only. You cannot change these settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nThe Properties tab for the Information Label question type allows you to set whether the question and page are always shown in downstream workflows such as documents or reports.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "Help Options"
    }
  },
  {
    "content": "Restrictions vs. Settings: Visible on Reports\n\nForms are frequently configured to hide pages with no answers on documents and reports. Pages that contain only Information and Resource Image questions are hidden by default. For more information about how to override the document and form-level settings for a particular question, see the topic How To: Ensure Information Questions are Always Shown on Documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021394691.html",
      "title": "Question Type: Information Label",
      "section": "Restrictions vs. Settings: Visible on Reports"
    }
  },
  {
    "content": "About\n\nThe Recap question type is used to make a count of all the exceptions of a certain type that have been triggered prior to the Recap question. These counts can be used to trigger Conditional Logic. For example, if there are multiple \"Minor Issues\" or small problems with a piece of machinery being inspected, it can be more dangerous than one single \"Critical Issue\". Set up an Recap question to count the number of Minor Issues and trigger Conditional Logic if it reaches a certain threshold. An example of two \"Critical Failure\" exceptions being recapped is shown below on an iOS device:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Recap question appears as shown below: The Question Edit screen for the Recap question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided.. This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "General"
    }
  },
  {
    "content": "Restrictions\n\nRestrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Recap ✘* ✓* ✓ ✓ ✓ * Recaps are Read-Only by default, as the mobile user cannot interact with them. As the user cannot interact with the question, and the question is always answered (\"0\" is an answer), the question cannot be set to Required. These questions cannot be placed in a Repeatable Section A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "Restrictions"
    }
  },
  {
    "content": "Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., a Template-Based Section, or a Footer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "Restrictions"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Recap Properties Select which Exception Category to count. Recap questions will only count questions that have: come before it in the form, triggered the selected exception. Allowable Range Allowable Range (Min/Max) Note: If the recap value falls outside of the allowable range, the user will have to adjust the answers to the questions used in the recap; they cannot edit the recap's answer directly.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAdding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "Help Options"
    }
  },
  {
    "content": "How-To: Count Only the Exceptions on a Specific Page or Section.\n\nIf you wish to limit the scope of a Recap question to a single page or section, such as a particular portion of a larger inspection form, you can create multiple sets of exception categories. For example, you want to know how many Critical Failures there are in the Equipment Inspection section of your Inspection Form, you would create Exception Categories specifically for that section:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021669952.html",
      "title": "Question Type: Recap",
      "section": "How-To: Count Only the Exceptions on a Specific Page or Section."
    }
  },
  {
    "content": "What is a Resource Image question?\n\nA Resource Image question contains up to ten display-only images. Like an Information Label question, there are no answers associated with a Resource Image question. This means that you can use the image as reference material for a specific question or for all of the questions in a section. For example, you might want to display the following types of images: Diagrams Examples with before and after images Illustrations for job steps When you create or edit a Resource Image question, you choose one or more previously uploaded Resource Images. If someone updates the Resource Image with a newer version, forms that reference that image automatically update when users reconcile their Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "What is a Resource Image question?"
    }
  },
  {
    "content": "When to use a Resource Image question\n\nUse Resource Image questions to display inline the essential information that your users need to answer questions on your form. You can also use Resource Images for company branding. Note:Resource Image questions use an “Information” data type. This means that you can't dispatch answers to Resource Image questions. If you want to change a Resource Image, you need to edit the Resource Image. For example, you can: Display a logo image at the top of a page, or at the top of a customer sign-off section. Create work instructions by displaying images surrounded by large blocks of text. To achieve this, use a combination of Resource Image and Information Label questions. Display an image that applies to multiple questions, such as at the beginning of a section. Tip: If your company is on the Enterprise tier, you can add Resource Images to the Resource Library. The Resource Library The Resource Library enables you to build a digital, multilingual, and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "When to use a Resource Image question"
    }
  },
  {
    "content": "searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. is a digital, searchable, multilanguage knowledge base that’s available to field technicians in the TrueContext Mobile App. A field technician can refer to a Resource Image in the Resource Library at any time, even if they’re not working on a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "When to use a Resource Image question"
    }
  },
  {
    "content": "Whether to use a Resource Image or Help Option\n\nResource Image questions always display the images inline on your form. To ensure that pages load quickly on a mobile device, the following limits apply to Resource Image questions: Ten images per question 100 images per page 100 images per form Help Option images don't impact performance in the same way as Resource Images, because users display help options only as needed. You can configure up to six Help Option images per question, with no page or form limits. Help Option images are never displayed in documents. Do document users need to see the image? If yes, use a Resource Image question. If no, consider using a Help Option. Do users need to refer to the images while answering more than one question on your form? If yes, use a Resource Image question. If no, consider using a Help Option. Do both your experienced and inexperienced users need to refer to the images? If yes, use a Resource Image question. If no, and the images are mostly",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "Whether to use a Resource Image or Help Option"
    }
  },
  {
    "content": "for inexperienced users, consider using a Help Option.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "Whether to use a Resource Image or Help Option"
    }
  },
  {
    "content": "Example of a Resource Image question\n\nIn this example, you want to include images that help the user to answer a question. In the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., you define one Information Label and one Resource Image question at the top of the form: The mobile device user sees the two images displayed inline. The user can tap either thumbnail to display the image full-size. The following example shows a single image configured as full size.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "Example of a Resource Image question"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Make sure that the images you want to use are already uploaded as Resource Images within your FormSpace. Info:The topic Resource Images describes how to add and configure Resource Images. Configuration includes the image file to display in the form and the size of the image in documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "Prerequisites"
    }
  },
  {
    "content": "How to create or edit a Resource Image question\n\nSelect the Resource Images to display Select the form that you want to work on (Forms & Integrations > List Forms). Do you want to add a new Resource Image question? If yes, select ADD A QUESTION. If no, select the question that you want to edit, and then go to step 4. Note:You can't change the control or data type of an existing Resource Image question. When prompted for the question type, select Resource Image from the list of options. Tip: To filter the list, start typing the name of the question type and then select an option. From the Select a Resource Image list, select one of the Resource Images within your FormSpace. Repeat step 4 for up to ten Resource Images. Note:Resource Image questions always display the images inline on your form. To ensure that pages load quickly on a mobile device, the following limits apply to Resource Image questions:Ten images per question100 images per page100 images per form Enter a unique identifier",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "How to create or edit a Resource Image question"
    }
  },
  {
    "content": "(label) for this question. Configure any restrictions Note:Because this question type is information only, you can't make it required, and you can’t disable the read-only setting. Do you want to hide the image on devices? If yes, in the Restrictions section, select Hidden on device. Result: The image is displayed in documents but not on a user's mobile device. If no, go to step 2. To hide the image in documents and reports (such as CSV exports and on the portal form submission details pages), select Hidden on reports. Result: This hides the image on documents and reports and disables the Document Visibility Settings on the Properties tab. Info:The topic Controlling Visibility of the Information Control in Documents provides more information about how to control question visibility in documents. You can either Save the question or Configure image properties. Configure image properties In your form, select the Properties tab. By default, TrueContext hides any questions that don't have",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "How to create or edit a Resource Image question"
    }
  },
  {
    "content": "answers on generated documents. These include Resource Image and Information Label questions. Do you want to show this question on the generated document? If yes: Make sure the General tab Hidden on reports checkbox is clear. That setting overrides all other visibility settings. Then, on the Properties tab, in the Image Properties section, select the check box to Always show this question. This setting overrides the Hide unanswered sections rule in the document settings. If no, go to step 4. To display a color image as black and white in the generated document, select the Convert images to black and white option. If you selected only one Resource Image, you can choose from the Single Resource Image Options. Select the image size to display in the form, either full size or thumbnail. With either option, the user can tap the image to open it in the full screen window and zoom as required. Note:The image size in the form does not affect the size of the image in documents. To change the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "How to create or edit a Resource Image question"
    }
  },
  {
    "content": "image size in documents, change the Resource Image settings. Select the image alignment or keep the default of Center. You can either Save the question or Configure Help Options. Configure Help Options You can use the Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. to provide additional information, such as formatted text instructions or a video that shows detailed work steps. In your form, select the Help Options tab. Set the Provide help to mobile users toggle to ON. Select the type of help and enter the details. Info:The topic Adding Help Content to Questions provides detailed information about how to set up help content. Save the question. Tip:Remember to Save and Deploy the form when you're ready to make it available to your mobile device users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "How to create or edit a Resource Image question"
    }
  },
  {
    "content": "Translated Resource Image questions\n\nAvailable as an add-on to the Enterprise tier: Essentials Advanced Enterprise +Add-on If your company has the Multi-Language add-on, you can add translated resources to use in Multi-Language forms. If you have the same Resource Image in multiple languages, you can link the translations. When a field technician opens a Multi-Language form and selects a language, any images in Resource Image questions display in that language. If the field technician’s preferred language is unavailable, the images display in a primary language. A user with Can Create permissions selects the primary language when they set up the Resource Image. Info:The topic Resource Images: Set up multiple languages describes this process in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "Translated Resource Image questions"
    }
  },
  {
    "content": "Related topics\n\nBuild a Custom Form: Basic Overview Form Builder Icon Glossary Question and Data Types Resource Images",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTypeResourceImage.html",
      "title": "Question Type: Resource Image",
      "section": "Related topics"
    }
  },
  {
    "content": "What is a Signature question?\n\nA signature question provides a way to collect authorizations and sign-off from any signed-in Mobile App user, such as a technician or supervisor. You can also use a signature question in a Customer Feedback (browser-based) form to obtain a contactless signature from a customer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "What is a Signature question?"
    }
  },
  {
    "content": "Examples of Signature questions\n\nSignature question on a Mobile App form Following a service call to repair equipment, for example, you want to send an invoice to your customer. The customer requires that the invoice includes the date and time that the technician completed the work, along with the technician’s signature. The following illustration shows what the Mobile App form might look like. The mobile device user enters the date and time, and then draws their signature using the touch screen. The following example shows the form on an iOS device. Signature question on a Customer Feedback form If your company must comply with requirements for contactless signatures, you can capture a signature in a Customer Feedback form. For more information, refer to the topic Signatures in Customer Feedback Forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "Examples of Signature questions"
    }
  },
  {
    "content": "How a Signature question works\n\nOn Mobile App forms that your signed-in mobile users complete, a Signature question prompts the user to draw their signature using their touch pad or touch screen. On Customer Feedback browser-based forms, users can draw their signature with a mouse or a touch screen, if available on their device. When the user submits the form, the TrueContext system processes the Signature as an “Attachment” data type. The signature is displayed on documents associated with the form, and the Form Submission Details page in the Web Portal. Note:With the recommended Form Settings configured, images captured in the Mobile App are not saved to the user's camera roll. All images and signatures are deleted from the device once the form is successfully submitted and processed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "How a Signature question works"
    }
  },
  {
    "content": "Prerequisites\n\nYour user account must be assigned the “Admin” role, or your user group must have “Can Create” form permissions within the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up a Signature question\n\nTip: Need to add disclaimers or other information above the signature? Use an Information Label question before the Signature question to provide context. Add or edit the question Select the form that you want to work on (Forms & Integrations > List Forms). Do you want to add a new Signature question? If yes, add a new question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. If no, select the question that you want to edit, and then go to step 4. When prompted for the question type, either start typing the name of the question type to filter the list, and then select Signature, or go to the Attachment-based tab, and then select Signature from the list of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "Steps to set up a Signature question"
    }
  },
  {
    "content": "options. Enter the question text that you want to display to the user and enter a unique identifier (label) for this question. Tip:To make the question easier to read, enable question text formatting. The Form Builder does not display a data type selector for attachment-based questions. Signature questions always have a data type of “Signature,” with the same underlying functionality as a Sketch Pad question. Configure any restrictions You can configure the question with the following standard restrictions: Required Read only Hidden on device Hidden on reports Configure the question properties For a Signature question, you can configure a Custom Filename Prefix. This helps you to identify the attachment by name. This is useful when someone downloads the form or when the system sends the form data to a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "Steps to set up a Signature question"
    }
  },
  {
    "content": "service (such as email or cloud storage) in several different formats.. For more details about how this property works, see the topic How to Create a Custom Filename Prefix. Configure Help Options On Mobile App forms, you can use the Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. to provide additional information. For example, you can provide instructions that include tables or links, or a video that shows detailed work steps. In your form, select the Help Options tab. Set the Provide help to mobile users toggle to ON. Select the type of help and enter the details. For detailed steps, see the topic Adding Help Content to Questions. Save the question. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users. For more information, refer to the following",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "Steps to set up a Signature question"
    }
  },
  {
    "content": "topics: Build a Custom Form: Basic Overview Form Builder Icon Glossary Question and Data Types",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/Signatures.htm",
      "title": "Question Type: Signature",
      "section": "Steps to set up a Signature question"
    }
  },
  {
    "content": "About\n\nSingle checkbox questions are usually Yes/No or On/Off questions. They appear in mobile forms as a single checkbox. They can be used to accept Terms of Agreement or questions following the convention of, \"Check here if...\" Tip for Form Designers: Checkboxes should be used when it's really clear what the answer is when the box isn't checked. For example, it's obvious that when the question says, \"I accept the terms of service\", not checking the box means, \"I don't accept.\" If there is not a clear, single answer to the question being unchecked, consider using a Button Group.A common example of this is in Inspection forms, where \"checked\" means \"this item is done/approved\", while unchecked can mean \"This item failed\" or \"This question is not applicable\". In this case, a required Button Group question with Pass, Fail, and Not Applicable will be much clearer. An example of a single checkbox question on an iOS device is shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021660752.html",
      "title": "Question Type: Single Checkbox",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the single checkbox question appears as shown below: The Question Edit screen for the single checkbox question type has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021660752.html",
      "title": "Question Type: Single Checkbox",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021660752.html",
      "title": "Question Type: Single Checkbox",
      "section": "General"
    }
  },
  {
    "content": "a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Single Checkbox ✘* ✓ ✓ ✓ ✓ * Checkboxes cannot be Required, because \"not checked\" is a valid answer, but is identical to an \"unanswered\" state. If the question must be Required, try using a Button Group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021660752.html",
      "title": "Question Type: Single Checkbox",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nThe Single Checkbox question type allows you to set a default value of Checked or Not Checked.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021660752.html",
      "title": "Question Type: Single Checkbox",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021660752.html",
      "title": "Question Type: Single Checkbox",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nAllow users to quickly select answers using a stepper/slider control with predetermined ranges and intervals. This is useful when the expected answer exists in a predictable range or on a set interval, such as a cost range, temperature, or time. Examples of both question types on an iOS device is shown below: Stepper: Slider: Tips for Form Designers: When to Use Stepper or Slider Stepper and Slider questions can save your mobile users time over a numeric text field when used correctly. Stepper: Steppers are extremely useful for things that your users would count, and where the likely range of options is close to the default. Often, the motion of the tap plays well with human counting habits. An example of a good use case for the stepper is counting objects when filling out a form, or for quantities. Slider: Sliders are meant for pre-defined ranges where any value within the range is valid. A common use case for slider questions is temperature readings on site inspections. Large",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "About"
    }
  },
  {
    "content": "ranges are fine, but keep in mind that it can be hard for users to get the precise answer on a large range with a small step size. When not to use Stepper or Slider: If your users need precision and have a wide range of valid answers, use a numeric text field.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Stepper and Slider question types appear as shown below. We have used a Stepper question to demonstrate: The Question Edit screen for the Stepper and Slider question types has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Data Types Data Types are the kind of information your mobile users will be putting into these questions. Setting a data type forces users to enter the kind of information you want in the correct format. This also ensures that the entered data can be used elsewhere in your business process, whether that's by other questions in the form, or in a data destination. The Stepper and Slider question types support the following data types: Integer Decimal Currency Stepper ✓ ✓ ✓ Slider ✓ ✓ ✓ Tips for Form Designers: Make sure your Data Type reflects",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "General"
    }
  },
  {
    "content": "what kind of information your mobile users will be entering. A lot of Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. (such as Salesforce or SharePoint List, for example) are extremely picky about data types; fields in those systems may require that you send a particular numeric data type. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "General"
    }
  },
  {
    "content": "Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Stepper ✘* ✓ ✓ ✓ ✓ Slider ✘* ✓ ✓ ✓ ✓ * Stepper and Slider questions cannot be Required because there is always a value entered—i.e., the question is always answered. If a Default Value is not specified in Properties, the initial answer will be set to 0.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Question Properties change depending on the data type chosen. Integer/Decimal/Currency Allowable Range (Min/Max) Decimal Place Precision (Decimal Data Type) Currency Default Value (Stepper Only): If a default value is not specified in Properties, the initial answer will be set to 0.Slider questions require a default value. Step Size: Set how finely the mobile user can split values, i.e., if they step one or five values for each \"step\" upwards. If the question has a large range, e.g., -1000 - 1000, it is important to set the step size -- otherwise, mobile users may waste time by tapping too many times on a stepper control or trying to get the correct number on a finely-grained slider. (Stepper Only) Allow the user to directly edit the value: The user can tap on the number rather than the + / - buttons and enter a value directly. Answer Exceptions and Additional Comments As Stepper and Slider questions use Numeric",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "Properties"
    }
  },
  {
    "content": "Data Types, you will have the option to use Answer Exceptions and Additional Comments. Answer Exceptions Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Answer Exceptions are used to categorize problems identified during the course of a field technician's work as the user completes a form. For example, if configured on an Inspection form, if a user shifts a Temperature slider to one extreme or another, TrueContext could show a warning containing information on what kind of protective equipment might be needed for that weather. For more information on setting up Answer Exceptions, please read: Answer Exceptions Additional Comments Additional Comments are useful for when certain answers from a user require further information, like a comment or reason. Using the same example as above, if a user adds an excessive number of parts to an Invoice form, a comment could be useful to provide additional details on why that number of parts is necessary. For more",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "Properties"
    }
  },
  {
    "content": "information on configuring Additional Comments on questions, please read: Additional Comments on Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021153691.html",
      "title": "Question Type: Stepper and Slider",
      "section": "Help Options"
    }
  },
  {
    "content": "About\n\nString Concatenation combines answers from previous questions and displays the result. A simple example of this is if you have two questions, Customer Name, and Customer Surname, you can use a String Concatenation to show a Full Name question. This can be used to skip re-entering data in a form, or to send answers in a particular format to downstream workflows. Another common use case is showing the answers from a series of key questions earlier in the form to provide a quick review of the form's contents. An example of a String Concatenation question on an iOS device is shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020785392.html",
      "title": "Question Type: String Concatenation",
      "section": "About"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Form Builder, the String Concatenation question type appears as shown below: The Question Edit screen for String Concatenation has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only). This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020785392.html",
      "title": "Question Type: String Concatenation",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020785392.html",
      "title": "Question Type: String Concatenation",
      "section": "General"
    }
  },
  {
    "content": "a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) String Concatenation ✘* ✓* ✓ ✓ ✓ * This question type is Read-Only by default because the mobile user cannot directly edit the answer; all information comes from previous answers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020785392.html",
      "title": "Question Type: String Concatenation",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. With String Concatenation, the Properties tab is where you set up which questions you will be pulling information from. The properties are shown in screenshots below: In our example above, the String Concatenation question's answer would look something like: <Owner Name>-Appointment-<Date/Time Answer> Each dropdown allows you to either select the answer to an appropriate question or set static text. If you select a Question, you will also have the chance to set a default value in case the question is left unanswered in the form: Value to use if not answered. Some question types cannot be used as references for this question type. They are: Geolocation, Image, Sketch, Information Label, Signature, Audio, File, Single Checkbox, Multiselect, and Document Editor.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020785392.html",
      "title": "Question Type: String Concatenation",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360020785392.html",
      "title": "Question Type: String Concatenation",
      "section": "Help Options"
    }
  },
  {
    "content": "General\n\nData Types: Text Restrictions: Optionally Required, Read-Only, Hidden on Device, Hidden on Reports, Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008696808.html",
      "title": "Question Type: Text Area",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. The Question Properties enable you to apply a validation rule and a default value. You can also apply the Router Setup property to parse and route data to other subsequent questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008696808.html",
      "title": "Question Type: Text Area",
      "section": "Properties"
    }
  },
  {
    "content": "Question Properties\n\nValidation Type: Validation allows you to check what information is being entered in a question and prevent incorrect data entry. Non-accented Letters Only, no spaces: AbcNon-accented Numbers or Letters Only, no spaces: Abc123Postal Code: A1B 2C3Advanced: This uses Regular Expressions. User's username as default value: Set the user's username as the initial value for the question. Default Value: Set the initial value for the question. Keyboard Type: Set the Mobile Input Type. This means that you can select a particular type of mobile keyboard: for example, if it is a question that uses more numbers than letters, use a number keyboard as the default.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008696808.html",
      "title": "Question Type: Text Area",
      "section": "Question Properties"
    }
  },
  {
    "content": "Router Setup\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise The Router Setup property is a question property available for Text Field, Text Area, File Upload, and Barcode Scanner question types. You can use the Router Setup to parse (subdivide) long strings of data captured by a question—such as from a barcode scan—into smaller substrings. You can then push the substrings to subsequent questions in your form. You can use the Router Setup property to route data from Text Area questions (source questions) to the supported target question types.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115008696808.html",
      "title": "Question Type: Text Area",
      "section": "Router Setup"
    }
  },
  {
    "content": "Text Field question in the Form Builder\n\nIn the Form Builder, the Text Field question appears as shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "Text Field question in the Form Builder"
    }
  },
  {
    "content": "Question Tabs\n\nThe Question Edit screen for the Text Field has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. (Advanced and Enterprise tiers only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "Question Tabs"
    }
  },
  {
    "content": "General\n\nQuestion Text This is the text displayed on the Mobile App to give the user instructions or ask questions. You can use question text formatting to improve readability and highlight important information. Unique Identifier The Unique Identifier (Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.) is the reference for the question. It can either be auto-generated based on the question text, or customized. Info:The topic Overview: Unique IDs describes how to use these in more detail. Data and Control Type Data Types are the kind of information your mobile users will be putting into these questions. Setting a data type forces users to enter the kind of information you want in the correct format. This also ensures that the entered data can be used elsewhere in your business process,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "General"
    }
  },
  {
    "content": "whether that's by other questions in the form, or in a data destination. The Text Field supports the following data types: Free Text Email URL Phone Number Integer Decimal Currency Text Field ✓ ✓ ✓ ✓ ✓ ✓ ✓ Free Text: This data type can collect text or a mixture of text and numbers, such as zip codes/postal codes and addresses. Email: Use this data type if collecting an email address that you need to send an email to with an Email Data Destination. Integer, Decimal, and Currency: Use one of these data types if the answer needs to be used in a calculation or aggregation later in the form. Note:Text questions with an Integer data type do not preserve leading zeros because the input is treated as a number. To retain leading zeros, use the Free Text data type instead. Make sure your Data Type reflects the kind of information your mobile users will be entering. Some Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "General"
    }
  },
  {
    "content": "automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. (such as Salesforce and Microsoft SharePoint Lists, for example) have strict requirements for data types, and fields in those systems might require that you send a numeric data type. Restrictions The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Text Field ✓ ✓ ✓ ✓ ✓",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. The Question Properties enable you to apply a validation rule and a default value. You can also apply the Router Setup property to parse and route data to other subsequent questions. Question Properties Question Properties change depending on the data type chosen. Free Text Email/URL/Phone Number Integer/Decimal/Currency Validation Type: Validation checks that your users have entered information correctly. Default Value Keyboard Type: Lets you define what keyboard your mobile users encounter. Allow mobile users to launch Email, SMS, Phonecall, or Browser to this entry. The browser option is only available for regular, Mobile App forms. This helps to prevent data loss when a customer navigates away from a Customer Feedback (browser-based) form. Default Value Allowable Range (Min/Max) Decimal Place Precision (Decimal Data Type) Currency Default Value Tip:Need an answer that matches a specific format, but there's no",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "Properties"
    }
  },
  {
    "content": "data type that enforces it? Try a Free Text data type with Validation. The Free Text data type has pre-built validation options for Postal and Zip codes, as well as custom validation. For example, you may have serial or model numbers that must be in a certain format—you can create a regular expression to validate it, ensuring that all data is formatted correctly before it reaches its destination. Router Setup Available on the Enterprise tier only: Essentials Advanced Enterprise The Router Setup property is a question property available for Text Field, Text Area, File Upload, and Barcode Scanner question types. You can use the Router Setup to parse (subdivide) long strings of data captured by a question—such as from a barcode scan—into smaller substrings. You can then push the substrings to subsequent questions in your form. You can use the Router Setup property to route data from Text Field questions (source questions) to the supported target question types.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "Properties"
    }
  },
  {
    "content": "Help Options\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Adding “Help” content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. Info:The topicAdd Help Options to Questions describes how help options work and how to set them up.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001314746.html",
      "title": "Question Type: Text Field",
      "section": "Help Options"
    }
  },
  {
    "content": "Mobile App\n\nTime-Based Math is a read-only question. This means that field users can’t interact with or edit the displayed value. An example of a Time-Based Math question on an iOS device is shown below:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Mobile App"
    }
  },
  {
    "content": "Form Builder\n\nIn the Form Builder, the Time-Based Math question appears as shown below: The Question Edit screen for the Time-Based Math has three tabs: General, Properties, and Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided.. This article will go through each of the tabs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Form Builder"
    }
  },
  {
    "content": "General\n\nUnique ID The Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. is the reference for the question. For more information on Unique IDs, read: Overview: Unique IDs. It can either be auto-generated based on the question text, or customized. Restrictions Restrictions control how your mobile users interact with a question. They can be set on the question itself or controlled by Conditional Logic. The following table shows which restrictions you can set for the question type. Note that: ✓ indicates a restriction that you can configure. ✓* indicates a restriction that is always on. ✘* indicates a restriction that is always off. Required Read-Only Hidden on Device Hidden on Reports Keep question width to 100% (Side-by-Side Sections Side-by-Side Sections display questions and answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "General"
    }
  },
  {
    "content": "a condensed, two-column layout. This can make it easier and faster for field users to scan, complete, and confirm the answers in a form. only) Time-Based Math ✘* ✓* ✓ ✓ ✓ * Time-Based Math is Read-Only by default, as the mobile user can’t interact with a Time-Based Math question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "General"
    }
  },
  {
    "content": "Properties\n\nProperties allow you to set up your question in various ways. Some Properties are due to the Data Type chosen for the question. The Time-Based Math question type has two data types: Date/Time (All tiers) Date (Enterprise tier only) Date/Time and Date (Enterprise tier only) Range Validation Note:(Enterprise tier only) You can’t change the data type after you create a Time-Based Math question. If you want a different data type, you must create a new question and delete the old one. Calculate a Date/Time This section allows you to set your source questions for the calculation, and what kind of calculation you are doing. For example, if calculating a projected end date for a construction project, you would want to select Add Duration. Start Date/Time Question: This dropdown will allow you to select any questions using a Date/Time data type that come before the Time-Based Math question. Operator: You can add or subtract the duration from the Start Date/Time question to get to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Properties"
    }
  },
  {
    "content": "your answer. Duration Question: This dropdown will allow you to select any questions that use a Duration data type that come before the Time-Based Math question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Properties"
    }
  },
  {
    "content": "Additional options for Enterprise customers\n\nData Types Enterprise customers can create a Time-Based Math question that has one of the following data types: Date—The result is a date, rounded down to the nearest day. For example, if the calculation adds 26 hours to the start date 2023/10/17, the result date is 2023/10/18. The calculation adds only the 24 hours of a day and excludes the remaining 2 hours. Date/Time—The result is a date and time. The calculation adds the exact amount of time based on the set time unit. For example, if the calculation adds 26 hours to the start date and time 2023/10/17 9:05:34, the result is 2023/10/18 11:05:34. Note:You can’t change the data type after you create the question. If you want to change the data type, you must delete the question and create a new one. Properties The following image shows the additional properties available on the Enterprise tier. Tip:The field labeled Duration Question is the value to add or subtract. You can select a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Additional options for Enterprise customers"
    }
  },
  {
    "content": "question that has a Duration or Integer data type, or enter a constant. The following table describes the additional properties in more detail. Property Description Start Date/Time Question Start Date/Time Question Select one of the following question types: Date/Time Selector (Date or Date/Time data types only) Date/Time Stamp Time-Based Math Note:Questions only show in the list of options if they come before the Time-Based Math question in the form. Fallback Value Source Choose whether to include a static fallback value for the start question. If a referenced question isn’t answered and doesn’t have a default value, the Time-Based Math calculation uses the fallback value. When you add a start question fallback value, you can either: Manually enter the values. Select the calendar icon (and clock icon for questions with a Date/Time data type) and select values from the lists. The fallback value time zone is the time zone set in your User Profile. Duration Question Duration Question",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Additional options for Enterprise customers"
    }
  },
  {
    "content": "Choose one of the following options: Enter a constant numeric value. Select one of the following question types that uses a Duration data type: Aggregation Duration Calculation Duration Field Duration Math Select one of the following question types that uses an Integer data type: Button Group Calculation Card List Digit Extraction Dropdown Slider Stepper Text Field Note:Questions only show in the list of options if they come before the Time-Based Math question in the form. Units Select a time unit. The time unit applies to the fallback value when the Duration Question is: A constant value. A question that uses a Duration data type. A question that uses an Integer data type. The time unit applies to the answer value when the Duration Question is: A constant value. A question that uses an Integer data type. Fallback Value If you select a question that uses a Duration or Integer data type, you can set up a static fallback value. If a referenced question isn’t answered and doesn’t have a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Additional options for Enterprise customers"
    }
  },
  {
    "content": "default value, the Time-Based Math calculation uses the fallback value.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Additional options for Enterprise customers"
    }
  },
  {
    "content": "Help Options\n\nAdding \"Help\" content to forms gives mobile users access to support and other resources out in the field. Help content is available to users through a button embedded beside a question. Any question in the form can include a link to YouTube videos, web pages, or work instructions. For more information on Help Content, please read: Add Help Options to Questions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360023094491.html",
      "title": "Question Type: Time-Based Math",
      "section": "Help Options"
    }
  },
  {
    "content": "Question Properties\n\nThis section includes the following content: Additional Comments on QuestionsAnswer ExceptionsRouter SetupWhat is the Router Setup Property?How the Router Setup Property WorksConfigure the Router Setup Property",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/QuestionProperties.htm",
      "title": "Question Properties",
      "section": "Question Properties"
    }
  },
  {
    "content": "About\n\nAdditional Comments are useful for when certain answers from a user require further information, like a comment or reason. For example: When inspecting an item with the options Pass, Fail, or Not Applicable, selecting Fail will show the comments field and make it required, asking users to provide a reason for the failure. When a field user enters a reading from a piece of equipment that is not within the ideal range, show a comments field asking users to enter a corrective action. Using Additional Comments for these scenarios is beneficial because: The \"comments\" answer is directly tied to the question that triggered it, giving you more structured forms and data. They can be built with no Conditional Logic, making it easier to build and manage your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000759086.html",
      "title": "Additional Comments on Questions",
      "section": "About"
    }
  },
  {
    "content": "Using Additional Comments on a Mobile Device\n\nAdditional Comments appear on the device as a text field or text area. They're triggered by selecting an answer that matches criteria set up by your administrator. For example, if you're using an inspection form and select \"Warning\", a comment field will appear beneath the question. Fill it out to give more detail on the warning.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000759086.html",
      "title": "Additional Comments on Questions",
      "section": "Using Additional Comments on a Mobile Device"
    }
  },
  {
    "content": "Set up an Additional Comment in the Form Builder\n\nYou can set up an additional comment on the following question types: Button Group, Dropdown, Radio Button, Card List: The comment appears beneath the original question when a particular answer is selected. Text Field, Stepper, Slider, and Calculation: These questions must be number-based, i.e., integer, decimal, or other numeric data types. The comment appears beneath the original question when an answer falls under a certain exception. For more information on Exceptions, please read: Answer Exceptions. To set up an additional comment: Open the appropriate form in the Form Builder and go to the question you want to add a comment to. Select the Properties tab and scroll to the bottom. Select what makes the additional comment question appear to your mobile users from the dropdown menu. You may select multiple options. Select further options, such as setting what message will show up on the mobile user's device when the additional comment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000759086.html",
      "title": "Additional Comments on Questions",
      "section": "Set up an Additional Comment in the Form Builder"
    }
  },
  {
    "content": "appears. The Comments field can be a text field or text area. It can also be Required. Select Save. You can see which questions have Additional Comments in the Form Builder. Additional Comments show up underneath their parent questions:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000759086.html",
      "title": "Additional Comments on Questions",
      "section": "Set up an Additional Comment in the Form Builder"
    }
  },
  {
    "content": "Hide Additional Comments in output documents\n\nWhen you set up Word, PDF, or HTML documents, you can choose to hide Additional Comments. This is useful when you use Additional Comments for internal-only information and you want to exclude them from customer-facing reports. To hide Additional Comments in a document: Navigate to the PDF, Word, or HTML document you want to set up. You can choose a new or existing document. To create a new document: Forms & Integrations > Documents > CREATE DOCUMENT Select the type of document that you want to create. To edit a document: Forms & Integrations > Documents > Document Name > EDIT DOCUMENT Info:The topic PDF, Word, and HTML Documents describes how to set up these documents in more detail. Go to Formatting > Answer Format > Additional Comments. Switch off the option to Show additional comments in the document. Select Create or Update to save your changes. Result: When the system generates the document, it won’t show any Additional Comments.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000759086.html",
      "title": "Additional Comments on Questions",
      "section": "Hide Additional Comments in output documents"
    }
  },
  {
    "content": "Dispatch into Comments\n\nFor information on dispatching into additional comments via the API, please read the API documentation: Dispatch Forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000759086.html",
      "title": "Additional Comments on Questions",
      "section": "Dispatch into Comments"
    }
  },
  {
    "content": "What are Exceptions?\n\nExceptions are used to categorize problems identified during the course of a field technician's work as the user completes a form. They provide color-coded visual feedback to identify the severity of each problem, helping mobile users spot which items are the most important or problematic. They make it easy to total up how many answers fall under each category, which can then be used to drive conditional logic in the form. For example, during an inspection, an answer of \"Unacceptable\" indicates a Critical issue, while \"Poor\" indicates a Major issue. If Critical issues exceed 5, or Major issues exceed 10, the entire inspection could be marked as having Failed, and drive the user to collect additional information as a result.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "What are Exceptions?"
    }
  },
  {
    "content": "How Exceptions work\n\nIn-Form View Exceptions trigger when certain answers are chosen on questions. They provide more information by color-coding the question based on that answer. They may also show an optional custom message beneath the question to provide more detail. Sometimes, exceptions will also require mobile users to fill out a comments field. Additional Comments are useful for explaining why an exception may have triggered. For more information: Additional Comments on Questions. Page Listing Exceptions are based on the answers chosen for the question. Not only does the exception highlight the question, but mobile users can open the page listing for the form and see which pages have exceptions. Pages with exceptions are marked with a triangular caution icon. It will be colored based on the highest-priority exception triggered on that page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "How Exceptions work"
    }
  },
  {
    "content": "Configure Exception Categories for a form\n\nIn the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.'s Settings Menu Exception categories are defined at the form level. You can set them up in the Settings tab, under Exception Categories. You can use the same Exception sets across multiple questions in the same form, saving time in configuration and improving consistency through the form. Navigate to the Exception Categories section under Settings. Define your Exception Categories in broad strokes, as shown in the example below: Critical Failure, Minor Issue, and Acceptable. Please note that Exception Categories are displayed in a priority order that reflects this list's order. Select the colors to use as highlights on the mobile device when the exception is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Configure Exception Categories for a form"
    }
  },
  {
    "content": "triggered. This example uses Red:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Configure Exception Categories for a form"
    }
  },
  {
    "content": "Priority of exceptions\n\nExceptions are ranked in priority from top to bottom in the form-level list. When setting up your Exceptions, please keep in mind the following: Questions with exceptions may have overlapping ranges — i.e., two exceptions may trigger on one question. TrueContext will show the highest priority exception on that question. We advise against overlapping ranges in general. On the page navigation, the highest priority exception will be shown if multiple exceptions have been triggered on the page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Priority of exceptions"
    }
  },
  {
    "content": "Configure Exceptions on individual questions\n\nOnce you configure the exception categories for your form, you can use them for the following question types: Number basedText Field with an Integer, Decimal, or Currency Data TypeStepperSliderCalculation Options basedButton GroupDropdownRadio ButtonCard List To add an exception to a question: Add or edit a question that you can use Exceptions with. Select the Properties tab, and then switch on Answer Exceptions. Select an Exception type from the list of Exceptions you configured for your form. Configure the Exception as described in the following table. If... Then... The question is Number based Select a range that triggers the Exception. Note:The range must include a minimum or maximum value, and it must be within the question’s allowable range. Select if the range is Inclusive (includes the boundaries of the range) or Exclusive (does not include the boundaries of the range). Optionally, select OR to add another range that triggers the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Configure Exceptions on individual questions"
    }
  },
  {
    "content": "Exception. Optionally, enter a message that the system displays when the Exception is triggered. Note: The Exception message is limited to 255 characters. The question is Options based Select at least one option that triggers the Exception. Optionally, enter a message that the system displays when the Exception is triggered. Note:You can’t use exceptions with questions that are populated by a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. The Exception message is limited to 255 characters. The following example shows a Number-based question that triggers an exception if the answer is less than 10 or greater than 40. Repeat steps 3 and 4 until you finish adding all needed Exceptions. Info:You can optionally",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Configure Exceptions on individual questions"
    }
  },
  {
    "content": "configure Additional Comments on Questions if you want users to provide additional details when they trigger an Exception. Save your question when you finish configuring it. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Configure Exceptions on individual questions"
    }
  },
  {
    "content": "Example of a numeric Exception configuration\n\nNumeric values that workers collect often have acceptable ranges, ranges that signify a minor issue, and ranges that signify a critical issue. For a specific inspection, the ranges are the following: Critical Issue—0 to 200, or 800 to 1000. Minor Issue—200 to 400, or 600 to 800. Acceptable Range—400 to 600. The following diagram shows a visual representation of the ranges. After they configure the Exceptions at the form level, a citizen developer configures a number-based question. The user configures the question to show Exceptions according to the ranges for the inspection as follows. Critical Issue—The user configures the ranges as follows: The user specifies two different ranges that trigger the Critical Issue Exception. The user configures the ranges to be Exclusive, so the exceptions don’t include the boundaries of 200 or 800. The ranges don’t have either a minimum or maximum boundary, so the exception triggers for any value less than",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Example of a numeric Exception configuration"
    }
  },
  {
    "content": "200, or greater than 800. Note:The user can limit the question’s allowable range in the Question Properties. Users can’t select values less than 0 or greater than 1000. Minor Issue—The user configures the ranges as follows: The user specifies two different ranges that trigger the Minor Issue Exception. The user configures the ranges to be Inclusive because they must include the values 200 and 800. Because the ranges are Inclusive, the user selects 399 and 601 as boundaries because 400 and 600 are included in the acceptable range. Acceptable—The user configures a single Inclusive range so that the boundaries, 400 and 600, are included in the exception.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Example of a numeric Exception configuration"
    }
  },
  {
    "content": "Using Exception Recaps in forms\n\nException Recaps are a count of how many exceptions of a certain type have come before it. This is useful as a way to score an inspection form, or base conditional logic off of the number of exceptions of a certain type. For example, if an inspection has two \"severe\" issues, or five \"moderate\" issues, you might build conditional logic rules around that, or create a score based upon the output of the recap question. For more information on Exception Recap questions, please read: Question Type: Recap.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/IntroductionToTheFormBuilder/360000783666_AnswerExceptions.html",
      "title": "Answer Exceptions",
      "section": "Using Exception Recaps in forms"
    }
  },
  {
    "content": "Router Setup\n\nThis section includes the following content: What is the Router Setup Property?How the Router Setup Property WorksConfigure the Router Setup Property",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/RouterSetup.htm",
      "title": "Router Setup",
      "section": "Router Setup"
    }
  },
  {
    "content": "Router Setup property options\n\nThe Router Setup property provides a way to parse data when substrings within a longer, complex string provide meaningful data. For example, you can use the substrings to: Display information, such as an asset manufacturing date, to a mobile device user. Perform calculations in the form based on substring values. Use Conditional Logic Conditional logic is a tool in the Form Builder that establishes the workflow of a form. By using the \"If This, Then That\" structure, questions or sections will be displayed, hidden, or automatically populated based on answers to preceding questions. in a form to drive specific workflows. For example, a barcode string for a piece of equipment might include device number, lot number, serial number, and manufacturing date. You can use the Router Setup property to separate out these substrings and push them to target questions in your form. You can extract the substrings in one of two ways: Use a regular expression (regex) to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/WhatIsRouterProperty.htm",
      "title": "What is the Router Setup Property?",
      "section": "Router Setup property options"
    }
  },
  {
    "content": "search for values in a longer string and store them in capture groups (also known as capturing groups). Use index values to identify substrings based on their position in the longer string. Tip:If you're not familiar with regular expressions and capturing groups, you can find resources online.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/WhatIsRouterProperty.htm",
      "title": "What is the Router Setup Property?",
      "section": "Router Setup property options"
    }
  },
  {
    "content": "Source questions\n\nYou can route data from the following question types: Text Area Text Field Barcode Scanner File Upload (JSON, XML, and text files)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/WhatIsRouterProperty.htm",
      "title": "What is the Router Setup Property?",
      "section": "Source questions"
    }
  },
  {
    "content": "Target questions\n\nYou can prepopulate the following question types with the substring values: Text Field Text Area Radio Button Date/Time Selector Dropdown Button Group",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/WhatIsRouterProperty.htm",
      "title": "What is the Router Setup Property?",
      "section": "Target questions"
    }
  },
  {
    "content": "Example of the Router Property configuration\n\nThe following example describes how you might configure the Router Property for a question that extracts substrings from a UDI barcode. Your field technicians need to scan UDI barcodes for a variety of medical equipment. They will then carry out required maintenance based on the lot numbers and manufacturing dates. Add a Barcode Scanner question with the Router Setup property. Tip:For the Barcode Scanner question type, choose one or more standards to speed up barcode recognition:UPC (A or E)EAN (8 or 13)Code 39Code 128QR CodeITFThe system recognizes all barcode types that the scanner can read, including UDI, regardless of which standards you select. Selecting a standard simply speeds up barcode recognition. Select the Regex option and add a regular expression to parse the barcode data. Select or add five supported target questions, and map a capture group to each question: Device Identifier Lot Number Serial Number Manufacturing Date",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/HowRouterSetupWorks.htm",
      "title": "How the Router Setup Property Works",
      "section": "Example of the Router Property configuration"
    }
  },
  {
    "content": "Expiration Date If you don't want your mobile device users to edit the target question values, configure the target questions as Read only. Save the Barcode Scanner question. After you save and deploy the form, your mobile users can scan or enter a barcode number and see the target questions automatically populated. In this example, you want the user to perform maintenance on equipment with specific lot numbers. Use Conditional Logic to set up a new rule that displays work instructions and questions based on the lot numbers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/HowRouterSetupWorks.htm",
      "title": "How the Router Setup Property Works",
      "section": "Example of the Router Property configuration"
    }
  },
  {
    "content": "How regex works\n\nNote:Standard regex syntax applies. If your initial string is: a1b2c3-d4e-5f6g7 the regular expression ^.+?-(.+?)-.+?$ extracts the characters d4e. You'll typically extract more than one capture group. For example, for the string (01)12345678912345(11)123456(17)654321(10)891123(21)4321 use the following regex to capture the full string plus five different groups: \\(01\\)([0-9]+)\\(11\\)([0-9]+)\\(17\\)([0-9]+)\\(10\\)([0-9]+)\\(21\\)([0-9]+)$ or ^\\(01\\)(\\d+)\\(11\\)(\\d+)\\(17\\)(\\d+)\\(10\\)(\\d+)\\(21\\)(\\d+)$ to get the following results: Tip: If the string contains both numbers and letters, you can use the following expression: ^\\(01\\)(.+)\\(11\\)(.+)\\(17\\)(.+)\\(10\\)(.+)\\(21\\)(.+)$ Then, you can map the capture groups to the questions in your form, as shown in the following example.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/HowRouterSetupWorks.htm",
      "title": "How the Router Setup Property Works",
      "section": "How regex works"
    }
  },
  {
    "content": "How index values work\n\nIf your initial string is: a1b2c3-d4e-5f6g7 the start and end index values 8 and 10 extract the characters d4e Tip:A start index value with no end value extracts a single character.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/HowRouterSetupWorks.htm",
      "title": "How the Router Setup Property Works",
      "section": "How index values work"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user or a user with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Your TrueContext Team must be on the Enterprise tier. You must have a working knowledge of either regular expressions (regex) or index values. Note:TrueContext Support can help with general questions but cannot help you to write regex. Use the supported question types for source and target questions. Make sure the target questions (the questions you want to populate with substrings) appear after the source question (the question that captures the initial string) in your form. Tip:If you don’t have target questions set up in your form already, you can create them when you configure the Router Setup property.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/ConfigureRouterProperty.htm",
      "title": "Configure the Router Setup Property",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Limitations\n\nThe following Router Setup property limitations apply to repeatable and template-based sections: A source question in a regular section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. can’t route data to a repeatable or template-based section, except for questions in the footer. A source question in a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. can only route data to target questions within the same repeatable section. A source question in a nested repeatable section can only route data to target questions within the same nested repeatable section. A source question in the footer of a repeatable or template-based section can’t route data to any question in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/ConfigureRouterProperty.htm",
      "title": "Configure the Router Setup Property",
      "section": "Limitations"
    }
  },
  {
    "content": "the form. A source question in a template-based section can’t route data to any question in the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/ConfigureRouterProperty.htm",
      "title": "Configure the Router Setup Property",
      "section": "Limitations"
    }
  },
  {
    "content": "Steps to configure a Router Setup property\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. Select Edit Form. Select or create the question that captures the initial string (the source question). You can choose any of the supported question types: Text Field Text Area File Upload (JSON, XML, and text files) Barcode Scanner On the Properties tab, switch on the Router Setup. Result: The system displays the options to use Index or Regex. Select the type of routing, either Index or Regex. Use a regular expression (regex) to search for values in a longer string and store them in capture groups (also known as capturing groups). Use index values to identify substrings based on their position in the longer string. Info:The topics How regex works and How index values work provide more details about the Router Setup options. The steps to add an expression and map the results to target questions depend on the type of routing. Index Select or create the target",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/ConfigureRouterProperty.htm",
      "title": "Configure the Router Setup Property",
      "section": "Steps to configure a Router Setup property"
    }
  },
  {
    "content": "questions to populate. Enter the Range Start and Range End values for each target question. Regex Select Add an Expression. Enter the Regular Expression. Select or create the target questions to populate. Map the capture groups to the target questions. Tip: The list of target questions contains subsequent, unmapped questions in your form. To create a new question, just type a new question name and then select the Enter key. The Form Builder creates a new Text Field question using the standard default settings. You can edit this question later, after you save the source question. Select Save. Result: The system saves your question and any new questions that you created in step 6. Tip:In this example, the target questions are configured as read-only, which means that users can’t change the routed (pushed) values. Did you create a new question as part of the Router Setup configuration? If yes, remember to edit the question if you want to change the default settings. If no, remember to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/ConfigureRouterProperty.htm",
      "title": "Configure the Router Setup Property",
      "section": "Steps to configure a Router Setup property"
    }
  },
  {
    "content": "save and deploy the form. Note:Test your form on all device platforms to ensure that the form behaves as expected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/RouterProperty/ConfigureRouterProperty.htm",
      "title": "Configure the Router Setup Property",
      "section": "Steps to configure a Router Setup property"
    }
  },
  {
    "content": "Data Types\n\nThis section includes the following content: Data Type: AttachmentData Types: Date, Time, and Date/TimeData Type: DurationData Type: Email Address, URL, and Phone NumberSupported Domains for Email Data Type QuestionsData Type: Free TextData Type: Integer, Decimal, and Currency",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataTypes.htm",
      "title": "Data Types",
      "section": "Data Types"
    }
  },
  {
    "content": "Maximum Attachments\n\nApplies to: File Upload, Image, Sketch Pad. Select how many files are allowed to be attached to your form for this question. Note: It is advisable to not allow excessive attachments, as this will cause larger form submissions. Mobile users cannot submit the form if they go over the size limit. When choosing the maximum number of attachments, keep in mind that the default Data Record size limit is 2MB. This can be changed in the Settings tab of the form, under Advanced Options. If allowing a higher number of attachments, ensure that you are using higher compression settings (see Quality Settings below).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022215271DataTypeAttachment.html",
      "title": "Data Type: Attachment",
      "section": "Maximum Attachments"
    }
  },
  {
    "content": "Custom Filename Prefix\n\nApplies to: File Upload, Image, Sketch Pad. Use Data Reference Expression Language (DREL) or a standard alphanumeric phrase to create a prefix that will show up at the beginning of every attachment's filename, when sent separately from its document through data destinations. For more information, please read: How to Create a Custom Filename Prefix.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022215271DataTypeAttachment.html",
      "title": "Data Type: Attachment",
      "section": "Custom Filename Prefix"
    }
  },
  {
    "content": "Quality Settings\n\nApplies to: Image, Sketch Pad, Audio Recording Picture Quality (Image and Sketch Pad): Set how compressed the image is. Higher compression results in a smaller file size, which makes it possible to include more images in a form submission. If your mobile users are in areas of poor connection or on limited data plans, it may be best to use Small file (lower quality). TrueContext defaults to the Small file (lower quality) setting. Note: Form-level settings such as this override the device's image quality settings. Please ensure that you are using the appropriate setting on the question. Setting the picture quality will standardize the size of the image. As follows: Small file (lower quality): maximum of 640px on the longest side.Average quality and file size: maximum of 1024px on the longest side.High quality (Larger file): maximum of 4032px on the longest side.Use device settings: Uses the setting from the app (Small, Medium, Original, or Custom). Enforce audio quality",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022215271DataTypeAttachment.html",
      "title": "Data Type: Attachment",
      "section": "Quality Settings"
    }
  },
  {
    "content": "(override device settings) (Audio Recording only): By default, TrueContext uses the device settings for audio recording. This toggle allows you to override that to control audio quality, and by extension, file sizes to an extent. A longer audio clip will always be larger than a shorter one. Note: The default Data Record size limit is 2MB. This can be changed in the Settings tab of the form, under Advanced Options. If allowing a large number of attachments in your form, it is best to use Low Audio Quality to remain under the maximum form submission size.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022215271DataTypeAttachment.html",
      "title": "Data Type: Attachment",
      "section": "Quality Settings"
    }
  },
  {
    "content": "About\n\nThe Date, Time, and Date/Time data types record data in an appropriate format for use in questions regarding dates and times. They are often used in Date/Time Stamp questions to record when work began or ended, or to mark the date on a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022577191.html",
      "title": "Data Types: Date, Time, and Date/Time",
      "section": "About"
    }
  },
  {
    "content": "Compatible Question Types\n\nThese data types can be used with the following Question Types: Date/Time Selector Date/Time Stamp Time-Based Math Date/Time ✓ ✓ ✓ Date ✓ ✘ * ✓ ** (Enterprise tier only) Time ✓ ✘ * ✘ ** * The Date/Time Stamp only collects a Date/Time value and cannot be narrowed to a Date or a Time-only stamp. ** Time-Based Math requires a Date/Time value in order to calculate. Customers on the Enterprise tier can also calculate a date value by using the Date data type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022577191.html",
      "title": "Data Types: Date, Time, and Date/Time",
      "section": "Compatible Question Types"
    }
  },
  {
    "content": "Range Validation\n\nThis is available on: Date/Time Selector, Time-Based Math. Ensure that your users are entering appropriate dates by using Range Validation based on the question. For example, an Estimate form may have a future expiration date for the estimate's costs; using Range Validation set to \"In the Future\", you can ensure that your mobile users enter a future date.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022577191.html",
      "title": "Data Types: Date, Time, and Date/Time",
      "section": "Range Validation"
    }
  },
  {
    "content": "Default Value Source\n\nThis is available on: Date/Time Selector Setting a default value can save time for your users by automatically entering a value based on a static time set by you; based on when they opened the page containing the date/time question; or the time they opened the form (data record start).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022577191.html",
      "title": "Data Types: Date, Time, and Date/Time",
      "section": "Default Value Source"
    }
  },
  {
    "content": "Fallback values\n\nIf your team is on the Enterprise tier, you can set up fallback values in a Time-Based Math calculation. If a referenced question isn’t answered and doesn’t have a default value, the Time-Based Math calculation uses the fallback value. Info:The topic Question Type: Time-Based Math: Additional options for Enterprise customers describes fallback values in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022577191.html",
      "title": "Data Types: Date, Time, and Date/Time",
      "section": "Fallback values"
    }
  },
  {
    "content": "Exporting Date/Time Data: Format\n\nWhen Time/Date data is exported into CSV, it uses the ISO 8601 standard for Date/Time. For information on how time zones may affect your output, please read: Time Zone Settings",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022577191.html",
      "title": "Data Types: Date, Time, and Date/Time",
      "section": "Exporting Date/Time Data: Format"
    }
  },
  {
    "content": "Precision\n\nYou can choose how precisely the Duration data is recorded. For example, a Timesheet might require Hours and Minutes, while two different readings on an inspection might use Minutes and Seconds instead. Please note that precision settings will affect the output of the question. This means that any later questions will inherit the output of these questions. Using incorrect precision settings for your use case (such as using only Hours for a timesheet form) will result in unexpected values. Please ensure that you use the appropriate precision setting for your use case.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021890952.html",
      "title": "Data Type: Duration",
      "section": "Precision"
    }
  },
  {
    "content": "Min/Max Value\n\nYou can set up a range within which the submission is acceptable. For example, if a timesheet duration entry must fall between 15 minutes and 10 hours, you can set the minimum to 15 minutes, and the maximum to 10 hours. If a user enters 11 hours, the form will be blocked from being sent. These fields are affected by your Precision selection. Tip:If you don’t specify a Min Value, the minimum value defaults to 0 to ensure that the result is a positive number. Applying Only a Min or Max Value You can choose to set just one of these values, e.g.: Set a Maximum of 10 hours. Mobile users can enter any value up to and including 10 hours. Set a Minimum of 15 minutes. Mobile users can enter any value from 15 minutes to infinity. When your users enter an invalid value, they will see an error message, for example:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021890952.html",
      "title": "Data Type: Duration",
      "section": "Min/Max Value"
    }
  },
  {
    "content": "Default Value (Duration Field only)\n\nThe default value will appear as an initial value when mobile users open the form. You can save your mobile users some time by entering the most common value for a question; they only have to edit it if it varies from the norm. This property is not available on the following question types: Duration Calculation, Duration Math, Aggregation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360021890952.html",
      "title": "Data Type: Duration",
      "section": "Default Value (Duration Field only)"
    }
  },
  {
    "content": "How the Email Address, URL, and Phone Number data types work\n\nYou can use any of these data types to ensure that mobile users enter the correct type of information. Questions that use these data types also make it easier for users to enter information. For example, when a user taps a question that uses the Phone Number data type, the device opens a numeric keypad. With the URL data type, users have the option to open the URL after they enter it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "How the Email Address, URL, and Phone Number data types work"
    }
  },
  {
    "content": "Compatible question types\n\nText Field Dropdown, Radio Button, and Multiselect Button Group Card List",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "Compatible question types"
    }
  },
  {
    "content": "Email\n\nIf you intend to use an Email Data Destination to send data from a submitted record to the address provided in the question, you must use the Email data type. For example, if your mobile users need to send a copy of an invoice to the client, the question where they enter the client's email address must be an Email Data Type. Allow mobile users to launch an email to this address: When enabled, this option will create a small icon in the app that can be selected by your mobile users. Tapping on the icon will launch the default email app on your user's mobile device, creating an email directed to the email address entered in the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "Email"
    }
  },
  {
    "content": "URL\n\nThe URL data type is often made read-only with a default value or populated from a data source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. to provide reference material to mobile users that does not fit in Help Content, or is being used in a Document. Allow mobile users to launch a web browser from this URL: This will automatically open a browser window directed to the URL entered as answer to this question. Open the link inside the Mobile App: This will open the link without leaving the app, essentially opening a browser within the app. Open the link in an external web browser: This will open the link in the default browser for the mobile device. To prevent data loss when a customer navigates away from a Customer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "URL"
    }
  },
  {
    "content": "Feedback form, this option is only available for regular, Mobile App forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "URL"
    }
  },
  {
    "content": "Phone Number\n\nAllow mobile users to start a phone call to this number: This will automatically open the mobile device's default phone app with the phone number already entered, saving users from having to type the number again. Allow mobile users to send an SMS to this number: This will automatically open the mobile device's default SMS messaging app with the phone number already entered, saving users from having to type the number again. If both options are selected, the user will see a popup that allows them to choose between calling or sending a text message.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "Phone Number"
    }
  },
  {
    "content": "Default Value\n\nThe default value for all three data types populates the answer when mobile users open the form. You can save your mobile users some time by entering the most common value for a question; they only have to edit it if it varies from the norm. For example, if creating a site inspection where the lead rarely changes, you might enter the lead's email address as the default on \"Site Contact\".",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417583.html",
      "title": "Data Type: Email Address, URL, and Phone Number",
      "section": "Default Value"
    }
  },
  {
    "content": "Supported Domains for Email Data Type Questions Available on all tiers: Essentials Advanced Enterprise Question What are the supported domains that can be used as valid answers in Email data type fields? Answer For the time being the supported domains on our server are the original (internet) top level domains. This includes (but is not limited to) the following: .com .ca .net .org .int .gov .mil .edu Note: Enabling additional domains is under development.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360034488971.html",
      "title": "Supported Domains for Email Data Type Questions"
    }
  },
  {
    "content": "Validation\n\nValidation checks that your users have entered information correctly. Text Field Text Area Dropdown, Radiobutton, Multiselect Text Validation is available on: ✓ ✓ ✓ * * Validation on Dropdown/Radiobutton/Multiselect questions is intended for use on the 'Collect a text response with an \"Other\" option,' but will also validate predetermined answers set up in the form builder. Pre-Built Validation Types Non-accented letters and numbers only, no spaces (e.g. Abc123) Non-accented letters only, no spaces (e.g. ABC) Canadian Postal Code (e.g. Z1Y 2X7): Checks for a valid A0A0A0 postal code. U.S. ZIP Code (e.g. 58008): Standard 5-digit ZIP codes as well as ZIP+4 format are both acceptable. Custom Validation Custom Validation uses a Regular Expression (regex) to validate the text your users provide. This allows you the flexibility to check almost any kind of data against certain criteria, for example, checking the number of characters entered. Note: TrueContext Support cannot help",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001411843.html",
      "title": "Data Type: Free Text",
      "section": "Validation"
    }
  },
  {
    "content": "with testing your RegEx. Ensuring the expression is correct may be done using a third-party RegEx Tester. Many Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. (such as Salesforce) have character limits on fields that can be filled by TrueContext. Custom validation can ensure that your mobile users enter the right data. For example, a Project Name may be limited to 20 characters. This can be set up in the form builder like so: The Validation Error Message is what your mobile users see when they enter data that doesn't fit the validation. Using our example above on a device: Tips for Form Designers: Ensure that your regex works properly! Test your form, including the regex validation, in a test environment and on the appropriate devices (i.e. iOS, Windows, or Android) before releasing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001411843.html",
      "title": "Data Type: Free Text",
      "section": "Validation"
    }
  },
  {
    "content": "it to your mobile users. Write good error messages! Error messages should be clear, concise, and offer your mobile users an idea of how to fix what went wrong with the entry.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001411843.html",
      "title": "Data Type: Free Text",
      "section": "Validation"
    }
  },
  {
    "content": "Default Value\n\nThe default value will appear as an initial value when mobile users open the form. You can save your mobile users some time by entering the most common value for a question; they only have to edit it if it varies from the norm. There are some question type specific properties: Use mobile user's username as the default value: this will put the mobile user's TrueContext username as an answer to the question. This only applies to the Text Field question type. Note: If a question is Required but has a default answer, it is considered Answered in the app. This means that mobile users can skip answering the question themselves.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001411843.html",
      "title": "Data Type: Free Text",
      "section": "Default Value"
    }
  },
  {
    "content": "Keyboard Type\n\nThis setting allows you to choose different keyboard Input Types based on what kind of information your mobile users will be entering. For example, it is easier to enter a URL on a keyboard that has the / and . characters easily accessible. Tips for Form Designers:There are specific data types that may be easier to use for the kind of information your mobile users will be entering. For example, if you find yourself choosing an email keyboard for a Text data type, you might also want to consider using the email data type. Below are screenshots of the various keyboard types on an Android device: Standard Numeric Phone Number URL Email",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001411843.html",
      "title": "Data Type: Free Text",
      "section": "Keyboard Type"
    }
  },
  {
    "content": "Allowable Range (Min/Max)\n\nYou can set up a range within which the submission is acceptable. For example, if an inspection result must fall between 400-600, you can set the Minimum to 400, and the maximum to 600. If a mobile user enters 101, the form will be blocked from being sent. Applying Only a Min or Max Value You can choose to set just one of these values, e.g.: Set a Maximum of 600. Mobile users can enter any value up to and including 600. Set a Minimum of 0. Mobile users can enter any value from 0 to infinity. When your users enter an invalid value, they will see an error message (shown on an Android device):",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417603.html",
      "title": "Data Type: Integer, Decimal, and Currency",
      "section": "Allowable Range (Min/Max)"
    }
  },
  {
    "content": "Decimal Place Precision (Decimal Only)\n\nSet a minimum or maximum number of decimal places. If used in a calculation, and the calculated answer has more decimal places than allowed, it will be rounded to an allowed number using banker's rounding. Banker's rounding: an algorithm for rounding quantities to integers, in which numbers which are equidistant from the two nearest integers are rounded to the nearest even integer. Thus, 0.5 rounds down to 0; 1.5 rounds up to 2. If it has less decimal places than allowed, .0's will be added. If one value is left blank, there will be no limit on that end of the range.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417603.html",
      "title": "Data Type: Integer, Decimal, and Currency",
      "section": "Decimal Place Precision (Decimal Only)"
    }
  },
  {
    "content": "Default Value\n\nThe default value will appear as an initial value when mobile users open the form. You can save your mobile users some time by entering the most common value for a question; they only have to edit it if it varies from the norm. This property is not available on the following question types: Recap, Aggregation, Calculation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417603.html",
      "title": "Data Type: Integer, Decimal, and Currency",
      "section": "Default Value"
    }
  },
  {
    "content": "Currency (Currency Only)\n\nSelect the appropriate currency from the dropdown list. Documents & Reports: This setting shows in the form's documents and reports. Mobile Devices: This setting does not show on the mobile device display. To change the currency type in your documents and reports: Edit the desired form and navigate to the Currency question. Select the Properties tab. From the dropdown list, select the appropriate currency:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001417603.html",
      "title": "Data Type: Integer, Decimal, and Currency",
      "section": "Currency (Currency Only)"
    }
  },
  {
    "content": "Work Instructions and User Help\n\nThis section includes the following content: Add Help Options to QuestionsQuestion Text Formatting",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/WorkInstructionsUserHelp.htm",
      "title": "Work Instructions and User Help",
      "section": "Work Instructions and User Help"
    }
  },
  {
    "content": "How Help Options work\n\nThe option that you choose depends on the type of content and whether you want field users to have offline access. Note:You can only select one type of help option per question. Remember that you can also provide context in your form with Information Label and Resource Image questions. Help Option Description Available offline? YouTube Video Link to a YouTube video. The video opens within the Mobile App. No Resource Images Display up to six Resource Images. On the Mobile App, field users select from a gallery of image thumbnails to open the full-size image. Info: If your company has the Multi-Language add-on, you can add translated resources to use in Multi-Language forms. If you have the same Resource Image in multiple languages, you can link the translations. When a field technician opens a Multi-Language form and selects a language, any Resource Images in help options display in that language.The topic Resource Images: Set up multiple languages describes this",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003812043_AddingHelpContentToQuestions.html",
      "title": "Add Help Options to Questions",
      "section": "How Help Options work"
    }
  },
  {
    "content": "option in more detail.If your company is on the Enterprise tier, you can make Resource Images available outside of forms in the Resource Library. Yes, once the user has reconciled to download the images Web Link Display a link to a relevant web page. You can set the link to open within the Mobile App or in an external web browser. Tip: For secure sites that require users to sign in, set the link to open in an external browser. This uses the external browser settings to keep the user signed into the secure site. Note: Use HTTPS to provide an additional layer of security. No Rich Content Display work instructions or other information, such as formatted text and up to six Resource Images. This option displays the text and images like a web page, with no image gallery. Yes—text and Resource Images, once the user has reconciled to download the images No—URLs",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003812043_AddingHelpContentToQuestions.html",
      "title": "Add Help Options to Questions",
      "section": "How Help Options work"
    }
  },
  {
    "content": "Add Help Options\n\nChoose a help option based on the content that you want to display. From the Forms & Integrations menu, navigate to the form you want to set up. Select Edit Form. Select a question, and then select Help Options. Switch on the Provide help... toggle. Select the type of content that you want to add, and then enter the details. To play a video within the Mobile App, select YouTube Video, and then enter the URL. Tip:Remember that only online users can access a URL. To display a gallery on the user’s device, select the Resource Images option and add up to six images. You can’t include text with the images, but you can use an Information Label question to provide context. Or, to include text with images, select the Rich Content option. Info:If your company is on the Enterprise tier, you can make Resource Images available outside of forms in the Resource Library. Tip:Once downloaded, Resource Images are available offline. To display a web page, select Web Link, and then",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003812043_AddingHelpContentToQuestions.html",
      "title": "Add Help Options to Questions",
      "section": "Add Help Options"
    }
  },
  {
    "content": "enter a URL. Tip:Remember that only online users can access a URL. To add text, images, or both, select the Rich Content option. This option renders the text and images like a web page. You can add up to six Resource Images. Tip:To prevent the user having to scroll to see a large image, size all images with the user’s device in mind. Save your changes, and then save and deploy the form. Result: When the user reconciles, the Mobile App downloads any Resource Images and text that you added. To open the help, users select the help icon next to the question text: Tip: Always test a form's performance on your users’ least powerful mobile devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003812043_AddingHelpContentToQuestions.html",
      "title": "Add Help Options to Questions",
      "section": "Add Help Options"
    }
  },
  {
    "content": "Add help content to the Resource Library\n\nAvailable on the Enterprise tier only: Essentials Advanced Enterprise You set up help options for specific questions in a specific form. To make help content more broadly available, add Resource Images and Resource Documents to the Resource Library. The Resource Library is a digital, searchable, multilanguage knowledge base that’s available to field technicians in the TrueContext Mobile App. A field technician can refer to a document or image in the Resource Library at any time, even if they’re not working on a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003812043_AddingHelpContentToQuestions.html",
      "title": "Add Help Options to Questions",
      "section": "Add help content to the Resource Library"
    }
  },
  {
    "content": "What is question text formatting?\n\nQuestion text formatting enables you to add lists, headings, bold type, italics, and other formatting to question text, including questions in footers. You can enter the text using a text editor or markdown. The formatted text is displayed on mobile user devices and in the generated PDF documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTextFormatting.htm",
      "title": "Question Text Formatting",
      "section": "What is question text formatting?"
    }
  },
  {
    "content": "When to format question text\n\nFormatted text makes information easier to scan and read. Use formatted question text with any type of question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTextFormatting.htm",
      "title": "Question Text Formatting",
      "section": "When to format question text"
    }
  },
  {
    "content": "Example of formatted question text\n\nThe following examples show how you can format question text to make it easier for your users and customers to read detailed information. The information might include work instructions for your mobile device users or customer signature pages. The following illustration shows an example of work instructions with no question text formatting applied: The next illustration shows the improvement in readability when you use question text formatting:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTextFormatting.htm",
      "title": "Question Text Formatting",
      "section": "Example of formatted question text"
    }
  },
  {
    "content": "How to format question text\n\nInfo: Formatting does not apply to: Answers Section headers Page headers Summary tables in repeatable sections Add or edit the question that you want to format. On the General tab, enable question text formatting with the toggle switch. Result: The Question Text field shows the formatting and preview options. In the question text field, you can enter markdown or select from the options in the editor. Note:If you want to format adjacent lines differently, select the Enter key twice to add a line break. Result: The editor shows the markdown and applied formats. Tip:Select the preview icon to display the question text without the markdown symbols. Continue to configure the question, and then save it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTextFormatting.htm",
      "title": "Question Text Formatting",
      "section": "How to format question text"
    }
  },
  {
    "content": "Supported markdown syntax\n\nYou can format question text using the text editor or enter markdown in the question text field. Details Format Syntax and sample markdown Example Heading 1 # # Header 1 Heading 2 ## ## Header 2 Heading 3 ### ### Header 3 Bold ** or __ **Bold using double asterisks** __Bold using double underscore__ Italics * or _ *Italic using single asterisk* _Italic using single underscore_ Bold Italics Nested bold and italics. ***Bold-Italic using triple asterisk*** ___Bold-Italic using triple underscore___ Bulleted Lists * or - followed by a space before text * Bullet List 1 * Bullet List item 2 * Bullet List item 3 Numbered lists The number followed by a period and a space before the text 1. Numbered List item 1 2. Numbered List item 2 3. Numbered List item 3 Inline code ` `inline code` Preformatted text ``` This is pre-formatted text it keeps the spaces that you add and ``` ``` the line breaks It can have multiple lines. ``` Line breaks Not entered using markdown.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTextFormatting.htm",
      "title": "Question Text Formatting",
      "section": "Supported markdown syntax"
    }
  },
  {
    "content": "Press Enter/Return twice to add a line break.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/QuestionTypes/QuestionTextFormatting.htm",
      "title": "Question Text Formatting",
      "section": "Supported markdown syntax"
    }
  },
  {
    "content": "Conditional Logic\n\nThis section includes the following content: Conditional LogicCreate and Manage Conditional LogicBuilding Conditional Logic RulesConditional Logic: Operators and ActionsConditional Logic Regex MatchingBest Practices for Conditional Logic Rules",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ConditionalLogic.htm",
      "title": "Conditional Logic",
      "section": "Conditional Logic"
    }
  },
  {
    "content": "Conditional Statements\n\nThe basis for Conditional Logic is \"If This, Then That.\" If This is true, then That action will happen. This is a conditional statement. Using the example of a site inspection form: If the room being inspected equals the common room, then show the \"common room\" section, hide the \"washroom\" section, and hide the \"warehouse\" section. Else and Else If statements are both optional. They allow you to define additional outcomes if the original If is not true. If the room being inspected equals the common room, then show the \"common room\" section, hide the \"washroom\" section, and hide the \"warehouse\" section. Else If the room being inspected equals the washroom, then show the \"washroom\" section, hide the \"common room\" section, and hide the \"warehouse\" section.Else If the room being inspected equals the warehouse, then show the \"warehouse\" section, hide the \"common room\" section, and hide the \"washroom\" section.Else hide the \"common room\" section, hide the \"washroom\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/220682148.html",
      "title": "Conditional Logic",
      "section": "Conditional Statements"
    }
  },
  {
    "content": "section, and hide the \"warehouse\" section. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/220682148.html",
      "title": "Conditional Logic",
      "section": "Conditional Statements"
    }
  },
  {
    "content": "Benefits of Conditional Logic\n\nConditional Logic can be used to build more powerful and dynamic forms that react to the context of a job, in real-time. As mobile users fill out the form, the flow and requirements can change based on their answers. This helps you to: Build forms with different branches, allowing you to merge similar forms into one. Require additional information in specific scenarios, enforcing different requirements in different contexts. Hide information that is irrelevant to the current task, streamlining a user’s workflow. Guide users to complete tasks correctly and in the correct flow, reducing the time it takes to train users to complete a job properly.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/220682148.html",
      "title": "Conditional Logic",
      "section": "Benefits of Conditional Logic"
    }
  },
  {
    "content": "Supported Operators and Actions\n\nSee the full definitions of available operators and actions. If... (an answer) Then... Is equal to/not equal to Is greater than/less than Is greater than or equal to Is less than or equal to Is between Contains Is answered/is not answered Matches/does not match a regular expression (Enterprise tier only) Set page ignored/not ignored Set section ignored/not ignored Set question visible/not visible Set question required/not required Set question read-only/not read only Set the value of a question Clear a question Reset a question If... (a selected language) (Multi-Language add-on only) Is/is not a specific language",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/220682148.html",
      "title": "Conditional Logic",
      "section": "Supported Operators and Actions"
    }
  },
  {
    "content": "Additional Documentation\n\nConditional Logic: Operators and Actions Building Conditional Logic Rules Best Practices for Conditional Logic Rules",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/220682148.html",
      "title": "Conditional Logic",
      "section": "Additional Documentation"
    }
  },
  {
    "content": "Create and Manage Conditional Logic Harness the power of Conditional Logic in form creation to streamline your workflows. This guide offers detailed steps on how to create, manage, and test rules that adapt based on user responses, making your forms dynamic and responsive. This topic describes how to effectively use Conditional Logic to enhance the field user experience and boost efficiency. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Contents Create and Manage Conditional Logic About View a Form's Existing Conditional Logic Rules Create a Conditional Logic Rule Delete a Conditional Logic Rule Copy a Conditional Logic Rule Deactivate a Conditional Logic Rule About Conditional Logic works on an “If This, Then That” basis, meaning you can automate your forms to respond differently based on the input provided. It's a useful way to guide field users through a workflow that is specific to their situation. For instance, you might want to hide certain form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/ConditionalLogic/CreateManageConditionalLogic.htm",
      "title": "Create and Manage Conditional Logic"
    }
  },
  {
    "content": "sections until a specific option is selected, or make a form field required based on another field’s answer. These rules can be viewed, created, copied, deleted, and even deactivated for testing purposes. The topic provides detailed instructions on how to manage these rules, including locating them in the Web Portal and Form Builder, configuring new rules, and removing or duplicating existing ones. It emphasizes the need to test forms thoroughly after any changes to ensure they function as expected. Overall, Conditional Logic is a powerful tool for creating dynamic, responsive forms that adapt to user input. Read more general information about Conditional Logic. View a Form's Existing Conditional Logic Rules Conditional Logic rules define how the mobile form behaves (what parts of the form are hidden, shown, required, etc) based on the information provided by mobile users. When Viewing a Form in the Web Portal When you have a form with a lot of Conditional Logic rules and want an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/ConditionalLogic/CreateManageConditionalLogic.htm",
      "title": "Create and Manage Conditional Logic"
    }
  },
  {
    "content": "overview, this is the easiest way to see all of your Conditional Logic rules in a condensed form. Locate the desired form in the web portal. Navigate to the Pages & Questions tab for that form. Scroll down to the bottom of the page, after the table displaying the pages and questions. View all of the Conditional Logic rules at the bottom, under the Conditional Logic header. Each Logic Element header shows a single rule, with its name, description, and behavior. When Editing a Form in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. Edit the form to open it in the Form Builder. Navigate to the Conditional Logic tab. Each of the Conditional Logic rules is listed in the left navigation. Select a rule on the left to view the details on the right. Create a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/ConditionalLogic/CreateManageConditionalLogic.htm",
      "title": "Create and Manage Conditional Logic"
    }
  },
  {
    "content": "Conditional Logic Rule Conditional Logic rules define how the mobile form behaves (what parts of the form are hidden, shown, required, etc) based on the information provided by mobile users. Edit the form to open it in the Form Builder. Navigate to the Conditional Logic tab. Select the Add a Rule button in the left navigation. Configure your rule. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience. Delete a Conditional Logic Rule If you would like to permanently remove a behavior from your form, delete the desired Conditional Logic rule. Keep in mind that this will affect how the mobile form looks, as well as what information it requires from your field users. It is a good idea to test the form thoroughly after removing a rule. Edit the form to open it in the Form Builder. Navigate to the Conditional Logic tab. Select the desired",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/ConditionalLogic/CreateManageConditionalLogic.htm",
      "title": "Create and Manage Conditional Logic"
    }
  },
  {
    "content": "rule from the left navigation. On the right, scroll down to the bottom of the rule. Select the Delete Rule button, and select it again to confirm. The rule will be removed. Copy a Conditional Logic Rule If you are building a form with multiple pages containing the same questions and requirements, you may need to copy Conditional Logic rules. To copy a Conditional Logic rule: Edit the form to open it in the Form Builder. Navigate to the Conditional Logic tab. Select the desired rule from the left navigation. Select the Rule Menu icon next to the rule name. Select Copy Rule: The new copy of the rule will appear in the left navigation with a number added to the end of the name: Note:If you copy a page or section with self-contained Conditional Logic rules (i.e., all conditions and effects are contained within the page or section being copied) then the Conditional Logic will also be copied. Deactivate a Conditional Logic Rule You may want to deactivate Conditional Logic rules for testing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/ConditionalLogic/CreateManageConditionalLogic.htm",
      "title": "Create and Manage Conditional Logic"
    }
  },
  {
    "content": "purposes yet retain the rule configuration in the form. By default, a rule is active. To deactivate a Conditional Logic rule: Edit the form to open it in the Form Builder. Navigate to the Conditional Logic tab. Select the rule from the left navigation. Toggle Rule Active to the off position (left). Info:The icon next to the rule name in the left navigation indicates an inactive rule. The topic Viewing Form Details describes the Pages & Questions tab, which also indicates inactive rules.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CreateOrEditAFormWithTheFormBuilder/ConditionalLogic/CreateManageConditionalLogic.htm",
      "title": "Create and Manage Conditional Logic"
    }
  },
  {
    "content": "About\n\nConditional Logic uses “If This, Then That” statements to add intelligent automation into forms, guiding users of a form through a workflow depending on their context. Read more general information about Conditional Logic.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "About"
    }
  },
  {
    "content": "Create a Conditional Logic Rule\n\nEdit the form to open it in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Select Conditional Logic > Add a Rule. Enter a Rule Name that: Is no more than 50 characters and is unique within the form. Describes how the rule affects the form. A descriptive name makes it easy to find the rule in the side navigation when updating the Conditional Logic in the future. (Optional) Enter a Rule Description that provides a detailed summary of how the rule works and what it affects. A Rule Description can be up to 255 characters. (Optional) Switch off the rule for testing. The new rule is active by default. To test your form without the rule, switch Rule Active off. Configure the If, Then, and Else statements as described below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Create a Conditional Logic Rule"
    }
  },
  {
    "content": "Save the form. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Create a Conditional Logic Rule"
    }
  },
  {
    "content": "\"If\" statements\n\nThis is the condition/set of conditions that must be met in order for any action to take place. Every \"If\" Condition must contain the following: Reference Question Operator Comparison Value or Question",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"If\" statements"
    }
  },
  {
    "content": "Reference question\n\nThis is the question that you will be comparing. Only some types of questions are allowed to be used as a reference question. If you are using a Dropdown, Radio Button, Multiselect, Card List, or Button Group question with options \"defined here\", you can select those options from the IF dropdown. Only questions with the following data types can be used as a reference question: Freetext URL/Email/Phone Number Integer/Decimal/Currency Duration Date, Time, and Date/Time The questions that are available to you will be restricted based on the above types. If the list is still large, begin typing a question identifier or question text to filter the list of available questions. Info:If your team has the Multi-Language add-on, you can set up a condition based on the Selected Language. This is the language selected by the user, a dispatch, or an App‑to‑App call.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Reference question"
    }
  },
  {
    "content": "Operator\n\nThis is how you will be comparing the reference question with the comparison value or question. Possible operators include: equals/does not equal contains is less than/is greater than is less than or equal to/is greater than or equal to is between is/is not (for Selected Language conditions, Multi-Language add-on only) matches/does not match a regular expression (regex) Info:Conditional Logic Regex Matching is available on the Enterprise tier only. The operators that are available to you will be restricted based on the data type of the reference question you choose. For example, a \"Freetext\" data type cannot be \"less than\" anything. Review the list of what operators are valid for which question types and the full definitions for each operator.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Operator"
    }
  },
  {
    "content": "Comparison value or question\n\nThis is the value (a constant or the answer to another question) to compare with the reference question. Compare to a constant Simply type in the value you would like to compare it to, like \"70\" or \"Pass.\" The value must match the data type of the question. For example, you cannot compare a question with an Integer data type to the word \"Pass.\" Compare to a question Select a question from the list. The available questions will be limited to those with a matching data type. Optionally begin typing to filter the list of available questions. If you are using a Dropdown, Radio Button, Multiselect, Card List, or Button Group question with options \"defined here\", you can select those options from the dropdown. Compare to a language (Multi-Language add-on only) Select one or more languages from the list. If you select more than one language, the condition is true if any of the languages match the Selected Language. You can also use the OR option if you want to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Comparison value or question"
    }
  },
  {
    "content": "define a separate condition for each language. Both ways of selecting more than one language have the same effect. The list only includes the languages that are set up in the form settings. Compare to a regular expression (regex) (Enterprise tier only) Enter a regular expression (regex) to match the answer against a pattern. For example, you can set up a pattern to match: Case-sensitive text Ends with Starts with Wildcard characters (single and multiple) Info:The topic Conditional Logic Regex Matching describes this feature in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Comparison value or question"
    }
  },
  {
    "content": "\"If\" Statements with Multiple Conditions\n\nAn If statement can contain multiple conditions, and you can specify whether ALL or ANY of the conditions must be true in order for the statement to be true and trigger the \"Then\" action. To create an IF statement with multiple conditions: Choose AND if you want all conditions to be true in order for the actions to take place, or choose OR if you want any of them to be true in order for the actions to take place. A new block will appear underneath, separated by an AND or OR (whichever you chose). Configure the new condition.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"If\" Statements with Multiple Conditions"
    }
  },
  {
    "content": "\"If\" Statements with Sets of Conditions\n\nIt is also possible to build more complex statements that involve multiple conditions. For example, you could evaluate the following statement, where one simple condition could cause the \"Then\" actions to occur, or a set of two other conditions could trigger those actions: If Total Inspection Score is less than 70 OR (Total Inspection Score is less than 80 AND Customer Satisfaction is less than 70)Then Inspection Failed is not ignored To create sets of conditions: Build an If statement with at least two conditions, as shown in the following example. Result: The Then action is triggered when an inspection is required and the room being inspected is the Common Area. Once you have at least two conditions defined, you can create different sets of conditions. To create a set of conditions, select the opposite “join” option. If you select an option from within a condition, the Form Builder groups the selected condition with the new one: If you select",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"If\" Statements with Sets of Conditions"
    }
  },
  {
    "content": "a join option outside a condition, the Form Builder groups the existing conditions into a set: Result: The conditions joined by AND become a set of conditions: As you continue to add conditions, the Form Builder uses brackets and shading to show the structure of nested sets of conditions:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"If\" Statements with Sets of Conditions"
    }
  },
  {
    "content": "\"Then\" statements\n\n\"Then\" is a list of actions; it controls what happens in the form when the \"If\" is true. Every \"Then\" statement must contain the following: An action target An action For some actions, a target value",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"Then\" statements"
    }
  },
  {
    "content": "Action Target\n\nThis is the page, section or question that you would like to affect with Conditional Logic. NOTE: Any action target (whether it is a page, section or question) must appear in the form AFTER every single question reference or comparison question that is in your \"If\" condition.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Action Target"
    }
  },
  {
    "content": "Action\n\nThis is what should happen to the action target -- what about it should be changed when the \"If\" is true. All action targets you use must come after ALL of the questions referenced in your \"If\" statement. Pages and sections: Can be made ignored or not ignored. Questions: Can be made visible or not visible (any question type) Can be reset or cleared (most question types) Can be made required or not required (many question types) Can be made read-only or not read-only (many question types) Can be set to have a specific value (like \"Pass\" or \"50\") or be set to the value collected in another question (some question types) The list of available actions will be filtered based on the type of action target (page, section, or type of question) that you chose. Review the full list of what actions are allowed, as well as the full definition of the actions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Action"
    }
  },
  {
    "content": "Target Value\n\nThis field will only appear if you have selected \"is set to\" as the action. This is the value you would like your action target to be set to, if your \"If\" statement is true. Set to a constant Simply type in the value you would like to set the question to, like \"70\" or \"Pass.\" The value must match the data type of the question. For example, you cannot compare a question with an Integer data type to the word \"Pass.\" Set to the answer of a question Select a question from the list. Optionally, begin typing to filter the list of available questions The available questions will be limited to those with a matching data type.The question must come BEFORE the action target in the form. If you are using a Dropdown, Radio Button, Multiselect, Card List, or Button Group question with options \"defined here\", you can select those options from the dropdown. Set to the current date and time (Enterprise tier only) For a Date/Time Selector question, you can set the value to the current",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Target Value"
    }
  },
  {
    "content": "date and time. This option does not apply to Date/Time Stamps. Tip:If the answer to the Reference question changes, the rule runs again. When the If statement is true, the action updates the current date/time value. Field users might see the value change as they work through the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Target Value"
    }
  },
  {
    "content": "Then statement organization\n\nSome Conditional Logic rules have multiple Then statements. If your rule has a long list of Then statements, organize the statements to run in a logical order. To move a Then statement, select the handle to the left of the statement and drag the row to a new place. You can also add a new Then statement anywhere in the list. Hover between two Then statements and select the plus sign [+] to add a new statement. Info:The topic Best Practices for Conditional Logic Rules describes the benefits of reordering Then statements in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Then statement organization"
    }
  },
  {
    "content": "\"Else\" statements\n\nThe \"Else\" statement contains a list of actions that should happen when your \"If\" statement is NOT true. Every \"Else\" statement must contain the following: An action target An action For some actions, a target value \"Else\" statements are built in exactly the same way as \"Then\" statements. Why build an \"Else\" statement? \"Else\" statements are useful when mobile users make mistakes or change their mind. If they initially make a choice in the form that shows a page and makes a question required, but then change their mind, the \"Else\" statement needs to be able to hide the page and make the question not required. In most cases the \"Else\" statement should simply do exactly the opposite of what your \"Then\" statement did. Opposite Actions Below is a list of actions that you might put in a \"Then\" statement, and their corresponding opposite actions that should be in the \"Else.\" \"Then\" Statement \"Else\" Statement page is ignored is not ignored section is ignored is not ignored",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"Else\" statements"
    }
  },
  {
    "content": "question is visible is not visible question is set to is reset (or is cleared) question is required is not required question is read-only is not read-only Auto-Generating \"Else\" Statements If you only have one \"If\" statement in a Conditional Logic rule, the \"Else\" statements can be auto-generated. These will be the opposite actions (as listed in the table above) of the \"Then\" statement. If your Conditional Logic rule contains an \"Else If\" statement, the \"Else\" statements cannot be auto-generated. This functionality speeds up the creation of Conditional Logic rules. However, it can be disabled or overridden by selecting \"Custom Actions\": Tip:Else statements are optional—you can delete any or all of the actions. To delete an Else action, select Custom Actions, and then select the X next to the action.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"Else\" statements"
    }
  },
  {
    "content": "\"Else If\" Statements\n\n\"Else If\" statements are optional, and not needed for most conditions. An \"Else if\" statement is an additional \"If/Then\" statement in the same Conditional Logic rule as another \"If/Then\". The \"Else If\" statement is only tested when the original If statement is NOT true. A single Conditional Logic rule can have several \"Else If\" statements. If one statement evaluates as TRUE, the additional \"Else if\" statements following the TRUE statement will not be evaluated. Example: If the room being inspected equals the common room, then show the \"common room\" section, hide the \"washroom\" section, and hide the \"warehouse\" section. Else If the room being inspected equals the washroom, then show the \"washroom\" section, hide the \"common area\" section, and hide the \"warehouse\" section.Else If the room being inspected equals the warehouse, then show the \"warehouse\" section, hide the \"common area\" section, and hide the \"washroom\" section.Else, hide the \"common room\" section, hide",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"Else If\" Statements"
    }
  },
  {
    "content": "the \"washroom\" section, and hide the \"warehouse\" section. Why build an \"Else If\" statement? \"Else If\" statements are especially useful if you are testing a question/group of questions where there are more than two mutually exclusive possible outcomes. Sometimes, it is not possible to build separate Conditional Logic rules to accomplish this because they may conflict. \"Else If\" statements help organize related but mutually exclusive Conditional Logic behavior under a single rule, making it easier to manage and modify the logic. If you have a lot of conditions like this, performance on mobile devices can be improved by using \"Else if\" statements to reduce the number of Conditional Logic rules. Try to put the scenario the form will launch in as the first \"If\" statement to improve performance more.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "\"Else If\" Statements"
    }
  },
  {
    "content": "Testing and Troubleshooting\n\nNote: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience. Conditional logic Conditional logic is a tool in the Form Builder that establishes the workflow of a form. By using the \"If This, Then That\" structure, questions or sections will be displayed, hidden, or automatically populated based on answers to preceding questions. is very powerful and configurable, but it does introduce some complexity as well as more ways that things can go wrong. When you make changes, we highly recommend you test the following before deploying it to production, to ensure that everything behaves as expected: Every condition and every possible path through the form. What happens if you \"undo\" an answer that triggers Conditional Logic. If you added a lot of new rules, test on the oldest/lowest memory mobile device that your field",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Testing and Troubleshooting"
    }
  },
  {
    "content": "users may be using. The order of Then statements in each rule. You can speed up troubleshooting during testing by keeping Then statements organized. This makes it easy to find and fix a problem if a rule doesn’t behave as expected. You may want to deactivate Conditional Logic rules for testing purposes yet retain the rule configuration in the form. To deactivate a Conditional Logic rule: Edit the form to open it in the Form Builder. Navigate to the Conditional Logic tab. Select the rule from the left navigation. Toggle Rule Active to the off position (left). Info:The icon next to the rule name in the left navigation indicates an inactive rule. The topic Viewing Form Details describes the Pages & Questions tab, which also indicates inactive rules. To reactivate the rule, toggle Rule Active to the on position (right).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003318126.html",
      "title": "Building Conditional Logic Rules",
      "section": "Testing and Troubleshooting"
    }
  },
  {
    "content": "Operators: Compatibility with Questions and Data Types\n\nGeneral Rules: The reference question must be a data type compatible with the operator (see tables below). If comparing to another question, that question's data type must also be compatible with the operator. For example, you can’t say “If (integer) = (date/time question)”. If comparing to a hard-coded value, it must be of a data type compatible with the operator. For example, you can’t say “If (email question) = 5”. The form builder prevents you from saving a form with these mistakes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Operators: Compatibility with Questions and Data Types"
    }
  },
  {
    "content": "Compatibility by Operator\n\nName Compatible Data Types Incompatible Data Types Equals Does Not Equal Freetext Integer/Decimal/Currency * Email/Phone Number/URL * Date/Time/Date|Time Single Checkbox Duration *Except Multiselect questions Signature/Photo/Sketch File/Audio Geolocation Barcode Information Document Question Type: Multiselect Less Than Greater Than Less Than or Equal To Greater Than or Equal To Between Integer/Decimal/Currency * Date/Time/Date|Time Duration *Except Multiselect questions Freetext Single Checkbox Email/Phone Number/URL Signature/Photo/Sketch File/Audio Geolocation Barcode Information Document Question Type: Multiselect Between Integer/Decimal/Currency * Date/Time/Date|Time Duration *Except Multiselect questions Freetext Single Checkbox Email/Phone Number/URL Signature/Photo/Sketch File/Audio Geolocation Barcode Information Document Question Type: Multiselect Contains Freetext Integer/Decimal/Currency Email/Phone Number Duration Single Checkbox",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Compatibility by Operator"
    }
  },
  {
    "content": "Date/Time/Date|Time URL Signature/Photo/Sketch File/Audio Geolocation Barcode Information Document Is AnsweredIs Not Answered Compatibility is by question type: Text Field, Text Area Dropdown/Radiobutton/Multiselect Button group Duration Field Date/time, Date, Time selector Geolocation control File, Audio Photo, Sketch, Signature Document Editor Barcode Card List Compatibility is by question type: Single checkbox Information label Stepper/Slider Digit extraction String concatenation Calculation, Duration calculation Geo stamp Date/time Stamp Time-Based Math Enterprise tier only Matches (regex) Does Not Match (regex) You can use a regular expression to match answers that are captured as strings. This includes questions that have both display and data values—you can match on the data value. Question types Data types Barcode Scanner Button Group (data value) Card List (data value) Dropdown (data value) Radio Button (data value) Slider Stepper String Concatenation Text Area Text Field Free",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Compatibility by Operator"
    }
  },
  {
    "content": "Text Integer Decimal Currency (value only, not the currency symbol) Email Address Phone Number URL Barcode The following question types are not compatible with regex matching: Audio Recording Calculation Date/Time Selector Date/Time Stamp Digit Extraction Document Editor Duration Calculation Duration Field Duration Math File Upload Geo Location Image Information Label Multiselect Recap Resource Image Signature Single Checkbox (Yes/No) Sketch Pad Time-Based Math Actions Actions dictate what happens when a statement is true. Actions can hide a page, make a question required or not required, for example. Essentially, actions change the user's path through the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Compatibility by Operator"
    }
  },
  {
    "content": "Available Actions\n\nAction Applies to Definition Is Ignored Pages, Sections This setting makes the form act as if the page/section and its data do not exist. The page/section and its data will not be visible and will not be referenced elsewhere. Data on Ignored pages/sections: Will not be submitted Does not exist for mobile users Will not be used in calculations or Conditional Logic Any Required questions on ignored pages/sections will not be enforced. Is Not Ignored Pages, Sections Shows the page/section in the mobile form. If the page/section had answers in it, was set to ignored, and is subsequently \"not ignored\" again, the data will still be there, unless the questions have also been cleared or reset. Is Visible Questions Shows the question in the mobile form. Is Not Visible Questions Hides the question in the mobile form. If it is \"Required\", it won’t be enforced. If it has an answer, it will not be cleared unless another action does this. Any answer it has can affect the rest of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Available Actions"
    }
  },
  {
    "content": "the form and will be submitted. Is Required Questions Mobile users will be forced to answer the question before submitting the form (unless on an ignored page/section). Is Not Required Questions Mobile users will not be forced to answer the question. Is Read-Only Questions Mobile users will not be able to manually alter the answer. Is Not Read-Only Questions Mobile users will be able to manually alter the answer. Is Set to Questions Sets a specified answer for a question further ahead in the form. Note:We recommend that you avoid dispatching into fields that are “set to” a value using Conditional Logic actions. Dispatching a value can produce unexpected results. Is Cleared Questions Erases an answer to a question (will erase default values). Is Reset Questions Resets a question to its default settings (returns it to its default value).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Available Actions"
    }
  },
  {
    "content": "Actions: Compatibility\n\nRules for Actions Actions must be valid for the question/item that is being acted on (see below). Actions must be performed on pages/sections/questions that occur after ALL the inputs (i.e., sequential).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Actions: Compatibility"
    }
  },
  {
    "content": "Compatibility by Operator\n\nName Compatible Question Types Incompatible Question Types Is Visible Is Not Visible All None Is Required Is Not Required Text Field/Text Area Dropdown/Radiobutton Button Group Duration Field Date, Time & Date/Time Selectors Signature/Photo/Sketch Document Editor File/Audio Geo Control Barcode Scanner Card List Information Multiselect Stepper/Slider Single Checkbox Calculations Time-Based Maths Aggregations String Concatenation Digit Extraction Geo Stamp Date/Time Stamp Is Read-Only Is Not Read-Only Text Field/Text Area Dropdown/Radiobutton Multiselect Stepper/Slider Single Checkbox Button Group Duration Field Date, Time & Date/Time Selectors Geo Control Barcode Scanner Card List Information Calculations Time-Based Maths Aggregations String Concatenation Digit Extraction Geo Stamp Date/Time Stamp Signature/Photo/Sketch Document Editor File/Audio Is Set To Text Field/Text Area Dropdown/Radiobutton Multiselect Stepper/Slider Single Checkbox Button Group",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Compatibility by Operator"
    }
  },
  {
    "content": "Duration Field Date, Time & Date/Time Selectors Card List Signature/Photo/Sketch Document Editor File/Audio Geo Control Barcode Scanner Information Calculations Time-Based Maths Aggregations String Concatenation Digit Extraction Geo Stamp Date/Time Stamp Is Cleared Text Field/Text Area Dropdown/Radiobutton Button Group Duration Field Date, Time & Date/Time Selectors Geo Control Geo Stamp Date/Time Stamp Signature/Photo/Sketch Document Editor File/Audio Barcode Scanner Multiselect Stepper/Slider Single Checkbox Card List Information Calculations Time-Based Maths Aggregations String Concatenation Digit Extraction Is Reset Text Field/Text Area Dropdown/Radiobutton Button Group Duration Field Date, Time & Date/Time Selectors Signature/Photo/Sketch Document Editor File/Audio Geo Control Barcode Scanner Multiselect Stepper/Slider Single Checkbox Card List Information Calculations Time-Based Maths Aggregations String Concatenation Digit Extraction",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/218858037.html",
      "title": "Conditional Logic: Operators and Actions",
      "section": "Compatibility by Operator"
    }
  },
  {
    "content": "What is regex matching\n\nRegex matching is a way to set up a Conditional Logic If statement to compare an answer to a pattern. For example, you can use a regular expression (regex) to set up matches for: Case-sensitive text Ends with Starts with Wildcard characters (single and multiple)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/ConditionalLogic/CLRegexMatch.htm",
      "title": "Conditional Logic Regex Matching",
      "section": "What is regex matching"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. You must know how to build a regular expression. Your field users must have the TrueContext Mobile App version 16.3 or later.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/ConditionalLogic/CLRegexMatch.htm",
      "title": "Conditional Logic Regex Matching",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up regex matching\n\nInfo:The topic Building Conditional Logic Rules: Create a Conditional Logic Rule describes in detail how to add and save a rule. From the Forms & Integrations menu, create or edit a Mobile App form. To create a new form: Forms & Integrations > Create New Form > Build a Mobile Form Enter a name and description, and then save the form. To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you want to edit. At the top left, select Conditional Logic. Select or create a rule, and then go to the If statement. Select the reference question that you want to use in the condition. The following table lists the supported question and data types for regex matching. Question types Data types Barcode Scanner Button Group (data value) Card List (data value) Dropdown (data value) Radio Button (data value) Slider Stepper String Concatenation Text Area Text Field Free Text Integer Decimal Currency (value only, not the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/ConditionalLogic/CLRegexMatch.htm",
      "title": "Conditional Logic Regex Matching",
      "section": "Steps to set up regex matching"
    }
  },
  {
    "content": "currency symbol) Email Address Phone Number URL Barcode Select an operator: Matches matches (regex) DoesNotMatch does not match (regex) Note:The Form Builder prevents you from setting up regex matching on unsupported question and data types. If the list of available operators doesn’t include regex matching, check the question type that you selected. Enter the regular expression. The following table provides some examples. Description Regex Text string that has all lowercase letters [a-z] 32-character hexadecimal string [0-9a-f]{32} Specific number format: The first digit is a number between 4 and 9. The second digit is a number between 0 and 9. The third digit is a number between 5 and 9. The last six digits are numbers between 0 and 9. Examples: 405654321 999123456 ^([4-9][0-9][5-9][0-9]{6})$ Four to six digits, followed by an A ^(\\d{4,6})(A)$ A digit between 2 and 9, or any number with at least 2 digits ^(?:[2-9]|\\d\\d\\d*)$ A string that starts with ORD- ^ORD- A string that ends with",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/ConditionalLogic/CLRegexMatch.htm",
      "title": "Conditional Logic Regex Matching",
      "section": "Steps to set up regex matching"
    }
  },
  {
    "content": "BOX BOX$ A string that starts with ORD- and ends with BOX ^ORD-.*BOX$ A string that starts with ORD-, followed by 10 digits ^(ORD-[0-9]{10})$ Tip:You can test your regex using online tools. To finish building the rule, complete the steps described in the topic Building Conditional Logic Rules: Create a Conditional Logic Rule. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/ConditionalLogic/CLRegexMatch.htm",
      "title": "Conditional Logic Regex Matching",
      "section": "Steps to set up regex matching"
    }
  },
  {
    "content": "Limitations of regex matching\n\nOn iOS and macOS, field users could get unexpected results if the regex checks for single or double quotes. This is due to Apple’s “Smart Punctuation” feature, which automatically converts straight quotation marks (\"hello\") into “smart” quotation marks (“hello”). For example: Regex Match Non-Match ^[\"'].*[\"']$ \"joe\" “joe” Field users can either: Switch off Smart Punctuation in their Keyboard settings. Long press the quotation mark keyboard button. Different browsers might handle regex differently. Note: To make sure your Conditional Logic rules work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/ConditionalLogic/CLRegexMatch.htm",
      "title": "Conditional Logic Regex Matching",
      "section": "Limitations of regex matching"
    }
  },
  {
    "content": "Best practices within a rule\n\nCheck for conditions within an If or Then statement that contradict each other. Avoid negative If statement conditions when possible. Positive statements make it easier for you to read the rule because the statement is either true or false. Negative conditions that are false introduce a double negative that can make it harder to understand the rule, even with valid logic. The following example shows an If condition changed from negative to positive phrasing: Negative Read as Positive Read as IF Q1 != 5THEN Q2 is VisibleELSE Q2 is Not Visible If Q1 does not equal 5 is true, then show Q2. If Q1 does not equal 5 is false (Q1 does equal 5), then hide Q2. IF Q1 = 5THEN Q2 is Not VisibleELSE Q2 is Visible If Q1 equals 5 is true, then hide Q2. If Q1 equals 5 is false (Q1 does not equal five), then show Q2. Organize Then statements in the same order that the referenced pages, sections, and questions they affect display in the form. When a rule has multiple Then",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Best practices within a rule"
    }
  },
  {
    "content": "statements, you can speed up troubleshooting during testing by keeping Then statements organized. This makes it easier to find and fix a problem if a rule doesn’t behave as expected. Tip:Before testing the form, organize the statements into logical groups. To move a Then statement, select the handle to the left of the statement and drag the row to a new place. You can also add a new Then statement anywhere in the list. Hover between two Then statements and select the plus sign [+] to add a new statement.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Best practices within a rule"
    }
  },
  {
    "content": "Avoid Conditional Logic rules that contradict each other\n\nThe Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. does not validate Conditional Logic rules against one another. Check for Conditional Logic rules that overwrite the action of a previous rule. When you set up Conditional Logic, remember that rules run in the order of the questions. Info:The topic Create and Manage Conditional Logic describes how to open an at-a-glance view of the Conditional Logic rules in your form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Avoid Conditional Logic rules that contradict each other"
    }
  },
  {
    "content": "Check for downstream impact before deleting a rule or question\n\nAfter you’ve tested a form and its Conditional Logic, you might need to add or delete questions and Conditional Logic rules. Before you delete a question, check for Conditional Logic rules that affect the visibility or behavior of other questions. If you delete a rule without replacing it, the form might not function as intended.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Check for downstream impact before deleting a rule or question"
    }
  },
  {
    "content": "Combine rules that act on the same target question\n\nIf two or more Conditional Logic rules act on the same target, the rules will execute separately and can overwrite each other. Because rules execute in the order the user interacts with questions, the last question answered controls the target behavior. The following example describes two rules that act on the same target. The Form Designer’s intent is that two conditions must be met for Q3 to be visible. Neither rule should overwrite the other. RULE 1: IF Q1 = 5THEN Q3 is VisibleELSE Q3 is Not Visible RULE 2: IF Q2 <3THEN Q3 is Not VisibleELSE Q3 is Visible While each rule is valid on its own, Q3 might behave unexpectedly. If Q1 does equal 5, and Q2 is less than 3, the visibility of Q3 depends on which question the mobile user last interacted with. If they interacted with Q1 last, Q1 controls the behavior. To avoid unexpected results, write this as a single rule: RULE 1: IF Q1 = 5 AND Q2 ≥ 3THEN Q3 is VisibleELSE Q3 is Not Visible",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Combine rules that act on the same target question"
    }
  },
  {
    "content": "Tip:Else statements are optional.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Combine rules that act on the same target question"
    }
  },
  {
    "content": "Target questions aren’t Read only\n\nIf questions aren’t Read only, mobile users can overwrite values set by Conditional Logic. In this example, a room inspection form has the following rule: RULE 1: IF Q1 < 50THEN Q3 is set to “Fail”ELSE Q3 is set to “Pass” After using the form successfully in the field with no issues, you receive a submission where Q1=30—failed—yet Q3 is marked as “Pass.” What happened? First, check your Conditional Logic. If there are no rules that would have overwritten this, it's likely that the mobile user changed the answer of Q3. Tip:If you create a Conditional Logic rule to set the value of a question, make that question Read only. This prevents users from overwriting the value.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Target questions aren’t Read only"
    }
  },
  {
    "content": "Else statements do not undo Then statements\n\nBecause Conditional Logic affects what the mobile user sees, consider what happens when a user changes an answer. Note:To prevent a change from causing unexpected results, build actions that undo Then actions into Else statements. In this example, a room inspection form has the following behavior: If the room gets a score of less than 50, the inspection fails. The form shows the mobile user a Required Comments section. The form also shows Page 2, which contains questions for failed inspections. If the room gets a score of 50 or above, the inspection passes. The Required Comments section and Page 2 remain hidden. If the room initially fails the inspection, the mobile user can change the answer to a passing score. This hides the Required Comments section and Page 2. The following Conditional Logic rule includes an Else statement that prevents unnecessary sections and pages from showing if a mobile user changes their answer. Conditional Rule",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Else statements do not undo Then statements"
    }
  },
  {
    "content": "Result If Q1 < 50Set Q2 to “Fail”Show Page 2Show Q3Set Q3 to Required ELSEReset Q3Hide Page 2Hide Q3Set Q3 Not required This Else statement defines what to do if Q1 is not < 50. This causes the following sequence: User sets Q1 = 45. First set of actions fires. User changes the value of Q1 so that Q1 = 70. Else actions undo the earlier actions, reverting them to a default state. Tip:This set of Else actions undoes all of the Then actions. If the statement only reset Q3, the unnecessary page and questions would still show. The Form Builder auto-generates Else statements, but you don’t have to use these. Else statements are optional—you can delete any or all of the actions. To delete an Else action, select Custom Actions, and then select the X next to the action.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Else statements do not undo Then statements"
    }
  },
  {
    "content": "Questions are ignored rather than not visible\n\nPages and sections can be ignored. Questions can be set to visible or not visible. The key difference is that questions in an ignored page or section can’t store data, but questions that aren’t visible can. Info:The topic Available Actions describes Conditional Logic actions in more detail. When you ignore a page or section, the questions within that page or section are also ignored. This means that if the ignore action is triggered, any data that was previously collected is also ignored. Ignored data is not available in the form or in any dispatched or submitted records. If subsequent questions reference ignored data, those references break. By contrast, when you set a question to is not visible, it can still contain data that’s referenced by other questions in the form. Tip:If your form depends on the data in hidden questions, set all questions in the page or section to not visible. This hides the element but retains the data. How the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Questions are ignored rather than not visible"
    }
  },
  {
    "content": "system handles ignored data Data in ignored pages and sections: Is not visible to mobile users. Is not used to push information to subsequent fields in the form. Is not used in calculations, filters, or subsequent questions in the form. Is considered “nonexistent” if referenced in Conditional Logic rules. A Conditional Logic rule that looks at a question in an ignored section will evaluate to false. The rule can’t verify the answer because the question doesn’t exist. Is not submitted to the Web Portal. Note:Setting a page or section to is ignored can cause major downstream impacts in a form. How the system handles “not visible” questions Questions set to not visible: Can still push information to other questions. Can be used in calculations and filters, and can be referenced by subsequent questions. Can have values referenced in Conditional Logic rules. Can contain data that’s submitted to the Web Portal. Setting a question as not visible means that the form can still reference the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Questions are ignored rather than not visible"
    }
  },
  {
    "content": "data in the question. What if I want to ignore a question? Place the question in a section that will be ignored if a user action triggers a Conditional Logic rule. If the ignore action is triggered, any data the question previously collected is also ignored. What if I want to hide a page or section but use the data in it? This isn't possible. We recommend making a series of questions not visible instead.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Questions are ignored rather than not visible"
    }
  },
  {
    "content": "Dispatched data that conflicts with Conditional Logic rules\n\nWhen you dispatch a form with Conditional Logic, the Conditional Logic runs when the mobile user opens the form. This puts the form in an appropriate starting state as specified by your Conditional Logic rules. Next, the form fills questions one by one with dispatched data in the same order the questions display in the form. The form evaluates and triggers Conditional Logic rules as it fills each question. Conflicts between dispatched data and Conditional Logic rules might result in unexpected behavior. Before deploying a form to mobile users, test how Conditional Logic interacts with dispatched data. Dispatched data on ignored pages and sections In a normal flow, a Conditional Logic rule might ignore a page or section when the form first opens. Add these rules with caution, as ignored pages and sections impact how the form evaluates other Conditional Logic rules. The page or section remains ignored until a mobile user action",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Dispatched data that conflicts with Conditional Logic rules"
    }
  },
  {
    "content": "triggers another rule that sets it to not ignored. If you dispatch data to a question in a page or section that is ignored when the form first opens, the data is also ignored. The data will not display in the form or the Web Portal submission unless a user action sets it to not ignored. This can cause unexpected results if you want to ensure the data pushes to other questions or triggers a Conditional Logic rule. Tip:If you need to dispatch information into pages or sections that might be ignored, ensure they are not ignored when the form opens. Only a mobile user action should trigger the rule that ignores the pages or sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ConditionalLogicBestPractices.htm",
      "title": "Best Practices for Conditional Logic Rules",
      "section": "Dispatched data that conflicts with Conditional Logic rules"
    }
  },
  {
    "content": "Form Builder “Recipes”\n\nThis section includes the following content: Calculate a Score or Average Using Button GroupsCreate a Unique Invoice NumberCustomize Dispatched, Saved, and Submitted Form Names with Data Record NamingEnsure Users Do Not Submit Forms without Filling All Required QuestionsStamping Data onto Images",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/FormBuilderRecipes.htm",
      "title": "Form Builder “Recipes”",
      "section": "Form Builder “Recipes”"
    }
  },
  {
    "content": "Calculate a Score or Average Using Button Groups Available on all tiers: Essentials Advanced Enterprise About Set Up a Scoring System Calculate a Score Advanced: Result-Based Alerts About While using TrueContext to collect data, calculate averages and scores based on the answers a user selects. A score can be calculated as a total, an average, or a percentage. Complete compliance evaluations or health and safety audits, and forward the result to an email or SMS Data Destination if it requires immediate attention by applying filtering. Set Up a Scoring System Add button group questions to your form and set the data type to numeric (Integer or Decimal). The data type MUST be numeric in order to set up scoring. Set up the values for each button group question, optionally including an alternate display. Each question should have the same button values in order for your scoring to be meaningful. For example, on a scale from Excellent to Poor, if Excellent is a 5, Poor should be zero. After",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499818_CalculateScoreButtonGroup.html",
      "title": "Calculate a Score or Average Using Button Groups"
    }
  },
  {
    "content": "building your input questions, identify what score you want to calculate. Total: Displays the score as a value out of the maximum score. This is useful where the total number of positive or negative answers is important. For example, if there are fifty yes or no questions, the score would be a value out of 50. Average: Displays the score out of the highest possible score. This is useful where an approximation of the most common score is necessary. For example, if the highest button group value is 5, the score will be a value out of 5. Percentage: Displays the score as a value out of 100. This is useful for viewing overall trends where the actual number of correct answers is unnecessary. For example, if five out of ten points are earned, the score will be 50%. Calculate a Score Insert a calculation question following the button groups. Hover over the calculation question and select Edit Properties. Under Calculation Properties, enter the calculation for your chosen scoring system: To",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499818_CalculateScoreButtonGroup.html",
      "title": "Calculate a Score or Average Using Button Groups"
    }
  },
  {
    "content": "calculate total, add all button values together. To calculate average, add all button values together inside a pair of curved brackets (), and divide by the total number of questions. To calculate percentage, add all button values together inside a pair of curved brackets (), divide by the highest possible total value, and multiply by 100. To save changes to the question, hit OK. To save changes and deploy the form, select Save and Deploy. Advanced: Result-Based Alerts Ensure problems are addressed quickly by setting up an email or SMS data destination, and use custom filtering rules to forward results only when submitted answers fall short of a minimum score. Send an email or SMS to a site manager when compliance requirements are not met. Dynamically sort forms into different folders in cloud services (like Box or Google Drive) based on score. Automatically dispatch forms for follow-up site inspections where scores are low. Read more about setting up data destinations and applying",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499818_CalculateScoreButtonGroup.html",
      "title": "Calculate a Score or Average Using Button Groups"
    }
  },
  {
    "content": "custom filter rules.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499818_CalculateScoreButtonGroup.html",
      "title": "Calculate a Score or Average Using Button Groups"
    }
  },
  {
    "content": "About\n\nAs an administrator, you may wish your PDFs or other documents to use a unique Invoice Number or other ID. This can be configured in the basic Document Settings using DREL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "About"
    }
  },
  {
    "content": "Configure the Document\n\nThe Form Submission Document Filename Expression is normally found in the Document configuration under the Document Basics tab: Sample Expressions: \"%a[Customer ID]-%r[id]\" will create a filename like \"1234567-1810010000\" \"INV-%r\" will create a filename like \"INV-20140622-1810010000\" Case #2: Create a Unique Invoice Number in the Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "Configure the Document"
    }
  },
  {
    "content": "About\n\nSome organizations may wish to create a unique number (like an invoice number) that displays on the device even before a form is submitted (when the data record reference number does not yet exist); perhaps the invoice number is required to be on the form before the customer signs off on it, or the invoice number must be shown in full on the actual document, not just in the document filename. This can be done using the digit extraction control type, or a combination of digit extraction and string concatenation. The best way to guarantee a unique number is to include a reference to a date/time selector or stamp and use digit extraction to strip non-numeric characters.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "About"
    }
  },
  {
    "content": "Scenario and Desired String\n\nIt is easier for you to manage your customers' payments if their invoice number contains their customer number. The desired string in this scenario is: \"(Customer Number)-(date, non-numeric characters extracted)\".",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "Scenario and Desired String"
    }
  },
  {
    "content": "Configuring the Form\n\nBelow is a view of the form builder, showing the questions we will use to create the invoice number: A dropdown question - Where the user will select a customer from a list populated by a data source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. A Date/Time Stamp - The input for the digit extraction question A digit extraction question - This allows you to format the Date/Time stamp however you prefer. A String Concatenation to string it all together and create the invoice number",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "Configuring the Form"
    }
  },
  {
    "content": "Customer ID\n\nThe question collecting the Customer Number is a dropdown question referencing a data source (of any type, here named \"Customer List\") that contains a list of customer name in the \"Company Name\" column and a list of Customer ID's in the \"Customer Number\" column. below is the list in spreadsheet format. Your mobile users don't know the customer numbers, so it easiest for them to select the customer name, while having the form actually collect the customer number. In the Data Source configuration section of the dropdown properties, select \"Company Name\" for the Column displayed in dropdown and \"Customer Number\" for the Column to use as the answer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "Customer ID"
    }
  },
  {
    "content": "Date/Time and Digit Extraction\n\nNo special configuration is required for the Date/Time Stamp itself; just ensure it is before the digit extraction control. The digit extraction control has been configured to extract the date in the following format: yyMMddHHmm",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "Date/Time and Digit Extraction"
    }
  },
  {
    "content": "String Concatenation\n\nIn String Concatenation Properties, we can link the above fields together and add some static elements for the sake of formatting.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "String Concatenation"
    }
  },
  {
    "content": "On a Mobile Device\n\nNote that although the Company Name is shown as the value for the Customer ID question, since \"Customer Number\" was in the data column, the number is what is used in the invoice number. It may be desirable for some of these questions to be set to \"hidden on device\" to avoid cluttering your user's screens with unnecessary info. Note that the \"Customer ID\" question must be visible somewhere in the form. It may also be desirable to mark all but the \"Invoice Number\" question as \"hidden in reports.\" Of course, there does not need to be a page dedicated to this function; the digit extraction and string concatenation questions can collect input values from various locations in your form (as long as the input values occur first), making use of the form information you are already collecting. Case #3: Create an Invoice Number with the Dispatch Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "On a Mobile Device"
    }
  },
  {
    "content": "About\n\nIf your workflow already includes using the Dispatch Data Destination to dispatch data from one user to another, you have a lot of flexibility in building invoice numbers that can appear in the mobile app. It is possible to include the data record reference number or identifier (of the form used to dispatch) in an invoice number shown on the mobile device (in the target form). In fact, Data Reference Expression Language can be used to grab many other identifiers from the metadata of the submitted form, like user ID (%u[id]) or form id (%f[id]) that may be useful in building an invoice number. Note:The Dispatch data Destination is the only dispatching method that allows the use of Data Reference Expression Language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "About"
    }
  },
  {
    "content": "String #1: \"Form Identifier - Data Record Identifier\"\n\nIt is possible to build the whole invoice string in your Dispatch Data Destination's \"Dispatch Data\" section, based entirely on the meta data from the submitted form that created the dispatch, and dispatch the entire invoice number. In this example we will reference the identifier of the Form itself, as well as the data record ID. *If using this method, you can also include this invoice number in the name of the dispatched form; read about Data Record Naming. Configure the Data Destination Provide the Unique ID of the question in the Target Form where the invoice number should appear. This is case sensitive. For the Answers to Dispatch section, enter \"%f[id]-%r[id]\". This is all in lowercase. In the Target Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "String #1: \"Form Identifier - Data Record Identifier\""
    }
  },
  {
    "content": "String #2: \"INV(Customer Number)-Data Record ID\"\n\nIn the \"Dispatch Data\" section, it is also possible to combine submitted form data with the data record ID to create an invoice number. See Case #2 (above) for details on how to populate the customer number in the initial/dispatching form. Use %a[UniqueID] in the data expression to reference the submitted data from the initial form used to create the dispatch. We'll also add some static text to this string. Configure the Data Destination Provide the Unique ID of the question in the Target Form where the invoice number should appear. This is case sensitive. For the Data Expression, enter \"INV%a[Customer ID]-%r[id]\". This is all in lowercase. In the Target Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499808_CreateUniqueInvoiceNumber.html",
      "title": "Create a Unique Invoice Number",
      "section": "String #2: \"INV(Customer Number)-Data Record ID\""
    }
  },
  {
    "content": "About\n\nA Data Record Naming A Data Record Naming expression provides a way to create a unique name for dispatched, saved, and submitted forms. The naming expression also applies to forms that a user saves as draft on their device. A customized name helps you and your mobile users quickly search for and identify forms. expression provides a way to create a unique name for dispatched, saved, and submitted forms. The naming expression also applies to forms that a user saves as draft on their device. A customized name helps you and your mobile users quickly search for and identify forms. The system displays the unique, customized name at various stages of your workflow: Dispatched forms—in the mobile app Inbox and in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. Saved forms—in the mobile app Drafts Submitted forms—in the mobile app Search, Outbox, and Sent",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "About"
    }
  },
  {
    "content": "tabs and in the TrueContext Web Portal You can use DREL references in the Data Record Naming expression, such as form name, username, or the answers to questions. Info:The Data Record Naming expression described in this topic does not affect how the system names and organizes your form submission documents in cloud-based Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. The topic Change How Form Submissions Are Named and Organized in Cloud Services describes how to customize the folder and form submission document names.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "About"
    }
  },
  {
    "content": "How a customized name improves search results\n\nThe TrueContext search functionality relies predominantly on the name given to a form submission. For example, to search submitted forms by the submitter’s name, your naming expression must include %u. The DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. reference %u dynamically appends the submitter’s name to your form submission name. Info:The topic DREL Complete Reference List provides a list of all DREL properties you can use in the naming expression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "How a customized name improves search results"
    }
  },
  {
    "content": "Mobile app search\n\nOnline TrueContext Mobile App users can use the search box to enter a form submission name. The following example shows the search results of all form submissions in the TrueContext server with the customer “KT Technologies” in the name. Info:The topic How the Mobile Search Works describes how a naming expression affects search results.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "Mobile app search"
    }
  },
  {
    "content": "Web Portal search\n\nThe TrueContext Web Portal uses the unique name generated by the naming expression to display and search on the form submission name. The following example shows the search results for a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form (Enterprise tier only) that has %r[workflowState] in the naming expression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "Web Portal search"
    }
  },
  {
    "content": "Guidelines\n\nThe TrueContext search functionality relies predominantly on the name given to a form submission. Note:Make sure you use a naming expression that always generates a unique form submission name. The default expression %f - %d %t always produces a unique name because it includes a date and timestamp. When the naming expression doesn’t result in a unique string, the Mobile App Search and the App‑to‑App search action return a list of matching forms. Think about how your users might search the TrueContext Mobile App and the Web Portal and customize the form submission name accordingly. You can use the %r[id] DREL expression to reference the form submission ID without the timestamp. This results in a shorter name and reduces clutter in form submission lists. You can use the %a[uniqueID] DREL property to reference answers to questions in a form. Note: Use required questions in the naming expression to avoid blanks in the form submission names. For example, a form might be",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "Guidelines"
    }
  },
  {
    "content": "dispatched to users prefilled with customer information. If the naming expression references the required question with unique ID “Customer”, the customer name shows in the user's Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "Guidelines"
    }
  },
  {
    "content": "Examples\n\nThe following table describes some typical naming expressions that reference data and metadata from the form. Naming expression Result %d - %a[Customer] - %a[Priority] 2021-05-30 - KT Technologies- Urgent %r[id] - Work Order - %a[Customer] 1812345 - Work Order - KT Technologies Store Visit - %t[HHmm] - %a[Address] Store Visit - 14:15 - 123 Avenue Street Info:The topic DREL Complete Reference List provides a list of all DREL properties you can use in the naming expression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "Examples"
    }
  },
  {
    "content": "Set up a custom naming expression\n\nThe %-prefixed items use Data Reference Expression Language (DREL) to reference properties from the form. You can also use static text. Navigate to the desired form. Select Edit Form. Go to Settings > Advanced Properties. In the Data Record Naming section, enter a Naming expression. The expression in this example captures the following information: %f—the name of the form %a[selectprojectname]—the answer to a question with the specified unique ID, in this case, the project name that the user selected %d—the form submission date Tip:The example updates as you type to show you what the customized name will look like. In the Mobile App's Sent box, for example, this naming expression would give you form submissions like this:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499868_CustomizeNamingInMobileApp.html",
      "title": "Customize Dispatched, Saved, and Submitted Form Names with Data Record Naming",
      "section": "Set up a custom naming expression"
    }
  },
  {
    "content": "Ensure Users Do Not Submit Forms without Filling All Required Questions Available on all tiers: Essentials Advanced Enterprise Contents Ensure Users Do Not Submit Forms without Filling All Required Questions About Always Submit Page Data About Mobile app users sometimes skip pages by accident. This can be prevented by using the Always submit page data option. This option always sends the data from the page, even if the user never went to that page. This makes the app check for any required questions on the page and will trigger an error message if users have missed required questions. Always Submit Page Data You can enable Always submit data from this page (unless ignored by Conditional Logic) for any or all pages in a form. This prevents users from skipping pages and submitting the form without required information. To enable this option, follow these instructions: Navigate to the form you would like to edit, and select Edit Form. In the Form Builder The Form Builder is the tool that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499828_EnsureUsersDontSubmitFormsWithoutFillingRequiredQuestions.html",
      "title": "Ensure Users Do Not Submit Forms without Filling All Required Questions"
    }
  },
  {
    "content": "form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., select the desired page, and select Edit from the menu next to the page name. This will take you to Page Information. In Page Information, under General Information, select Always submit data from this page (unless ignored by Conditional Logic), then select Save from the bottom of that page. Please note: At least one question on the specified page must be a required question, and cannot have an initial start value or be prefilled. Select Save and Deploy from the top navigation bar.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499828_EnsureUsersDontSubmitFormsWithoutFillingRequiredQuestions.html",
      "title": "Ensure Users Do Not Submit Forms without Filling All Required Questions"
    }
  },
  {
    "content": "Font and Positioning Options\n\nThese settings allow you to adjust your font choices and positioning to best show up on images generated by your mobile users. Font options: Serif, Sans Serif, Monospaced. Size slider: 8-40 point. Color: Choose from preset colors or enter the hex code of a custom color. Tip:Choose a color that will contrast with the most common images or photographs your mobile users will be taking. Bold or Italic. Position: Top Left, Top Right, Bottom Left, Bottom Right. X / Y Offset: Add space between the edge of the image and your text using X,Y coordinates.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022396851.html",
      "title": "Stamping Data onto Images",
      "section": "Font and Positioning Options"
    }
  },
  {
    "content": "Stamped Text Options\n\nThis section allows you to select what data is stamped on images. Image Properties Stamping this data on images draws from EXIF image metadata captured by the camera, rather than by TrueContext. Info:The topic EXIF Data in TrueContext describes how the TrueContext Mobile App collects EXIF data and what you can do to preserve it. Date: This will stamp the image with the date/time the photo was taken; useful for forms requiring more strict compliance with date/time information. Geo Location: This will stamp the image with the location the photo was taken in. Note: If you do not have EXIF data enabled on your camera or your camera does not use EXIF data, these stamp properties will not work. Sketch Pad questions do not support EXIF data. When a user sketches on a background image, we save the resulting drawing in a new file. This new file does not retain the original EXIF data from the background image. We recommend that you test the form on the type of device most",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022396851.html",
      "title": "Stamping Data onto Images",
      "section": "Stamped Text Options"
    }
  },
  {
    "content": "commonly used in the field before deploying the form for use in production. System Properties This data comes from information collected by the Mobile App. Selecting any of the following properties will stamp information/metadata from the form onto the image: Reference Number: The TrueContext system's unique identifier for a form submission. Geo Stamp: A location stamp taken when the form is submitted. FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. Name: Which FormSpace the form and its submissions belong to. Submitter Name: The username and name of the person submitting the form. Entry Timestamp: The date/time when the form was submitted. Equivalent to %d in Data Reference Expression Language (DREL). Form Name: The name of the form. Custom Expression: The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022396851.html",
      "title": "Stamping Data onto Images",
      "section": "Stamped Text Options"
    }
  },
  {
    "content": "user-supplied answer to specified questions in the form can also be stamped onto the image. Use DREL and static text in the Custom Expression box to reference the desired answer or form metadata. For example:%a[Location] will stamp the answer to a question with the unique ID \"Location\" onto the photo.%u[name] on %d will stamp the image with a string like, \"Jane Smith on 2019-01-28\". The example below uses: Form Submission Reference Number Submitter Name Custom Expression: %d-%f (Image Properties): Geo Location",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022396851.html",
      "title": "Stamping Data onto Images",
      "section": "Stamped Text Options"
    }
  },
  {
    "content": "Data Sources\n\nThis section includes the following content: Create and use a Data SourceCreate and Manage Data SourcesData Source Supported File FormatsUse Data Sources in FormsDisplay a Map View for Lookup QuestionsMulti-Column View and Default Sort OptionsPush Data to Other Questions from a Data SourceManual Upload Data Sources: CSV, XML, JSON, and Excel FilesHow Data Sources Store JSON and XML DataUser Data SourceApply Data Source FiltersFilter a List of Options in a Lookup QuestionAdvanced Data Sources: Using Partitions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataSources.htm",
      "title": "Question-Based Filter or Data Source Partition?",
      "section": "Data Sources"
    }
  },
  {
    "content": "Create and use a Data Source\n\nThis section includes the following content: Create and Manage Data SourcesData Source Supported File FormatsUse Data Sources in FormsDisplay a Map View for Lookup QuestionsMulti-Column View and Default Sort OptionsPush Data to Other Questions from a Data SourceManual Upload Data Sources: CSV, XML, JSON, and Excel FilesHow Data Sources Store JSON and XML DataUser Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateUseDataSource.htm",
      "title": "Create and use a Data Source",
      "section": "Create and use a Data Source"
    }
  },
  {
    "content": "What are Data Sources?\n\nData Sources are external sources of data—such as lookup tables, spreadsheets, or data from integrated systems—that you can upload or connect to TrueContext. We store Data Sources as tables (rows and columns) in the TrueContext system. Once you set up a Data Source, you can use the data for questions in your forms. For example, you might store equipment data in an online spreadsheet or asset management system. You can use a Data Source to pull that data into TrueContext and then reference it in a Dropdown, Radio Button, or Multiselect question, making it easier for your users to enter data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "What are Data Sources?"
    }
  },
  {
    "content": "View Data Source details\n\nYou can navigate to a Data Source in different ways: Form Diagram The Form Diagram is a visual overview of a selected form version found in the TrueContext Web Portal. The diagram provides details on the form's inputs and outputs and displays the user groups that can access the form.: From the Forms & Integrations menu, navigate to the form you want to set up. On the Form Diagram, hover over the icon for a Data Source used in the form. Scroll to see the Properties and the Referencing Questions. Select the Data Source if you want to make any changes. Main menu: Go to Forms & Integrations > Data Sources > DataSourceName.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "View Data Source details"
    }
  },
  {
    "content": "Create a Data Source\n\nInfo:Data source size limits apply when you upload or fetch a Data Source. The topic Best Practices for Data Source Size describes these limits in more detail. If you’re an Enterprise customer, we recommend that you follow best practices for Data Source size before you request a size limit increase. Select Forms & Integrations. If the team has multiple FormSpaces, confirm that you are in the correct FormSpace, and then select Data Sources. Select Create Data Source. There are different types of Data Sources available. Choose the one that best meets your requirements.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Create a Data Source"
    }
  },
  {
    "content": "View the Data Source details\n\nSelect Forms & Integrations, and then select ​Data Sources. Note: If you don’t see the Data Source in the list, confirm that you’re in the correct FormSpace. Select a Data Source from the list. Result: The system displays the Data Source details. Check the top left of the page for a summary of the Data Source details. Last Content Update is the date and time that the content from the Data Source changed. This could be by manual upload or a dynamic Data Source “fetch”. Note:This is the last time the actual content of the Data Source changed, not the last time someone made changes to the Data Source configuration. For dynamic Data Sources, the update time only changes if there were actual changes to the data, regardless of when a fetch completed. Number of rows and cells in the Data Source, along with the size limits Info:Data source size limits apply when you upload or fetch a Data Source. The topic Best Practices for Data Source Size describes these limits",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "View the Data Source details"
    }
  },
  {
    "content": "in more detail. If you’re an Enterprise customer, we recommend that you follow best practices for Data Source size before you request a size limit increase. Number of forms that reference the Data Source Number of Analytics Projects that reference the Data Source Number of partitions applied (Enterprise-tier only) Check the bottom left of the page for a list of the column headers from the source data. Columns with a check mark beside them are used in one or more forms. Columns with an “x” beside them are not used in any forms. If you change the columns in your source data, you can delete or “merge” the columns in TrueContext. To delete an unused column from the list, hover over the column and select the Delete option. Note:If the column still exists in your source data, and anything in your source data changes, it’s re-added when you upload or fetch the changed data. To point a used or unused column to a different column in the Data Source, hover over the column and select the Merge",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "View the Data Source details"
    }
  },
  {
    "content": "option. Tip:You can use the Merge option to replace one column with another if your source data changes.For example:Your source data has a new column called “Customer Information”.Questions in your forms already use the column “Customer”.You can “merge” the “Customer Information” column with the “Customer” column.Your form questions now reference the new column data, and you don’t have to edit your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "View the Data Source details"
    }
  },
  {
    "content": "Download the Data Source contents\n\nTo view the contents of the Data Source, download the Data Source as a CSV or Excel file. Hover over the arrow next to the Data Source name, and then select one of the download options. Open the file with a compatible program.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Download the Data Source contents"
    }
  },
  {
    "content": "Upload or Fetch new data\n\nTo change the content of Data Sources in TrueContext, you upload or fetch data from your source data. You can’t edit the content directly in TrueContext. Info:Data source size limits apply when you upload or fetch a Data Source. The topic Best Practices for Data Source Size describes these limits in more detail. If you’re an Enterprise customer, we recommend that you follow best practices for Data Source size before you request a size limit increase. Upload data manually For Manual Upload Data Sources, upload the changed data to the Data Source within the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. Navigate to the Data Source that you want to update. Select Upload New Data. On the next page, select the file that you want to upload, and then select Update. Fetch data from a dynamic Data Source For dynamic Data Sources, you update",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Upload or Fetch new data"
    }
  },
  {
    "content": "the files in your external system. TrueContext connects to the source data and can fetch it on a schedule or manually from the Web Portal. Tip:A manual fetch is helpful when you've made changes to the Data Source that you want to test. To manually fetch new data: Navigate to the Data Source that you want to update. Select Fetch New Data. To edit the Fetch Frequency: Go to your Data Source and select EDIT DATA SOURCE. On the Data Retrieval and Format tab, select a Fetch Frequency. The default setting is Hourly. Info:When the Data Source is set to fetch hourly, the system assigns a random minute of the hour for each fetch. For example, a Data Source will automatically fetch at 4:29, 5:29, etc. This prevents the system from having a long queue of Data Sources that fetch at the same time. The topic Data Sources Overview: How the system schedules Data Source fetches describes the fetch frequencies in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Upload or Fetch new data"
    }
  },
  {
    "content": "Copy a Data Source\n\nCopying a Data Source creates a duplicate of the Data Source, which you can use to make the same Data Source available to forms across different FormSpaces. Tip:You can also move a Data Source from one FormSpace to another. Navigate to the Data Source that you want to duplicate. Select Copy. When prompted, enter information in the required fields. Target FormSpace—This is where you want to place the copy. Target Data Source Name—This is what you'd like to name the copy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Copy a Data Source"
    }
  },
  {
    "content": "Move a Data Source\n\nYou can move a Data Source from one FormSpace to another when the Data Source isn’t referenced by any forms. Navigate to the Data Source that you want to move. Select Move. When prompted, enter information in the required fields. Target FormSpace—This is the FormSpace you want to move the Data Source to. Target Data Source Name—This is the new Data Source name in the target FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Move a Data Source"
    }
  },
  {
    "content": "Merge a Data Source\n\nMerge allows you to point forms to a new Data Source without editing the forms. This is useful if you have multiple forms referencing different Data Sources that you have consolidated. You can also use the Merge function to move from one data connection type to another. For example, you could move to a Google Sheets Data Source instead of using manual data-entry. Navigate to ​Forms & Integrations > ​Data Sources. Select the Data Source that you want to merge. This should be the old Data Source, not the target. Note: If the desired Data Source is not listed, confirm that you are in the correct FormSpace. Hover over the down arrow next to the Data Source name, and then select Merge. Warning:The selected Data Source will be permanently deleted after the merge in step 6. You can’t undo this action. From the Data Source to merge into list, select the target Data Source. In the Keep the data from section, select the Data Source that contains the data you want to keep.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Merge a Data Source"
    }
  },
  {
    "content": "Select Merge. Result: Any forms that pointed to the old Data Source now point to the target.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Merge a Data Source"
    }
  },
  {
    "content": "Delete a Data Source\n\nYou can delete a Data Source from a FormSpace when no forms currently reference that Data Source. Warning: Deleting a Data Source is permanent. You can’t recover the data from the TrueContext server. Navigate to ​Forms & Integrations > ​Data Sources. Select the Data Source that you want to delete. Note: If the desired Data Source is not listed, confirm that you are in the correct FormSpace. Hover over the down arrow next to the Data Source name, and then select Delete. Confirm that you want to delete the Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Delete a Data Source"
    }
  },
  {
    "content": "Related topics\n\nData Sources Overview Best Practices for Data Source Size Data Source Supported File Formats Data Source Translations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500348CreateManageDataSources.html",
      "title": "Create and Manage Data Sources",
      "section": "Related topics"
    }
  },
  {
    "content": "CSV\n\nA CSV file can be created and maintained using a simple text editor (like Windows Notepad), but it is often more convenient to manage tabular data in a spreadsheet application and to generate a CSV file using the application's \"Save As...\" feature. When saving to CSV from your favorite spreadsheet, saving to MS-DOS format is recommended. A sample CSV content is as follows. Please note that the quotation marks shown are only strictly necessary if the one of the fields of data contains the delimiting character (in this case, the comma between the last and first names). \"Name\",\"Age\",\"Gender\"\"Smith, John\",\"34\",\"Male\"\"Smith, Joan\",\"23\",\"Female\" This will result in a data table that looks like the following: Name Age Gender Smith, John 34 Male Smith, Joan 23 Female",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500338DataSourceSupportedFileFormats.html",
      "title": "Data Source Supported File Formats",
      "section": "CSV"
    }
  },
  {
    "content": "XML\n\nFor the XML format for a Data Source, the root element is considered a list container. Each element under the root is a data container, and each leaf node in the data container is used as a column in the resulting Data Source table. <items> <item> <Name>Smith, John</Name> <Age>34</Age> <Gender>Male</Gender> </item> <item> <Name>Smith, Joan</Name> <Age>23</Age> <Gender>Female</Gender> </item></items>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500338DataSourceSupportedFileFormats.html",
      "title": "Data Source Supported File Formats",
      "section": "XML"
    }
  },
  {
    "content": "JSON\n\nFor best results, upload a file containing a JSON Array of Objects, or an Object with a single property whose value is a JSON Array. All properties whose value is a basic type (string, boolean, number) are used as values, whose column is the object path to the value. [ {\"Name\": {\"First\": \"John\", \"Last\": \"Doe\"}, \"Age\": 34, \"Gender\": \"Male\"} , {\"Name\": {\"First\": \"Jane\", \"Last\": \"Doe\"}, \"Age\": 23, \"Gender\": \"Female\"} ]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500338DataSourceSupportedFileFormats.html",
      "title": "Data Source Supported File Formats",
      "section": "JSON"
    }
  },
  {
    "content": "Excel\n\nTrueContext supports using Microsoft Excel's .xls and .xlsx files as Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. When selecting an Excel file to upload as a Data Source, please ensure that there is minimal formatting that uses a single tab, if possible.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500338DataSourceSupportedFileFormats.html",
      "title": "Data Source Supported File Formats",
      "section": "Excel"
    }
  },
  {
    "content": "Data Source Size Limits\n\nData Source size limits are a way to help you optimize mobile device performance. The more data that you load on a device, the longer it takes for the Mobile App to reconcile. Info:The topic Best Practices for Data Source Size provides more information about the Data Source size limits.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500338DataSourceSupportedFileFormats.html",
      "title": "Data Source Supported File Formats",
      "section": "Data Source Size Limits"
    }
  },
  {
    "content": "About\n\nIn order for a form to use existing information, the data must be uploaded as a data source and referenced in a lookup question (Dropdown, Multiselect, or Radio Button question) in the form. We store Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as tables (rows and columns) in the TrueContext system.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "About"
    }
  },
  {
    "content": "Steps to reference a Data Source in a Form\n\nNavigate to the form that you want to set up. From the Forms & Integrations menu, create or edit a Mobile App form. To create a new form: Forms & Integrations > Create New Form > Build a Mobile Form Enter a name and description, and then save the form. To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you want to edit. Select or create the Dropdown, Multiselect, or Radio Button question that you want the Data Source to populate. Select the OPTIONS tab. In the Option Type section, select Use Data Source for Options. Select an existing Data Source or ADD A NEW DATA SOURCE. Info:The topic Create and Manage Data Sources describes how to add a new Data Source. Set up the Data Source and other options. Data Source options Option Description Column value displayed on device The information to display to your field users. For example, field users can select a Part Name, rather than a Part ID.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Steps to reference a Data Source in a Form"
    }
  },
  {
    "content": "This makes it easier for them to choose the correct answer. Column value submitted to server The information that the server stores as the answer and sends to your Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. and Documents. The value doesn’t have to match the Column value displayed on device. For example, you can display the Part Name for the user to select and send the Part ID to the server. Hide duplicate options Hides duplicated data from the list of options. Multi-Language options If you have the Multi-Language add-on, you can set up a lookup question to display the options in the user’s selected language. Info:The topic Data Source Translations describes how to set up a Data Source for translations. Multi-Column View and Default Sort Options If your organization is on the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Steps to reference a Data Source in a Form"
    }
  },
  {
    "content": "Enterprise tier, you can display multiple columns and pre-sort the information. Info:The topic Multi-Column View and Default Sort Options describes these options and how to set them up. Filter Options Filter the list of options to shorten the list, making it easier and faster for users to fill out a form. Use Location-Based Features Set up location-based features when you want your field users to select a job site based on how close it is. Users can choose from map or list views. Push Data to Other Questions Use a Data Source to prefill fields in a form based on the answer to a previous question. This can: Provide key information to your field users. Save field users time. Reduce errors by prefilling important information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Steps to reference a Data Source in a Form"
    }
  },
  {
    "content": "Data Source options\n\nOption Description Column value displayed on device The information to display to your field users. For example, field users can select a Part Name, rather than a Part ID. This makes it easier for them to choose the correct answer. Column value submitted to server The information that the server stores as the answer and sends to your Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. and Documents. The value doesn’t have to match the Column value displayed on device. For example, you can display the Part Name for the user to select and send the Part ID to the server. Hide duplicate options Hides duplicated data from the list of options.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Data Source options"
    }
  },
  {
    "content": "Multi-Language options\n\nIf you have the Multi-Language add-on, you can set up a lookup question to display the options in the user’s selected language. Info:The topic Data Source Translations describes how to set up a Data Source for translations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Multi-Language options"
    }
  },
  {
    "content": "Multi-Column View and Default Sort Options\n\nIf your organization is on the Enterprise tier, you can display multiple columns and pre-sort the information. Info:The topic Multi-Column View and Default Sort Options describes these options and how to set them up.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Multi-Column View and Default Sort Options"
    }
  },
  {
    "content": "Filter Options\n\nFilter the list of options to shorten the list, making it easier and faster for users to fill out a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Filter Options"
    }
  },
  {
    "content": "Use Location-Based Features\n\nSet up location-based features when you want your field users to select a job site based on how close it is. Users can choose from map or list views.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Use Location-Based Features"
    }
  },
  {
    "content": "Push Data to Other Questions\n\nUse a Data Source to prefill fields in a form based on the answer to a previous question. This can: Provide key information to your field users. Save field users time. Reduce errors by prefilling important information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500828_ReferenceDatasourcesInForms.html",
      "title": "Use Data Sources in Forms",
      "section": "Push Data to Other Questions"
    }
  },
  {
    "content": "Video demo\n\nThis video shows you a quick overview of how the map and list views work.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115004452603.html",
      "title": "Display a Map View for Lookup Questions",
      "section": "Video demo"
    }
  },
  {
    "content": "Prerequisites\n\nThe Location-Based Features use latitude and longitude to display locations in relation to the mobile user’s current GPS location. The Data Source must include data for latitude and longitude. Tip:You can convert addresses to latitude and longitude using third-party web tools. The mobile user must enable location services on their device.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115004452603.html",
      "title": "Display a Map View for Lookup Questions",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up Location-Based Features\n\nNavigate to the Dropdown, Multiselect, or Radio Button lookup question that you want to set up. Select the Options tab, and then switch the Use Location-Based Features toggle on. Result: The section expands to show the related options. Select the columns in your Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. that contain the latitude and longitude values. Set the Default radius… to draw a circle on the map. When the mobile user opens the map view, their current location is in the center of the circle. The number that you enter is the radius of the circle, in kilometers. The following example shows the circle on the user’s map view. For more details about displaying a map",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115004452603.html",
      "title": "Display a Map View for Lookup Questions",
      "section": "Steps to set up Location-Based Features"
    }
  },
  {
    "content": "view, visit our Product Documentation portal. Tip:This setting is for information only, so that your mobile users can easily select nearby locations.Users can tap and hold a point on the map to drop a pin at that location. The new pin becomes the current location, and the distance calculation is based on this new point. The circle also shifts to be centered on the new pin. Set the Maximum number of pins… to reduce the number of pins to show in the current view when more than the specified number are available. Set the map and list view options: Make the map view the default when the user opens the lookup question. Allow users to select items from the map. Allow users to select items from a list, with the closest location at the top of the list. Note:These settings do not filter out any data. Users can still find information about all of the locations, even outside of the highlighted area.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115004452603.html",
      "title": "Display a Map View for Lookup Questions",
      "section": "Steps to set up Location-Based Features"
    }
  },
  {
    "content": "What is a Multi-Column View?\n\nA Multi-Column View is a way to display options-based questions that reference a Data Source (“lookup” questions). To help users select the right answer, the Multi-Column view displays more than one column from the Data Source. This example shows a Dropdown question without the Multi-Column View. The app displays a single column that the Form Designer selected. With a single-column view, field users might not have enough information to choose the right answer. The next example shows a Multi-Column View for the same Dropdown question. Field users can see that the two options have different manufacturers and part numbers. The additional information helps them to choose the right answer. Tip:You can also apply this view to Radio Button and Multiselect questions. When you enable the Multi-Column View, users can sort and filter the information based on any of the displayed columns. Info:You can pre-filter the list even without the Multi-Column View. The topic",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "What is a Multi-Column View?"
    }
  },
  {
    "content": "Filter a List of Options in a Lookup Question explains in detail how filtering works.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "What is a Multi-Column View?"
    }
  },
  {
    "content": "What are Default Sort Options?\n\nIf left unsorted, the TrueContext Mobile App displays the lookup information in the same order as in the Data Source. Default Sort Options are columns and sort types that you set up to “pre-sort” the information displayed to your field users. This makes it easier for users to find the most relevant or frequently-used values near the top of the list. Tip:You can use Default Sort Options with or without the Multi-Column View. If you do enable the Multi-Column View, field users can re-sort the list themselves. The following example shows the parts list sorted by Manufacturer first and then by Part Number. Notice that the Description column is not in alphabetical order. Because this example displays a Multi-Column View, field users can re-sort the list themselves. This next example shows that a user re-sorted the list on the Description column. When you set the Default Sort Options, you can select up to three columns. Field users, however, can only sort on",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "What are Default Sort Options?"
    }
  },
  {
    "content": "one column at a time.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "What are Default Sort Options?"
    }
  },
  {
    "content": "Set up a Multi-Column View\n\nTip:When you enable the Multi-Column View, you also allow field users to sort on any of the columns. If you want to display one sortable column, enable the Multi-Column view and select only that column in step 5.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Set up a Multi-Column View"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Your TrueContext team must be on the Enterprise tier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up a Multi-Column View\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. Create or edit a Dropdown, Radio Button, or Multiselect question. On the Options tab, select Use Data Source for Options, and then complete the Data Source section. Info:The topic Use Data Sources in Forms describes this step in more detail. Switch on the Multi-Column View toggle. Result: The section expands to show the column selections. Select up to three columns from the Data Source that you want to display. Tip:Keep in mind that:The first column defaults to the “display” column that you selected in the Data Source section of this tab. You can change this to a different column as required.Your goal is to provide context for the field user when they make their selection. The columns that you choose to display don’t have to include the column that contains the actual answer sent to the server. This means that the user might see a value in the main form that they didn’t see",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Steps to set up a Multi-Column View"
    }
  },
  {
    "content": "in the Multi-Column View. For example, in the Multi-Column View, you might display Part Name, Manufacturer, and Price. In the main form, the answer displayed might be the Part Number.The TrueContext Mobile App displays the columns in the order that you see in the Form Builder. To change the order, select and drag an item. Do you want to change the displayed column header to something different? For example, if the Data Source column header is “Part Code”, you can change the displayed header to “Part Number”. If yes, enter a Custom header displayed on device. If no, the device displays the same header as the Data Source column. Do you want to “pre-sort” the list of options based on up to three columns? If yes, follow the Steps to set up Default Sort Options. If no, complete your question setup and save your changes. Result: When a field user opens the question, the TrueContext Mobile App displays a tabular view that displays the columns you selected. Users can filter and sort on each",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Steps to set up a Multi-Column View"
    }
  },
  {
    "content": "column.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Steps to set up a Multi-Column View"
    }
  },
  {
    "content": "How the Multi-Column View works\n\nColumn headers The maximum column header length is 255 characters. Location-based features You can set up a Multi-Column view and still Use Location-Based Features for a lookup question. To optimize the user experience: The Distance column is always displayed last, with the header “Distance”. Users can sort on the Distance column.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "How the Multi-Column View works"
    }
  },
  {
    "content": "Set up Default Sort Options\n\nTip:You can use Default Sort Options with or without the Multi-Column View. If you do enable the Multi-Column View, field users can re-sort the list themselves.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Set up Default Sort Options"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either a TrueContext Admin user or a member of a FormSpace group with Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up Default Sort Options\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. Create or edit a Dropdown, Radio Button, or Multiselect question. On the Options tab, select Use Data Source for Options, and then complete the Data Source section. Switch on the Default Sort Options toggle. Result: The section expands to show the column selections and sort types Select up to three columns that you want to sort on. Select Ascending or Descending for each column. Tip:Keep in mind that:The first column defaults to the “display” column that you selected in the Data Source section of this tab. You can change this to a different column as required.The Default Sort Options use a lexical (alphanumeric) order. You can’t sort on dates.The TrueContext Mobile App sorts the columns in the order that you see in the Form Builder. To change the sort order, select and drag an item.Your goal is to position the most relevant or frequently-used answers near the top of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Steps to set up Default Sort Options"
    }
  },
  {
    "content": "list. This means that you might sort on a column that you don’t necessarily display. For example, in the selection view, you might display the Part Name. In the sort options, you might sort on the Part Number. Do you want to allow field users to re-sort the list? If yes, follow the Steps to set up a Multi-Column View. If no, complete your question setup and save your changes. Result: When a field user opens the question, the TrueContext Mobile App displays a pre-sorted list based on the selected columns and sort types. Tip:If you choose to Use Location-Based Features, the list is sorted by Distance. If you define Default Sort Options, those override the sort on the Distance column.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/DataSources/MultiColumnAndSort.htm",
      "title": "Multi-Column View and Default Sort Options",
      "section": "Steps to set up Default Sort Options"
    }
  },
  {
    "content": "Push data to questions in a Regular Section\n\nIn the following example, a building inspection form populates address data based on a building selection. When a mobile user selects a Building Name, data gets pushed to the Address, City, and Postal Code fields. The Data Source has a row for each of four buildings, with columns for the address, city, and postal code. The following example shows the Data Source rows and columns. To set up the form to push data to other questions: Add a Radio Button or Dropdown question. This question must come before the questions it pushes data to. Select ADD A QUESTION > OPTIONS-BASED, and then select Dropdown or Radio Button. Select Options > Use Data Source for Options, and then select or add the Data Source. Info:The topic Create and Manage Data Sources describes how to add a Data Source in more detail. Select the Data Source column value displayed on the device and the value submitted to the server. In this example, both values pull from the Building",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push data to questions in a Regular Section"
    }
  },
  {
    "content": "column. In the Push Data to Other Questions section, select Populate questions in the main form. Result: The section expands to display the Questions to populate and the Answer source for each question. Each Answer source refers to a column in the Data Source. Select or create questions for the Data Source to push to. To create a question, type the question name in the text box and select enter. This creates a Text Field question with a Free Text data type. If you need a different data type, edit the target question after you save the Radio Button or Dropdown. To push to an existing question, select it from the Question to populate menu. Ensure that the data type being pushed matches the question data type. For example, if a question uses the Integer data type, push only numbers to the question. Tip:You can push data to a Text Field, Text Area, Dropdown, Radio Button, Multiselect, Date, Time, Date/Time Selector, or Duration Field question. For each target question, select the Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push data to questions in a Regular Section"
    }
  },
  {
    "content": "Source column to pull from. Select Save. Tip:If you created a new question to push data to, you can edit the question type or data type. By default, new questions are Text Field questions with a Free Text data type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push data to questions in a Regular Section"
    }
  },
  {
    "content": "Push data to a Multiselect question\n\nIn the following example, a building inspection form begins with a safety checklist page. When the mobile user selects a piece of Personal Protective Equipment (PPE), a Multiselect question automatically selects the hazards covered by the equipment. If the PPE covers all hazards at the job site, the mobile user can proceed with the inspection. To push data to a Multiselect question, the Data Source must be configured with multiple items in the same table cell. Each item must be separated by a newline. In this example, the Personal Protective Equipment Type question pulls options from the following Data Source. In the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., set up the Multiselect question with options that match",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push data to a Multiselect question"
    }
  },
  {
    "content": "the items listed in the Data Source. If the options in the Data Source don’t match the options for the target Multiselect question, the data won’t push properly. To ensure the options match, you can: Select Define Options Manually and enter options that match the Data Source. Select Use Data Source for Options and reference a separate Data Source that contains every option.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push data to a Multiselect question"
    }
  },
  {
    "content": "Push to questions in a Repeatable Section\n\nA Data Source can push data to a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. (subform) based on a previous selection in the main form. In the following example, a building inspection form includes a subform to collect information about each floor in a building. When a mobile user selects a Building Name, the Repeatable Section populates a row for each floor. To push data to multiple entries, the Data Source must have a row for each entry. For example, if a Dropdown selection populates three entries, the Data Source must have three rows, as shown in the following example. The Data Source has three rows for Building A, one for each floor in the building. If a mobile user selects Building A, three rows populate in the Repeatable Section. To set up a form to push",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push to questions in a Repeatable Section"
    }
  },
  {
    "content": "data to a Repeatable Section: Set up a Dropdown or Radio Button question. Go to Options > Push Data to Other Questions, and then select Populate questions in a repeatable section. Result: The section expands to display additional options. Select the Repeatable Section to push data to. Only sections that come after the Dropdown or Radio Button question are listed. Note:You can only push data one level in. For example, you can push data from the main form to a subform, but not to a nested subform. (Optional, for Enterprise tier only) Switch on Sort order and customize the row order. For example, if you sort by Availability and then by Supplier, those columns determine the row order. This specifies an initial sort order that the mobile user can change. Tip:To maintain this row order in submitted records, set up restrictions for the Repeatable Section. Go to Settings > Additional Restrictions, and then select Prevent users from reordering entries. Select or add questions to populate. For",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push to questions in a Repeatable Section"
    }
  },
  {
    "content": "each target question, select the Data Source column to pull data from. Select Save.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Push to questions in a Repeatable Section"
    }
  },
  {
    "content": "Best practices for pushing data to Repeatable Sections\n\nWhen designing a form that pushes data to repeatable sections, follow these guidelines to deliver a smooth experience for mobile users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Best practices for pushing data to Repeatable Sections"
    }
  },
  {
    "content": "Apply Filter Options\n\nFocus on relevant data by applying Filter Options. For example, a building inspection form might pull from a Data Source that lists the user assigned to each floor. Rather than pushing data for floors the mobile user won’t inspect, switch on Filter Options and filter by the username. When the mobile user selects a building, only their assigned floors will push to the Repeatable Section. Tip:The topic Filter a List of Options in a Lookup Question describes how to apply filters in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Apply Filter Options"
    }
  },
  {
    "content": "Ensure a user selection triggers the data push\n\nAvoid adding Conditional Logic that populates the Repeatable Section when the form opens. A mobile user action—manually selecting a Radio Button or Dropdown option—should determine how data pushes to the subform.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Ensure a user selection triggers the data push"
    }
  },
  {
    "content": "Use Data Source partitions to reduce reconcile time\n\nThe larger the Data Source, the longer it takes to download the data to a mobile device. When possible, reduce Data Source volume by using partitions to segment data by groups or users. Tip:The topic Advanced Data Sources: Using Partitions describes setting up Data Source partitions in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Use Data Source partitions to reduce reconcile time"
    }
  },
  {
    "content": "Recognize pushed data in the Form Builder\n\nIcons along the right side of the Form Builder identify questions that push data to or are referenced by other questions. Check for these icons before you delete a question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003313903.html",
      "title": "Push Data to Other Questions from a Data Source",
      "section": "Recognize pushed data in the Form Builder"
    }
  },
  {
    "content": "About\n\nData Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. can be managed manually in the Web Portal or through the TrueContext REST API by uploading appropriately formatted files in comma-separated values (CSV), XML, JSON, or Excel (XLS/XLSX) format. Manual Upload Data Sources are designed for use in cases where data is not uploaded frequently. Sources connected to cloud or enterprise services can fetch data automatically, reducing administrative work.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500318ManualUploadDataSources.html",
      "title": "Manual Upload Data Sources: CSV, XML, JSON, and Excel Files",
      "section": "About"
    }
  },
  {
    "content": "Set up a Manual Upload Data Source\n\nCreate the data source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as described here, selecting Manual Upload Data Source as the type. Select a Name and optionally a Description.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500318ManualUploadDataSources.html",
      "title": "Manual Upload Data Sources: CSV, XML, JSON, and Excel Files",
      "section": "Set up a Manual Upload Data Source"
    }
  },
  {
    "content": "Input File\n\nUTF-8 Encoded: If the file to upload is saved with UTF-8 encoding (CSV), check this option. If you are not sure if it is, leave this unchecked. Trim Whitespace…: This option will remove any space, tab, or other \"whitespace\" characters that may be present at the beginning or end of a data value. This is recommended. Data Source File: Browse and select the file to upload. Info:For a JSON file, check that TrueContext supports the structure of the JSON data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataSources/217500318ManualUploadDataSources.html",
      "title": "Manual Upload Data Sources: CSV, XML, JSON, and Excel Files",
      "section": "Input File"
    }
  },
  {
    "content": "Supported JSON and XML structures\n\nTrueContext Data Sources store JSON and XML data as a table. Info:Make sure that your JSON or XML data stays within the Data Source size limits once converted to a table. TrueContext supports: Arrays Arrays of objects Nested arrays of objects Nested arrays of objects with additional fields Arrays of nested objects Pagination TrueContext does not support: Multiple root arrays Double-nested arrays",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Supported JSON and XML structures"
    }
  },
  {
    "content": "Examples of how TrueContext stores JSON and XML data\n\nTip:Check the JSON or XML data that your third-party API endpoint returns. If you need the data in a different format for a TrueContext Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., create a custom API endpoint. You can also check the third-party API endpoint for options to optimize the returned JSON or XML structure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Examples of how TrueContext stores JSON and XML data"
    }
  },
  {
    "content": "Supported formats\n\nArray Data Data stored as a table JSON[1, 2, 3] Data 1 2 3 XML<root> <data>1</data> <data>2</data> <data>3</data> </root> Array of objects Data Data stored as a table JSON[ { \"id\": \"00001111\", \"description\": \"27\\\" Monitor\" }, { \"id\": \"00001112\", \"description\": \"Keyboard\" } ] id description 00001111 27\" Monitor 00001112 Keyboard XML<data> <item> <id>00001111</id> <description>27\" Monitor</description> </item> <item> <id>00001112</id> <description>Keyboard</description> </item> </data> Nested array of objects Data Data stored as a table JSON{ \"results\": [ { \"id\": \"00001111\", \"description\": \"27\\\" Monitor\" }, { \"id\": \"00001112\", \"description\": \"Keyboard\" } ] } id description 00001111 27\" Monitor 00001112 Keyboard XML <data> <results> <id>00001111</id> <description>27\" Monitor</description> </results> <results> <id>00001112</id> <description>Keyboard</description> </results> </data> Nested array of objects with additional fields Data Data stored as a table JSON{",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Supported formats"
    }
  },
  {
    "content": "\"numResults\": 2, \"numPages\": 1, \"results\": [ { \"invoiceNumber\": \"0001\", \"invoiceTotal\": \"323.32\" }, { \"invoiceNumber\": \"0002\", \"invoiceTotal\": \"117.33\" } ] } invoiceNumber invoiceTotal 0001 323.32 0002 117.33 XML <data> <numResults>2</numResults> <numPages>1</numPages> <results> <invoiceNumber>0001</invoiceNumber> <invoiceTotal>323.32</invoiceTotal> </results> <results> <invoiceNumber>0002</invoiceNumber> <invoiceTotal>117.33</invoiceTotal> </results> </data> Array of nested objects Data Data stored as a table JSON[ { \"name\": \"Jenna Martinez\", \"company\": \"Goldenmade Construction\", \"contact\": { \"email\": \"jmartinez@company.com\", \"phone\": \"3332221111\", \"address\": { \"street\": \"111 Goldenmade Street\", \"city\": \"Ottawa\", \"state\": \"Ontario\", \"zip\": \"K1A2B3\", \"country\": \"CA\" } } }, { \"name\": \"Jeremy Lau\", \"company\": \"Silver Mango Contractors\", \"contact\": { \"email\": \"jlau@email.com\", \"phone\": \"1112223333\", \"address\": { \"street\": \"222 Chicory Street\", \"city\": \"Ottawa\", \"state\": \"Ontario\", \"zip\":",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Supported formats"
    }
  },
  {
    "content": "\"K2A2B3\", \"country\": \"CA\" } } } ] name company contact / email contact / phone contact / address / street contact / address / city contact / address / state contact / address / zip contact / address / country Jenna Martinez Goldenmade Construction jmartinez@company.com 3332221111 111 Goldenmade Street Ottawa Ontario K1A2B3 CA Jeremy Lau Silver Mango Contractors jlau@email.com 1112223333 222 Chicory Street Ottawa Ontario K2A2B3 CA XML<data> <result> <name>Jenna Martinez</name> <company>Goldenmade Construction</company> <contact> <email>jmartinez@company.com</email> <phone>3332221111</phone> <address> <street>111 Goldenmade Street</street> <city>Ottawa</city> <state>Ontario</state> <zip>K1A2B3</zip> <country>CA</country> </address> </contact> </result> <result> <name>Jeremy Lau</name> <company>Silver Mango Contractors</company> <contact> <email>jlau@email.com</email> <phone>1112223333</phone> <address> <street>222 Chicory Street</street> <city>Ottawa</city> <state>Ontario</state>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Supported formats"
    }
  },
  {
    "content": "<zip>K2A2B3</zip> <country>CA</country> </address> </contact> </result> </data>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Supported formats"
    }
  },
  {
    "content": "Unsupported formats\n\nMultiple root arrays Data Data stored as a table JSON{ \"results1\": [ { \"invoiceNumber\": \"0001\", \"invoiceTotal\": \"323.32\" }, { \"invoiceNumber\": \"0002\", \"invoiceTotal\": \"117.33\" } ], \"results2\": [ { \"invoiceNumber\": \"0011\", \"invoiceTotal\": \"309.44\" }, { \"invoiceNumber\": \"0012\", \"invoiceTotal\": \"191.99\" } ] } results1 (1) / invoiceNumber results1 (1) / invoiceTotal results1 (2) / invoiceNumber results1 (2) / invoiceTotal results2 (1) / invoiceNumber results2 (1) / invoiceTotal results2 (2) / invoiceNumber results2 (2) / invoiceTotal 0001 323.32 0002 117.33 0011 309.44 0012 191.99 XML <data> <results1> <invoiceNumber>0001</invoiceNumber> <invoiceTotal>323.32</invoiceTotal> </results1> <results1> <invoiceNumber>0002</invoiceNumber> <invoiceTotal>117.33</invoiceTotal> </results1> <results2> <invoiceNumber>0011</invoiceNumber> <invoiceTotal>309.44</invoiceTotal> </results2> <results2> <invoiceNumber>0012</invoiceNumber> <invoiceTotal>191.99</invoiceTotal> </results2>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Unsupported formats"
    }
  },
  {
    "content": "</data> Double-nested arrays Data Data stored as a table JSON{ \"numResults\": 2, \"numPages\": 1, \"results\": [ { \"invoiceNumber\": \"0001\", \"invoiceTotal\": \"323.32\", \"parts\": [ { \"partId\": \"112211\", \"partQty\": \"5\" }, { \"partId\": \"332233\", \"partQty\": \"11\" } ] }, { \"invoiceNumber\": \"0002\", \"invoiceTotal\": \"117.33\", \"parts\": [ { \"partId\": \"887788\", \"partQty\": \"9\" }, { \"partId\": \"665566\", \"partQty\": \"7\" }, { \"partId\": \"114411\", \"partQty\": \"16\" } ] } ] } invoiceNumber invoiceTotal parts (1) / partId parts (1) / partQty parts (2) / partId parts (2) / partQty parts (3) / partId parts (3) / partQty 0001 323.32 112211 5 332233 11 0002 117.33 887788 9 665566 7 114411 16 XML <data> <numResults>2</numResults> <numPages>1</numPages> <results> <invoiceNumber>0001</invoiceNumber> <invoiceTotal>323.32</invoiceTotal> <parts> <partId>112211</partId> <partQty>5</partQty> </parts> <parts> <partId>332233</partId> <partQty>11</partQty> </parts> </results> <results> <invoiceNumber>0002</invoiceNumber>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Unsupported formats"
    }
  },
  {
    "content": "<invoiceTotal>117.33</invoiceTotal> <parts> <partId>887788</partId> <partQty>9</partQty> </parts> <parts> <partId>665566</partId> <partQty>7</partQty> </parts> <parts> <partId>114411</partId> <partQty>16</partQty> </parts> </results> </data> Tip:Check the JSON or XML data that your third-party API endpoint returns. If you need the data in a different format for a TrueContext Data Source, create a custom API endpoint. You can also check the third-party API endpoint for options to optimize the returned JSON or XML structure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/StoreJSONDataSources.htm",
      "title": "How Data Sources Store JSON and XML Data",
      "section": "Unsupported formats"
    }
  },
  {
    "content": "User Data Source About Set Up a User Data Source Group Columns Available on all tiers: Essentials Advanced Enterprise About A TrueContext User Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. compiles information about the users in a selected TrueContext group, and makes the available fields (like user ID, Display Name, First Name, Last Name, email address, and other information set in the User Profile) available for use in a form. Often, the data source is used to auto-populate information about that user so that it does not need to be manually entered. Once the data source is created, there is no maintenance required; the User Data Source updates immediately and automatically when a user is added or removed to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500448_UserDataSource.html",
      "title": "User Data Source"
    }
  },
  {
    "content": "the group, or if any user information changes. Though this data source has many possibilities in terms of usage, it is a key element in dispatching forms to users with the Dispatch Data Destination. Set Up a User Data Source Create the data source as described here. Select User Data Source as the type. Name the data source and optionally enter a Description. Configure the Data Source as described in the following sections. Group In the Group tab, select the Target Group of users to compile data from. Select \"Push updates to devices\" to prompt a reconcile on mobile devices when any updates are made to the group (users added or deleted, names updated, etc.). Note: Remember to reference the data source in your forms. Columns The columns in the data source are created based on the data available on User Profiles. Keep in mind that if these fields are not filled out on a user, the column will be empty for that user. ID Display Name Username First Name Last Name Email Address Alternate Email",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500448_UserDataSource.html",
      "title": "User Data Source"
    }
  },
  {
    "content": "Address Role Locale Time Zone Phone Number Address Line 1 Address Line 2 Address City Address State Address Postal Code Address Country Company Name Employee ID Manager Name Manager Email Manager Phone Number Department Division Org Unit Organization Unit Address Region Subregion Branch Branch Office Office As with any fields in a form, string concatenation can be used to combine answers into one field; this would be useful for creating a \"Full Name\" field by combining \"First Name\" and \"Last Name\" (which could also be auto-populated based on username).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500448_UserDataSource.html",
      "title": "User Data Source"
    }
  },
  {
    "content": "Apply Data Source Filters\n\nThis section includes the following content: Filter a List of Options in a Lookup QuestionAdvanced Data Sources: Using Partitions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ApplyDataSourceFilters.htm",
      "title": "Question-Based Filter or Data Source Partition?",
      "section": "Apply Data Source Filters"
    }
  },
  {
    "content": "Data Source setup\n\nQuestion-based filters limit the options displayed for a lookup question. We store Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. as tables (rows and columns) in the TrueContext system. You can filter the options in a lookup question by any column in your Data Source. The following example shows a Data Source with multiple columns. Tip:This example uses the “Project Number” column to display options, and the “Username” column to match. When you set up a filter, you can match any column in the Data Source, it doesn’t have to be the username.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Data Source setup"
    }
  },
  {
    "content": "Filtered options on the device\n\nIn this example, a Dropdown filter based on the signed-in username displays the Project Number specific to the Mobile App user “elektra”.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Filtered options on the device"
    }
  },
  {
    "content": "Filter options in the Form Builder\n\nThe following example shows the “Project Number” filtered by the Mobile App username. Tip: TrueContext detects the signed-in username dynamically—you don’t have to set up a specific value.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Filter options in the Form Builder"
    }
  },
  {
    "content": "Cascading Data Source filters\n\nYou can “stack” Data Source filters sequentially to create a cascade effect: The answer to Question 1 limits the options in Question 2. The answer to Question 2 limits the options in Question 3, and so on. Note:Questions 1 and 2 in this example can be Dropdown or Radio Button, but not Multiselect. The following illustration shows an example of a Data Source that has a column for “Project Number”. The filter is set to match the project number selected in the form. The form displays only those “City” options that match the selected project.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Cascading Data Source filters"
    }
  },
  {
    "content": "Video demo of a cascading Data Source filter\n\nThe following video demonstrates how filtering works in the Mobile App and how to set up the questions in the Form Builder. In this example, cascading filters affect the “City” question and the “Client Names” pushed to the Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.: Set up a lookup question so that the user can select a project number from the list. Set up another lookup question that’s filtered by the selected project number. Push data from the second lookup question to another question, in this case, a question in a Repeatable Section. Your browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Video demo of a cascading Data Source filter"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up a Data Source filter\n\nAdd or edit a Dropdown, Multiselect, or Radio Button lookup question. Info:To filter another lookup question based on the answer to this one, use either a Dropdown or Radio Button question. The section Cascading Data Source filters describes this option in more detail. Select the Options tab, select Use Data Source for Options, and then choose a Data Source from the list. Select the Column value displayed on device and the Column value submitted to server. These don’t have to be the same. Toggle the Filter Options on. Select the Filter Column.This is the column to check for a matching value. Select an operator, and then select or enter the comparison value. You can choose: A constant—Enter the text that you want to match on. The answer to a previous question in the form—For example, in a previous question, the field user selects a region. The options displayed in the filtered question only include the customers located in the selected region. The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Steps to set up a Data Source filter"
    }
  },
  {
    "content": "signed-in mobile user’s username—For example, an inspection form requires the user to enter their User ID. By filtering the question to match on the username, the only option available to the user is the correct User ID. You can add more filter columns and comparison values. The lookup question only shows options that meet all of the defined criteria. Select Save to save your changes. Note:To make sure your Data Source filters work as intended in the field, test them thoroughly before you deploy the form. Test the form under a variety of conditions to validate the field user experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Steps to set up a Data Source filter"
    }
  },
  {
    "content": "Data Source Translations\n\nAvailable as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on With the Multi-Language feature, you can create a single form and provide it to your field users in multiple languages. A Data Source can provide a list of translated options for a Dropdown, Multiselect, or Radio Button lookup question. Info:The section Data Source Translations: Set up a lookup question to use Data Source translations describes in detail how to set up a question to display options in the selected language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Data Source Translations"
    }
  },
  {
    "content": "Related topics\n\nMulti-Column View and Default Sort Options Advanced Data Sources: Using Partitions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003319786.html",
      "title": "Filter a List of Options in a Lookup Question",
      "section": "Related topics"
    }
  },
  {
    "content": "About\n\nPartitions Partitions are an Enterprise tier-only filter tool for large data sources. With partitions, users working on a form will only receive data that's relevant to them. There are two kinds of partitions: Dynamic and Regex. are a filtering mechanism applied to large Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. in order to determine what rows of data are relevant to different users/groups. When using mobile forms, each user or group gets a different \"partition\" of the data set synced to their mobile devices, ensuring they have only the data that is relevant to them. Info:When you partition a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "About"
    }
  },
  {
    "content": "TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., you optimize mobile device performance. This doesn’t reduce the actual Data Source size, however. The topic Best Practices for Data Source Size provides more information about how and why we limit the size of your Data Sources. If you’re an Enterprise customer, we recommend that you follow best practices for Data Source size before you request a size limit increase.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "About"
    }
  },
  {
    "content": "Example Scenario\n\nOrganizations often have a very large master data set stored in or exported from their backend system. For example, a utility company might have a Data Source containing a list of all gas meters in Oregon. Having that full data set in one piece is meaningful and useful to the people who manage that data. However, inspectors in the field are not traveling across the entirety of Oregon to inspect meters; they only inspect meters in one small region. Therefore, it's not useful for them to have access to the entire data set. Having the entire data set is resulting in slow reconcile times and could lead to inspectors making a mistake and selecting a meter in the wrong region. Data Source partitions make it easy to provide those inspectors with only the meters for their region.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Example Scenario"
    }
  },
  {
    "content": "Benefits of Using Partitions\n\nManage larger Data Sources without an impact on app performance: When a mobile device reconciles with TrueContext, without partitions, it downloads the entire Data Source. When the Data Source is updated and a device reconciles, it downloads the entire Data Source again. Different mobile devices can store different amounts of data, and some older or lower performance devices may experience performance issues if the file is too large. Partitions allow you to keep the data in one Data Source in the TrueContext system but divide up the data for mobile users so they experience the best app performance. Control access to data: Some Data Sources may contain data that should not be available to certain users. For example, a facilities management company has several customers, who each have multiple facilities that they maintain. Some subcontractors manage buildings for Customer A, while different subcontractors manage buildings for Customer B. For contractual",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Benefits of Using Partitions"
    }
  },
  {
    "content": "reasons, the subcontractors who do work for Customer B are not allowed to see the data for Customer A. Partitions allow you to still maintain all the data in one data set, but to restrict subcontractor access to only the relevant data within that set. Usability and Error Reduction: If users have access to a smaller set of data, they will find dropdown lists easier to search and use. They will also be less likely to make mistakes when presented with a smaller list of options.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Benefits of Using Partitions"
    }
  },
  {
    "content": "Adding a Partition\n\nHover over Forms & Integrations, confirm that you are in the desired FormSpace, and select Data Sources. Select the desired Data Source by clicking on its name. Mouse over the dropdown next to the Data Source name and select Create Partition. There are two types of partitions; view Dynamic Partitions and Regex Partitions below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Adding a Partition"
    }
  },
  {
    "content": "Dynamic Partitions\n\nDynamic partitions divide the Data Source based on a user or user group. Group-based partitions apply to all the users in a group, even new users that you add to the group. If you set up a user-based partition and then delete the user, the system automatically deletes the partition. Deleting a partition does not delete any data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Dynamic Partitions"
    }
  },
  {
    "content": "Sample Data Source\n\nBelow is a relatively simple Data Source as viewed in a spreadsheet program; this will be used for all examples in this article. A dynamic partition can be used to filter the data so that when \"John Doe\" is filling out a form on his mobile device and selects a \"Customer\" dropdown list, he only sees the customers in rows that have his name in them. With the same partition, \"Jane Doe\" can view only her customers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Sample Data Source"
    }
  },
  {
    "content": "Set up the Partition\n\nIn the above screen, the column selected is \"Rep\"; this is where the value (Username) to partition by is listed. The field to match is \"Username\"; this tells the filtering mechanism to search for the mobile user's Username within the \"Rep\" column, and give the user access only to data in rows that contain their username in the \"Rep\" column. For Field to Match, other options to select from are User ID, Group ID, and Group Name. Note: Remember to reference the Data Source in your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Set up the Partition"
    }
  },
  {
    "content": "Regex Partitions\n\nRegex partitions use Regular Expressions to manually partition the Data Source. You can set up multiple partitions, for individual users or individual groups. If a Data Source is not partitioned, all users with the correct FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions will have access to the full Data Source. This would be useful if most users are employees and can access all data, but a single group of subcontractors needs restricted access.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Regex Partitions"
    }
  },
  {
    "content": "Sample Data Source\n\nFor example, using the Data Source below, a Regex partition can be used to filter the data so that when users in a particular group select a \"Customer\" dropdown list, they are shown only users in regions containing the word \"Ontario.\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Sample Data Source"
    }
  },
  {
    "content": "Set up the Partition\n\nIn the above screen, the column selected is Region, as the regular expression will try to match data in this column. In order to link the filter only to a particular group, select Group as the Link Type. Other options are User and Everyone. Select the group to receive the filtered data. Enter your regular expression. Here we have entered ^.*Ontario.*$ to match any field containing the word \"Ontario.\" Test your regex before deploying it to a production environment. Set up as above, the group \"Demo Group\" will see only customers located in Ontario (whether it be Western, Eastern or Central) in their customer list. Multiple partitions can be set for the same Data Source -- for example, a different partition can be made to show another group only customers located in \"Western Canada.\" Note:Remember to reference the Data Source in your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500438_AdvancedDataSourcesPartitions.html",
      "title": "Advanced Data Sources: Using Partitions",
      "section": "Set up the Partition"
    }
  },
  {
    "content": "Video Demo\n\nLearn from an expert! This video shows you how to create a basic Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. and associate it with a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Video Demo"
    }
  },
  {
    "content": "Data Destination Cookbook\n\nGet “recipes” for a variety of frequently-used Data Destinations. Use a Repeatable Destination to Update Existing Child Records in Salesforce Post a Chatter Feed Item using the Salesforce Apex REST Data Destination Send Data from a Repeatable Section to a SharePoint List",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Data Destination Cookbook"
    }
  },
  {
    "content": "Key Concepts\n\nData Destinations control where data is sent when a form is submitted. Data is automatically routed to the chosen service in the format of your choice, making data sharing and storage an automated process. Data Destinations can: Deliver information in structured data formats, such as XML and JSON. Route form submission data to cloud and enterprise services. Create and update records in field-based systems such as Salesforce and Microsoft SharePoint. Email user-friendly PDF or Word documents to customers. Send notifications through SMS or social media. When you want to… You should… Update your form by adding new Data Destinations or Documents Link the destination in the Form Builder: Forms & Integrations > List Forms > FormName > Edit Form > Destinations > Add a Data Destination Result: This creates a new version of the form. Send data from past form submissions: Send data from previously submitted forms to an additional data destination. Attach an additional document to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Key Concepts"
    }
  },
  {
    "content": "an existing Data Destination. Note:Be careful if you add an email destination to a previous form version—the recipient could receive thousands of emails. Edit the form outputs: Forms & Integrations > List Forms > FormName > Form Outputs > Edit Form Outputs Result: This triggers the destination for past submissions of the selected form version only. This does not create a new version of the form. Tip:If you add the destination to the current version of the form, future versions of the form will also send data to the destination. Data Destinations Overview Creating and Managing Data Destinations Connecting Destinations and Documents to Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nWhen you configure a Data Destination, you can: Map data to objects in your target system. Attach documents. Specify the conditions that trigger the destination to run (Filtering). For example, you can configure the destination to run only when a form is submitted as Complete. For some destinations, define matching criteria to overwrite existing records when the destination finds a match. For Salesforce and HTTP Data Destinations, store the output of a “parent” destination. You can use the stored response output in subsequent Data Destinations to make sequential requests, such as for parent-child relationships. Set Up a Form for Dispatching Apply Filtering to Data Destinations Use Response Data Handling to Store Data Received from a Third-Party System",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Configuration"
    }
  },
  {
    "content": "Repeatable Destinations\n\nA Repeatable Destination sends data from a specific Repeatable Section in a form. This enables you to create or update several rows of data using a single destination. Repeatable Destinations are available for SharePoint List and Salesforce (except Apex REST) Data Destinations. You can configure a standalone Salesforce Repeatable Destination or link a Repeatable Destination to a “parent” Salesforce record. For example, you can link a list of required parts to a parent Salesforce Order record. Set Up a Salesforce Repeatable Destination Create Filter Rules for Individual Rows in a Repeatable Destination Use a Repeatable Destination to Update Existing Child Records in Salesforce Send Data from a Repeatable Section to a SharePoint List",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Repeatable Destinations"
    }
  },
  {
    "content": "Troubleshooting\n\nTest your Data Destination before you add it to your production environment. To test a Data Destination, submit a form that’s linked to that destination, and then check in the Web Portal for execution errors: Forms & Integrations > Data Destinations If a Data Destination fails, TrueContext automatically retries the destination. Most failures correct themselves and require no intervention. Tip:We recommend that you set up at least one Problem Contact Email Address A Problem Contact Email Address is an email address an Admin defines in their team settings. If an issue occurs, such as network problems that cause a data destination to be inaccessible, TrueContext sends an email to the Problem Contact Email Address. An Admin can override the team setting and specify a different email address at the FormSpace level. so that TrueContext can automatically send failure notifications. Check that you receive emails (if configured) and make sure that your third-party system shows",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "the submitted form data as expected. Troubleshooting Data Destinations Set up Problem Contact Email Addresses",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DataDestinations.htm",
      "title": "Data Destinations",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Create and use a Data Destination\n\nThis section includes the following content: Connecting Destinations and Documents to FormsCreating and Managing Data DestinationsAttachment File NamingChange How Form Submissions Are Named and Organized in Cloud Services",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateUseDataDestination.htm",
      "title": "Create and use a Data Destination",
      "section": "Create and use a Data Destination"
    }
  },
  {
    "content": "About\n\nData Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. control where data is sent when a form is submitted. Data is automatically routed to the chosen service in the format of your choice, making data sharing and storage an automated process. Data Destinations can: Deliver information in structured data formats, such as XML and JSON. Route form submission data to cloud and enterprise services. Create and update records in field-based systems such as Salesforce and Microsoft SharePoint. Email user-friendly PDF or Word documents to customers. Send notifications through SMS or social media. One Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "About"
    }
  },
  {
    "content": "(such as email or cloud storage) in several different formats. can be linked to any number of forms in the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. Multiple Data Destinations can also be linked to the same form, allowing your data to be delivered to a variety of locations simultaneously. The following video shows you the basics of how to set up a Data Destination using the example of a Box account. For any Salesforce Destinations (except Apex REST), ServiceNow Table Data Destinations, and Microsoft SharePoint list Data Destinations, you can link a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system. to a Repeatable Section A Repeatable Section is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "About"
    }
  },
  {
    "content": "a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. in your form. This enables the system to send multiple rows of data to only one Destination, instead of to a separate Destination for each row. Don't want your forms sent anywhere? You can still download them from the portal. Useful links on Data Destinations and Documents: Data Destinations Overview: Includes a list of all existing Data Destination types and links to their specific documentation. Creating and Managing Data Destinations: Explains how to set up a Data Destination in the web portal. Introduction to TrueContext Documents: Need to send a PDF to one Data Destination, but an XML file of the data to another system? The different formats are called documents, and this article explains in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "About"
    }
  },
  {
    "content": "Add a Destination\n\nData Destinations are configured in the Web Portal. For more information on Data Destinations and configuring them, please read our documentation: Creating and Managing Data Destinations. Info:The topic Link Data Destinations to previous form versions describes how to send data from past form submissions to a different Data Destination. To add a Data Destination to your form in the Form Builder: Select the destinations tab from the top navigation pane. Select the Add a Data Destination button from the side navigation bar. Select the appropriate Destination from the list. Configure the options based on the information below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "Add a Destination"
    }
  },
  {
    "content": "General Information\n\nThis section details what kind of Destination you've selected, including Destination type (useful, if you've named the Destination something other than the type it is).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "General Information"
    }
  },
  {
    "content": "Documents\n\nSelect what documents you wish to attach to the form. Documents are how you format the form submissions' information. For more information on documents, please read: Standard layout options for PDF/Word/HTML documents. Note:You can’t attach documents to a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system.. This prevents duplication of the same document across multiple records. The following table describes the Data Destinations that support or require a document. Requires a Document Can have a Document, but is not required Not compatible with Documents Microsoft SharePoint Server Amazon Glacier Amazon SNS Salesforce Apex REST Amazon S3 Google Sheets ShareFile Box Dispatch WebDAV (HTTP PUT or PATCH) Customer Feedback Microsoft SharePoint List Dropbox SMS Email Zendesk Ticket FTP/Secure FTP Google Drive HTTP HTTP File Upload Microsoft OneDrive Microsoft OneDrive for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "Documents"
    }
  },
  {
    "content": "Business Microsoft SharePoint Document Library Salesforce (except Apex REST) ServiceNow Table Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can select languages for the document files. The topic Steps to attach a Multi-Language Document to a Data Destination describes the language options in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "Documents"
    }
  },
  {
    "content": "Conditions\n\nConditions can optionally be applied to all TrueContext Data Destination types for more powerful and flexible handling of submitted forms and associated data. Conditions allow Data Destinations to execute only if the conditions are met. Submitted data can be routed to different destinations based on the conditions applied. Alternatively, each Data Destination can route the data in a different format to the same destination depending on the data submitted. For more information on conditional filtering of Data Destinations, please read: Apply Filtering to Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "Conditions"
    }
  },
  {
    "content": "Remove a Destination\n\nFuture submissions from this form will no longer be sent to the destination. The destination may still receive submissions from older versions or other forms that are connected to it. Select the form that you want to work on (Forms & Integrations > List Forms). Select edit form. Result: The system opens the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Go to the destinations tab. Select a Data Destination from the list. Select remove destination. Result: The system prompts you to confirm that you want to remove the Data Destination from your form. Select confirm. Result: The system removes the Data Destination from your form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003126106.html",
      "title": "Connecting Destinations and Documents to Forms",
      "section": "Remove a Destination"
    }
  },
  {
    "content": "Create a Data Destination\n\nHover over Forms & Integrations, confirm that you are in the desired FormSpace, and select Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Select CREATE DATA DESTINATION. Choose a Data Destination type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Create a Data Destination"
    }
  },
  {
    "content": "Settings: Destination Basics\n\nThese settings are the most common to Data Destinations. Other Data Destinations will have specific configurations; these will be covered in their respective Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. articles. Name: This is the name that will display in the Data Destination List and when selecting destinations to link in the Form Builder. Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.: This is used in Destination Outputs and must be unique per FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: Destination Basics"
    }
  },
  {
    "content": "TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. It will automatically generate an ID based on the Destination Name if not customized. Disable this destination: Enable this option if you wish to create the destination without allowing it to accept form submissions -- i.e., it can still be linked in forms, but the destination will not execute if forms are submitted. Auto-Link new forms to this destination: New forms created or imported (in the same FormSpace) will automatically be linked to this Data Destination. On Destinations that accept documents, enabling this option also enables the Auto-Link documents option. When the destination is auto-linked to a form, the Data Destination will automatically be able to send these documents. Destination Type: (Salesforce, ServiceNow, and Microsoft SharePoint List destinations only) A Repeatable Destination A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: Destination Basics"
    }
  },
  {
    "content": "Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system. sends multiple lines of data from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. to a third-party system. The topics Set Up a Salesforce Repeatable Destination , Set up a ServiceNow Table Data Destination, and Microsoft SharePoint List Data Destination provide detailed steps. Error Handling: If a form submission initially fails, TrueContext will continue to try to send your form submissions on a regular schedule. If a Data Destination fails multiple times, you will be notified. Most failures correct themselves and require no intervention. TrueContext will start sending emails to the Problem Contact Email addresses if the form submission fails to reach the destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: Destination Basics"
    }
  },
  {
    "content": "three times, or approximately within an hour. To set your preference, simply select the number of failures before you are notified.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: Destination Basics"
    }
  },
  {
    "content": "Settings: Filtering\n\nWith filters applied, a Data Destination will only execute if specific conditions are met. Submitted data can be routed to different destinations based on the filtering rules applied. Alternatively, each Data Destination can route the data in a different format to the same destination depending on the data submitted. Info:When you configure a Data Destination as Repeatable, you can create custom Row Filter Rules for individual rows of a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. This enables you to control which rows the destination sends. The topic Create Filter Rules for Individual Rows in a Repeatable Destination explains Row Filters in more detail. Click here for more information on Data Destination Filtering.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: Filtering"
    }
  },
  {
    "content": "Settings: File Configuration/Attachments\n\nNote: This setting is not on every destination and is called “Attachments” on Email destinations. Forms often include file attachments such as photos, sketches, annotated documents, or audio files. To ensure the security of customer data, while photos are displayed inline in PDF documents, other files, including audio files, are provided as links within the associated document sent with the Data Destination. People often need to store the full-sized images to review or for auditing purposes. If you want the people receiving the form submissions to be able to view the attached files, be sure to select the files you want to send separately in the Data Destination associated with the form. If you wish to create a custom naming scheme for these attachments, please read: Attachment File Naming",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: File Configuration/Attachments"
    }
  },
  {
    "content": "Settings: Destination Outputs\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Destination outputs allow advanced users to coordinate data between two or more destinations. The output from one destination, such as the headers or HTTP status, from one destination can be fed into the input of a subsequent destination using key:value pairs, using Data Reference Expression Language. This setting is currently limited to certain destinations. For more information on Destination Outputs, please read: Use Response Data Handling to Store Data Received from a Third-Party System.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Settings: Destination Outputs"
    }
  },
  {
    "content": "Viewing the Data Destination pages\n\nOnce you have created your Data Destination, you can view: A summary of the configuration options. The Executions table (limited to the past 30 days to optimize performance). The forms that use the destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Viewing the Data Destination pages"
    }
  },
  {
    "content": "Update or Delete a Data Destination\n\nYou can edit the configuration for your Data Destinations at any time. Hover over Forms & Integrations, confirm that you are in the desired FormSpace, and select Data Destinations. Select the name of the Data Destination that you wish to update. From the DestinationName drop-down menu, select Update or Delete. Note:You can’t delete a Data Destination if it’s currently in use. You must unlink the Data Destination from all referencing forms before you can delete it. However, you can deactivate a Data Destination to prevent it from executing. After applying the desired changes, select Update. Disabling Destinations If you wish to disable a Data Destination even after forms have been submitted to it, select the Disable this destination option. Note:Data Destinations that are not enabled still appear in the Form Builder Destinations tab but do not receive any form submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Update or Delete a Data Destination"
    }
  },
  {
    "content": "Copy a Data Destination\n\nYou can copy a Data Destination directly to a new FormSpace or create a copy within the same FormSpace to edit. Admin can: Users with Can Create permissions can: copy any Data Destination to any FormSpace. make connections available to the target FormSpace by granting permissions. copy a Data Destination to/from any FormSpace in which: the user has \"can create\" permissionsthe FormSpace has access to the connection. Hover over Forms & Integrations, confirm that you are in the desired FormSpace, and select Data Destinations. Select the name of the Data Destination you wish to copy. From the DestinationName drop-down menu, select Copy. Select which FormSpace you wish to copy this Data Destination to and name the copied destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Copy a Data Destination"
    }
  },
  {
    "content": "Copy a Data Destination Configuration\n\nCopying a Data Destination's configuration to a target Data Destination will overwrite and update the target's settings. These settings include Data Record Filtering and any Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection.. Admin can: Users with Can Create permissions can: copy any configuration to any available FormSpace. make any connection used by the original Data Destination usable by the target FormSpace only copy Data Destination configurations to/from any FormSpace in which: the user has \"can create\" permissionsthe FormSpace has access to the connection. Hover over Forms & Integrations, confirm that you are in the desired FormSpace, and select Data Destinations. Select the name of the Data Destination you wish to copy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Copy a Data Destination Configuration"
    }
  },
  {
    "content": "From the DestinationName drop-down menu, select Copy Configuration. From the dropdown menu, select the name of the Data Destination whose settings you are overwriting. You can select multiple Data Destinations to update/overwrite.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Copy a Data Destination Configuration"
    }
  },
  {
    "content": "View Data Destination executions\n\nThe Data Destination Executions page provides a list of executions for a specific Data Destination. The information in the table includes: Success or failure of an execution. When the data was sent: First Run indicates the first time that the destination executed for a particular submission. Latest Run indicates the most recent time that the destination executed for a particular submission. The order of executions in the list defaults to Latest Run. Note:First Run and Latest Run will often show the same timestamp. When a destination re-executes it updates the Latest Run timestamp. The data that was sent (Form Submission reference number). The origin of the data (Form name). Details about failed or skipped executions (Details). You can view a list of executions in one of two ways: List all Data Destination executions List all Data Destination executions for a specific execution state List all Data Destination executions Go to the Data Destinations page,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "View Data Destination executions"
    }
  },
  {
    "content": "and then select a destination: Forms & Integrations > Data Destinations > DestinationName Result: The system displays the selected destination details. Open the DestinationName dropdown menu and select List Executions. Result: The Data Destination Executions page opens with a list of all executions for the selected Data Destination. Tip:By default, the results include the past 30 days. You can change the default list settings to list executions for a different date range. You can also filter by form name and execution state. To search by date range, form name, or execution state, expand the Search Options section. Select any or all of the following options, and then select Filter: Form: List All form submissions executed for this Data Destination or select specific forms. Execution State: Select All types of execution states or select specific states. Date: You can use one of the default date periods or specify your own. Use Date Period: Select a preset time period. Use Date Range:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "View Data Destination executions"
    }
  },
  {
    "content": "Enter From and To dates. To sort the Data Destination Executions table by the date of execution: Select First Run to list the earliest execution first. Select Latest Run to list the most recent execution first. List all Data Destination executions for a specific execution state Go to the Data Destinations page, and then select a destination: Forms & Integrations > Data Destinations > DestinationName Result: The system displays the selected destination details. On the destination details page, from the Executions table, select a state to filter the results. Note:The statistics in this table are limited to the past 30 days to optimize performance. Result: The Data Destination Executions page opens with a list of all executions that match the selected state. Tip:By default, the results include the past 30 days. You can change the default list settings to list executions for a different date range. You can also filter by form name and other execution states. To search by date range, form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "View Data Destination executions"
    }
  },
  {
    "content": "name, or execution state, expand the Search Options section. Select any or all of the following options, and then select Filter: Form: List All form submissions executed for this Data Destination or select specific forms. Execution State: Select All types of execution states or select specific states. Date: You can use one of the default date periods or specify your own. Use Date Period: Select a preset time period. Use Date Range: Enter From and To dates. To sort the Data Destination Executions table by the date of execution: Select First Run to list the earliest execution first. Select Latest Run to list the most recent execution first.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "View Data Destination executions"
    }
  },
  {
    "content": "Re-Execute a Failed Execution\n\nIf a Data Destination execution has failed, the List Executions page will contain details regarding why. Once the source of the error has been corrected, failed executions can be re-executed. Open the Data Destination Configuration page and select Re-Execute Failed Executions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Re-Execute a Failed Execution"
    }
  },
  {
    "content": "Add a Destination to a Form\n\nInfo:This method creates a new form version. If you want to send data from past form submissions to an added Data Destination, follow the steps to Link Data Destinations to previous form versions. To add a Data Destination to your form in the Form Builder: Select the destinations tab from the top navigation pane. Select the Add a Data Destination button from the side navigation bar. Select the appropriate Destination from the dropdown. Configure the options based on the information in the topic Connecting Destinations and Documents to Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Add a Destination to a Form"
    }
  },
  {
    "content": "Link a New Destination to Previous Form Versions\n\nAfter you’ve deployed a form, you might want to return to a previous form version and send existing submissions to a new destination, or attach a different document to an existing destination. You can attach Data Destinations and documents to a previous form version. This saves you time because the form submissions automatically reprocess after you add the new Data Destination or document. Info:The topic Link Data Destinations to previous form versions describes how to link a Data Destination or document to previous form versions. Note:Be careful if you add an email destination to a previous form version—the recipient could receive thousands of emails.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Link a New Destination to Previous Form Versions"
    }
  },
  {
    "content": "Testing and Troubleshooting Data Destinations\n\nData Destinations should be configured and tested carefully before using them in production. This is key to ensuring that TrueContext data is received correctly. Please consult the recommendations for testing and troubleshooting Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500108_CreateManageDataDestinations.html",
      "title": "Creating and Managing Data Destinations",
      "section": "Testing and Troubleshooting Data Destinations"
    }
  },
  {
    "content": "Supported Data Destinations\n\nWhen you use Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. that send data to cloud services, form submission documents are automatically sorted into folders. You can customize how the document files are sorted and named, making it easy to organize and retrieve your data. Custom folder and file names are available for the following Data Destinations: Google Drive Box Dropbox Microsoft OneDrive Microsoft SharePoint Document Library ShareFile SharePoint Server Salesforce (custom file names only, not folders) Read more about how form submissions are named and organized in Google Sheets, Amazon Glacier, and Amazon S3.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500858_ChangeHowFormSubmissionsAreNamed.html",
      "title": "Change How Form Submissions Are Named and Organized in Cloud Services",
      "section": "Supported Data Destinations"
    }
  },
  {
    "content": "Sort Form Submissions into Folders\n\nYou can define custom folder and sub-folder names to organize document files. Specify a static name or use the data from submitted forms—such as customer name or job type—to customize the folder name. Under the Forms & Integrations tab, select Data Destinations. Create a new data destination, or select an existing one. Select the File Configuration tab. Enter the Form Submission Document Folder Expression. This is the folder your documents are sent to. If the folder doesn't exist yet, this action creates it. Single folder: Enter the folder name. For example, enter Inspections to name the folder “Inspections”. Multiple folders: Use Data Reference Expression Language (DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.) to specify the name of each folder. For example: %f—-the form name. %u—the user name of the user who submitted the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500858_ChangeHowFormSubmissionsAreNamed.html",
      "title": "Change How Form Submissions Are Named and Organized in Cloud Services",
      "section": "Sort Form Submissions into Folders"
    }
  },
  {
    "content": "form. %a[Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.] — the answer to a specific question. Optionally, add static text for formatting: %f -- %a[Customer Name]. Sub-folders: Enter a forward slash (/) following the first folder, and then the name of the sub-folders. For example: %f/%u/%a[Customer Name]—to sort submissions into folders named after the form, and sub-folders named after the submitter and the customers. The system displays a preview of the folder name below the text area. To test file structures adequately, submit a few forms to ensure folders are created as intended. An example of %f/%u%%a[Customer Name] is shown in the image below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500858_ChangeHowFormSubmissionsAreNamed.html",
      "title": "Change How Form Submissions Are Named and Organized in Cloud Services",
      "section": "Sort Form Submissions into Folders"
    }
  },
  {
    "content": "Change How Document Files are Named\n\nSet files to be named based on submitted data, such as customer name or job type. Under the Forms & Integrations tab, select Documents. Either create a new document, or choose an existing document to customize. In the Filename field, use Data Reference Expression Language (DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.) to specify how form submission documents are named. Note: When building a custom file name, always include a Unique Identifier, such as a date and time. If two documents have the same name, the newer of the two replaces the older. %f—the form name. %u—the user name of the user who submitted the form. %a[Unique ID] —the answer to a specific question Optionally, add static text for formatting: %a[Customer Name] -- %d -- %t] The system displays a preview of the file name below the text area. To save your changes,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500858_ChangeHowFormSubmissionsAreNamed.html",
      "title": "Change How Form Submissions Are Named and Organized in Cloud Services",
      "section": "Change How Document Files are Named"
    }
  },
  {
    "content": "select Update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500858_ChangeHowFormSubmissionsAreNamed.html",
      "title": "Change How Form Submissions Are Named and Organized in Cloud Services",
      "section": "Change How Document Files are Named"
    }
  },
  {
    "content": "Apply Data Destination filters\n\nThis section includes the following content: Apply Filtering to Data DestinationsCreate Filter Rules for Individual Rows in a Repeatable Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ApplyDataDestinationFilters.htm",
      "title": "Apply Data Destination filters",
      "section": "Apply Data Destination filters"
    }
  },
  {
    "content": "When destinations send data (execute)\n\nWith Filter Rules set up, destinations execute only when the rule conditions are met. The rules can be based on: Answers to one or more questions. Whether the form is Archived, Active, or Draft. The workflow state.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "When destinations send data (execute)"
    }
  },
  {
    "content": "Data routing\n\nYou can set up multiple Data Destinations for a single form to send data to different people or systems. For example, after inspection, HVAC issues go to an HVAC contractor, electrical findings to an electrician, and structural concerns to an engineer. In addition to sending data to people, you can automatically route information to different systems, such as: Updating records in Salesforce. Storing documents in SharePoint. Triggering notifications through email or SMS. To route different subsets of data to different people or systems, use a combination of filter rules and data mapping features: Link multiple Data Destinations to a single form, and set up filter rules for each destination. For some types of destinations, you can use Data Reference Expression Language (DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.) to define which answers are included",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Data routing"
    }
  },
  {
    "content": "in the data sent out. This approach ensures that each team or system receives only the relevant information they need, automating workflows and reducing manual effort.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Data routing"
    }
  },
  {
    "content": "Filtering Options\n\nTo access the filtering options, first create the Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., and then go to the Filtering tab. Note:The Data Destination will only execute if the record meets all filter conditions set up on this page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Filtering Options"
    }
  },
  {
    "content": "Form Version State\n\nFiltering can be based on the state of the form (Active, Draft or Archived) the data record is submitted against. For example, the Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. version of an “Inventory” form might have data submitted against it for testing purposes only. To avoid routing the testing data to the same location as production data, clear the Draft option to exclude Draft forms. You can select multiple options to include more than one Form Version State.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Form Version State"
    }
  },
  {
    "content": "Form Submission Workflow State\n\nSelect submission workflow states that execute the Data Destination. You can select more than one option. Select Completed to execute the Data Destination when a mobile user submits a completed record. If the form requires approval, the destination executes after a supervisor approves the record, which changes the record state to completed. (Enterprise tier only). Completed is selected by default. Select Cancelled to execute the Data Destination when a mobile user declines a dispatch. You might set up a destination with this filter to create a notification for the dispatcher. Select Incomplete to execute the Data Destination when a mobile user submits an incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Form Submission Workflow State"
    }
  },
  {
    "content": "form (Enterprise tier only). You can select multiple options to include more than one Submission Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\"..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Form Submission Workflow State"
    }
  },
  {
    "content": "Custom Filter Rules\n\nCustom filter rules provide the most advanced and flexible way to control data routing for submitted records. You can use filter rules to match a specific response to a form question, such as routing records based on a “Pass” or “Fail” result. You can also use Data Reference Expression Language (DREL) to reference other types of data or metadata, like user names or submission dates. The filter checks if a specified string or pattern exists, using regular expressions for matching options. If the filter rules result in matching records, the destination executes. Match All/Match Any: If you select All, all filter rules must be true for the Data Destination to execute. If you select Any, at least one rule must be true for the Data Destination to execute. Note:The Match All/Match Any setting only applies to custom filter rules, not to the Form Version State or Form Submission Workflow State settings. Even with Match Any selected for the custom filter rules, the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Custom Filter Rules"
    }
  },
  {
    "content": "submitted record must still match the selected form version and workflow state filters. Input Expression: This tells the filter the data to match. The filter can check a question response (%a[Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.]), a form name (%f), or a submitter name (%u), for example. Use Data Reference Expression Language (DREL) to set up the Input Expression. Filter Expression: This specifies the string to match and must be a Regular Expression. The section Custom Filter Rule Examples shows examples of different types of matching. Info:When you configure a Data Destination as Repeatable, you can create custom Row Filter Rules for individual rows of a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Custom Filter Rules"
    }
  },
  {
    "content": "“repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. This enables you to control which rows the destination sends. The topic Create Filter Rules for Individual Rows in a Repeatable Destination explains Row Filters in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Custom Filter Rules"
    }
  },
  {
    "content": "Using Special Characters in Custom Filter Rules\n\nIf using a Filter Expression with static text that has reserved characters used in regular expressions, you must escape them using a backslash (\\). The following example shows how to escape special characters for URL and workflow status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. values. This example shows a regular expression that allows for variations in the workflow status. The regular expression ^Completed(\\s+\\([^)]+\\))?$ matches on Completed and Completed (any_value), such as Completed (Approved).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Using Special Characters in Custom Filter Rules"
    }
  },
  {
    "content": "Custom Filter Rule Examples\n\nAll of the following examples are based on the same hypothetical “Inspection” form, where a site is given a final rating. When a user submits a record, an Email Data Destination filters the results. This setup ensures that the regional manager is only sent an email if the site doesn’t pass the inspection. Simple match If the site fails the inspection, the question with the unique ID Rating has a value of Fail. Match Contains Exact Match Enter the string to match. This example matches any string that contains “Fail”, such as Fail, Failed, Failing, or No Fail. The Filter Expression ^Fail$ matches only the value “Fail”, not Failed, Failing, or No Fail. Note:When you set up an exact match filter rule, remember that the filter string must exactly match. The string is case sensitive and includes whitespace. We recommend that you only use exact match filter rules for options-based questions or questions that are auto-populated by a Data Source Data sources, also",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Custom Filter Rule Examples"
    }
  },
  {
    "content": "known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. Alternation (Or) In the following filter rule, the destination executes if the site receives a rating of Poor or Fail. The pipe (|) functions as an “or” operator in the Filter Expression Poor|Fail. As always, the Filter Expression is case sensitive. Range This Filter Expression is based on a rating scale of 1-9. The data destination executes if the site receives a rating of 1, 2, 3, or 4. Tip:The destination also executes if the rating is 10, because the 1 matches the filter expression. If you want to match only when the entire field is exactly 1, 2, 3, or 4 (and not 10 or any other value), use the expression ^[1-4]$. This pattern ensures that only a single character (1, 2, 3, or 4) matches, and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Custom Filter Rule Examples"
    }
  },
  {
    "content": "nothing else. Answered or Not answered If you want the destination to execute only if the question is answered, use %a[Unique ID] as the Input Expression and ^(?!\\s*$).+ as the Filter Expression. If you want the destination to execute only if the question is not answered, use %a[Unique ID] as the Input Expression and ^\\s*$ as the Filter Expression. Note:For attachment-based questions, use the guidance below. Answered or Not answered - Attachment-Based Questions The following question types are considered attachment-based: Audio Recording File Upload Image Signature Sketch Pad Document Editor For these attachment-based question types, use %a[Unique ID][contentType] or %a[Unique ID][filename] as the Input Expression to confirm if an attachment has been provided. (If you use %a[Unique ID] as the Input Expression for these question types, the entire file encoded in Base64 will be returned, which could cause a server timeout error due to payload size.)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500038_ApplyingFilteringtoDataDestinations.html",
      "title": "Apply Filtering to Data Destinations",
      "section": "Custom Filter Rule Examples"
    }
  },
  {
    "content": "How row filter rules work\n\nYou can apply filter rules that control which rows send data when the Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system. executes. These rules are in addition to the top-level Data Destination filter rules, which determine whether the destination executes. For example, you may want to create records only for equipment that passes a warranty inspection. You can create a row-level filter for the inspection status question with the Filter Expression “Pass”. When a technician submits the form, the Repeatable Destination sends only those entries that meet the filter criteria.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RDIndividualRowFiltering.htm",
      "title": "Create Filter Rules for Individual Rows in a Repeatable Destination",
      "section": "How row filter rules work"
    }
  },
  {
    "content": "Steps to create repeat row filter rules\n\nIn your Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. Web Portal settings, go to Filtering > Filter Rules for Individual Repeat Rows. Select Add. Result: The system displays the Input Expression and Filter Expression fields. Enter the row filter rules in the same way as top-level Destination filters. Do you want to execute the Repeatable Section rows only if the submitted data matches all of the rules? If yes, select Match All. The destination executes a row if the submitted data matches all of the rules. If no, select Match Any. The destination executes a row if the submitted form data matches at least one rule. Input Expression—enter a DREL expression to specify the form data or metadata to match. Filter Expression—enter a regular",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RDIndividualRowFiltering.htm",
      "title": "Create Filter Rules for Individual Rows in a Repeatable Destination",
      "section": "Steps to create repeat row filter rules"
    }
  },
  {
    "content": "expression to define the string that you want to match, for example, Pass. Optional: Repeat steps 2 and 3 to create additional filter rules. Select Create if this is a new Data Destination, or Update if it is an edit. Result: The system applies the filters. Info:You can also apply a top-level filter that determines whether the Data Destination executes. The topic Apply Filtering to Data Destinations describes how top-level filter rules work.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RDIndividualRowFiltering.htm",
      "title": "Create Filter Rules for Individual Rows in a Repeatable Destination",
      "section": "Steps to create repeat row filter rules"
    }
  },
  {
    "content": "Response Data Handling\n\nWhen a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. executes, it creates or updates a record in TrueContext or a third-party system. Response Data Handling enables you to store response outputs, such as record identifiers, after a Data Destination executes. You can reference the output stored in a “parent” destination in subsequent “child” destinations to make sequential requests to a third-party system. The topics in this section describe how to set up and use response outputs stored in Salesforce, ServiceNow, Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/StoreThirdPartyResponses.htm",
      "title": "Response Data Handling",
      "section": "Response Data Handling"
    }
  },
  {
    "content": "automated (using a Dispatch Data Destination or the TrueContext REST API)., Customer Feedback, HTTP, and HTTP File Upload Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/StoreThirdPartyResponses.htm",
      "title": "Response Data Handling",
      "section": "Response Data Handling"
    }
  },
  {
    "content": "What is Response Data Handling?\n\nThe term Response Data Handling refers to how TrueContext stores Key‑value pairs A key-value pair is a set of two related data elements. The first element identifies the type of data, such as \"name\". The second element identifies the actual value, such as \"Elizabeth\". in a Data Destination based on a third-party system response. You can store this response data in Salesforce, ServiceNow, HTTP, and HTTP File Upload Data Destinations. You can use the stored response output in subsequent Data Destinations to make sequential requests to other systems. For example, you can: Create a Salesforce or ServiceNow record in an initial Data Destination and use the stored ID for that record in a subsequent Data Destination. Create a document with an initial HTTP Data Destination and store a URL based on the third-party system response. A subsequent Email Data Destination can send an email that includes the URL stored by the initial (parent) destination. Upload a Word",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "What is Response Data Handling?"
    }
  },
  {
    "content": "or PDF document to your document management platform using an HTTP File Upload Data Destination. Store the file ID for use in subsequent Data Destinations. Note:HTTP File Upload Data Destinations only store response outputs if youonly link one document when you add the destination to the form, anddon’t send attachments as separate files, such as images or annotated documents.To store response outputs for more than one document, create separate HTTP File Upload Data Destinations. Link a single document to each Data Destination to store the respective response outputs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "What is Response Data Handling?"
    }
  },
  {
    "content": "How Response Data Handling works\n\nWhen TrueContext executes a Data Destination, it “calls” a third-party system. The third-party system returns a structured response that the TrueContext server converts into key‑value pairs. For example, if an HTTP server responds with the following JSON body: { \"id\": 12345, \"profile\": { \"firstName\": \"John\", \"lastName\": \"Smith\" }, \"contact\": { \"home\": { \"email\": \"jsmith@gmail.com\", \"phone\": \"613-225-5555\" } } } then the resulting key-value response output is: Key Value body.id 12345 body.profile.firstName John body.profile.lastName Smith body.contact.home.email jsmith@gmail.com body.contact.home.phone 123-456-7890 Tip:For specifics about the key-value pairs in a third-party system response, refer to that system's documentation. The following table describes the process of storing and using response outputs. Stage Description 1 Submitted form triggers Data Destination 1. 2 Data Destination 1 executes and creates a new record in the third-party system. 3",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "How Response Data Handling works"
    }
  },
  {
    "content": "The third-party system responds with key-value pair data, such as the record ID. 4 TrueContext stores the response data on the server as part of the Form Submission. Note:Response data is stored with a specific Form Submission.If you submit another form, the new response data does not overwrite data from previous Form Submissions.Re-executing a Data Destination for a specific Form Submission can result in different response data. Previous response data is overwritten for that Form Submission. 5 Data Destination 2 looks up the values stored by TrueContext Data Destination 1 and uses these values to identify the “parent” record in the third party-system.Tip:This is the “child” Data Destination. Note:Only Salesforce, ServiceNow, HTTP, and HTTP File Upload Data Destinations currently store response outputs from third-party systems. Any subsequent Data Destination, however, can use the stored result.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "How Response Data Handling works"
    }
  },
  {
    "content": "How to reference stored responses\n\nThe %o DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. reference links the initial and subsequent TrueContext Data Destinations, as described in the following example: %o[Destination Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.][key] where Destination Unique ID is the unique identifier for the initial Data Destination, and key identifies a specific value in the stored response. Info:The topic DREL Complete Reference List provides more detail about DREL syntax.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "How to reference stored responses"
    }
  },
  {
    "content": "Create Parent and Child records\n\nThe following diagram illustrates how TrueContext uses stored responses to create linked Salesforce records produced by separate Data Destinations. In this example, a Salesforce Case Data Destination gets the stored AccountId from the Salesforce Account Data Destination. This creates a “child” Case record for a “parent” Account record. Note:The lookup field between the parent and child records must already exist in Salesforce. The following example shows the response output from a Salesforce Account Data Destination: Info: The topic View Destination Response Outputs in the Web Portal describes how to find out what your Data Destination stores.The topic Configure Response Data Handling for Salesforce Data Destinations describes how to set up a parent-child relationship.Keep in mind that TrueContext stores the ID of the last Salesforce object created. If a Data Destination creates a record and attaches files to it, TrueContext stores the ID of the last",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "Create Parent and Child records"
    }
  },
  {
    "content": "file attached. If you need to create a record and attach files to it, we recommend that you create two separate Data Destinations.For more information about Salesforce API responses, refer to the Salesforce API documentation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "Create Parent and Child records"
    }
  },
  {
    "content": "Use the Response Outputs to send an Email\n\nHTTP Data Destinations return all headers, status information, and any custom-configured response information. In the following example, response outputs stored in an HTTP Data Destination populate fields in a subsequent Email Data Destination: Note:TrueContext can only parse JSON and XML responses for HTTP destinations. Info: To test what your HTTP destination stores, follow the instructions to View Destination Response Outputs in the Web Portal. The topic Configure Response Data Handling for HTTP Data Destinations describes how to set up a parent HTTP destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "Use the Response Outputs to send an Email"
    }
  },
  {
    "content": "Related Links\n\nConfigure Response Data Handling for Salesforce Data Destinations Configure Response Data Handling for HTTP Data Destinations Salesforce Data Destinations HTTP Data Destinations Reference Response Outputs in Template-Driven Documents View Destination Response Outputs in the Web Portal",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ResponseDataHandling.html",
      "title": "Use Response Data Handling to Store Data Received from a Third-Party System",
      "section": "Related Links"
    }
  },
  {
    "content": "How response outputs for Dispatch and Customer Feedback Data Destinations work\n\nWhen a Dispatch or Customer Feedback Data Destination executes, it creates a Data Record in the TrueContext system and generates response outputs. Response outputs include a unique record identifier, reference number, and single-use URL (Customer Feedback forms only). The system stores response outputs as key-value pairs. The following example shows the response outputs for a Customer Feedback destination: The following table describes each Data Destination and the response outputs you can store. Data Destination type Description Response outputs Dispatch Automatically dispatch one or more mobile forms after a user submits a form. Response Key Form Submission ID id Reference Number referenceNumber Tip:If the Dispatch Data Destination dispatches more than one form per execution, the system stores response outputs as a comma-separated list. Customer Feedback Automatically dispatch one Customer Feedback form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "How response outputs for Dispatch and Customer Feedback Data Destinations work"
    }
  },
  {
    "content": "after a user submits a form. Response Key Form Submission ID id Reference Number referenceNumber Single-use distribution URL distributionUrl",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "How response outputs for Dispatch and Customer Feedback Data Destinations work"
    }
  },
  {
    "content": "Examples of how you can use response outputs\n\nYou can use stored response outputs for a variety of downstream processes in TrueContext or your third-party system. In TrueContext: Use a subsequent email Data Destination to send field technicians an App-to-App call (deep link) that opens the dispatched form. Use the App-to-App alternative format to include the call in the body of an email. Include response outputs in output Documents. Send response outputs to a third-party system using a subsequent Data Destination. Once your data is in your third-party system, you can: Send automatic reminder emails to your customers if they haven’t filled out the Customer Feedback form. Use the TrueContext API to automatically check the status of a form dispatched by a Dispatch Data Destination. Generate a link so that users can check the dispatched form in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "Examples of how you can use response outputs"
    }
  },
  {
    "content": "Sources, and Data Destinations.. Tip: To reference response outputs in Documents and subsequent Data Destinations, use the following DREL expression:%o[DestinationUniqueIdentifier][key]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "Examples of how you can use response outputs"
    }
  },
  {
    "content": "Prerequisites\n\nTo use Dispatch Destinations, your TrueContext account must be on the Advanced or Enterprise tier. To use Customer Feedback Destinations, your TrueContext account must be on the Enterprise tier, or you must have Customer Feedback forms as an add-on to the Advanced tier. You must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps\n\nNavigate to the Dispatch or Customer Feedback Data Destination that you want to set up. You can choose a new or existing Data Destination. From the Forms & Integrations menu, create or edit a Data Destination. To create a new Data Destination: Forms & Integrations > Data Destinations > Create Data Destination Select the type of Data Destination that you want to create. To edit a Data Destination: Forms & Integrations > Data Destinations > Data Destination Name > Edit DATA DESTINATION where Data Destination Name is the Data Destination that you want to edit. Info:The topics Dispatch Data Destination and Customer Feedback Destination describe how to set up these Data Destinations in more detail. Go to the Response Configuration tab and select the option to Store all response outputs for use in later destinations. Create or Update your Data Destination when you finish setting it up. Result: When the Data Destination executes, the system stores the details of the dispatched forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "Steps"
    }
  },
  {
    "content": "Info:The topic View Destination Response Outputs in the Web Portal describes how to access the response outputs stored with your Data Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CustomerFeedbackDispatchResponseOutputs.htm",
      "title": "Store Response Outputs for Dispatch and Customer Feedback Data Destinations",
      "section": "Steps"
    }
  },
  {
    "content": "Steps to set up Response Data Handling\n\nConfigure your initial Salesforce Data Destination. On the Destination Basics tab, add a Destination Unique Identifier for the destination. This ID must be unique to each FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. On the Response Configuration tab, in the Response Data Handling section, select Store all response outputs…. Save the initial Data Destination. Configure the subsequent Salesforce Data Destination. On the Field Mapping tab, in the Custom Salesforce Fields section, enter the API Name of the Salesforce Field. Then, enter the following DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_SalesforceResponseDataHandling.htm",
      "title": "Configure Response Data Handling for Salesforce Data Destinations",
      "section": "Steps to set up Response Data Handling"
    }
  },
  {
    "content": "expression:%o[Destination Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.][key] where Destination Unique ID is the unique identifier for the initial Data Destination, and key identifies a specific value in the stored response. Save this Data Destination. In the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., add both Data Destinations to your form. The initial Data Destination must precede the subsequent Data Destination. Tip:You can use the data stored in a preceding destination in any number of subsequent destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_SalesforceResponseDataHandling.htm",
      "title": "Configure Response Data Handling for Salesforce Data Destinations",
      "section": "Steps to set up Response Data Handling"
    }
  },
  {
    "content": "How TrueContext stores Salesforce response outputs\n\nWhen you set up response data handling, TrueContext stores the ID of the last Salesforce object created or updated. The following table contains examples of how TrueContext stores Salesforce IDs. If the Data Destination... TrueContext stores... Only creates or updates a record in Salesforce the record ID. Creates or updates a record and attaches documents or images as files the ID of the last file attached. Tip:If you need to create a record, store its ID, and also add attachments to it, create separate Data Destinations. The first Data Destination can create the record and store its ID for subsequent use. The second Data Destination can use the stored ID to match on the record and attach files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_SalesforceResponseDataHandling.htm",
      "title": "Configure Response Data Handling for Salesforce Data Destinations",
      "section": "How TrueContext stores Salesforce response outputs"
    }
  },
  {
    "content": "Configure Response Data Handling for HTTP Data Destinations When a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. executes, it creates or updates a record in TrueContext or a third-party system. Response Data Handling enables you to store response outputs, such as record identifiers, after a Data Destination executes. You can reference the output stored in a “parent” destination in subsequent “child” destinations to make sequential requests to a third-party system. This topic demonstrates how you might use response data handling with HTTP Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_HTTPResponseDataHandling.htm",
      "title": "Configure Response Data Handling for HTTP Data Destinations"
    }
  },
  {
    "content": "formats.. In the example, an initial HTTP Data Destination executes and sends an HTTP POST request to an HTTP server. With Response Data Handling, the initial destination captures the response from the server and stores the data as key-value pairs. The subsequent Email Data Destination executes and uses the stored values to populate an email Subject field. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise In your HTTP endpoint, configure the request and its response. In TrueContext, configure your initial HTTP Data Destination. On the Destination Basics tab, add a Destination Unique Identifier for the destination. This ID must be unique to each FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. On the Response Configuration tab, in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_HTTPResponseDataHandling.htm",
      "title": "Configure Response Data Handling for HTTP Data Destinations"
    }
  },
  {
    "content": "Response Data Handling section, select Store all response outputs…. Save the initial Data Destination. Configure a subsequent Email Data Destination to use the response output stored in the initial HTTP Data Destination. On the Email Headers tab, enter the following DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression in the Email Subject Line Expression field:Customer: %o[http][body.customer] - Status: %o[http][body.status] Save this Email Data Destination. In the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., add both Data Destinations to your form. The initial HTTP Data Destination must precede the subsequent Email Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_HTTPResponseDataHandling.htm",
      "title": "Configure Response Data Handling for HTTP Data Destinations"
    }
  },
  {
    "content": "Destination. Result: When a user submits the form, each destination executes in sequence. The Email destination sends an email with the Subject “Customer: Doctors Without Borders - Status: Pending” using the values stored in the initial destination. By default, the email is sent to the form submitter, but you can Email Recipients. Tip:You can use the data stored in a preceding destination in any number of subsequent destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_HTTPResponseDataHandling.htm",
      "title": "Configure Response Data Handling for HTTP Data Destinations"
    }
  },
  {
    "content": "Related Links\n\nUse Response Data Handling to Store Data Received from a Third-Party System Configure Response Data Handling for Salesforce Data Destinations Configure Response Data Handling for HTTP Data Destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/ReferenceResponseOutputsDRELHandlebarsFreemarker.htm",
      "title": "Reference Response Outputs in Template-Driven Documents",
      "section": "Related Links"
    }
  },
  {
    "content": "View Destination Response Outputs in the Web Portal When a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. executes, it creates or updates a record in TrueContext or a third-party system. Response Data Handling enables you to store response outputs, such as record identifiers, after a Data Destination executes. You can reference the output stored in a “parent” destination in subsequent “child” destinations to make sequential requests to a third-party system. Because responses vary with each third-party system, you should check the response output stored by a specific Data Destination. This topic describes how to find the stored key-value pairs A key-value pair is a set of two related data elements. The first element identifies the type of data, such as \"name\". The second element",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_ViewResponseOutputs.htm",
      "title": "View Destination Response Outputs in the Web Portal"
    }
  },
  {
    "content": "identifies the actual value, such as \"Elizabeth\". of a Data Destination. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Navigate to your list of Form Submissions and select the Reference # of a specific Form Submission: DATA & ANALYTICS > Submissions (by Form) > FormName > Reference # Result: The Form Submissions list page displays dispatched and submitted forms from the last 30 days by default. Tip:Change Search Options filters to display forms from other dates. Expand the Form Submission Processing and Destinations sections. Select Response Outputs. Result: The system displays the list of stored response outputs. The following image shows the response output from a Salesforce Account Data Destination: The following image shows the response output from an HTTP Data Destination: Info: The topic Configure Response Data Handling for Salesforce Data Destinations describes how to set up a parent-child relationship in Salesforce. The topic Configure Response",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_ViewResponseOutputs.htm",
      "title": "View Destination Response Outputs in the Web Portal"
    }
  },
  {
    "content": "Data Handling for HTTP Data Destinations describes how to use a stored response output from an HTTP destination to populate an email Subject field.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029070591_ViewResponseOutputs.htm",
      "title": "View Destination Response Outputs in the Web Portal"
    }
  },
  {
    "content": "Troubleshoot Data Destinations\n\nThis section includes the following content: Troubleshooting Data Destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/TroubleshootDataDestinations.htm",
      "title": "Troubleshoot Data Destinations",
      "section": "Troubleshoot Data Destinations"
    }
  },
  {
    "content": "About\n\nAfter adding or updating a TrueContext Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., it is important to test it thoroughly before using it in production.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "About"
    }
  },
  {
    "content": "Destination Executions\n\nA Data Destination executes each time that a form linked to the Data Destination is submitted. When it executes, the Data Destination then attempts to route data to the configured location. Executions (one per destination per form submission) are listed in the web administration portal. The Web Portal offers several ways to view the details of a Data Destination execution, making it easy to determine if filters, Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection., and other options are configured correctly. It also clearly lists details of execution failures. When incorrect configuration results in a failure, it is simple to update the Data Destination and re-execute failed executions to try sending the data again.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Destination Executions"
    }
  },
  {
    "content": "Problem Contact Email Addresses\n\nA key tool in testing and troubleshooting Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. is ensuring that your team has at least one Problem Contact Email Address configured. This is the easiest way to gain visibility to data destination execution failures; an email notification will be sent to the provided addresses. Problem Contact Email Addresses can be configured through Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. (under General Settings).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Problem Contact Email Addresses"
    }
  },
  {
    "content": "Error Handling\n\nWhen a data destination fails, TrueContext automatically retries the destination at set intervals. Most failures correct themselves and require no intervention; however, TrueContext will automatically send a failure notification email to Problem Contact Email Addresses after the third failure (approximately an hour after the first attempt). This can be configured under the Destination Basics tab of the Data Destination setup. For more information, see the topic Set Up Failure Notification Emails.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Error Handling"
    }
  },
  {
    "content": "Testing Data Destinations\n\nThe only way to test a Data Destination is to submit a form linked to the Data Destination. While some Data Destination configuration issues will become obvious when a form is submitted (like if the execution fails), other configuration errors may not be immediately noticeable. Without thorough testing, these errors can make it into production before being spotted. Save yourself production errors and delays by testing your Destinations before deploying to your users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Testing Data Destinations"
    }
  },
  {
    "content": "Connection\n\nA Connection that is not functional will cause Data Destination executions to fail. Submit a form linked to the Data Destination, check that the execution has not failed, and check that every document/notification was successfully delivered to the configured locations/recipients.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Connection"
    }
  },
  {
    "content": "Enabling/Disabling Data Destinations\n\nDisable this destination: Enable this option if you wish to create the Destination without allowing it to accept form submissions—it can still be linked in forms, but the Destination will not execute if forms are submitted. Note: Disabled Data Destination will still appear in the Destinations tab in the Form Builder, but it will not receive any form submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Enabling/Disabling Data Destinations"
    }
  },
  {
    "content": "Filtering\n\nEnsure that any filtering that is configured functions correctly, and the Destination only executes when you want it to. This is particularly important in the case of Custom Filter rules, which use regular expressions, and a single incorrect character can break the expression. Test filter rules by submitting forms in a test environment, testing all answers referenced in filter rules to determine if the rules behave as expected. Always Test: Answers that should pass the filter rules Answers that should NOT pass the filter rules You will want to test other things based on your specific filter rules and the use of your form. It is best if questions referenced in filter rules have pre-defined answers (dropdown, radiobutton, multi-select, Yes/No), as it is impossible to predict all potential typos/errors made by mobile users and to build a regular expression to accommodate them.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Filtering"
    }
  },
  {
    "content": "Uses of DREL\n\nMost fields that you can enter DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. in will show sample text underneath the field as you are configuring it, so make use of this. For example, if %u[name] is entered in the field, the sample text should list a \"sample\" username -- if it doesn't, something has been entered incorrectly. Data Destinations might use DREL in a number of places: Folder Expressions Filename Expressions Email Subject Lines Pushing data to specific fields And more... Any question referenced in DREL should be marked as \"Required\" in the form, particularly if it is the only field in the expression; if a filename expression ends up empty, for example, the transmission of data to most destinations will fail. Test that this cannot happen in your forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Uses of DREL"
    }
  },
  {
    "content": "Data Types\n\nSome Data Destinations push data from a selected TrueContext field to a specific field in the destination service. Salesforce Data Destinations require this, for example. Salesforce has validation set on many of their fields -- an email field will only accept a correctly formatted email, and an integer field will only accept numbers. If data pushed to Salesforce doesn't match the validation, no record will be created in Salesforce. For these Data Destinations, and others that push to services that use validation, it is best to ensure that the TrueContext data type matches the validation. Be sure to test the form and make sure that users cannot enter anything into these fields that the destination service will not accept.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Data Types"
    }
  },
  {
    "content": "Viewing Execution Details\n\nOnce forms linked to the Data Destination have been submitted, there are a few ways that Admin users can view execution details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Viewing Execution Details"
    }
  },
  {
    "content": "Data Destination Execution Statistics\n\nHover over Forms & Integrations, confirm that you are in the desired FormSpace, and select Data Destinations. Select a Data Destination. Result: The Data Destination Configuration page opens. On the right side of the Data Destination Configuration page is an Executions table. This table shows the state and number of form submissions (limited to the past 30 days to optimize performance). Active: The number of Data Destination executions in process. Successful: The number of Data Destination executions that were successful. Skipped: If a Data Destination has been \"skipped,\" a form submission failed to save properly, and the Data Destination was not processed. This can occur for a number of reasons; contact TrueContext support for troubleshooting help. Filtered: The number of Data Destination executions with submitted data that did not meet the filtering rules. Failed: The number of Data Destination executions that have failed. Select an execution",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Data Destination Execution Statistics"
    }
  },
  {
    "content": "state to open the Data Destination Executions page that lists the executions with that state. You can then use Search Options to list executions for a different date range and apply other filters. The topic View Data Destination executions provides more details on the various search options.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Data Destination Execution Statistics"
    }
  },
  {
    "content": "Form Submission Processing Details\n\nTo see more detailed data on each form submission, navigate to the Data & Analytics tab in the main menu, and select All Form Activity. All submitted forms will be listed; if a data destination execution failed there will be a red \"X\" icon beside the name. Select the form submission reference number to view details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Form Submission Processing Details"
    }
  },
  {
    "content": "Form Submission Processing\n\nThe Form Submission Processing table outlines in order each action performed by the TrueContext server as it processes the data. Note that this table does not include any information about processing/handling of the data in the mobile app before the form was submitted. The standard processing steps are as follows: Save Data: Saves the data to the server. The subsequent steps will not be completed if \"Save Data\" fails. Contact our support team if this step fails. Resolve Geo Address: Will be skipped if no geolocation was collected by the device and attached to the form. Process Images: Reading of images collected with the form. Will be skipped if no images are attached. If this step fails, the subsequent steps can still process. Data Destination: A new row will be listed for each Data Destination linked to the form. If one Data Destination execution fails, the others can still execute. Symbols: Processing Status - The step has been successfully processed. -",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Form Submission Processing"
    }
  },
  {
    "content": "The step has failed. See details for more information. - The step has been skipped. This usually happens because the step is not applicable. The \"Process Images\" step will be skipped if there are no images in the form. A Data Destination execution will be skipped if the form submission does not meet the Destination's filter rules.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Form Submission Processing"
    }
  },
  {
    "content": "Skipped\n\nA Data Destination execution will only show as \"skipped\" if the submitted data does not meet filter rules. Either adjust the filter rules or change your source data so that it will meet filter rules. Details will be provided about the string that is being filtered. In the sample below, the question referenced in the filter rule is not returning a value, causing the email Data Destination to skip executing, and not send an email.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Skipped"
    }
  },
  {
    "content": "Failed\n\nOccasionally, a Data Destination will fail due to a glitch or a momentary outage in either TrueContext or the external service the destination is linked to. Sometimes simply re-executing the failed execution (see below) will resolve the issue. The error causing the problem will be listed in the \"details\" column of the form submissions processing table. The messages listed can vary widely but are typically reasonably descriptive and make the cause quite clear. One common problem is security solutions such as firewalls blocking TrueContext IP addresses. If you are uncertain of the cause, feel free to contact TrueContext Support and we will look into the details of the error for you.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Failed"
    }
  },
  {
    "content": "How automatic re-executions work\n\nWhen a Data Destination fails, TrueContext automatically re-executes the Data Destination. TrueContext stops re-executions when the execution succeeds, or the execution fails 30 consecutive times, or the related form submission is removed from the TrueContext system according to Form Submission Retention and Deletion guidelines. When the system re-executes a Data Destination, it either follows the third-party app re-execution strategy, or follows an exponential backoff process. This means that it re-executes in increasingly long intervals of time. This avoids overloading the TrueContext system. The following diagram describes how TrueContext re-executes Data Destinations that fail. Note:Every time a Data Destination re-execution fails, the system notifies all Problem Contact Email addresses for the team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "How automatic re-executions work"
    }
  },
  {
    "content": "How to stop automatic re-executions\n\nYou can stop automatic re-executions in any of the following ways: Fix any issues in the third-party system. Go to the Form Submission Details page. Select the option to DISABLE AUTOMATIC RETRIES in the Form Submission Processing section. Delete the submitted form. Automatic Re-Executions and the Data Passthrough Feature When using the Data Passthrough feature, automatic re-executions are limited. Please see the Data Passthrough overview for more information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "How to stop automatic re-executions"
    }
  },
  {
    "content": "Manually Re-Execute a Failed Execution\n\nA re-execution can be initiated manually through the TrueContext Web Portal as well. This can be useful after correcting configuration issues with a Data Destination, to test if the changes are effective (or if it is simply inconvenient to wait until the next automatic execution attempt). Navigate to the desired Data Destination and select “Re-execute Failed Executions” to re-process all failed form submissions associated with the Data Destination. You can also re-execute the single failed step in an execution; select the desired form submission name, then mouse over the desired step. A “re-execute” icon will appear to the right.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Manually Re-Execute a Failed Execution"
    }
  },
  {
    "content": "Set Up Failure Notification Emails\n\nIf a form submission fails to reach the Data Destination after (by default) three attempts, TrueContext will send an email to the Problem Contact Email Addresses. You can adjust this default in the Data Destination Basics tab of the destination configuration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500048_TroubleshootDataDestinations.html",
      "title": "Troubleshooting Data Destinations",
      "section": "Set Up Failure Notification Emails"
    }
  },
  {
    "content": "Customer Feedback Forms\n\nThis section includes the following content: Overview: Customer Feedback FormsCreate or Edit a Customer Feedback FormCustomer Feedback DestinationSignatures in Customer Feedback FormsEmbed a Customer Feedback FormFile Upload Questions in Customer Feedback FormsImage Questions in Customer Feedback formsDispatch Images in Customer Feedback formsDispatch an Image with a Customer Feedback DestinationUse URL Parameters to Prepopulate a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CustomerFeedbackForms.htm",
      "title": "Customer Feedback Forms",
      "section": "Customer Feedback Forms"
    }
  },
  {
    "content": "About\n\nCustomer Feedback forms are forms that can be used by your customers or other third parties, rather than your employees. They are browser-based forms that can be used on any platform simply by navigating to the correct URL, and require neither an app download nor a user login. We support Customer Feedback forms on the latest versions of the following browsers: Google Chrome™ Mozilla Firefox Apple® Safari® Microsoft Edge",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "About"
    }
  },
  {
    "content": "What it's used for:\n\nIf you need to ensure that things are done before your service technician heads out to a site, such as making sure there's power, or checking what tools are required for the job, send out a Site Readiness or Pre-Startup Checklist form; or, once the work is completed, follow up with a customer satisfaction survey, essentially bookending a field service workflow: You can send out a checklist to a site prior to dispatching a worker there to ensure the site is ready for the work to be done, such as ensuring that ladders are provided, that the customer is present and able to sign off on work, and so on. Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). your technician on the service call with your standard",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "What it's used for:"
    }
  },
  {
    "content": "TrueContext forms, with additional information from the first checklist and verified information about the work to be done. Want to get customer feedback after a site visit? Provide a Customer Feedback form link after the work is done. In summary, Customer Feedback forms, particularly in Field Service applications, will help with the beginning of work: Increase a technician's ability to complete a job on the first visit, by reducing the risk that sites are not ready before they arrive, Eliminate overhead associated with travel time and costs resulting from sending field personnel back to repeat a site visit, Increase technician utilization rates across the entire organization by ensuring sites are prepared for their visit. And, once work is completed, Customer Feedback forms will: Allow customers to provide feedback on completed work at their own pace and on their own terms. Automate the process of soliciting and compiling feedback in office systems such as Salesforce or other CRM",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "What it's used for:"
    }
  },
  {
    "content": "platforms by sending the data directly, rather than relying on manual data entry.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "What it's used for:"
    }
  },
  {
    "content": "Sample Workflow\n\nSome of the most common uses for these types of forms are in field service applications. For example: A telecommunications company uses TrueContext to install and activate new customers' internet, and also to handle maintenance on different hubs or cable lines. They use a mixture of Customer Feedback forms (sent to their customers via URL) and standard TrueContext (where their field service technicians log into the app). A typical installation or activation might go something like this: The company sends a link to a Customer Feedback form to their new customer that asks them to verify site readiness. This form doesn't require a TrueContext login, and would collect or verify data such as: their address,who would be the primary account holder,whether or not the technician needs to run new cables within the office (and thus bring specialized tools)any accessibility information. The customer submits the Customer Readiness form, and some of that data is dispatched to a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Sample Workflow"
    }
  },
  {
    "content": "technician in a Work Order form on their mobile device. The customer-supplied information saves them time: not only do they have the required tools, but the address is verified, and they're aware of any accessibility or security requirements. The technician schedules the installation, does the work, and fills out the work order form on their Mobile App, and then submits it once the work is complete. The above submission triggers a Customer Feedback form URL containing the technician's summary of the work done and questions about how happy the customer is with the work completed. They don’t have to log in to the Mobile App to fill it out: simply access the URL and fill out the form, then select Submit. Based on the answers to the Customer Feedback form, the form submission would automatically create a case in Salesforce or another CRM platform, reducing the need to rely on humans to spot a poor response.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Sample Workflow"
    }
  },
  {
    "content": "Supported Features\n\nCustomer Feedback forms support most of the same features as standard forms, and building one is much the same process. Currently, Customer Feedback forms support the following question types: Button Group Calculation Date/Time Selector, Date/Time Stamp Dropdown Duration Calculation, Duration Field, Duration Math File Upload Image Information Label Multiselect Radio Button Signature Single Checkbox Slider, Stepper String Concatenation Text Area Text Field",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Supported Features"
    }
  },
  {
    "content": "Unsupported Features\n\nThese forms are under constant development to add more feature support. Currently, Customer Feedback forms do not support: Repeatable Sections Side-by-Side Sections Template-Based Sections Exceptions Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. Bulk Dispatch Refresh on Form Open setting Unsupported Question Types: Audio Recording Barcode Scanner Card List Digit Extraction Document Editor Geo Location Recap Resource Image Sketch Pad Time-Based Math Help Links or Help Content on all Question Types Router Setup property Direct launch of a web browser from a question with a URL data type. To follow the link, users must copy and paste the URL into the address bar of another browser window or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Unsupported Features"
    }
  },
  {
    "content": "tab. This process has the following advantages: It’s less likely that users will accidentally follow a link that’s not secure. Users can paste the URL into a new browser window or tab and still keep the customer feedback form open. Because they don’t navigate away from the form, they won’t lose data that they already entered. Note:These forms will never show up in the Mobile App, as they are accessed strictly by URL. This means that you cannot make one form and have it available to both customers and logged-in employees save for through the URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Unsupported Features"
    }
  },
  {
    "content": "Building a Customer Feedback Form\n\nCreating Customer Feedback forms is limited to teams who have access to the feature. It uses the same Form Builder as Mobile App forms. For information about how to build a Customer Feedback form, refer to the topic Create or Edit a Customer Feedback Form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Building a Customer Feedback Form"
    }
  },
  {
    "content": "Recognizing a Customer Feedback Form\n\nCustomer Feedback forms are marked with a star icon in the Form List:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Recognizing a Customer Feedback Form"
    }
  },
  {
    "content": "Branding Your Customer Feedback Form\n\nAs these forms will be largely shown to your customers, you want them to adhere to your branding guidelines, use your logos and colors. With Customer Feedback forms, you can set colors, customize text, and provide links to your company's website. The logo used is the same as is set in your team's Custom Branding settings, specifically the logo used for Documents. To configure these settings, go to the Form Settings tab in the Form Builder and select Custom Branding:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Branding Your Customer Feedback Form"
    }
  },
  {
    "content": "Success Page\n\nThe Success Page is the page shown after the form is successfully submitted. You can set up: Form submission A form submission is a dispatched or submitted form. success message: the text shown to a user when the form has been submitted. Common examples of this kind of text are: \"Thank you for your feedback!\" or \"Form successfully submitted! Please visit our website below:\" Whether to show a button that, when selected, will take users to a URL of your choice.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Success Page"
    }
  },
  {
    "content": "Custom Colors\n\nThis allows you to set up colors that match your brand or marketing guidelines. Input the colors you wish using the color selector or hex codes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Custom Colors"
    }
  },
  {
    "content": "Using a Customer Feedback Form\n\nWhile the URL for repeatable-use Customer Feedback forms can be found in the Form Properties Form Properties is a tab that an admin can access on a form's overview page in the Web Portal. The form properties include various settings and configuration, including Mobile App behavior and how the user interacts with the form. view, URLs for single-use Customer Feedback forms are created by Dispatching the form. As there is no specific user the dispatch goes to, a URL is provided instead, and these forms will not show up on a user's Mobile App—they're only accessible via the URL. Clicking on that URL will take the user to a form that loads in their device's default browser. Below is a demonstration of the customer interface for a Customer Feedback form: Distributing Customer Feedback Forms to your Customers Manual Dispatch to a single customer Most commonly used for Site Readiness or other situations where reusing the same form is illogical, manual dispatch",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Using a Customer Feedback Form"
    }
  },
  {
    "content": "creates a URL that can only be used once. To create a manual dispatch: Navigate to the Customer Feedback form in the Web Portal. Select Dispatch from the options next to the form name. Prefill any information that is required. Tip:Prefilling information such as customer name and address, or service call ID, can provide a way to identify which service call or technician is related to this Customer Feedback form. Select Dispatch at the bottom of the page. The single-use URL is shown on the next page: Send this URL out via email to your customer. Automatic Workflow Dispatch You can use a Customer Feedback Destination to automatically send out a Customer Feedback form as a part of the follow-up to a service call. The original submission will be the \"initiator\" for the Customer Feedback form submission, providing context for the service call or originating user. Typically, it would email the customer email collected during the service call, and probably dispatch some info (like when the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Using a Customer Feedback Form"
    }
  },
  {
    "content": "service call was, what work was done, a service request ID, who the tech was) so the customer knows what they are giving feedback on. Again, this is one time use. Open Distribution URLs Use these to manage event registrations, gather general opinions, or collect basic contact information from customers, all with the same URL. These URLs will persist and could be used to gather larger sets of data from your customers—multiple submissions can be made to the same URL. This URL can be found under the name of any Customer Feedback form: Tip:Each Customer Feedback form URL contains a secure, randomly-generated string of characters. We use a cryptographically secure random hash function to generate the URL. This ensures that anyone not on your mailing list can’t guess the URL and open the form. Embed a Customer Feedback form in a web page You can embed a Customer Feedback form in a web page, such as a company intranet. For example, you might want employees to launch a “Contact Us” or expense",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Using a Customer Feedback Form"
    }
  },
  {
    "content": "form that triggers a specific workflow. To set up an embedded form, you set up an allowed list of domains (URLs) in TrueContext. Then, you copy the Distribution URL into an iframe on your page. Info:The topic Embed a Customer Feedback Form provides detailed steps on how to embed a Customer Feedback form in an iframe.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Using a Customer Feedback Form"
    }
  },
  {
    "content": "Manual Dispatch to a single customer\n\nMost commonly used for Site Readiness or other situations where reusing the same form is illogical, manual dispatch creates a URL that can only be used once. To create a manual dispatch: Navigate to the Customer Feedback form in the Web Portal. Select Dispatch from the options next to the form name. Prefill any information that is required. Tip:Prefilling information such as customer name and address, or service call ID, can provide a way to identify which service call or technician is related to this Customer Feedback form. Select Dispatch at the bottom of the page. The single-use URL is shown on the next page: Send this URL out via email to your customer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Manual Dispatch to a single customer"
    }
  },
  {
    "content": "Automatic Workflow Dispatch\n\nYou can use a Customer Feedback Destination to automatically send out a Customer Feedback form as a part of the follow-up to a service call. The original submission will be the \"initiator\" for the Customer Feedback form submission, providing context for the service call or originating user. Typically, it would email the customer email collected during the service call, and probably dispatch some info (like when the service call was, what work was done, a service request ID, who the tech was) so the customer knows what they are giving feedback on. Again, this is one time use.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Automatic Workflow Dispatch"
    }
  },
  {
    "content": "Open Distribution URLs\n\nUse these to manage event registrations, gather general opinions, or collect basic contact information from customers, all with the same URL. These URLs will persist and could be used to gather larger sets of data from your customers—multiple submissions can be made to the same URL. This URL can be found under the name of any Customer Feedback form: Tip:Each Customer Feedback form URL contains a secure, randomly-generated string of characters. We use a cryptographically secure random hash function to generate the URL. This ensures that anyone not on your mailing list can’t guess the URL and open the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Open Distribution URLs"
    }
  },
  {
    "content": "Embed a Customer Feedback form in a web page\n\nYou can embed a Customer Feedback form in a web page, such as a company intranet. For example, you might want employees to launch a “Contact Us” or expense form that triggers a specific workflow. To set up an embedded form, you set up an allowed list of domains (URLs) in TrueContext. Then, you copy the Distribution URL into an iframe on your page. Info:The topic Embed a Customer Feedback Form provides detailed steps on how to embed a Customer Feedback form in an iframe.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Embed a Customer Feedback form in a web page"
    }
  },
  {
    "content": "Submissions from Feedback Forms\n\nAs Customer Feedback forms do not require a user login, they do not have a user associated with them. Any submissions from customer feedback forms will be marked as from an \"anonymous user\" in the Web Portal. If another form submission triggered TrueContext to send the Customer Feedback form automatically, the Web Portal references the initiating form. This ensures that you can see the specific service call or employee submission that triggered the Customer Feedback form submission. In the following example, the form \"Site Readiness Auto CFF\" triggered sending the \"Site Readiness\" form to the customer. Note:Users can submit a Customer Feedback form that’s no larger than 20 MB. If attached images and files push the form above the 20 MB limit, the system displays an error message. The user must remove images or files until the error message disappears.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360029399832.html",
      "title": "Overview: Customer Feedback Forms",
      "section": "Submissions from Feedback Forms"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext Team must be in the Enterprise tier, or you must have Customer Feedback forms as an add-on to the Advanced tier. You must be either an Admin user, or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group that has Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CreateEditCustomerForm.htm",
      "title": "Create or Edit a Customer Feedback Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Create a new Customer Feedback form\n\nNavigate to the relevant FormSpace. From the top menu, select Forms & Integrations > Create New Form. Result: The system prompts you to select the type of form. Select Customer Feedback Form. Give the form a name (required) and a description (optional) to make the form easy to find in the Web Portal. Customers don’t see these when they open the form in a browser. Save the form. Result: The Form Builder opens. From here, you can Set up pages, sections, and questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CreateEditCustomerForm.htm",
      "title": "Create or Edit a Customer Feedback Form",
      "section": "Create a new Customer Feedback form"
    }
  },
  {
    "content": "Edit an existing form\n\nFrom the Forms & Integrations menu, navigate to the form that you want to edit. Select Edit Form. Result: The Form Builder opens. From here, you can Set up pages, sections, and questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CreateEditCustomerForm.htm",
      "title": "Create or Edit a Customer Feedback Form",
      "section": "Edit an existing form"
    }
  },
  {
    "content": "Set up pages, sections, and questions\n\nComplete the following steps to set up a Customer Feedback form. Info:To build a Customer Feedback form, you use the same Form Builder as for Mobile App forms. For detailed information about how to set up pages, sections, and questions, refer to the topic Form Building Basics. Note:Customer Feedback forms do not support Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided.. In the Form Builder, name and arrange each page and section. The following illustration shows how to edit or move items in your form. Note:Each page must have at least one section, and each section must have at least one question. After you set up at least one page and section, you can add questions to the form. The following example shows a “Site Readiness Check” form that requires a customer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CreateEditCustomerForm.htm",
      "title": "Create or Edit a Customer Feedback Form",
      "section": "Set up pages, sections, and questions"
    }
  },
  {
    "content": "signature. These questions result in the following customer view when they open the form: Result: The system saves the form updates the form version sets the form to Active, and displays the form options. You can send the form to your customers in the following ways, as described in the topic Distributing Customer Feedback Forms to your Customers. Manually, to one customer (Dispatch) Manually, to as many as 500 customers at once (Bulk Dispatch) Automatically (Automatic Workflow Dispatch) Embedded within an iframe on a web site, such as a company intranet. Info:The topic Embed a Customer Feedback Form provides detailed steps on how to embed a Customer Feedback form in an iframe.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CreateEditCustomerForm.htm",
      "title": "Create or Edit a Customer Feedback Form",
      "section": "Set up pages, sections, and questions"
    }
  },
  {
    "content": "Related Topics\n\nOverview: Customer Feedback Forms Form Building Basics Embed a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/CreateEditCustomerForm.htm",
      "title": "Create or Edit a Customer Feedback Form",
      "section": "Related Topics"
    }
  },
  {
    "content": "About\n\nThis destination automatically delivers a Customer Feedback form to your customer after a service has been completed. This enables your customers to provide feedback about that service using a browser-based form, without the need for physical contact or manual follow-up. This helps to minimize the time between service and feedback. An example workflow might be: A technician completes a repair on-site and, as a signed-in user, submits a completed report to the home office using the Mobile App. A single-use link to a Customer Feedback form is automatically emailed to the customer. The customer can user a browser and device of their choice to fill out and sign the feedback form, which contains relevant details from the technician's submitted form. In this way, the customer can report if any work was left undone, provide feedback for the technician, and officially sign off on the completed work.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "About"
    }
  },
  {
    "content": "Destination Basics\n\nCreate the data destination, selecting Customer Feedback as the type. Name the destination, and link forms to it. Select Customer Feedback form-specific options in Destination Basics . Optionally, configure Filtering. Configure Email Details and Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Destination Basics"
    }
  },
  {
    "content": "SMTP Server\n\nUse the System-supplied SMTP Server to send your emails: By default, emails are routed through the TrueContext email server and sent out through public email using the address donotreply@truecontext.com. This route requires the least configuration and no IT involvement. However, if you are sending emails to your customers, they may not recognize the email address and may decide it is spam. Use your own SMTP Server to send your emails: With this option, email notifications are sent directly through your own SMTP email server. This optionally allows you to have your emails sent from an email address on your domain. The key benefit of this option is that your emails can look like they are being sent by you, making them easier for your customers to recognize them as valid emails. The downside is that TrueContext support has less ability to troubleshoot email issues. Set up an Email Connection to connect to your SMTP server or choose an existing connection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "SMTP Server"
    }
  },
  {
    "content": "Reply-to Email Address\n\nThis option controls who will be the recipient if someone responds to an email sent out by the email destination. None: If someone hits \"Reply\", there will be no reply-to address supplied (or it will use no-reply@truecontext.com) Custom Email Address: The email address supplied will be used as the reply-to address in headers. Form Submission Submitter's Email Address: (Default) This will use the email address associated with the submitter's username as a reply-to address.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Reply-to Email Address"
    }
  },
  {
    "content": "Question Unique IDs to Use for Recipient Email Address\n\nThis is where you configure who will receive the email. You will require a question in the source form that collects your customer's email address. This uses question unique IDs using an email data type. Find the appropriate question with an email data type in your form, copy the unique ID, and paste it into this field. Multiple Email Addresses If multiple email addresses are used, the same Customer Feedback Form link will be sent to each. As dispatched Customer Feedback Forms Customer Feedback Forms are browser-based, can be used on any platform, and are available to customers and third parties by means of a URL link. They don’t require an app download or a user login. are single-use, we do not recommend entering multiple question Unique IDs in this field or referring to a question that often has multiple emails entered as answers. Tip:If multiple email recipients and corresponding links are needed, use multiple Customer Feedback",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Question Unique IDs to Use for Recipient Email Address"
    }
  },
  {
    "content": "Form Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Question Unique IDs to Use for Recipient Email Address"
    }
  },
  {
    "content": "Setting up what the email will look like to your customers\n\nTo ensure that your customers get the right information and context along with the emailed link, you can configure what the subject line, email body, and link text look like in the destination configuration. Apply formatting with the rich text editor, including styles, images, tables, and lists Note:Email clients render different styles differently and may strip images or styles entirely. Use Data Reference Expression Language to insert answers from your form: Customize emails by inserting a contact name into greetings with \"%a[UniqueID]\" Add a signature line to the email and insert the form submitter's name with \"%u[name]\" Press the \"Example\" button to see a sample of what the body will look like. Text to Display on Feedback Form Link: Customize the text that forms the link to the Customer Feedback form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Setting up what the email will look like to your customers"
    }
  },
  {
    "content": "Attach a PDF Document of the Source Form to the Customer Feedback Destination\n\nWe recommend dispatching a PDF along with the email that contains the Customer Feedback Form link. Ensuring that your customers have proper context for this link will help when deciding whether this is a legitimate email, or spam.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Attach a PDF Document of the Source Form to the Customer Feedback Destination"
    }
  },
  {
    "content": "Dispatch Details\n\nConfigure which Customer Feedback Form you wish to send to the email addresses configured in the Email Details section, and what information from the originating form is carried forward, such as the technician's name, or the date of service. Customer Feedback Form to Send: If you have multiple customer feedback forms, select the one you wish to dispatch answers to and send in an email to your customers. Form Answers: Automatically carry forward answers from questions with matching unique IDs and data types: This will take data from the originating form and automatically route it to questions in the selected feedback form with corresponding unique IDs as long as the question data type matches in both forms. Manually defined: Target Question is the question in the Customer Feedback form that should be filled. Read more about unique IDs here. Answers to Dispatch can reference question answers and metadata from the dispatching form using Data Reference Expression",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Dispatch Details"
    }
  },
  {
    "content": "Language. Static text can also be included. Note:If you are using Conditional Logic to \"Set\" an answer on a question, we highly recommend NOT dispatching to this question. The Conditional Logic and dispatched data may conflict and produce inconsistent results.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Dispatch Details"
    }
  },
  {
    "content": "Response Configuration\n\nWhen a Customer Feedback Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. executes, it creates a Data Record in the TrueContext system and generates response outputs. Do you want the system to store the Form Submission ID, Reference Number, and single-use URL of the form that the Data Destination dispatches? If yes, select the option to Store all response outputs for use in later destinations. If no, keep the default Don’t store response outputs. Info:The topic Store Response Outputs for Dispatch and Customer Feedback Data Destinations describes the Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Response Configuration"
    }
  },
  {
    "content": "storage) in several different formats. response outputs in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "Response Configuration"
    }
  },
  {
    "content": "What happens when this destination executes?\n\nWhen this data destination is attached to a regular form (one filled out using the TrueContext app, with a user login), and a form is sent, this is what happens: The regular form is sent and processed according to whatever destinations are set up. The Customer Feedback Destination creates a Dispatch Customer Feedback Form containing the information forwarded on by your Customer Feedback Form Destination's configuration. The single-use link is sent via an email to your customer. The customer clicks on the link to open the Customer Feedback Form. The customer hits 'Send' on the Customer Feedback Form and is able to close the browser window or navigate to the Success link on the Customer Feedback Form. The Customer Feedback Form is submitted to TrueContext servers as normal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360035041391.html",
      "title": "Customer Feedback Destination",
      "section": "What happens when this destination executes?"
    }
  },
  {
    "content": "What is a Signature in a Customer Feedback form?\n\nCustomer Feedback (browser-based) forms provide a way to collect information from your customers. There’s no need for them to sign in as TrueContext users, and no need for your Mobile app workforce to hand a customer their device. Signature questions in a Customer Feedback form enable contactless signatures as part of a remote workflow. This means that you can ask for customer sign-off on a Site Readiness check, after a delivery, or after scheduled maintenance.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/SignaturesInBrowserForms.htm",
      "title": "Signatures in Customer Feedback Forms",
      "section": "What is a Signature in a Customer Feedback form?"
    }
  },
  {
    "content": "Example of a Signature in a Customer Feedback form\n\nSpecialty movers, delivery services, and equipment maintenance companies often have strict regulatory requirements for customer sign-off and physical distancing. The following example shows how a company can use a Signature question in a Customer Feedback form to obtain contactless sign-off. A specialty piano moving company must obtain customer sign-off after delivering a piano to the customer’s location. In this example, the Citizen Developer sets up an automated process that uses a Customer Feedback Data Destination to send the customer form. The piano mover follows a protocol that includes a visual inspection and photograph of the piano on arrival at the customer location. The completed form captures the results and an image. When the mover submits the form with a condition of “Pass”, the system sends one email to the supervisor, by means of an Email Destination, and a different email to the customer, by means of a Customer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/SignaturesInBrowserForms.htm",
      "title": "Signatures in Customer Feedback Forms",
      "section": "Example of a Signature in a Customer Feedback form"
    }
  },
  {
    "content": "Feedback Data Destination. The following example shows the customer email, which you can easily configure with the required text and branding. Info:In this example, the system sends a customer email for a “Pass” condition only. That way, the supervisor can decide when and how to contact the customer to discuss any issues with the delivery. The customer follows the link to open the feedback form in a web browser. The customer opens the signature window, adds their signature, and then submits the form. With an Email Destination configured for the customer form, the system sends the supervisor a notification email. The email includes a link to the form submission details in the Web Portal. The following example shows how the system displays the details, including the customer signature.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/SignaturesInBrowserForms.htm",
      "title": "Signatures in Customer Feedback Forms",
      "section": "Example of a Signature in a Customer Feedback form"
    }
  },
  {
    "content": "Limitations of Signature questions in a Customer Feedback form\n\nYou can add Signature questions to both Customer Feedback (browser-based) and Mobile App forms. The following limitations apply to both types of forms. Signature questions use the Attachment data type, and you can dispatch a signature from one form to another (target) form. Within a single form, however, you can’t use Conditional Logic to set other questions to the value of a Signature. Some people prefer to use a touch pad or touchscreen rather than a mouse to write their signatures. Customers can use any supported browser on their tablet, smart phone, or laptop to open and complete a form. We support Customer Feedback forms on the latest versions of the following browsers: Google Chrome™ Mozilla Firefox Apple® Safari® Microsoft Edge",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/SignaturesInBrowserForms.htm",
      "title": "Signatures in Customer Feedback Forms",
      "section": "Limitations of Signature questions in a Customer Feedback form"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext Team must be on the Enterprise tier, or you must have Customer Feedback forms as an add-on to the Advanced tier. You must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/EmbeddedWebforms.htm",
      "title": "Embed a Customer Feedback Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up an embedded Customer Feedback form\n\nFrom the Forms & Integrations menu, create or edit a Customer Feedback form. To create a new form: Forms & Integrations > Create New Form > Build a Customer Feedback Form > Save To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you want to edit. Select Settings. Result: The system displays the Settings page. From here, you can set up the form properties. In the section Allowed URLs for embedding the form, enter up to ten URLs. Note:You must start each URL with https:// Save and Deploy the form. Result: The system displays the Form Diagram The Form Diagram is a visual overview of a selected form version found in the TrueContext Web Portal. The diagram provides details on the form's inputs and outputs and displays the user groups that can access the form. and the Distribution URL. Copy and paste the Distribution URL into an iframe, for example: <iframe",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/EmbeddedWebforms.htm",
      "title": "Embed a Customer Feedback Form",
      "section": "Steps to set up an embedded Customer Feedback form"
    }
  },
  {
    "content": "src=\"https://app.prontoforms.com/form/CYYDLWJLW732KY52VKM5IPQW5EGKZEFVRKOUQUPO4N3GDV5JXVNDMOITMQKGHRFR\" /> Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Note:Remember that:The embedded form only works on sites that you listed as allowed in step 3.You should include the allow=\"camera\" property in your iframe for Image questions that users will answer on a desktop or laptop.You can still send the Distribution URL directly and users can complete the form outside of an iframe.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/EmbeddedWebforms.htm",
      "title": "Embed a Customer Feedback Form",
      "section": "Steps to set up an embedded Customer Feedback form"
    }
  },
  {
    "content": "Image questions on desktops or laptops\n\nImage questions prompt users to upload images from their camera or image gallery. On a desktop or laptop, users must allow TrueContext to access the device camera. To help with this, we display a reminder and instructions: Note:For an embedded form, we suggest that you include the allow=\"camera\" property in your iframe. Without this property, desktop and laptop users can’t take photos within the form. They can, however, upload files from their image gallery if the Image question is set to Allow camera and picture gallery.<iframe src=\"URL\" allow=\"camera\" />where URL is the Distribution URL for the Customer Feedback form. Info:The topic Image Questions in Customer Feedback forms describes how to set up Image questions and how they differ from Image questions in Mobile App forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/EmbeddedWebforms.htm",
      "title": "Embed a Customer Feedback Form",
      "section": "Image questions on desktops or laptops"
    }
  },
  {
    "content": "Related topics\n\nOverview: Customer Feedback Forms Dispatch an Image with a Customer Feedback Destination Enable Camera Access in Apps and Web Browsers Create or Edit a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/EmbeddedWebforms.htm",
      "title": "Embed a Customer Feedback Form",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps to set up a File Upload question\n\nFrom the Forms & Integrations menu, navigate to the Customer Feedback form that you want to set up. Do you want to create a new File Upload question? If yes, go to the page and section where you want to add the question. You have two options when adding a new question: Hover between two questions, and select the plus sign [+]. Scroll to the bottom of a section and select ADD A QUESTION. To move a question, drag it to one of the separators between questions or to an empty section. You can also move a question to another page by dragging it to the Form Index. If no, select the File Upload question you want to edit, and then go to step 5. On the Question Type page, either: Select the Attachment-Based tab > File Upload question type. Start typing the word file to display matching question types, and then select File Upload from the list. On the General tab, enter the Question Text and the Unique Identifier. On the Properties tab, set up the question",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Steps to set up a File Upload question"
    }
  },
  {
    "content": "properties. You can allow all supported file extensions or choose specific file extensions to allow. The following example has the File Options set to include only specific file extensions. Note:When you set the number of Maximum Attachments, keep in mind that each file counts towards the maximum submission size of 20 MB. You can set up a Custom Filename Prefix to help you easily identify the file contents based on the file name. Info:The topic Attachment File Naming: How to Create a Custom Filename Prefix describes how this works in more detail. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Steps to set up a File Upload question"
    }
  },
  {
    "content": "Comparison of Image and File Upload question types\n\nIn a Customer Feedback form, users can add image files to both Image and File Upload questions. The following table compares the two question types. Keep these differences in mind when you decide which type of question to add to your form. Behavior File Upload Question Image Question Image compression None The system converts all image files to JPEG format and compresses them to a 60% quality setting. PNG files lose transparency when converted. Option to upload an image directly from the device camera No Yes Different types of files for a single question Yes No, image file extensions only: .jpg .jpeg .png Maximum file size 2 MB per file 4 MB per image file In the Customer Feedback form, thumbnail displayed for uploaded image files No, only the file name Yes In the form submission document, thumbnail of image displayed No, only the file name Yes Note:Users can submit a Customer Feedback form that’s no larger than 20 MB. If attached",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Comparison of Image and File Upload question types"
    }
  },
  {
    "content": "images and files push the form above the 20 MB limit, the system displays an error message. The user must remove images or files until the error message disappears.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Comparison of Image and File Upload question types"
    }
  },
  {
    "content": "Dispatch to and from File Upload questions\n\nYou can dispatch files to and from Customer Feedback forms in the following ways: Use a Customer Feedback destination to dispatch a file from a Mobile App form to a Customer Feedback form. Note:URL dispatch to a Customer Feedback form is not supported. Use a Dispatch Data Destination to send files from a Customer Feedback form to a Mobile App form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Dispatch to and from File Upload questions"
    }
  },
  {
    "content": "Related Topics\n\nCreate or Edit a Customer Feedback Form Overview: Customer Feedback Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/FileUploadQuestionsinCSATforms.htm",
      "title": "File Upload Questions in Customer Feedback Forms",
      "section": "Related Topics"
    }
  },
  {
    "content": "What is an Image question in a Customer Feedback form?\n\nCustomer Feedback (browser-based) forms provide a way to collect information from your customers. There’s no need for them to sign in as TrueContext users, and no need for your Mobile app workforce to hand a customer their device. Image questions in a Customer Feedback form enable dispatch and collection of images as part of a remote workflow: Customers can submit images to show required maintenance, work site details, or proof of a manufacturing defect or damaged item. Supervisors and team leads can include image attachments for a customer to review and approve as evidence of a delivery or completed work. Info:The topic Dispatch Images in Customer Feedback forms describes in detailed steps how to dispatch images in Customer Feedback forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "What is an Image question in a Customer Feedback form?"
    }
  },
  {
    "content": "Limitations of Image questions in Customer Feedback forms\n\nYou can add Image questions to both Customer Feedback (browser-based) and Mobile App forms. The following limitations apply to both types of forms. Image questions use the Attachment data type, and you can dispatch an image from one form to another (target) form. Within a single form, however, you can’t use Conditional Logic to set other questions to the value of an Image. Image questions on Customer Feedback forms have some limitations that don’t apply to Image questions on Mobile App forms. We support Customer Feedback forms on the latest versions of the following browsers: Google Chrome™ Mozilla Firefox Apple® Safari® Microsoft Edge Customer feedback forms have a limit on the number of images that a user can submit. Users can only submit up to 20 images per form. The system converts all image files to JPEG format and compresses them to a 60% quality setting when users submit them. Note:The option to set a question’s image",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Limitations of Image questions in Customer Feedback forms"
    }
  },
  {
    "content": "quality is not available on Customer Feedback forms. Users can only upload images with a file size smaller than 4 MB before compression. The size of the Form Submission must be 20 MB or less. Note:Users can submit a Customer Feedback form that’s no larger than 20 MB. If attached images and files push the form above the 20 MB limit, the system displays an error message. The user must remove images or files until the error message disappears. If users have any issues accessing their camera from their browser, refer to the topic Enable Camera Access in Apps and Web Browsers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Limitations of Image questions in Customer Feedback forms"
    }
  },
  {
    "content": "Types of Image questions in Customer Feedback forms\n\nYou can customize Image questions in Customer Feedback forms to have different settings depending on your company’s needs. You can use a combination of the following settings for Image questions in Customer Feedback forms. Read only questions Use read only questions to add images to the form for your customers to review. You can add the images when you dispatch the form. Your customers won’t be able to add or remove any images. Questions with dispatched images You can dispatch images so that they are already in the form when your customers open it. Depending on the question settings, customers might be able to add or remove images, or the images might be read-only. Info:The topic Dispatch Images in Customer Feedback forms describes in detail how to dispatch images to Customer Feedback forms. Camera only questions You can configure an Image question to only let your customers upload images directly from their camera. This means that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Types of Image questions in Customer Feedback forms"
    }
  },
  {
    "content": "they can’t upload images from their image gallery. Info:It’s important to remind customers to enable camera access if you include camera only questions in the form. The section How camera access works in Customer Feedback forms describes camera access in more detail. Required questions You can configure questions to be required. This means that customers can’t submit the form without answering the question. Note:We don’t recommend that you configure a question that is both read only and required. This can cause issues when customers want to submit the form. Conditional questions You can configure a question to appear based on an answer to a previous question. For example, if a customer answers yes to needing maintenance work, the form might prompt them to upload an image of the required maintenance. This means that even though the form prompts customers to enable camera access, the user might not have to answer an Image question. Questions with an image limit You can limit the number",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Types of Image questions in Customer Feedback forms"
    }
  },
  {
    "content": "of attachments your customers can submit per question. This limit does not override the limit of 20 images per form, which applies in all cases. Tip:Image questions in Customer Feedback forms can be of more than one of the types listed. For example, you can configure a question to be required and camera only.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Types of Image questions in Customer Feedback forms"
    }
  },
  {
    "content": "How camera access works in Customer Feedback forms\n\nCustomer Feedback forms with Image questions remind customers to check their camera permissions when they first open the form. It’s important to recommend that they enable camera access before they start answering questions for the following reasons: If customers don’t enable camera access, and the form has a required camera-only question, they can’t submit the form. If customers start answering questions, and then decide to enable camera access, they have to reload the form and will lose all the information they entered. Customers on a desktop or laptop computer can choose to check their camera permissions when they open a form. When the form reminds customers to check their camera permissions, and then they select CHECK PERMISSIONS, the results vary according to the browser settings. Browser setting Result Ask before accessing the camera The browser prompts customers to allow camera access for the form. Block camera access Customers",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "How camera access works in Customer Feedback forms"
    }
  },
  {
    "content": "must manually enable camera access by following the instructions for their browser and device. Camera permissions allowed for TrueContext Customer Feedback forms. Their browser automatically gives camera access to the form. Info:The topic Enable Camera Access in Apps and Web Browsers describes how to enable camera access on different web browsers.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "How camera access works in Customer Feedback forms"
    }
  },
  {
    "content": "Example of an Image question in a Customer Feedback form\n\nThe following example shows how a customer completes a form to provide feedback on a company’s delivery services. The customer opens the Customer Feedback form from the link provided. Result: The Customer Feedback form opens with a pop-up message that reminds the customer to check their camera permissions. Note:Customers must enable camera access if they want to take pictures and upload them to the form. If they don’t enable camera access, they can only upload images from their device’s image gallery. When a customer answers the Image question, they can take a picture with their camera, or select an image from their device’s gallery. This depends on how the form designer configured the question. In this example, the form prompts the user to upload an image to show damage on a delivered product. Note:Customers can only submit up to 20 image files per Customer Feedback form. Each image file size can be up to 4 MB. The form shows",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Example of an Image question in a Customer Feedback form"
    }
  },
  {
    "content": "all the uploaded images as thumbnails. Customers can select an image thumbnail to open the image in gallery view. Gallery view lets customers view images in full size and access more options. Tip:Viewing an image in gallery view lets customers access more options including the option to delete an image. This can be useful when customers uploadthe wrong image, ormore than 20 images. The customer answers any remaining questions in the form, and then submits it when completed. Result: The supervisor can access the Form Submission on the Web Portal. Info:The topic View Form Submissions in the Web Portal describes how to access all Form Submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Example of an Image question in a Customer Feedback form"
    }
  },
  {
    "content": "Comparison of Image and File Upload question types\n\nIn a Customer Feedback form, users can add image files to both Image and File Upload questions. The following table compares the two question types. Keep these differences in mind when you decide which type of question to add to your form. Behavior File Upload Question Image Question Image compression None The system converts all image files to JPEG format and compresses them to a 60% quality setting. PNG files lose transparency when converted. Option to upload an image directly from the device camera No Yes Different types of files for a single question Yes No, image file extensions only: .jpg .jpeg .png Maximum file size 2 MB per file 4 MB per image file In the Customer Feedback form, thumbnail displayed for uploaded image files No, only the file name Yes In the form submission document, thumbnail of image displayed No, only the file name Yes",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Comparison of Image and File Upload question types"
    }
  },
  {
    "content": "Related Topics\n\nDispatch Images in Customer Feedback forms Dispatch an Image with a Customer Feedback Destination Enable Camera Access in Apps and Web Browsers Create or Edit a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestionsinCSATforms.htm",
      "title": "Image Questions in Customer Feedback forms",
      "section": "Related Topics"
    }
  },
  {
    "content": "Example of an image dispatch in a Customer Feedback form\n\nA large freight company sends a Customer Feedback form to new customers. This form asks the customer to confirm their shipping information and to ensure that their warehouse can accommodate a large delivery vehicle. The supervisor prepares a Customer Feedback form to dispatch from the Web Portal. The supervisor enters any information the customer needs, including an image with the dimensions of their tractor trailer. The customer opens the form in a web browser. The form contains the information that the supervisor dispatched with the form, including the image of the tractor trailer. Note:The form designer configured this Customer Feedback form to show the images and other information as read-only. This can be useful when you want customers to review, but not edit, the information. The customer answers any questions in the form, and then submits it when completed. Result: The supervisor can access the Form Submission on the Web",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/Dispatch_ImagesInCSATForms.htm",
      "title": "Dispatch Images in Customer Feedback forms",
      "section": "Example of an image dispatch in a Customer Feedback form"
    }
  },
  {
    "content": "Portal. Info:The topic View Form Submissions in the Web Portal describes how to access all Form Submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/Dispatch_ImagesInCSATForms.htm",
      "title": "Dispatch Images in Customer Feedback forms",
      "section": "Example of an image dispatch in a Customer Feedback form"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user or a user in a group with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Your TrueContext account must be in the Enterprise tier, or in the Advanced tier with Customer Feedback forms as an add-on. You must have a Customer Feedback form with an Image question already configured. Info:The topic Create or Edit a Customer Feedback Form describes how to create and add questions to a Customer Feedback form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/Dispatch_ImagesInCSATForms.htm",
      "title": "Dispatch Images in Customer Feedback forms",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Limitations\n\nYou can only dispatch one image per question when you dispatch from the Web Portal. Make sure to configure enough questions to include all necessary images. All image files must be 4 MB or smaller. You can dispatch up to 20 images or per form. The total size of the Form Submission must be 20 MB or less. This includes any images that you dispatch. Consider this when adding images to dispatch with the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/Dispatch_ImagesInCSATForms.htm",
      "title": "Dispatch Images in Customer Feedback forms",
      "section": "Limitations"
    }
  },
  {
    "content": "Dispatch an image to a Customer Feedback form\n\nGo to Forms & Integrations > List Forms, and then select the form you want to dispatch. Select DISPATCH. Result: The Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Form page opens. Enter the information that you want to send the customer. For the Image question, select Choose File, and then select the image that you want to send. Select Dispatch. Result: The system creates a one-time-use Distribution URL and assigns a reference number to the dispatch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/Dispatch_ImagesInCSATForms.htm",
      "title": "Dispatch Images in Customer Feedback forms",
      "section": "Dispatch an image to a Customer Feedback form"
    }
  },
  {
    "content": "Related Topics\n\nImage Questions in Customer Feedback forms Dispatch an Image with a Customer Feedback Destination Enable Camera Access in Apps and Web Browsers Create or Edit a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/Dispatch_ImagesInCSATForms.htm",
      "title": "Dispatch Images in Customer Feedback forms",
      "section": "Related Topics"
    }
  },
  {
    "content": "Example of an image dispatch using a Customer Feedback  Destination\n\nA service technician performs a maintenance service for an HVAC system. They complete a form that includes an Image question. The technician sends the form. Result: The system automatically sends the customer an email with a link to the Customer Feedback form. The customer opens the Customer Feedback form. The Customer Feedback form contains the automatically dispatched information from the source form. Result: The customer can see the information that the technician submitted with the source form, including the picture. Note:The form designer configured this Customer Feedback form to show the images and other information as read-only. This can be useful when you want customers to review, but not edit, information. The customer reviews the information, and then signs the form. The customer submits the form. Result: Supervisors and team leads can access the Form Submission on the Web Portal. Info:The topic View Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Example of an image dispatch using a Customer Feedback  Destination"
    }
  },
  {
    "content": "Submissions in the Web Portal describes how to access all Form Submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Example of an image dispatch using a Customer Feedback  Destination"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user or a user in a group with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Your TrueContext account must be in the Enterprise tier, or in the Advanced tier with Customer Feedback forms as an add-on. You must have a source form. The source form is the Mobile App form that dispatches a Customer Feedback form when completed. The source form must include a question that collects the customer’s email address, and an Image question. You must have a Customer Feedback form that includes an Image question. Take note of the unique ID of the Image question in the source form, and the Image question in the Customer Feedback form. Info:The topic Overview: Unique IDs describes how to find a Question Unique ID A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Limitations\n\nAll image files must be 4 MB or smaller. You can dispatch up to 20 images per form. The total size of the Form Submission must be 20 MB or less. This includes any images that you dispatch. Consider this when adding images to dispatch with the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Limitations"
    }
  },
  {
    "content": "Configure dispatch details for a Customer Feedback Destination\n\nCreate a Customer Feedback Destination. Info:The topic Customer Feedback Destination describes how to create a Customer Feedback Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. in more detail. In the Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Details tab, configure the answers that you want to dispatch from the source form to the Customer Feedback form. Do the Unique IDs of the questions in the source form match the Unique IDs of the questions in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Configure dispatch details for a Customer Feedback Destination"
    }
  },
  {
    "content": "Customer Feedback form? If yes, select the check box to automatically carry forward answers… If no, go to step 3. Configure the Target Question and the Answers to Dispatch. In the Target Question column, include the unique ID for the question in the Customer Feedback form. In the Answers to Dispatch column, include a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression for the answer from the source form. For the image type question, use the following format: %a[UniqueID][contentType]|%a[UniqueID][bytes] Info:The topic DREL Complete Reference List describes in detail how to reference question answers using DREL. In the following example, a form designer configures an Image question in a source form to dispatch the images to an Image question in a Customer Feedback form. Select Create. Result: The system creates the Customer Feedback destination, and then",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Configure dispatch details for a Customer Feedback Destination"
    }
  },
  {
    "content": "dispatches a Customer Feedback form when a user submits the source form. Note:Remember to add the Customer Feedback destination as a Data Destination for your source Mobile App form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Configure dispatch details for a Customer Feedback Destination"
    }
  },
  {
    "content": "Related topics\n\nImage Questions in Customer Feedback forms Dispatch Images in Customer Feedback forms Enable Camera Access in Apps and Web Browsers Create or Edit a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/ImageQuestion_CSATDestination.htm",
      "title": "Dispatch an Image with a Customer Feedback Destination",
      "section": "Related topics"
    }
  },
  {
    "content": "Why use the URL to prepopulate answers?\n\nIf your organization provides a service, such as equipment repairs and maintenance, you might want to send your customers a feedback form. When you add parameters to the URL, you can include the technician’s name and other details of the service performed. You can use the URL with parameters for a QR code on a business card that the technician leaves with the customer. First, you set up the form to accept URL-encoded parameters. Then, you construct a URL that includes the values you want to pass. Tip:You could also create multiple, dispatched versions of the form, each with a single-use URL. The URL parameter functionality, by contrast, enables you to create a static, multi-use URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Why use the URL to prepopulate answers?"
    }
  },
  {
    "content": "Structure of a URL dispatch\n\nURLs require UTF-8 percent encoding for all special characters and spaces, except for parentheses ( ), which you don’t need to encode. Structure the URL as shown in this example: https://app.prontoforms.com/form/MKLMBRB5QMMAK7OL5WKHVXOC7E5PWBGG6QZWROK6PJIBSLRUPODFDFLDARC3SJ2I?Technician=Maya%20Natale&ServiceDate=2021%2D11%2D12 where: https://app.prontoforms.com/form/MKLMBRB5QMMAK7OL5WKHVXOC7E5PWBGG6QZWROK6PJIBSLRUPODFDFLDARC3SJ2I is the distribution URL provided by TrueContext. Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 ? indicates that there are additional parameters. Technician=Maya%20Natale prepopulates the question Technician with the value Maya Natale. & indicates that there is another parameter. ServiceDate=2021%2D11%2D12 prepopulates",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Structure of a URL dispatch"
    }
  },
  {
    "content": "the question ServiceDate with the value 2021-11-12. Note:Dispatched values override default values configured for the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Structure of a URL dispatch"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be an Admin user or a user in a group with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Your TrueContext account must be in the Enterprise tier, or in the Advanced tier with Customer Feedback forms as an add-on. You must have a Customer Feedback form with the target questions already configured. Info:The topic Create or Edit a Customer Feedback Form describes how to create and add questions to a Customer Feedback form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Limitations\n\nURLs require UTF-8 percent encoding for all special characters and spaces, except for parentheses ( ), which you don’t need to encode. For each value passed by the URL, the format must match the data type of the related question. If the format is wrong, the user sees a blank or default value when they open the form. For example, if the data type is Integer, you must pass a numeric value. The form processes the URL parameters in the same order as the questions in the form. This ensures that the form respects Conditional Logic and dependencies between questions, regardless of the order of the URL parameters. You must add the parameters to the Distribution URL, not to a single-use URL. URL dispatch is supported for the following question types: Date/Time Stamp (in ISO format) Dropdown Radio Button Single Checkbox (send a value of 0 or 1, true or false) Text Area Text Field Button Group (send the actual value) Slider Stepper Multiselect (use the same unique identifier more",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Limitations"
    }
  },
  {
    "content": "than once with a different value each time):https://app.pf.com/form/XYZ?multi=a&multi=b",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Limitations"
    }
  },
  {
    "content": "Construct a dispatch URL\n\nGo to Forms & Integrations > List Forms, and then select the form you want to set up. To enable URL Encoding, go to Edit Form > Settings > Advanced Properties > URL Encoding. Select the option to Allow URL-encoded values to populate the form. Save and deploy the form. Result: The system displays the Form Diagram The Form Diagram is a visual overview of a selected form version found in the TrueContext Web Portal. The diagram provides details on the form's inputs and outputs and displays the user groups that can access the form.. At the top of the page, locate and copy the Distribution URL. Paste the URL into the app of your choice, and then add the parameter values that you want to pass to the customer. The structure of the URL must be:https://DistributionURL?UniqueID=Value where DistributionURL is the value that you just copied. ? indicates that there are additional parameters. UniqueID is the unique identifier of the question that you want to prepopulate.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Construct a dispatch URL"
    }
  },
  {
    "content": "Value is the URL-encoded value for the answer. Tip:To send more than one value, use & before the next unique ID. Use the URL that you constructed in an email, QR code, or as needed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Construct a dispatch URL"
    }
  },
  {
    "content": "Related Topics\n\nOverview: Customer Feedback Forms Create or Edit a Customer Feedback Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/CustomerFeedbackForms/DispatchToCSATWithURL.htm",
      "title": "Use URL Parameters to Prepopulate a Customer Feedback Form",
      "section": "Related Topics"
    }
  },
  {
    "content": "Manage Forms in the Web Portal\n\nThis section includes the following content: Review Form DetailsView Form Properties in the Web PortalViewing Form DetailsThe Form DiagramThe Form Outputs TabForm VersionsActive, Draft, and Archived FormsExport Form Details to an Excel FileArchiving and Deleting FormsTest and Deploy FormsIntroducing and Testing New Form Versions in a Production Environment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ManageFormsWebPortal.htm",
      "title": "Manage Forms in the Web Portal",
      "section": "Manage Forms in the Web Portal"
    }
  },
  {
    "content": "Review Form Details\n\nThis section includes the following content: View Form Properties in the Web PortalViewing Form DetailsThe Form DiagramThe Form Outputs TabForm VersionsActive, Draft, and Archived FormsExport Form Details to an Excel FileArchiving and Deleting Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ReviewFormDetails.htm",
      "title": "Review Form Details",
      "section": "Review Form Details"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be a TrueContext Admin user or a User with Can Create permissions. Info:This topic describes how to view a summary of your form properties. The topic Set Up Form Properties provides more detail about how to edit the form settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/ViewFormSettings.htm",
      "title": "View Form Properties in the Web Portal",
      "section": "Prerequisites"
    }
  },
  {
    "content": "View form properties\n\nGo to Forms & Integrations > FormName Select the Form Properties tab. Result: The Form Properties tab displays the following sections: Description This section includes the form description that the form creator added to the form. This section is only visible if the form has a description. Tags This section includes tags that mobile users can use to filter forms in their app. This section is only visible if the form has tags configured. Inbox and Dispatching This section includes the settings that determine the workflow of how users can start filling out a new form. Form Submission State This section includes the Data Passthrough setting. This setting determines if TrueContext stores your data, or if only your organization stores it due to the sensitivity of the information. Info:The topic Enable Data Passthrough on Forms describes the Data Passthrough feature in more detail. Form Submission Naming & Number Rules This section includes the settings that affect the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/ViewFormSettings.htm",
      "title": "View Form Properties in the Web Portal",
      "section": "View form properties"
    }
  },
  {
    "content": "name and reference number of form submissions. Info:The topic Customize Naming of Items in the Mobile App describes form submission names in more detail. Client Behavior This section includes settings that configure how the Mobile App displays forms, and how it handles information collected in Form Submissions. Editing This section includes settings that indicate if users can edit form submissions, and how users can begin to edit a form submission. Device Search This setting controls if online Mobile App users can search for submitted forms. TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. These settings indicate if users can transfer incomplete forms as part of their workflow. This section is only visible to accounts in the Enterprise Tier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/ViewFormSettings.htm",
      "title": "View Form Properties in the Web Portal",
      "section": "View form properties"
    }
  },
  {
    "content": "Related topics\n\nSet Up Form Properties Viewing Form Details The Form Diagram",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/ViewFormSettings.htm",
      "title": "View Form Properties in the Web Portal",
      "section": "Related topics"
    }
  },
  {
    "content": "About\n\nThe pages and questions tab can be viewed without editing the form. It provides useful information about your form, sections, and questions, such as: Unique IDs for pages, sections, and questions, Conditional Logic applying to the page/question/section, what data/control type is being used. If you wish to download a comprehensive overview of your form for offline work, please look at: Export Form Details to an Excel File. For information on Unique IDs and their uses, please read: Overview: Unique IDs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/235822367.html",
      "title": "Viewing Form Details",
      "section": "About"
    }
  },
  {
    "content": "The Pages & Questions Tab\n\nTo access the Pages & Questions tab, ensure you are in the correct FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. and select the appropriate form from the Forms & Integrations dropdown menu. Select the Pages & Questions tab on the center left. Scroll down to see a display of your form's pages, sections, and questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/235822367.html",
      "title": "Viewing Form Details",
      "section": "The Pages & Questions Tab"
    }
  },
  {
    "content": "Pages & Questions Tab: Available Information\n\nWhile the page contains useful information at a glance, it also includes the ability to hover over a section or question and bring up a listing of more detailed information about the selection. Section Information: Section Properties, including: Number of Columns Has Bottom Border Collapsible Start Collapsed Question Information: Question Settings, including: ValidationApplicable options (Based on control type) Data Properties Control Properties Section Properties: Any specific configuration for the column the question is in.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/235822367.html",
      "title": "Viewing Form Details",
      "section": "Pages & Questions Tab: Available Information"
    }
  },
  {
    "content": "Repeatable Section Conditional Logic Display\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise If there is a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. that contains Conditional Logic, it will appear in the Information mouseover under Conditional Logic. All Conditional Logic outside of Repeatable Sections can be found beneath the table containing the page, section, and question data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/235822367.html",
      "title": "Viewing Form Details",
      "section": "Repeatable Section Conditional Logic Display"
    }
  },
  {
    "content": "Conditional Logic Block\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise If you're looking for a human-readable display of the Conditional Logic applying to all non-repeatable sections of your form, it can be found beneath the table of pages, questions, and sections. Tip:Else statements are optional. In the following example, the icon next to Logic Element and the grayed out statements denote an inactive rule. Info:The section Deactivate a Conditional Logic Rule provides detailed steps to deactivate a rule.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/235822367.html",
      "title": "Viewing Form Details",
      "section": "Conditional Logic Block"
    }
  },
  {
    "content": "About\n\nThe Form Diagram The Form Diagram is a visual overview of a selected form version found in the TrueContext Web Portal. The diagram provides details on the form's inputs and outputs and displays the user groups that can access the form. is a visual overview of a form version. This screen allows administrators to get a basic look at how a form is set up. It shows what groups have access to the form, what data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. it references, and which data destinations are connected. The diagram also serves as a central navigation point for a form. Hover over any component and choose to \"Edit\" to navigate directly to the settings page for that item.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "About"
    }
  },
  {
    "content": "Access the Form Diagram\n\nTo access the Form Diagram: Navigate to the desired form. Select the Form Diagram tab.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Access the Form Diagram"
    }
  },
  {
    "content": "Diagram Elements\n\nItems are grouped together in the diagram using visual containers: Data Sources, Resources, Document Templates, Groups, and Destinations. Each container displays a maximum of 5 configured items. If the maximum display value is exceeded, then a more link [ # more… ] will be provided for the user to navigate to a complete listing of items by type. Connecting lines indicate a relationship between the form and a linked item. Hovering the mouse over each element in the diagram will reveal details and actions that can be performed. Use the Add button [ + ] found in the top-right corner of each container, or the Click here to create... text to create another item of that type to connect it in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Diagram Elements"
    }
  },
  {
    "content": "Form\n\nDetails Number of Pages—Total number of pages in the form Number of Questions—Total number of questions in the form Form Submission Name—Standard or Custom Dispatchable—True/False Advanced Analytics—True/False Controls—A list of question types that are included in the form Actions Edit Form—Initiates the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings. Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Forms (Available if dispatchable is true)—Navigates to the Dispatch Form page for the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Form"
    }
  },
  {
    "content": "form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Form"
    }
  },
  {
    "content": "Resources\n\nThe diagram lists all Resource Images and Resource Documents referenced by questions within the form. Details Referencing Questions: Question Label—Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. used to identify the form question Question Text—Text to be displayed from the form question Actions View Details—Navigates to the Resource summary page Edit—Navigates to the Resource edit page",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Resources"
    }
  },
  {
    "content": "Data Sources\n\nThe diagram lists all Data Sources referenced by questions within the form. Details Type—Manual Upload, HTTP GET, FTP/Secure FTP, Dropbox, Google Apps Spreadsheet Referencing Questions: Question Label—Unique ID used to identify the form question Question Text—Text to be displayed from the form question Display Column—Table column header being referenced from the Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. Collect Additional Answers—True/False Actions View Details—Navigates to the Data Source summary page Edit—Navigates to the Data Source edit page Download as CSV—Downloads the Data Source as a CSV file Fetch New Data (Available for dynamic Data Sources)—Attempts to retrieve data from the Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Data Sources"
    }
  },
  {
    "content": "Source Upload New Data (Available only for Manual Upload Data Sources)—Navigates to the Data Source input file page",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Data Sources"
    }
  },
  {
    "content": "Destinations\n\nThe diagram lists all Data Destinations associated with the form, with different icons shown for each applicable Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. type. Details Properties (These vary for each type of Data Destination, but all key configuration items will be listed) Filtering: Form Version State—A list of form states to send to the Data Destination Form Submission State—A list of form submission states to send to the Data Destination Custom Filter Rules—Total number of custom Data Record filtering rules Actions View Details—Navigates to Data Destination summary page Edit—Navigates to Data Destination edit page List Executions—Navigates to Data Destination list executions page",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Destinations"
    }
  },
  {
    "content": "Document Templates\n\nDocument Templates that appear in the diagram show the document formatting that will be applied to the form’s Data Records (for applicable Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.). Details Document Type—Type of Document Template Configuration—Standard or Custom Embed images and signature files in the document—Indicates whether or not images and signature files are embeded in the document Hide unanswered pages—Indicates whether or not page hiding is enabled Hide unanswered questions—Indicates whether or not question hiding is enabled Actions Edit Document Format—Navigates to the Document Template summary page Manage Document Languages—(Multi-Language Add-on only) Opens the Manage Languages page. Add languages to your Multi-Language Document or upload",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Document Templates"
    }
  },
  {
    "content": "translation files. Preview Document Sample—Shows a preview of the form submission format in the web browser",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Document Templates"
    }
  },
  {
    "content": "Groups\n\nGroups who have access to the form are listed. Teams without FormSpaces will not see this section. Details Number of Users—Total number of users in the Group Can Create—Indicates whether or not the group has Create permissions on the form Can Test—Indicates whether or not the group has Test permissions on the form Can Submit—Indicates whether or not the group has Submit permissions on the form Can View—Indicates whether or not the group has View permissions on the form Actions View Details—Navigates to the Group summary page Edit Group—Navigates to the Group edit page Edit User Permissions—Navigates to the Group user permissions page Edit FormSpace Permissions FormSpace permissions define what members of a user group can do within a FormSpace. For example, permissions control whether group members can submit forms on the Mobile App or manage work in the Web Portal.—Navigates to the FormSpace permissions page",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499408_TheFormDiagram.html",
      "title": "The Form Diagram",
      "section": "Groups"
    }
  },
  {
    "content": "How the Form Outputs tab works\n\nOn the Form Outputs tab, you can: Link Data Destinations to the form. Data Destinations control where submitted forms are sent. Link Documents to these Data Destinations. Link additional downloadable Documents to the form. These Documents aren’t sent anywhere but are downloadable from the:Web PortalSent and Search lists in the TrueContext Mobile AppTrueContext REST API Info:The topic Add a Destination describes how to add a destination to create a new form version. This applies the destination to new—not past—form submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "How the Form Outputs tab works"
    }
  },
  {
    "content": "Add Data Destinations to a form version\n\nThis section describes how to link Data Destinations to an existing form version and how to choose the Documents attached.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Add Data Destinations to a form version"
    }
  },
  {
    "content": "Link Data Destinations to previous form versions\n\nTo send data from past form submissions to additional destinations, you can add destinations to a specific form version. TrueContext sends the previously submitted data to the newly added destinations. Existing Data Destinations are not triggered. Note:Be careful if you add an email destination to a previous form version—the recipient could receive thousands of emails. To link a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. to a previous form version: From the Forms & Integrations menu, navigate to the form you want to set up. Select FormName > Version History. Result: The system displays a list of the current and previous versions of the form. Select a form version. Result: The system displays the Form Diagram The Form Diagram is a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Link Data Destinations to previous form versions"
    }
  },
  {
    "content": "visual overview of a selected form version found in the TrueContext Web Portal. The diagram provides details on the form's inputs and outputs and displays the user groups that can access the form. for the selected version. Select Form Outputs, and then select Edit Form Outputs. Result: The system displays the Edit Form Outputs page. In the Data Destinations section, select Add, and then select a Data Destination. Repeat for additional destinations. Select the Documents you want to link to each destination. Result: If the document you selected isn’t already available for download, the system prompts you to choose whether to make it available. Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can select languages for the document files. The topic Steps to attach a Multi-Language Document to a Data Destination describes the language options in more detail. Do you want to make additional documents available for download? If yes, move an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Link Data Destinations to previous form versions"
    }
  },
  {
    "content": "Available Document to the Selected Documents list. If no, go to the next step. Select the checkbox to confirm that you’re aware that new or modified destinations will execute for the stated number of form submissions. Select Update. Result: TrueContext sends the previously submitted data to the newly linked destinations. Existing Data Destinations are not triggered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Link Data Destinations to previous form versions"
    }
  },
  {
    "content": "Link Documents to a Data Destination\n\nData Destinations send the Documents linked to them when they are triggered. To link a document to a Data Destination: From the Forms & Integrations menu, navigate to the form you want to set up. Select FormName > Version History. Result: The system displays a list of the current and previous versions of the form. Select a form version. Select Form Outputs, and then select Edit Form Outputs. Result: The system displays the Edit Form Outputs page. In the Data Destinations section, in the Documents column, select one or more documents to link to a destination. Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can select languages for the document files. The topic Steps to attach a Multi-Language Document to a Data Destination describes the language options in more detail. If you also want to make a Document available for download, choose to add the document type to the Additional Documents Available...",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Link Documents to a Data Destination"
    }
  },
  {
    "content": "list. Repeat for each Data Destination that supports Document storage. The following table describes the Data Destinations that support or require a document. Requires a Document Can have a Document, but is not required Not compatible with Documents Microsoft SharePoint Server Amazon Glacier Amazon SNS Salesforce Apex REST Amazon S3 Google Sheets ShareFile Box Dispatch WebDAV (HTTP PUT or PATCH) Customer Feedback Microsoft SharePoint List Dropbox SMS Email Zendesk Ticket FTP/Secure FTP Google Drive HTTP HTTP File Upload Microsoft OneDrive Microsoft OneDrive for Business Microsoft SharePoint Document Library Salesforce (except Apex REST) ServiceNow Table Tip:You can link a single Document to multiple Data Destinations. Select the checkbox to confirm that you’re aware that new or modified destinations will execute for the stated number of form submissions. Select Update. Result: TrueContext sends the previously submitted data to the newly linked Documents. Note: When a Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Link Documents to a Data Destination"
    }
  },
  {
    "content": "with new Documents re-executes, it will also resend copies of any previously linked Documents. Be careful if you link new Documents to an email Data Destination. The recipient could receive thousands of emails.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Link Documents to a Data Destination"
    }
  },
  {
    "content": "Reorder or unlink Data Destinations\n\nWhen a form is submitted, linked Data Destinations trigger in the order they are listed on the Form Outputs tab. Data Destination executions operate independently of each other. If the first destination fails, the other destinations can still execute. You might want to reorder the list if your Salesforce or HTTP destinations store response outputs. To reorder the Data Destinations linked to a form, hover over a Data Destination. Three icons will display on the right. Use the up and down arrows to move the Data Destination through the list. To remove the destination, select the delete icon. This removes the Data Destination from any future form submissions of that form version. Note:Users can still submit forms to the removed Data Destination until they reconcile the Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Reorder or unlink Data Destinations"
    }
  },
  {
    "content": "Additional Documents available for download\n\nWhen you make a Document available for download, once a form is submitted you can download attached Documents from the following sources: Through the TrueContext REST API. From a form submission details page in the Web Portal. From the Sent and Search lists in the Mobile App. Tip:You can link these Documents to Data Destinations if you also want them to be available in your third-party systems. Move Documents to the Selected Documents list with the arrows to make them available for download.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499418_TheFormOutputsTab.html",
      "title": "The Form Outputs Tab",
      "section": "Additional Documents available for download"
    }
  },
  {
    "content": "Version History\n\nThe Version History page lists Archived versions of a form, as well as the Active version and any drafts. From the Forms & Integrations menu, navigate to the form you want to set up. Hover over the arrow beside the form name. Select Version History. The resulting page lists form versions from newest to oldest. To delete or copy a form version, hover over the desired version, and select the option from the icons that appear at the right. The options, from left to right, are: Copy and Delete. Note:Deleting form versions, whether Active or Archived, is not recommended. Related data records will be lost and users with the deleted version on their device may encounter problems.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499468_FormVersions.html",
      "title": "Form Versions",
      "section": "Version History"
    }
  },
  {
    "content": "Add and view version notes\n\nWhen you select Save and Deploy in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings., you have the option to add notes. Notes are useful for tracking changes between form versions. The Version History page shows the notes in a column to the right.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499468_FormVersions.html",
      "title": "Form Versions",
      "section": "Add and view version notes"
    }
  },
  {
    "content": "Make an Archived form version the Active version\n\nAn Archived version of a form can be made Active. This is useful when you need to revert to an older version. To make an Archived version active: View the Version History as noted above. Hover over the Archived form version. Select the Copy icon that displays on the right. Keep or change the following settings: Target FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.: Select the current FormSpace. Target Form: Select Create as New Version of an Existing Form. Then select the form the archived version is derived from. Target State: Select Active, or select Draft if the version requires testing. Target Destinations And Documents: Select whether to keep the target form Data Destinations A Data Destination specifies where",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499468_FormVersions.html",
      "title": "Form Versions",
      "section": "Make an Archived form version the Active version"
    }
  },
  {
    "content": "to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. and Documents. If you select Change and select Data Destinations and Documents, you must: Link the form to new destinations. Select the documents each destination will send. Select additional documents available for download. Select what the system should do with duplicate Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., Documents, and Resources in the target FormSpace. The system can: Overwrite the duplicates. Link the target form to the existing duplicates. Copy and rename the duplicates. Select whether to notify",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499468_FormVersions.html",
      "title": "Form Versions",
      "section": "Make an Archived form version the Active version"
    }
  },
  {
    "content": "mobile users of the update. If you select this option, mobile users will not receive a notification that the form has changed. Select Copy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499468_FormVersions.html",
      "title": "Form Versions",
      "section": "Make an Archived form version the Active version"
    }
  },
  {
    "content": "Active, Draft, and Archived Forms Available on all tiers: Essentials Advanced Enterprise About Form States Active Draft Archived About TrueContext offers three form states: Active, Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder., and Archived. The state of a form version indicates whether it is a complete version ready for production, is a test version in development, or if it is a form version no longer in use. Form states are also a useful tool in allowing administrators more control over how forms are assigned. With permissions properly configured, a form can exist in both an Active and Draft state in the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499458_ActiveDraftArchivedForms.html",
      "title": "Active, Draft, and Archived Forms"
    }
  },
  {
    "content": "FormSpace., with one form state hidden from some or all users. This is particularly useful when testing new forms or form changes. Active Active forms are deployed forms. The Active state is intended for completed, fully tested forms ready to be used in production. In order to deploy a form, select Save and Deploy at the bottom of the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Alternatively, select the form through the Forms & Integrations dropdown, and then select Deploy Form from the form details dropdown next to the form name. Users in groups with default permissions (Can Submit) will see Active forms on their devices. Each time forms/form changes are deployed/made active, a version of that form is created. This version is saved indefinitely and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499458_ActiveDraftArchivedForms.html",
      "title": "Active, Draft, and Archived Forms"
    }
  },
  {
    "content": "can be accessed through the \"Version History\" interface. Once a set of major changes has been tested, it should be deployed. This allows administrators to revert back to this version in the future if required. Draft Draft forms are forms or form versions not ready to be used in production. This state is intended for unfinished or untested forms/form changes. A draft version of a form can be created in the Form Builder by selecting Save as Draft at the top right of the Form Builder. Users in groups with Can Test permissions will see Draft forms on their devices. When a Draft form version is deployed/made active, the Draft version is deleted. Draft forms are useful in avoiding excess form versions when making changes to a form; only deployed versions and the most recent un-deployed Draft version are retained. Each time a Draft form is edited, the changes simply overwrite the previous draft version. To delete a draft, follow the instructions listed here. Archived Each time changes are",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499458_ActiveDraftArchivedForms.html",
      "title": "Active, Draft, and Archived Forms"
    }
  },
  {
    "content": "made to a form and it is deployed, it is saved as a new form version and old versions are Archived. Archived forms are retained indefinitely, but will not be accessible from a mobile device, no matter what permissions are configured. Data cannot be submitted against them. See the article on Working with Form Versions and Archiving for more information. Forms can also be manually archived, with no new Active version created. This is the recommended practice if a form is no longer in use, rather than deleting the form; the form and submitted data records will be stored in the TrueContext system for future use, but it will not appear on mobile devices.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499458_ActiveDraftArchivedForms.html",
      "title": "Active, Draft, and Archived Forms"
    }
  },
  {
    "content": "Introduction to the Excel Form Report\n\nThe familiar Excel format helps you to easily spot errors or show the report to someone unfamiliar with TrueContext. You can print the Excel report as needed. The following example shows the page, section, and question details as they appear in the report. Each worksheet tab contains other types of information, such as answer exceptions and Conditional Logic.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001223486.html",
      "title": "Export Form Details to an Excel File",
      "section": "Introduction to the Excel Form Report"
    }
  },
  {
    "content": "Steps to download the report\n\nFrom the Forms & Integrations menu, navigate to the form you want to review. From the menu next to the form name, select Download Excel Form Report. Result: The form downloads to your device. You can now open the form in Excel.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001223486.html",
      "title": "Export Form Details to an Excel File",
      "section": "Steps to download the report"
    }
  },
  {
    "content": "Structure of the report\n\nThe following table describes the worksheet tabs and the information that you can find in each worksheet. Tip:You might see additional worksheet tabs based on how you built the form. Worksheet tab Description Form Information General information about the form, including the ID, name, and creation and modification dates Pages & Questions Page, section, and question details Repeat_SectionUniqueID For each Repeatable Section, the page, section, and question details Exceptions Answer exception category names and colors Conditional Logic Rules Conditional Logic rule definitions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001223486.html",
      "title": "Export Form Details to an Excel File",
      "section": "Structure of the report"
    }
  },
  {
    "content": "Archive:\n\nRemoves the form from mobile devices, preventing new data from being submitted by users Retains an \"archived\" copy of the form in the TrueContext web administration portal; this copy can later be changed back into an \"active\" version for use in production Data records previously submitted will be stored in the portal",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499448_ArchivingAndDeletingForms.html",
      "title": "Archiving and Deleting Forms",
      "section": "Archive:"
    }
  },
  {
    "content": "Delete:\n\nRemoves the form from mobile devices Permanently deletes the form from the web administration portal; the form cannot be recovered for future use Permanently deletes previously submitted data records, as well as any pending data records on mobile devices Form Versions and Automatic Archiving Each time changes are made to a form and it is deployed, it is saved as a new form version. Old form versions are automatically saved in an Archived state and are retained indefinitely. These archived versions are an invaluable reference when problems are encountered with a form; administrators can look at archived versions to determine what form version the problems originated in and narrow down the cause. Read more about form versioning. Archiving a Form To archive a form, first navigate to the desired form in the web administration portal. Mouse over the dropdown next to the form name and select Archive Form. A warning message will pop up; click \"OK\" if there are no Draft A draft form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499448_ArchivingAndDeletingForms.html",
      "title": "Archiving and Deleting Forms",
      "section": "Delete:"
    }
  },
  {
    "content": "is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. versions that should be saved. The form is now archived. Deleting a Form To delete a form, navigate to the desired form in the web administration portal. Mouse over the dropdown next to the form name and select Permanently Delete. Select Delete Form and Data Records to permanently delete the form and all associated data. This cannot be undone. Making an Archived Form Active Administrators can take an archived form and make it active again for use in production. Simply mouse over the dropdown beside the archived form's name and select Activate Form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499448_ArchivingAndDeletingForms.html",
      "title": "Archiving and Deleting Forms",
      "section": "Delete:"
    }
  },
  {
    "content": "Test and Deploy Forms\n\nThis section includes the following content: Introducing and Testing New Form Versions in a Production Environment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/TestDeployForms.htm",
      "title": "Test and Deploy Forms",
      "section": "Test and Deploy Forms"
    }
  },
  {
    "content": "Introducing and Testing New Form Versions in a Production Environment Available on all tiers: Essentials Advanced Enterprise About Allowing Administrators to Work with Active and Draft Forms Eliminating Production User Interruptions About TrueContext makes testing new forms and form changes straightforward; configuring form states and FormSpace Permissions makes it possible to test new forms and form versions in a production FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. without causing user interruptions or affecting production forms. It is recommended that all form changes are tested before new versions are deployed to field users. Creating new versions of a form allows the TrueContext system to track important changes, like re-ordering questions on the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499478_IntroducingAndTestingNewFormVersions.html",
      "title": "Introducing and Testing New Form Versions in a Production Environment"
    }
  },
  {
    "content": "This tracking will improve the system's ability to give consistent data exports across versions. Active forms are intended for production; Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. versions are intended for testing new forms and form changes. A Draft version of a form can be created in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.; after making changes, select \"Save as Draft\". Default group permissions (\"Can Submit\") allow users to see only Active/deployed forms on their devices; Draft forms are automatically hidden from them. \"Can Test\" group permissions allow users to access and submit data for Draft forms in assigned FormSpaces. To",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499478_IntroducingAndTestingNewFormVersions.html",
      "title": "Introducing and Testing New Form Versions in a Production Environment"
    }
  },
  {
    "content": "simplify things, it is often useful to just create a separate \"Test FormSpace\" to test changes in. Allowing Administrators to Work with Active and Draft Forms Administrators or users can have access to both Active and Draft versions of the same form on their devices by correctly configuring group permissions. This allows them to test the Draft form while still being able to submit data against the Active form An active form is a form that a form designer saved and deployed. Depending on your configuration settings, a mobile user can open an active form from their Forms box (user-initiated) or Inbox (dispatched).. Ensure the desired administrators or users are in a group like \"Test Group,\" containing only users who should have access to Draft form versions. Assign the desired FormSpace to the group. Configure the group's FormSpace permissions. For the relevant FormSpace, select Can Test to allow access to Draft forms and Can Submit to allow access to Active forms. Eliminating Production",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499478_IntroducingAndTestingNewFormVersions.html",
      "title": "Introducing and Testing New Form Versions in a Production Environment"
    }
  },
  {
    "content": "User Interruptions As noted above, groups are created with default \"Can Submit\" FormSpace permissions, allowing users in the group to view and submit data for Active or deployed forms; Draft forms will be hidden on their devices. To ensure production users are not affected by form development and testing, simply ensure that: Groups containing production users have only “Can Submit” permissions for a FormSpace containing forms in development/testing, and not \"Can Test.\" Any new forms/form changes made in the Form Builder are saved with \"Save as Draft\"; these options will leave the form in a Draft state. Do not use \"Save and Deploy\" until the new form/changes should be accessed by production users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217499478_IntroducingAndTestingNewFormVersions.html",
      "title": "Introducing and Testing New Form Versions in a Production Environment"
    }
  },
  {
    "content": "Create and Manage Documents\n\nThis section includes the following content: Documents OverviewIntroduction to TrueContext DocumentsCreate and Manage DocumentsHow To: Ensure Information Questions are Always Shown on DocumentsVisual Documents - PDF, Word, HTML, and ExcelPDF, Word, and HTML DocumentsStandard layout options for PDF/Word/HTML documentsCustom PDF, Word, and HTML Document LayoutsCustom Template Version HistorySupported Fonts in PDF, Word, and HTML DocumentsExcel DocumentFreeMarker for Custom Layouts and Text DocumentsFreeMarker DocumentsFreeMarker Document Templates for TrueContext DataFreeMarker Custom PDF LayoutHandlebars for Custom Layouts and Text DocumentsHandlebars DocumentsHandlebars - Basic Question ReferencesHandlebars - Form Submission Metadata ReferencesHandlebars - Date and Time FormattingHandlebars: Advanced Question ReferencesHandlebars - Advanced: How to Print out All Questions/Answers in a Regular SectionHandlebars - Advanced: How to Print all Repeatable Section",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateManageDocuments.htm",
      "title": "PDF Table of Contents",
      "section": "Create and Manage Documents"
    }
  },
  {
    "content": "Entries in a TableHandlebars - ConditionsHandlebars - Advanced: How to Conditionally Include AnswersHandlebars - Advanced: How to Add Conditional FormattingOther Documents - Meetings Invites and Business CardsEvent InvitationsBusiness CardsDocument Formats for Integrations and DevelopersCSV DocumentsJSON DocumentsXML DocumentsDREL DocumentsEscape Special Characters and Line Breaks for Template-driven Text DocumentsForm Submission Formats: Standard vs. Labels as Node Names",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CreateManageDocuments.htm",
      "title": "PDF Table of Contents",
      "section": "Create and Manage Documents"
    }
  },
  {
    "content": "Documents Overview\n\nThis section includes the following content: Introduction to TrueContext DocumentsCreate and Manage DocumentsHow To: Ensure Information Questions are Always Shown on Documents",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DocumentsOverview.htm",
      "title": "PDF Table of Contents",
      "section": "Documents Overview"
    }
  },
  {
    "content": "How a Document works\n\nNote:You can’t attach documents to a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system.. This prevents duplication of the same document across multiple records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "How a Document works"
    }
  },
  {
    "content": "Multiple Documents Per Form\n\nForms can have multiple output documents, each with a different appearance and format. You can choose what to include in each document as well. This makes it possible to generate internal-use and customer-facing documents from a single form submission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Multiple Documents Per Form"
    }
  },
  {
    "content": "Share Documents Across Forms\n\nCreate and customize one document, then use it with multiple forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Share Documents Across Forms"
    }
  },
  {
    "content": "Multi-Language Documents\n\nAvailable as an add-on to the Advanced and Enterprise tiers: Essentials Advanced +Add-on Enterprise +Add-on A Multi-Language Document is an output document that's linked to a Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content.. You can generate this document in any language configured in the form, regardless of whether the language is set as Active for form completion. Use Multi-Language Documents to produce files for all your field users, systems, or customers in their preferred languages—for example, generate English and Spanish versions of the same submission for different audiences. The following document types support multiple languages: Standard PDF, Microsoft Word, and HTML XML and JSON Info:The topic Multi-Language Document Setup Options describes when",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Multi-Language Documents"
    }
  },
  {
    "content": "documents require translations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Multi-Language Documents"
    }
  },
  {
    "content": "Visual and Printed Documents\n\nPDF, Word, and HTML Documents: Choose data from your form to include in a PDF, Word, or HTML Document. The following example shows the content you can include in a Document. Tip:By default, we automatically create a table of contents in a PDF document that shows the page and section structure of the form. This provides a quick way for admins and field users to navigate through the content of the PDF file. Excel Document: Choose data from your form to include in a custom-formatted Excel document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Visual and Printed Documents"
    }
  },
  {
    "content": "Structured Data Formats\n\nXML: Use data from your form to create an XML file with a customizable structure. JSON: Use data from your form to create a JSON file. CSV: Choose the data to include in a customizable CSV file. Note:If an XML or JSON document is linked to a Multi-Language Form, the document displays in the languages configured when attached to a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. The document shows translated form content based on the form’s translation file. The key names and question Unique IDs don’t change. For your integrations, map to the question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Structured Data Formats"
    }
  },
  {
    "content": "projects, Data Destinations, and Documents., which doesn’t change, and not the question text.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Structured Data Formats"
    }
  },
  {
    "content": "Custom Document Layouts\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Our Standard layouts are designed to work with any form, and they support our Multi-Language Feature. Standard layouts offer a variety of formatting options that you can use to tailor your business document or report. When you need even more control over your document layout and structure, use a Custom Layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Custom Document Layouts"
    }
  },
  {
    "content": "Template-Driven Text Documents\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise DREL Documents: Use DREL to build a text file. Handlebars Documents: Use the Handlebars templating language to build a text file. FreeMarker Documents: Use the Apache FreeMarker™ templating language to build a text file.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Template-Driven Text Documents"
    }
  },
  {
    "content": "Meetings and Contacts\n\nThese document formats are commonly used in mail, calendar, and Customer Relationship Management (CRM) systems. Event Invitations: Use data from your form to create an invitation that can be sent by email. Business Cards: Use data from your form to create a virtual business card file that can be sent by email.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501328.html",
      "title": "Introduction to TrueContext Documents",
      "section": "Meetings and Contacts"
    }
  },
  {
    "content": "Create a Document\n\nHover over Forms & Integrations, and then select Documents. From the Documents page, select Create Document. Choose a document type. Fill out the Document Basics, as described below. There will be settings specific to your document type; review the documentation for specific document type for more details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Create a Document"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith\". Some Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Filename"
    }
  },
  {
    "content": "example, 20140920-1815562464 %r[id] - the submission's ID - for example, 1815562464 %t - the time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Filename"
    }
  },
  {
    "content": "Source Language (PDF, Microsoft Word, and HTML Documents)\n\nChoose the language for the Document Metadata labels and other system-generated content like page numbering. The following example shows the Document metadata labels translated to Spanish. When you choose a Source Language, the system automatically shows a list of fonts that work for that language. You can choose a different Font from the list, or change the Font Size. Info:If your team has the Multi-Language add-on, refer to the topic Multi-Language Document Setup Options for more details on the Source Language. This applies to documents that have a Standard (not Custom) layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Source Language (PDF, Microsoft Word, and HTML Documents)"
    }
  },
  {
    "content": "Document Time Zone Source\n\nChoose a document time zone source. This is the time zone for all dates and times in your document. Team Preference Setting: Will use the time zone chosen for the team Form Submission: Will use the time zone the form submission is made from (as chosen on the mobile device). Custom: Choose a time zone.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Document Time Zone Source"
    }
  },
  {
    "content": "Preview a Document\n\nView a preview of the document. Questions will be answered with placeholders. Hover over the Forms & Integrations tab and select Documents. Select the document from the list. Hover over the dropdown beside the document name and select Preview. The file will download to your computer. Open it to view it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Preview a Document"
    }
  },
  {
    "content": "Edit a Document\n\nGo to the desired document. Select Edit Document beside the document's name.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Edit a Document"
    }
  },
  {
    "content": "Copy a Document\n\nMake a new copy of the document in the current FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. or copy it to another FormSpace. Note:Any document that uses a custom template provided by the TrueContext Professional Services team is designed to work with a specific form. If you copy this document, it might not work with other forms. To Copy the Document: Hover over the Forms & Integrations tab and select Documents. Select the document from the list. From the drop-down menu beside the document name, select Copy as New. Select the Target FormSpace and document name. Target FormSpace: The FormSpace the new document will be created in. Target Document Name: The name of the new document. After completing the required fields, select Copy.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Copy a Document"
    }
  },
  {
    "content": "Copy Document configuration to an existing Document\n\nThe configuration of visual documents may be complex, and users may want to use the same configuration in another visual document, especially other visual document types (PDF to Word, Word to HTML, for example). Note:Any document that uses a custom template provided by the TrueContext Professional Services team is designed to work with a specific form. If you copy the configuration of this document, it might not work with other forms. To copy the Document configuration: Hover over Forms & Integrations, and then select Documents. Select the document from the list. From the drop-down menu beside the document name, select Copy to Existing. Select one or more PDF, Word, or HTML documents from the list. The document configuration will be copied to all documents in this list. After completing the required fields, select Copy Configuration. Note:If you have a Multi-Language Document, the system copies any additional languages set up in your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Copy Document configuration to an existing Document"
    }
  },
  {
    "content": "source document. If any of your target documents have languages already set up, the source document languages will overwrite them.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Copy Document configuration to an existing Document"
    }
  },
  {
    "content": "Move a Document\n\nNote: Documents that are “In Use” by a form cannot be moved. Any document that uses a custom template provided by the TrueContext Professional Services team is designed to work with a specific form. If you move this document, it might not work with other forms. To Move a Document: Hover over Forms & Integrations, and then select Documents. Select the document from the list. From the drop-down menu beside the document name, select Move. Required fields are highlighted with an asterisk. Target FormSpace: The FormSpace the document will move to. Target Document Name: Re-names the document when moved. After completing the required fields, select Move.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Move a Document"
    }
  },
  {
    "content": "Delete a Document\n\nNote:You cannot delete a document that is linked to any form version (current or previous). Warning:When you delete a document, the action is permanent and cannot be undone. To Delete a Document: Hover over Forms & Integrations, and then select Documents. Select the document from the list. From the drop-down menu beside the document name, select Delete. A pop-up window will appear to confirm your action. Select OK to delete.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Delete a Document"
    }
  },
  {
    "content": "Link a Document to a form\n\nTo link a Document to a form and make the Document available to download: Create or edit a form. From the Forms & Integrations menu, create or edit a Mobile App form. To create a new form: Forms & Integrations > Create New Form > Build a Mobile Form Enter a name and description, and then save the form. To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you want to edit. Select Settings > Documents. Select one or more documents. You can select from existing documents or add a new document: To select an existing document, select a Document from the list. To create a new Document, select Add a new document. Once you’ve created the Document, you can link it to the form. Info:The topic Documents describes why you might add a Document to a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Link a Document to a form"
    }
  },
  {
    "content": "Link a Document to a Data Destination\n\nData Destinations send data from submitted records to locations you set up. If you link a Document to a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., the system sends the Document with the data. Info:Some Data Destinations are not compatible with Documents. The section Data Destinations that require a Document describes destinations that are compatible with Documents. To link a Document to a Data Destination: Create or edit a form. From the Forms & Integrations menu, create or edit a Mobile App form. To create a new form: Forms & Integrations > Create New Form > Build a Mobile Form Enter a name and description, and then save the form. To edit a form: Forms & Integrations > List Forms > FormName > Edit Form where FormName is the form that you",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Link a Document to a Data Destination"
    }
  },
  {
    "content": "want to edit. Select Destinations. Is there a Data Destination linked to the form? If no, select ADD A DATA DESTINATION. Result: This opens a list of existing destinations. Choose a destination. You can also select Create Destination to create a new one. This adds the new destination to the list for you to select. If yes, go to step 4. In the Documents section, select an existing document. You can also select Add a New Document to create a new one to select. Info: You can also Link a New Document to an Old or Existing Form Version. Data Destinations that Require a Document The following table describes the Data Destinations that support or require a document. Requires a Document Can have a Document, but is not required Not compatible with Documents Microsoft SharePoint Server Amazon Glacier Amazon SNS Salesforce Apex REST Amazon S3 Google Sheets ShareFile Box Dispatch WebDAV (HTTP PUT or PATCH) Customer Feedback Microsoft SharePoint List Dropbox SMS Email Zendesk Ticket FTP/Secure FTP",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Link a Document to a Data Destination"
    }
  },
  {
    "content": "Google Drive HTTP HTTP File Upload Microsoft OneDrive Microsoft OneDrive for Business Microsoft SharePoint Document Library Salesforce (except Apex REST) ServiceNow Table Info:When you attach a Multi-Language Document to a Data Destination (Multi-Language add-on), you can select languages for the document files. The topic Steps to attach a Multi-Language Document to a Data Destination describes the language options in more detail. Note:You can’t attach documents to a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system.. This prevents duplication of the same document across multiple records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Link a Document to a Data Destination"
    }
  },
  {
    "content": "Data Destinations that Require a Document\n\nThe following table describes the Data Destinations that support or require a document. Requires a Document Can have a Document, but is not required Not compatible with Documents Microsoft SharePoint Server Amazon Glacier Amazon SNS Salesforce Apex REST Amazon S3 Google Sheets ShareFile Box Dispatch WebDAV (HTTP PUT or PATCH) Customer Feedback Microsoft SharePoint List Dropbox SMS Email Zendesk Ticket FTP/Secure FTP Google Drive HTTP HTTP File Upload Microsoft OneDrive Microsoft OneDrive for Business Microsoft SharePoint Document Library Salesforce (except Apex REST) ServiceNow Table",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Data Destinations that Require a Document"
    }
  },
  {
    "content": "Auto-Link a Document to a Data Destination\n\nYou can set up your system to automatically connect auto-linked Data Destinations to any new forms you create. You can also auto-link Documents to an auto-linked Data Destination. If you want most forms to send the same Documents to the same Data Destination, auto-linking saves extra steps. Note:Data Destinations only auto-link to newly created forms. To set up auto-linking for Documents and Data Destinations: Create or edit a Data Destination. From the Forms & Integrations menu, create or edit a Data Destination. To create a new Data Destination: Forms & Integrations > Data Destinations > Create Data Destination Select the type of Data Destination that you want to create. To edit a Data Destination: Forms & Integrations > Data Destinations > Data Destination Name > Edit DATA DESTINATION where Data Destination Name is the Data Destination that you want to edit. Select the Destination Basics tab. Select Auto-Link new forms.... New forms that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Auto-Link a Document to a Data Destination"
    }
  },
  {
    "content": "you create or import are automatically connected to this Data Destination. Result: When you select Auto-Link new forms..., the option to Auto-Link documents… displays. Tip:If you want to change the list of auto-linked Documents for a specific form, open the form and go to Destinations. In the Documents section, you can add and remove Documents connected to the Data Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Auto-Link a Document to a Data Destination"
    }
  },
  {
    "content": "Link a New Document to an Old or Existing Form Version\n\nWhen deploying a form, it's easy to forget to attach certain destinations or documents, resulting in a backlog of hundreds of form submissions that haven't gone to the correct place, or have the wrong document attached. Now, it's possible to attach the correct Data Destinations and documents to an existing form version, saving yourself time by automatically queuing the form submissions for re-processing. The process is simple: Navigate to the Form Versions page of your desired form. Select the applicable version of your form (the one with the form submissions made to it) from the listing. Select the Form Outputs tab, and then Edit Form Outputs. Attach the correct Destinations and/or Documents, and select Update. The original form submissions will join a queue for re-processing with the correct documents and destinations, ensuring a timely and stress-free experience.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501238CreateAndManageDocuments.html",
      "title": "Create and Manage Documents",
      "section": "Link a New Document to an Old or Existing Form Version"
    }
  },
  {
    "content": "About\n\nTypically, TrueContext users want generated documents (especially PDF, Word, HTML) to only include questions that have answers. This is to help make the document easier to scan for key information, or to hide parts of the form that were not relevant. Scenario: Sections without answers should be Hidden For example, you might have a form where a particular section only becomes relevant in certain scenarios, so Conditional Logic is used to make that section visible/not visible. With default configuration, TrueContext will automatically hide this section on documents because it has no answers. Scenario: Section without answers contains information to be displayed You might have instances where a section does not contain answers but does contain an information control (or series of information controls). Information controls - such as Information Label and Resource Image questions - provide key informational text and images but don't have answers. With default configuration,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "About"
    }
  },
  {
    "content": "TrueContext automatically hides this section. The following topics describe how to make information controls and sections without answers visible in your documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "About"
    }
  },
  {
    "content": "Controlling Visibility of the Information Control in Documents\n\nA number of settings determine the visibility of questions in documents. These settings span both forms and documents, but we recommend checking the settings in this order due to the way they interact.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "Controlling Visibility of the Information Control in Documents"
    }
  },
  {
    "content": "\"Hidden on reports\"\n\nThis is a setting found in the General tab of the information control properties in the Form Builder The Form Builder is the tool that form designers use to create forms. In the Form Builder, accessed from the TrueContext Web Portal, form designers can add and edit pages, sections, and questions, as well as attach data destinations and configure the form's settings.. Ensure this setting is OFF if the question should ever appear in documents (If ON, this question will NEVER show in documents).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "\"Hidden on reports\""
    }
  },
  {
    "content": "\"Hide Unanswered Pages/Sections/Questions\"\n\nThese are a series of settings in PDF, Word, and HTML documents. Hide unanswered pages: Hide any page that doesn't have any sections that contain questions with answers. Hide unanswered sections: Hide any section that doesn't have any questions that have answers. Hide unanswered questions: Hide any question that doesn't have an answer. This setting does NOT hide information controls. If this setting is ON, information controls ARE still shown, if they're in a section that will be shown.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "\"Hide Unanswered Pages/Sections/Questions\""
    }
  },
  {
    "content": "Document visibility \"always show\"\n\nThis is a setting found in the Properties tab of the information control settings in the Form Builder: If this setting is OFF, the document will only use the \"hide unanswered...\" rules to determine if the question will be included in the document. If OFF, the question will be shown only if its parent section is going to be otherwise shown. If ON, the question and its parent section will always be shown. More examples of expected behavior when this setting is OFF: If you have a section containing nothing except an information control, it will never show up if \"hide unanswered sections\" is checked. If you have a section with an information control and an unanswered question, it will not show if \"hide unanswered sections\" is checked. If you have a section with an information control and an answered question, it WILL show if \"hide unanswered questions\" is checked. If this setting is ON, the document will ignore the \"hide unanswered sections\" rule for the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "Document visibility \"always show\""
    }
  },
  {
    "content": "section that contains this question. In all of the cases described above, the section (and this question) will be shown).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "Document visibility \"always show\""
    }
  },
  {
    "content": "Example\n\nBelow is a sample form we'll use to illustrate the effect of these settings. The information questions are highlighted in orange boxes in the screenshot. It has 5 sections: Section 1: A section with just an answered question Section 2: A section with just an unanswered question Section 3: A section with just an information question Section 4: A section with an information question, AND an answered question Section 5: A section with an information question, AND an unanswered question",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "Example"
    }
  },
  {
    "content": "Scenario: Document visibility \"always show\" DISABLED\n\nIn the example document generated below... All of the \"hide unanswered\" options are selected on the document. Document visibility \"always show\" is DISABLED on all the information questions. Notice that: Any sections that have unanswered sections are hidden. If the section has any answers, the information control in it IS visible.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "Scenario: Document visibility \"always show\" DISABLED"
    }
  },
  {
    "content": "Scenario: Document visibility \"always show\" ENABLED\n\nIn this next example... This is the same form, with the same sections and questions. The form submission has exactly the same data/answers. All of the \"hide unanswered\" options are still selected on the document. But document visibility \"always show\" is ENABLED on all the information controls. Notice that two extra sections are visible: The section with just an information control The section with an information control and an unanswered question This is because the \"always show\" setting causes the section to treat the information control like it has an answer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360039607231.html",
      "title": "How To: Ensure Information Questions are Always Shown on Documents",
      "section": "Scenario: Document visibility \"always show\" ENABLED"
    }
  },
  {
    "content": "Visual Documents - PDF, Word, HTML, and Excel\n\nThis section includes the following content: PDF, Word, and HTML DocumentsStandard layout options for PDF/Word/HTML documentsCustom PDF, Word, and HTML Document LayoutsCustom Template Version HistorySupported Fonts in PDF, Word, and HTML DocumentsExcel Document",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/VisualDocumentsPDFWordHTMLExcel.htm",
      "title": "Visual Documents - PDF, Word, HTML, and Excel",
      "section": "Visual Documents - PDF, Word, HTML, and Excel"
    }
  },
  {
    "content": "About\n\nPDF, Microsoft Word, and HTML documents can be generated when a form is submitted, and sent through data destinations. These document types lay out data from a form submission in a formatted, human-readable format. These types of documents are typically sent to customers, the office, or to external services for storage after a form submission has been completed. Since multiple documents can be attached to the same form, it is possible to create separate customer-facing and internal documents with a single form submission. Note:These settings are for configuring PDF, Word, and HTML documents. Read about generating custom Excel files. Build other custom document types with DREL, Handlebars, or FreeMarker.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "About"
    }
  },
  {
    "content": "Setup\n\nCreate the document following the instructions here. After choosing a document type, you will see 3 tabs: Document Basics Question Filtering Formatting",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Setup"
    }
  },
  {
    "content": "Document Basics\n\nGive the document a unique name, and optionally provide a description. Keep the document identifier that was added based on the name, or type in a different identifier. Define the document filename. This name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Choose the Source Language. This is the language for the Document Metadata labels and other system-generated content such as page numbering. Info:If your team has the Multi-Language add-on, refer to the topic Multi-Language Document Setup Options for more details on the Source Language. This applies to documents that have a Standard (not Custom) layout. Choose a Font. The system automatically shows you fonts",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Document Basics"
    }
  },
  {
    "content": "that work for your Source Language. Choose a Font Size. This applies to the size of page and section headers, and questions and answers. Text scales according to the font size. For example, page headers are always larger than section headers. Choose the Document Time Zone Source. This controls which timezone any date/time answers will be shown in.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Document Basics"
    }
  },
  {
    "content": "Question Filtering\n\nThis tab controls which questions (and their answers) will be included in the document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Question Filtering"
    }
  },
  {
    "content": "Hide unanswered Pages/Sections/Questions\n\nPages, sections, and questions with no answers will be hidden in the document. Use this to keep your documents short and concise. Note: If questions are made \"Hidden on Device\" in the form builder, they will never show in the form, no matter what you choose here If a Page or Section is made \"ignored\" by Conditional Logic, it will be counted as \"unanswered.\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Hide unanswered Pages/Sections/Questions"
    }
  },
  {
    "content": "Questions/Sections/Pages to Include\n\nOptionally choose which pages, sections, or questions to include in the document. For example, you may want to create a customer-facing document that omits some answers (such as hourly rates) while including this information on documents that are intended for internal use. Options Include all pages/sections/questions: All questions will be included in the document. Include selected pages/sections/questions, hide all others: Only the selected fields will be included in the document. Hide selected pages/sections/questions, include all others: The selected fields will be hidden in the document. All other fields will be included. Be sure to consider the combination of sections/questions you are choosing to include or not include. For example, if you specify to NOT show a section, the questions inside it will be hidden no matter what, even if they are in the \"always include\" list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Questions/Sections/Pages to Include"
    }
  },
  {
    "content": "Formatting\n\nThere are two main options for customizing the appearance of PDF, Word, and HTML documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Formatting"
    }
  },
  {
    "content": "Standard Layout\n\nThe standard layout option will accurately lay out data from submitted forms in a linear, easy-to-read format.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Standard Layout"
    }
  },
  {
    "content": "Some configurations include:\n\nOmit certain pages, sections, or questions Choose the color and style of various headings in the document Define table layouts for repeatable sections Read more about these configuration options here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Some configurations include:"
    }
  },
  {
    "content": "Ideal for:\n\nThe standard layout meets the design needs of many customers. It is especially useful when you have a lot of forms, because a single, standard layout document can be used to render data from any form. If you update the form, the document will automatically work with your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Ideal for:"
    }
  },
  {
    "content": "Custom Layout\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Our Standard layouts are designed to work with any form, and they support our Multi-Language Feature. Standard layouts offer a variety of formatting options that you can use to tailor your business document or report. When you need even more control over your document layout and structure, use a Custom Layout. Tip:A custom layout takes more work to build and maintain than a standard layout, but provides you with more formatting options. Use custom layouts as needed and test them using actual data from submitted records. Configuration options include: Use HTML to set up the structure of your document. Use CSS to style your document. Note:Not all CSS properties are supported by the document generator. Be sure to preview and test your documents. Use conditional formatting and loops. Info:The topic Custom PDF, Word, and HTML Document Layouts provides more details about how to set up a custom",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Custom Layout"
    }
  },
  {
    "content": "layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Custom Layout"
    }
  },
  {
    "content": "Ideal for:\n\nCustom layouts are intended for documents linked to a single form or to a set of related forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345283PDFWordHTMLDocuments.html",
      "title": "PDF, Word, and HTML Documents",
      "section": "Ideal for:"
    }
  },
  {
    "content": "About\n\nPDF, Microsoft Word, and HTML documents are the most commonly used document types. Set up formatting guidelines to control the document's page size, page breaks, font color, the arrangement of images, etc. Info: The topic Creating and Managing Documents describes how to customize document names.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "About"
    }
  },
  {
    "content": "Formatting Options\n\nThese options control the appearance of the document. Shown in the image below are the main parts of the documents that can be controlled.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Formatting Options"
    }
  },
  {
    "content": "Global Settings\n\nThese settings apply to the entire document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Global Settings"
    }
  },
  {
    "content": "Paper\n\nPaper Size: Choose the rendered page size -- \"Letter\", \"Legal\", or \"A4\". Paper Orientation: Choose between Portrait or Landscape.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Paper"
    }
  },
  {
    "content": "Page Breaks\n\nChoose when the document will break to a new page. This is helpful for organizing the document for its viewers, although settings other than \"Auto\" will increase the length of the document. Auto If chosen, the document will break to a new page automatically, whenever there is no longer room to print the next lines of data. Choose this option for the most efficient use of space. Before all form pages or sections If chosen, a new dropdown will appear below. Break to a new page: Choose whether the document will break to a new page before showing the next form page, or if should break to a new page before each new form section. Before specific form pages or sections This option allows you to customize when the document breaks to a new page. This is useful if certain information from your form is required to all show on the same page, like a summary. Break to a new page: Choose whether the document will break to a new page before showing specific form pages, or form sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Page Breaks"
    }
  },
  {
    "content": "Page or Section Unique IDs: Enter a comma-separated list of page Unique IDs (or section Unique IDs, if you chose to break before custom form sections). Find more information on Unique IDs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Page Breaks"
    }
  },
  {
    "content": "Document Layout\n\nThese settings control which of the following areas of the document are visible, as well as the data they contain and their appearance. Document Header Document Title Submission Metadata Document Footer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Document Layout"
    }
  },
  {
    "content": "Document Header\n\nOptions Show Document Header: Controls if the document has a header or not. If turned off, none of the below settings are available. Show header on first page: Controls if header text appears on the first page. If cleared, the header text appears only on the second page and subsequent pages, if there are any. Left Header Text: Use any combination of DREL and static text to specify a single line of text to be shown on the left of the header. Leave this empty if you do not want any text to show here. Right Header Text: Use any combination of DREL and static text to specify a single line of text to be shown on the right of the header. Leave this empty if you do not want any text to show here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Document Header"
    }
  },
  {
    "content": "Document Title\n\nThe document title typically contains the logo, and formatted information like the form name, a work order number, or the contact information for your business. The Document Title shows in the document below the header (if enabled), and above Submission Metadata (if enabled). The Document Title will only appear on the first page of the document. Options Show Document Title: Controls if the document has a title or not. If turned off, none of the below settings are available. Layout: Controls whether the logo should be on the left and the title on the right, or vice versa. Show Logo: If On, the document will include the logo configured in your team-level Custom Branding. If you have a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.-level logo, it will",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Document Title"
    }
  },
  {
    "content": "use that instead. If Off, no logo will be shown. Title: Use any combination of DREL and static text to specify a single line of text to be shown in larger characters above the \"Additional Information\". Leave empty for no title. Additional Information: Use the HTML editor to format any text you wish to include here. DREL, static text, images, and tables are all supported. Common pieces of information to include are Work Order or PO numbers, or company contact information. Example:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Document Title"
    }
  },
  {
    "content": "Submission Metadata\n\nThis section includes information about the form submission. Options Show Submission Metadata: Controls if the document has a metadata section or not. If turned off, none of the below settings are available. Background Color: Choose a background color for this block. The only available text color is black, so ensure to choose a color light enough that your text will show on it. Excluded/Included Metadata: These are the metadata options available to show in this block. Use the arrow buttons to move wanted options into the \"Included\" area. Reference Number: The form submission's unique identifier in the TrueContext system. The first half shows the submission date, the second half shows the submission ID. Submission ID: The second half of the reference number (see above) -- this is the \"unique\" part. Submission Name: The Data Record Name of the form submission. Form Name: The name of the form the submission was made for. Form Version: The version of the above form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Submission Metadata"
    }
  },
  {
    "content": "that the submission was made against. FormSpace Name: The name of the FormSpace the form is in. Submitter Name: The Name and Username of the user who submitted the form. Location: The Geolocation from where the user was when they submitted the form. Address: The address extracted from the location (see above). Submission Date: The date and time of submission, based on the Document Time Zone Source you select on the Document Basics tab. Local Submission Date: The date and time of submission based on the time zone of the submitter’s device. Server Receive Date: The date and time the server received the submission. Device: The type of mobile device the form was submitted from. Device Version: The software/OS version on the mobile device the form was submitted from. Mobile App Version: The TrueContext Mobile App version used to submit the form. Form Submission Status: The current status of the record as it moves through a workflow. Note:The new Workflow Status The workflow status describes",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Submission Metadata"
    }
  },
  {
    "content": "how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. replaces the old Form Submission Status. Make sure that you change to the new Workflow Status by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. Workflow Status—The status of a dispatched or submitted record within your company’s workflow. The Workflow Status always lists a workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\"., and might include a data flow state A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\". or completion state for additional context. This column is included by default.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Submission Metadata"
    }
  },
  {
    "content": "Info:The topic Form Submission Workflow Status and States describes workflow states and data flow states in more detail. The following options are specific to documents attached to forms set up with Approval Workflows (Enterprise tier only). Approver: The name and username of the user who reviewed and approved the record. Approval Date: The date and time that the record was approved, in the Document Time Zone. Approval Notes: Notes that the approver added when approving the record. Note: If you attach the document to a form that doesn't require approval, the fields will be blank.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Submission Metadata"
    }
  },
  {
    "content": "Document Footer\n\nShow Document Footer: Controls if the document has a footer or not. If turned off, none of the below settings are available. Show footer on first page: Controls if footer text appears on the first page. If cleared, the footer text appears only on the second page and subsequent pages, if there are any. Footer Text: Use any combination of DREL and static text to specify a single line of text to be shown on the left of the footer. Leave this empty if you do not want any text to show here. Page Number: If the footer is enabled, a document page count will appear on the right of the footer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Document Footer"
    }
  },
  {
    "content": "Appearance\n\nThis section controls the visual appearance of core parts of a form (pages, sections, and questions) in the document. This is a good opportunity to change colors to match your company's custom branding. Control the appearance of: Page Headings Section Headings Repeat Entry Headings Content (answers and questions) Table Layouts for Repeatable Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Appearance"
    }
  },
  {
    "content": "Page Headings\n\nThis controls how the name of the form's pages will be shown in the document. Solid Backing/Underline: Controls if the page heading will have a solid colored background behind it, or if it will have a colored underline instead. All Caps: Will show the page name in all caps. Bold: Will show the page name in a bold font. Backing Color/Underline Color: Choose either the solid background color behind the page name, or the underline color. Font Color: Only available if you have a solid backing. We recommend black, white, or gray. Ensure there will be enough contrast with the backing color, so that the text will be easily readable.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Page Headings"
    }
  },
  {
    "content": "Section Headings\n\nThis controls how the name of the form's sections will be shown in the document. Solid Backing/Underline: Controls if the section heading will have a solid colored background behind it, or if it will have a colored underline instead. All Caps: Will show the section name in all caps. Bold: Will show the section name in a bold font. Backing Color/Underline Color: Choose either the solid background color behind the section name, or the underline color. Font Color: Only available if you have a solid backing. We recommend black, white, or gray. Ensure there will be enough contrast with the backing color, so that the text will be easily readable.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Section Headings"
    }
  },
  {
    "content": "Repeat Entry Headings\n\nThis controls how the title for each entry into a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. will be displayed. Solid Backing/Underline: Controls if the heading will have a solid colored background behind it, or if it will have a colored underline instead. All Caps: Will show the heading in all caps. Bold: Will show the heading in a bold font. Backing Color/Underline Color: Choose either the solid background color behind the heading, or the underline color. Font Color: Only available if you have a solid backing. We recommend black, white, or gray. Ensure there will be enough contrast with the backing color, so that the text will be easily readable.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Repeat Entry Headings"
    }
  },
  {
    "content": "Content Layout\n\nThis controls how the questions and answers in your form will be displayed in the document. Question Column Width/Answer Column Width: Controls how much of the page width will be given to the question text vs. the answer text. Text Formatting: Make all question text bold, all answer text bold, or none of the text bold. Section Overrides: This allows you to specify different answer/column widths for different sections of your form. For example, you may have one section with very long questions, and very short text. For this section, specify the above settings, then list the Unique IDs of each section you would like these settings to apply to. Boxed/Non-Boxed Layout: Controls if there is a line/box around the questions and answers or not. Generally, if your section headings do not have a solid backing, a non-boxed layout looks better.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Content Layout"
    }
  },
  {
    "content": "Table Layouts\n\nThis section allows you to lay out specific repeatable sections in your form as a table. Select Add a Table Layout. Enter the Unique ID for the Repeatable Section you want to lay out as a table. Add columns to display. Enter whatever you'd like as the Header, and enter a single Unique ID per column. This is the question whose answers will be shown in the column. Apply additional formatting as desired. If your table layout is not working on your produced documents, double check that your Unique IDs are correct for both the section and the questions. See the picture below as a reference.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Table Layouts"
    }
  },
  {
    "content": "Answer Format\n\nThis section controls how the document displays different question types.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Answer Format"
    }
  },
  {
    "content": "Button Group\n\nYou can use these options to customize how answers to Button Group questions display in the document. Use display colors for answers: (Default) Button Group answers display in the same color as they do in the Mobile App. This helps you find an answer if your team uses Button Group colors to represent something specific, such as Pass/Fail inspection statuses. Show value: The document shows the server value of the submitted answers. This may be different from the display text, depending on how you configure the answer options in the Form Builder. Show display text: (Default) The document shows the display text of the submitted answers. This is the same text the technicians see in the Mobile App. This may be different from the server value, depending on how you configure the answer options in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Button Group"
    }
  },
  {
    "content": "Dropdown, Radio Button, and Multiselect\n\nUse these options to change how Dropdown, Radio Button, and Multiselect answers display in the document. Show value: The document shows the server value of the submitted answers. This may be different from the display text, depending on how you configure the answer options in the Form Builder. Show display text: (Default) The document shows the display text of the submitted answers. This is the same text that the technicians see in the Mobile App. This may be different from the server value, depending on how you configure the answer options in the Form Builder.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Dropdown, Radio Button, and Multiselect"
    }
  },
  {
    "content": "Attachments\n\nShow photos, sketches and signatures in the document: If ON, these will be shown as images embedded in the document. Show attachment filenames in the document: Print the filenames of attachments in the document, below the images. This is helpful if the attachments are also included as separate files when sent through a data destination, so they can be easily identified. Image/Signature Max Width: Defining this limits the size of an image. Image Compression: Adding compression reduces the size of the document. 0.9 compression is low compression, and 0.1 is highest compression. Most documents should use 0.9 compression, which applies a small amount of compression and doesn't noticeably alter image quality. If you are encountering problems in generating documents, try increasing compression by lowering the number. If you are emailing or sending the images as separate attachments, the attachment will still be full-size; this setting only compresses images within the document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Attachments"
    }
  },
  {
    "content": "Show barcode images: Will render any scanned barcode as an image, instead of just listing the barcode value. Include attachment hyperlinks to the Web Portal: Any attachments can be selected to be viewed in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. This will only work if the person viewing them has a TrueContext account with permissions to view the form submission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Attachments"
    }
  },
  {
    "content": "Exceptions\n\nExceptions are used to categorize problems identified during the course of a field technician's work as the user completes a form. Show answer exceptions in the document: If set to ON, answer exceptions will be shown in the document. Show exception background color in the document: Enabling this will allow your selected exception colors to show in the document, adding color-coding in the same way it does for field technicians' work. Show exception custom messages in the document: Enabling this shows any error messages you have configured and embeds them in the document if exceptions have been triggered.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Exceptions"
    }
  },
  {
    "content": "Additional Comments\n\nForm designers can use Additional Comments to ask for more details about an answer. If the answer meets specific criteria, the form prompts the field user for additional information. You can choose to hide Additional Comments in your documents. This is useful when you use Additional Comments for internal-only information and you want to exclude them from customer-facing reports. Do you want your document to include Additional Comments? If yes, keep the Show additional comments in the document toggle switched on. If no, switch off the Show additional comments in the document toggle. Info:The topic Additional Comments on Questions describes in more detail how additional comments work.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Additional Comments"
    }
  },
  {
    "content": "Date/Time Formats\n\nThis controls how answers that include dates and/or times will be shown in the document. Style Format: Choose Short, Medium, Long or Full depending on how much detail should be shown. Short: Date: 11/27/13 Time: 6:50 PM Medium: Date: Nov 27, 2013 Time: 6:50:40 PM Long: Date: November 27, 2013 Time: 6:50:40 PM PST Full: Date: Wednesday, November 27, 2013 Time: 6:50:40 PM PST Custom Format: Create custom date or time formatting using the following syntax. Date Formatting: yyyy (Year) MM (Month) dd (Day) Time Formatting: hh (hour[12 hour syntax]) a (AM/PM Marker) HH (Hour[24 hour syntax] mm (Minute) ss (Second) Timezone: z (up to 4 z's) (Time Zone) Z (up to 3 Z's) (Time Zone as Offset/City) Elements of this syntax can be combined. For example, \"hh:mm a z\" could output the time as \"6:50 PM PST.\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115003144123.html",
      "title": "Standard layout options for PDF/Word/HTML documents",
      "section": "Date/Time Formats"
    }
  },
  {
    "content": "How custom layouts work\n\nCustom layouts use a combination of HTML and CSS to generate the document based on a DREL, Handlebars, or FreeMarker template.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "How custom layouts work"
    }
  },
  {
    "content": "When to use a custom layout\n\nCustom layouts are intended for documents linked to a single form or to a set of related forms. Tip:A custom layout takes more work to build and maintain than a standard layout, but provides you with more formatting options. Use custom layouts as needed and test them using actual data from submitted records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "When to use a custom layout"
    }
  },
  {
    "content": "Examples of custom layouts\n\nThe following examples show PDF documents that were set up with custom layouts.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Examples of custom layouts"
    }
  },
  {
    "content": "Prerequisites\n\nYou must know how to use: HTML and CSS DREL, Handlebars, or FreeMarker",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Set up the custom layout\n\nNavigate to your document, and then select Edit Document. On the Formatting tab, in the Body Layout section, select Custom. Result: The system displays the custom layout options. In the Template Options section, select a Template Type. The following table can help you decide which template to use. Things to consider DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. FreeMarker Handlebars Programming skills None required Basic scripting and programming Basic scripting and programming Tip:Our Handlebars implementation is a subset of the Handlebars framework. When you use the TrueContext version of the Handlebars templating engine, you build your template using JavaScript syntax. Learning curve Easy to Medium Medium to Hard Easy to Medium Code readability Medium Medium High (easiest to read) Best for “Flat” forms that don’t have Repeatable",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Set up the custom layout"
    }
  },
  {
    "content": "Sections or images to display in the output Complex logic, formatting, and mathematical operations Basic logic and formatting Outputs PDF, Word, HTML, text PDF, Word, HTML, text PDF, Word, HTML, text Repeatable Sections (“loops”) Limited support Full support Full support Conditional logic in the template Not supported Advanced Basic to Intermediate Formatting and styles using CSS Limited Extensive Moderate Resources for help and troubleshooting TrueContext documentation and TrueContext Community Apache documentation, large user community, and TrueContext documentation TrueContext documentation and large user community Did you select DREL as the Template Type? If yes, go to step 5. If no, select a Data Node Format. Choose one of the following options: Standard—This option provides the form elements in an array that you can loop over. Use this option when you want to apply generic logic to all elements of your form. All Labels as Node Names—Uses the page, section, and answer unique IDs",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Set up the custom layout"
    }
  },
  {
    "content": "(labels) instead of the generic names. Tip:This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. The examples in this topic all use this setting. Flat Answer List—Changes the hierarchical tree structure into a flat data structure (list). Use this option when you want to loop over answers and don’t need to reference the full form structure (pages, sections, or Repeatable Sections). Select Launch Document Editor. Result: The Custom Document Editor opens in a new window. On the Reference Data tab, select a form and a record (form submission). Result: The system populates the tab with the information you need to map answers to the document structure. DREL example The reference data shows the names of pages and sections and a list of DREL expressions used to reference data in those sections. You can copy and paste (or drag and drop) the DREL",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Set up the custom layout"
    }
  },
  {
    "content": "into your document. FreeMarker and Handlebars example The reference data shows the structure of the record (form submission). Use this information to map the pages, sections, and questions to the structure of your document. Set up the structure and style of your document. The reference data helps you map the answers to the HTML elements. For Handlebars and FreeMarker, set up the structure on the HTML tab and the style on the CSS tab. Info:We support a subset of Handlebars functionality as described in the various Handlebars topics. The Insert HTML list helps you quickly add HTML for commonly-used formats. On the CSS tab, you can choose an out-of-the-box theme or add your own styles. Note:Not all CSS properties are supported by the document generator. Be sure to preview and test your documents as described in step 8. For DREL, a WYSIWYG What You See is What You Get. The input looks similar to the output. editor helps you to structure and style the document content. You can drag and drop",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Set up the custom layout"
    }
  },
  {
    "content": "DREL expressions and text from the Reference Data tab into the editor. Preview your document. Note:We strongly recommend that you:Preview your document in the format you intend to deploy to production. Some formatting, such as page breaks, won’t show in HTML, but will show on a PDF.Use different data sets (submissions) to thoroughly test the output. Info:When you save a document, the system creates a new version of the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Set up the custom layout"
    }
  },
  {
    "content": "Related topics\n\nPrint out All Questions/Answers in a Regular Section Print all Repeatable Section Entries in a Table Conditionally Include Answers Add Conditional Formatting",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000345463.html",
      "title": "Custom PDF, Word, and HTML Document Layouts",
      "section": "Related topics"
    }
  },
  {
    "content": "Supported document types\n\nThe TrueContext system stores template versions for the following document types: FreeMarker Handlebars DREL Excel PDF Word HTML",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Templates/TemplateVersionHistory.htm",
      "title": "Custom Template Version History",
      "section": "Supported document types"
    }
  },
  {
    "content": "Download and use a stored template\n\nGo to the Document and hover over the arrow beside the document name. Select Version History. Result: The Version History page displays all the stored template versions. Tip:Each version of a PDF, Word, and HTML custom layout has both HTML and CSS files. Identify the template files you want to download. Hover over the corresponding row, and then select the Download icon from the right side of the table. Result: The file is saved to your default download location. To use the downloaded template file, follow the link to go Up To your document, and then select Edit Document. How you add the contents of the template file depends on the type of document, as described in the following list: FreeMarker and Excel Steps Example On the Configuration tab, select Choose File. Select the FreeMarker or Excel file you want to upload. Handlebars and DREL Steps Example On the Configuration tab, copy and paste the template contents into the Handlebars or DREL Template",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Templates/TemplateVersionHistory.htm",
      "title": "Custom Template Version History",
      "section": "Download and use a stored template"
    }
  },
  {
    "content": "field. PDF or Word or HTML Steps Example On the Formatting tab, select Launch Document Editor. For FreeMarker or Handlebars: Paste the template contents (.css or .txt) into the corresponding CSS or HTML tab. Select Apply Changes. For DREL: Go to Tools > Source Code. Paste the template contents into the Source Code window. Select Apply Changes. Select Update to save your changes. Result: The system creates and stores a new version of the template file.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Templates/TemplateVersionHistory.htm",
      "title": "Custom Template Version History",
      "section": "Download and use a stored template"
    }
  },
  {
    "content": "Considerations when choosing a Document font\n\nChoose a font that works for all of the following: The Form Submission Document Language that you set at the team level. This setting controls the language used for the Document metadata. The language you used for the Document header, title, additional info, table column headers, and footer. The language that Mobile App users type their answers in when they complete the form. The Document displays these answers in the language that the mobile user entered them. Tip:When entering text, a user can type answers in any language that their device keyboard supports. This topic includes two tables that can help you choose a font. Check the languages that each font supports. Check the fonts that you can use for a specific language.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "Considerations when choosing a Document font"
    }
  },
  {
    "content": "List of supported fonts\n\nThe following table lists the fonts that TrueContext supports for Documents. It also lists the languages that each font supports. Font Supported languages Arial Arabic Czech Danish Dutch English Finnish French German Greek Hebrew Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian Vietnamese Arial Unicode MS Arabic Czech Danish Dutch English Finnish French German Greek Hebrew Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian Vietnamese Comic Sans Czech Danish Dutch English Finnish French German Greek Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian Cordelia New Danish Dutch English Finnish French German Italian Norwegian Portuguese Spanish Swedish Thai Lucida Unicode Czech Danish Dutch English Finnish French German Greek Hebrew Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian Malgun Gothic Danish Dutch English",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts"
    }
  },
  {
    "content": "Finnish French German Italian Korean Norwegian Portuguese Russian Spanish Swedish Ming Liu Chinese (China) Chinese (Hong Kong SAR China) Danish Dutch English Finnish French German Italian Japanese Norwegian Portuguese Spanish Swedish MS PGothic Czech Danish Dutch English Finnish French German Italian Japanese Norwegian Polish Portuguese Spanish Swedish Noto Sans Czech Danish Dutch English Finnish French German Greek Hindi Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Turkish Ukrainian Vietnamese Noto Sans Arabic Arabic Noto Sans Hebrew Hebrew Noto Sans JP Japanese Noto Sans Thai Thai Noto Serif Czech Danish Dutch English Finnish French German Greek Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Turkish Ukrainian Vietnamese Noto Serif Hebrew Hebrew Noto Serif Thai Thai Open Sans Czech Danish Dutch English Finnish French German Greek Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts"
    }
  },
  {
    "content": "Vietnamese Times Arabic Czech Danish Dutch English Finnish French German Greek Hebrew Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian Vietnamese Verdana Czech Danish Dutch English Finnish French German Greek Italian Norwegian Polish Portuguese Romanian Russian Serbian Spanish Swedish Ukrainian Vietnamese",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts"
    }
  },
  {
    "content": "List of supported fonts by language\n\nThe following table lists the languages that TrueContext supports for Documents. It also lists the fonts you can use for each language. Language Fonts that support the language Arabic Arial Arial Unicode MS Noto Sans Arabic Times Chinese (China) Ming Liu Chinese (Hong Kong SAR China) Ming Liu Czech Arial Arial Unicode MS Comic Sans Lucida Unicode MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Danish Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Dutch Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana English Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Finnish Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts by language"
    }
  },
  {
    "content": "Noto Serif Open Sans Times Verdana French Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana German Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Greek Arial Arial Unicode MS Comic Sans Lucida Unicode Noto Sans Noto Serif Open Sans Times Verdana Hebrew Arial Arial Unicode MS Lucida Unicode Noto Sans Hebrew Noto Serif Hebrew Times Hindi Noto Sans Italian Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Japanese Ming Liu MS PGothic Noto Sans JP Korean Malgun Gothic Norwegian Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Polish Arial Arial Unicode MS Comic Sans Lucida Unicode MS PGothic Noto Sans Noto Serif Open Sans Times",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts by language"
    }
  },
  {
    "content": "Verdana Portuguese Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Romanian Arial Arial Unicode MS Comic Sans Lucida Unicode Noto Sans Noto Serif Open Sans Times Verdana Russian Arial Arial Unicode MS Comic Sans Lucida Unicode Malgun Gothic Noto Sans Noto Serif Open Sans Times Verdana Serbian Arial Arial Unicode MS Comic Sans Lucida Unicode Noto Sans Noto Serif Open Sans Times Verdana Spanish Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Swedish Arial Arial Unicode MS Comic Sans Cordelia New Lucida Unicode Malgun Gothic Ming Liu MS PGothic Noto Sans Noto Serif Open Sans Times Verdana Thai Cordelia New Noto Sans Thai Noto Serif Thai Turkish Noto Sans Noto Serif Ukrainian Arial Arial Unicode MS Comic Sans Lucida Unicode Noto Sans Noto Serif Open Sans Times Verdana Vietnamese Arial Arial Unicode MS Noto",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts by language"
    }
  },
  {
    "content": "Sans Noto Serif Open Sans Times Verdana",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/LanguageSupport/SupportedFontsInDocuments.htm",
      "title": "Supported Fonts in PDF, Word, and HTML Documents",
      "section": "List of supported fonts by language"
    }
  },
  {
    "content": "About\n\nTrueContext allows you to design and build a custom document entirely in Excel. When a form submission is made, it will generate an Excel file with your desired formatting and send it to the people and places configured with data destinations. By adding simple references to your form questions right in the Excel file, the answers to those questions can appear exactly where you need them to. All conditional formatting will continue to work within the Excel file, allowing you to continue to manipulate data in a familiar way. Excel documents allow you to: Easily highlight your own brand. Build familiarity—Collect data in the Mobile App, but display the data in ways your stakeholders are familiar with. Meet industry or government regulations for document formatting.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "About"
    }
  },
  {
    "content": "Sample Outputs\n\nThe following examples show a simple invoice and a vehicle inspection report that were generated using Excel output documents. Tip:Need to generate custom documents that can't be edited by your customers or employees? TrueContext can write into “protected” sheets in Excel.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Sample Outputs"
    }
  },
  {
    "content": "How it Works\n\nWhen you set up the Excel Custom Template in TrueContext and fill it with DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. references, you are creating the pattern for future documents. The DREL references will pull information from form submissions based on question Unique IDs, and put that information into a document based on your template. Set up the Excel document with DREL references to any questions that produce text as an answer. Map any images into the document using the TrueContext web portal. Fill out a form in TrueContext and submit it. TrueContext will create a document based on the template and your form submission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "How it Works"
    }
  },
  {
    "content": "Document Basics\n\nGive the document a unique name, and optionally provide a description. Keep the document identifier that was added based on the name, or type in a different identifier. Define the document filename. This name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Choose the Document Time Zone Source. This controls which timezone any date/time answers will be shown in.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Document Basics"
    }
  },
  {
    "content": "Mapping Text-Based Answers\n\nOnce you have your custom document set up in Excel, it's time to map your form questions to the appropriate locations in your sheet. TrueContext uses Data Reference Expression Language (DREL) to take answers from form submissions and insert them into the desired cells in the Excel file. Note:Mapping with DREL only supports answers with text (freetext, numbers, etc.) as the answer. Read below on how to map images. For more information on DREL, please read: Data Reference Expression Language DREL for Repeatable Sections An example of a simple Invoice form built in Excel, and with DREL added is shown below: Using DREL References in individual cells is the most common use, as shown above: any question that shows up in a form submission can be put into a cell with the correct DREL string. The most common DREL string in an Excel document is:%a[unique ID]This string will give the form submission's answer to that question. For example, if we plan to put the answer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Text-Based Answers"
    }
  },
  {
    "content": "to Customer Name in cell B8, we select B8 in Excel and enter %a[Customer Name]. Cells may have multiple DREL strings. For example, while your form may have separate questions for City, State, and Zip/Postal Code, you can set up a single cell using a string like:%a[City], %a[State] %a[ZipCode]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Text-Based Answers"
    }
  },
  {
    "content": "Manually Mapping Cells (for Cells with Validation or Dropdowns)\n\nSome cells in Excel cannot contain DREL, such as dropdowns or cells containing validation. Even though the answer that will be mapped may pass that validation, the DREL expression will not, which will prevent you from saving your template. If you wish to push data from your form submission to these cells, you can manually map them in our Manual Cells section of the document configuration: Cell Reference: This uses standard Excel cell references, e.g. C2. Worksheet/Tab Reference: To refer to different sheets inside a single file, use the standard format of SheetName!Cell Reference For example, to refer to Cell B2 on Sheet 2, it would be: Sheet2!B2 Please note that if you have a leading or trailing space in your tab/worksheet name, TrueContext will create a duplicate tab when creating the document. Please ensure your worksheet name does not have leading or trailing spaces. Cell Type: There are three options: Text: This is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Manually Mapping Cells (for Cells with Validation or Dropdowns)"
    }
  },
  {
    "content": "\"General\" formatting in Excel. Number Boolean",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Manually Mapping Cells (for Cells with Validation or Dropdowns)"
    }
  },
  {
    "content": "Mapping Images\n\nAdd reference images to your Excel document, using the photos from Image, Sketchpad, or Signature questions. Rather than setting this up in the Excel file itself, this is set up in the Configuration tab of the document in the web portal. Image Aspect Ratio The aspect ratio (height vs. width) will automatically be retained. Image Size The size the images are displayed in the Excel document is controlled by the cell range they are mapped into, as the entire image is fully contained within the range. If the cell range is a single cell, the image will be contained in a single cell If the cell range covers many cells, the image will span many cells The document will always prioritize the maintenance of the aspect ratio. If your cell range does not match that aspect ratio, the image will be resized so that the longest edge of the image fits within your cell range. Example: In the example below, the mapped Cell range is A2:D14, but the image is quite tall and narrow, so the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Images"
    }
  },
  {
    "content": "image is sized so that the long edge (height) fits within the cell range, and it does not take up the full width. Cell Range Reference: These are the cells that will hold the image file. Cell Anchor: These options do NOT impact how the images appear in the document when it is generated. They DO impact how the images are tied to cells if you manually manipulate the document after it is edited. Note: See the Cell Anchor example images in the section below. Options: Move and Resize Move, No Resize No Move, No Resize Form Label: Mapping a Question that Collects a Single Image: simply insert the question's unique ID. Mapping Multiple Images from a single question -- i.e., when an image or sketchpad question is allowed to collect multiple images -- is done in much the same way as mapping repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Images"
    }
  },
  {
    "content": "creates multiple entries. data: using index numbers starting at [0]. These must each be manually mapped. As an example: This example has two images attached to the same question: TakePhotoWorksite. The first image would be TakePhotoWorksite[0], and the second would be TakePhotoWorksite[1]. If the question is allowed to collect up to 10 images, be sure to map all of them. Cell Anchor Examples Move: A move is considered inserting a new column or row into the generated document, so that the column or row the image currently appears in shifts over/down. If MOVE is enabled, and the document is manually manipulated as described above, the image will stay anchored to the cells it was originally mapped to, and stay aligned with other content. If MOVE is not enabled, the image will stay in its previous visual location in the document, rather than shifting to make room for the inserted column. Resize: Stretching the cell, column, or row the image appears in so that it is larger or smaller. If",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Images"
    }
  },
  {
    "content": "RESIZE is enabled, the image will shrink or stretch to fit the new range. This may distort the aspect ratio. If RESIZE is not enabled, the image will stay the same size as before.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Images"
    }
  },
  {
    "content": "Mapping Repeatable Sections\n\nRepeatable sections allow users to enter a variable number of entries for the same set of questions -- typically used for entering things like parts, labor, or material line items, such as those shown in this invoice form on an Android device: When using data from repeatable sections in your Excel document, you must use the correct DREL. Unlike standard Unique IDs (using %a[unique ID]) which only have one answer to one question, repeatable sections have multiple answers to the same question. Using %e[Repeatable Section Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.] will give you all the answers to that question. In most Excel documents, we only want one answer per cell. This is done by DREL and indexing. The format for calling a single answer to a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Repeatable Sections"
    }
  },
  {
    "content": "repeatable section question is: %a[Unique ID][index number] Repeatable section index numbers start at 0. Therefore, the first answer to a repeatable section question would be %a[Unique ID][0]. In our document example, we use this format to put single answers into the table: Which results in a table that looks like this in a form submission: For more information, read: DREL for Repeatable Sections Please note that TrueContext cannot dynamically add rows to the Excel document based on the number of repeatable rows. To ensure you have enough rows to display all the data, please set up your document to have the maximum number of rows you believe will be used. Any rows not entered in the form submission will be left blank in the Excel document. To add a Custom Excel Document to your account, in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.: Create and name the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Repeatable Sections"
    }
  },
  {
    "content": "document as normal, selecting Excel Template from the list. On the Configuration tab, select Choose File and select your Excel document. Configure any manual mapping and images (see below) and select Save. Info:When you save a document, the system creates a new version of the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360001173423CustomExcelDocument.html",
      "title": "Excel Document",
      "section": "Mapping Repeatable Sections"
    }
  },
  {
    "content": "FreeMarker for Custom Layouts and Text Documents\n\nApache FreeMarker™ is a free template engine owned by the Apache Software Foundation. We’ve incorporated FreeMarker into some of our TrueContext features so that you can dynamically generate text from a submitted record. For example, you can generate a text file or HTTP Request Body. You can also use FreeMarker to create custom layouts for PDF, Word, and HTML documents. When you need the full power of a programming language to build templates with sophisticated loop and conditional structures, the Apache FreeMarker Template Language (FTL) can achieve results that other template types can’t. FreeMarker DocumentsFreeMarker Document Templates for TrueContext DataFreeMarker Custom PDF Layout",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerLandingPage.htm",
      "title": "FreeMarker for Custom Layouts and Text Documents",
      "section": "FreeMarker for Custom Layouts and Text Documents"
    }
  },
  {
    "content": "Settings\n\nCreate the document, select FreeMarker as the document type, then follow the instructions below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Settings"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %t - the time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Filename"
    }
  },
  {
    "content": "Document Timezone Source\n\nChoose a document time zone source. This is the time zone for all dates and times in your document. Team Preference Setting: Will use the time zone chosen for the team. Data Record: Will use the time zone the form submission is made from (as chosen on the mobile device). Custom: Choose a time zone.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Document Timezone Source"
    }
  },
  {
    "content": "Auto-Link new forms to this document\n\nSelecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against these forms will be downloadable in this document format from the \"Data\" tab of the portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "Configuration\n\nFile Extension The document can be any file type. Most commonly-used file extensions are .txt and .xml. Content Type Leave this blank for automatic resolution based on file extension. FreeMarker Template Upload your FreeMarker Template in an FTL format. When set up is complete, press \"Create.\" Link the document to a form in order to use it. Info:We recommend that you escape the data for all JSON, XML, HTML, and CSV documents. This ensures that the system generates a valid document in your selected format.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Configuration"
    }
  },
  {
    "content": "Preview and validate the template\n\nPreview your FreeMarker document template to ensure the output generates as expected. If the system displays a syntax error, validate your template with a FreeMarker validator. Info:When you save a document, the system creates a new version of the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501228.html",
      "title": "FreeMarker Documents",
      "section": "Preview and validate the template"
    }
  },
  {
    "content": "What you need to know to use FreeMarker with TrueContext\n\nWhen you need the full power of a programming language to build templates with sophisticated loop and conditional structures, the Apache FreeMarker Template Language (FTL) can achieve results that other template types can’t. Here’s what you should know before you get started.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "What you need to know to use FreeMarker with TrueContext"
    }
  },
  {
    "content": "Basic scripting and programming concepts\n\nUnderstanding basic programming concepts—such as variables, if-else conditions, loops, and data structures—will help you understand the FreeMarker Template Language (FTL). If you want to generate custom PDF, Word, or HTML output, you should know HTML and CSS syntax and coding conventions. You can find basic programming reference guides and tutorials online.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Basic scripting and programming concepts"
    }
  },
  {
    "content": "How to use FreeMarker\n\nThe FreeMarker Template Language (FTL) includes a set of data-handling functions known as built-ins and directives. Directives are FTL commands that tell the template engine how to reference and format data. Directives can loop through sequences of data, conditionally show or hide content, and handle errors, for example. FTL has a specific syntax for the expressions in a template. To learn more about FTL: Refer to the Apache FreeMarker Manual. Visit the TrueContext Community to post your questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "How to use FreeMarker"
    }
  },
  {
    "content": "The TrueContext data model\n\nTo give customers access to the full details of a submitted form, TrueContext creates JSON and XML representations of the data record. TrueContext provides the data structure as a JSON-formatted “tree”. When you build a FreeMarker template, you base the template on the TrueContext data structure. Although the JSON tree structure is consistent across forms, the actual JSON or XML for a record depends on the form design and the submitted data. Tip:The data model might include properties for features that aren’t available on your form or tier. Check your template to make sure that you only reference properties that are available and set up on your form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "The TrueContext data model"
    }
  },
  {
    "content": "How to handle incomplete data sets\n\nSome data might not be available for all records, resulting in null or empty values when: Optional questions aren’t answered. Dispatched records don’t have all values prefilled. TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. records are transferred as “Incomplete”. Because the tree “nodes” of the data model depend on the design of each form, undefined nodes might result when you: Use the same custom layout document with multiple forms. Set up Question filtering to hide questions, pages, or sections, or set questions to Hidden on reports. Hiding parts of a form removes the corresponding nodes from the data structure. Info:If you want your document to handle records that might have null or empty values, set up your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "How to handle incomplete data sets"
    }
  },
  {
    "content": "template accordingly. The section Handle optional or incomplete data describes how to check for null or empty values and for missing nodes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "How to handle incomplete data sets"
    }
  },
  {
    "content": "The data set that you want to include in your output document\n\nThe template engine generates textual output based on templates and input data. For example, you can dynamically generate text for a: PDF file, based on HTML and CSS, presented as a detailed report of work performed. You need to know which details from submitted records you want to include in the report. JSON, XML, or CSV message that contains data from submitted records to send to a customer or partner integration point. You need to know which data points (answers) to get and the format that’s required for the integration point.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "The data set that you want to include in your output document"
    }
  },
  {
    "content": "Syntax quick reference\n\nRecord metadata To reference metadata, use the dataRecord node in your expressions. Syntax Example ${dataRecord.key} ${dataRecord.identifier} Returns the unique record number that’s assigned by the TrueContext system. ${dataRecord.key.property} Note:For dataRecord keys that have multiple properties, you must specify a property. ${dataRecord.user.username} ${dataRecord.user.identifier} Returns the username and numeric identifier, but not the display name. Answer values The TrueContext data model provides a top-level answers node to simplify how you reference data in a Regular or Side-by-Side section. The answers node flattens the form structure and uses the question unique IDs (labels) as keys in the key:value pairs. The keys are based on the questions and are specific to each form. The answers node syntax is the easiest way to reference data in a Regular or Side-by-Side section. Tip:Some question types don’t show all properties in the answers node, such as the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "Question Text. You can reference those properties by specifying the full path, for example:${dataRecord.pages.pageID.sections.sectionID.answers.uniqueID.question} Info:If you want to reference answers in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., you must specify the full path to the answer values. The section Answers in a Repeatable Section describes how to use the FreeMarker built-in #list directive to loop over the values. Answers with a single value Syntax Example ${answers.uniqueID[n]} Note:Because our data model uses arrays for all answer values, you must include the array index in brackets ( [ ] ). This array structure provides consistency across all answer nodes, including those that have multiple values per answer. ${answers.Inspector[0]} Returns the value of the Inspector field. [0] gets",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "the first or only value in the array. Answers with multiple values Some question types—such as Multiselect or attachment-based questions—can have multiple values. Use the #list directive to get all of the values. Syntax Example <#list answers.uniqueID as variable> ${variable} </#list> <#list answers.MultipleAnswers as values> ${values} </#list> Returns a list of submitted values. Answers with multiple properties Some question types have multiple properties, such as Geo Location. Syntax Examples ${answers.uniqueID[n].property} ${answers.locationOfIncident[0].address} Returns the submitted address. ${answers.locationOfIncident[0].coordinates.latitude} Returns the latitude in decimal degrees. Images and other binary content You can reference the following properties for Image, Sketch Pad, and Signature attachments. identifier—The unique attachment identifier in the TrueContext system. filename—The filename and extension assigned by the TrueContext system. contentType—The file type, such",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "as image/jpeg or application/pdf. bytes—The actual content of the attachment, Base64-encoded. In a PDF, Word, or HTML custom layout, displays the image. Syntax Examples ${answers.uniqueID[n].property} ${answers.UploadImage[0].identifier} Returns: d9257339-aa49-4267-98a9-17cc7aaf56ee ${answers.UploadImage[0].filename} Returns: UploadImage_1.jpg ${answers.UploadImage[0].contentType} Returns: image/jpeg ${answers.UploadImage[0].bytes} Returns the Base64-encoded content: iVBORw0KGgoAAAANSUhEUgAAAh4AAAIQCAYAAADOyWc… <img height=\"100\" width=\"150\" src=\"data:image/jpeg;base64,${answers.UploadImage[0].bytes}> In a PDF, Word, or HTML custom layout, displays the image. Tip:If you want to reference or display uploaded images, set up your form with Image, Sketch Pad, or Signature questions. Embedded documents documents() function When using a FreeMarker Document to define the request body for a TrueContext HTTP POST Data Destination, you can include file content by using the documents() function.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "The documents() function embeds other documents from the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. directly into the request body. This is particularly useful when working with external systems that require file contents to be transmitted in Base64 format. Note:This function applies to documents generated from document templates, not to files uploaded by a field user. Usage To use the documents() function, you must supply: The unique identifier of the document that you want to embed. The property that you want to extract from the embedded document. The following example shows the correct usage of the documents() function: ${documents(uniqueID).property} Properties You can reference the following properties: filename—The filename of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "contentType—The file type, such as application/pdf. bytes—The actual content of the generated document, Base64-encoded. Examples Syntax Example ${documents(uniqueID).bytes} ${documents(\"JobReport\").bytes} Returns the Base64-encoded content of the document with the unique ID “JobReport”. Tip:An embedded document can be any other document in the same FormSpace, like a PDF document. The document is fully rendered, Base64-encoded, and embedded within the parent document. If the embedded document includes images, those are also encoded and included as bytes in the Base64 string. ${documents(uniqueID).filename} ${documents(\"JobReport\").filename} Returns the filename of the document: Job_Report_2025-05-10.pdf ${documents(uniqueID).contentType} ${documents(\"JobReport\").contentType} Returns the MIME type of the document: application/pdf Use a variable to reference a document To make it easier to reference a document, you can assign the documents() function to a variable, as shown in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "following example.{ #assign Report = documents('JobReport')> \"filename\" : \"${Report.filename}\", \"mimetype\" : \"${Report.contentType}\", \"documentbody\" : \"${Report.bytes}\" } Important notes and limitations Only documents in the current FormSpace can be referenced using the documents() function. You can’t embed documents within embedded documents. You can’t embed more than five documents. Total embedded document bytes must not exceed 100 MB. There’s no configuration-time validation of the document reference in the FreeMarker template. If you reference a document that doesn't exist, the error will only be detected at runtime when the template is processed. Base64-encoded document content can significantly increase the size of your JSON or XML payload. Consider file size limitations of your receiving system when including document content in your request body. Note: When embedding documents in JSON or XML payloads, ensure that the receiving system can parse Base64-encoded content. Answers in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "a Repeatable Section The TrueContext data model treats each “row” in a Repeatable Section as a subform. Each subform has its own pages, sections, and answers nodes. To reference answers in a Repeatable Section: Use the FreeMarker built-in #list directive to loop over the repeatable section. Set up expressions to “walk the tree” of the data model hierarchy. The path depends on the node format option that you choose. Tip:We recommend that you select All Labels as Node Names when you set up your document. This makes it easier and more precise to “walk the tree” of our data model. The following examples are based on this setting. Syntax <#list dataRecord.pages.pageID.sections.sectionID.rows as row> <#list row.pages.RowPageID.sections.RowSectionID.answers.uniqueID.values as value> ${value} </#list> </#list> Example <#list dataRecord.pages.NewPage.sections.IncidentCauses.rows as row> <#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Cause.values as selection> <#list",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "row.pages.IncidentCauses.sections.IncidentCauses1.answers.Details.values as detail> ${selection} - ${detail} </#list> </#list> </#list> Returns, for example: Equipment failure - BeltPower outage - Storm Date, Time, and Date/Time answers Basic Date/Time syntax The syntax you use to reference data in a Date/Time Selector or Date/Time Stamp field depends on the data type, as described in the following table. Info:The examples show the output in the default ISO Date and Time formats. You can change the format using either FreeMarker or DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.. Data type Data types describe the format in which a user answers a question. For example, a user might enter a name (Text) in one question, and a dollar amount (Currency) in another. A data type also supports validation (making sure that mobile users enter a valid email address format, for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "example). Syntax Example Date ${answers.uniqueID[n]} ${answers.DateOnlySelector[0]} Returns, for example: 2024-05-27 Time ${answers.uniqueID[n].provided.time} ${answers.TimeOnlySelector[0].provided.time} Returns, for example: 14:00:00+01:00 The default time format uses the 24-hour clock, and ±HH:mm indicates the UTC offset. ${answers.uniqueID[n].provided.zone} ${answers.TimeOnlySelector[0].provided.zone} Returns, for example: Europe/London The default format is as per the list of tz database time zones. ${answers.uniqueID[n].shifted} ${answers.TimeOnlySelector[0].shifted} Returns, for example: 2024-06-04T23:07:00+02:00 This is the provided time shifted to the time zone selected as the Document Time Zone Source. Date/Time ${answers.uniqueID[n].provided.time} ${answers.DateTime[0].provided.time} Returns, for example: 2024-05-27T13:15:05+01:00 ${answers.uniqueID[n].provided.zone} ${answers.DateTime[0].provided.zone} Returns, for example: Europe/London The default format is as per the list",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "of tz database time zones. ${answers.uniqueID[n].shifted} ${answers.DateTime[0].shifted} Returns, for example: 2024-06-04T23:07:00+02:00 This is the provided time shifted to the time zone selected as the Document Time Zone Source. Info:The system returns the date and time in ISO format. The section Date/Time formats describes how you can change the default format. Date/Time formats Dates, times, and date/times default to the following formats: Date—yyyy-MM-dd Time—HH:mm:ssXXX Date/Time—yyyy-MM-dd'T'HH:mm:ssXXX You can change date and time formats using either FreeMarker built-ins or DREL expressions. Note:If, by mistake, you use a date format for a Time data type or a time format for a Date data type, the system returns a default value. Check that your output Document values are as expected. FreeMarker TrueContext returns dates and times as strings. You use the date, time, or datetime built-ins to parse the strings into a date, time, or datetime object. The .xs format specifier",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "converts the value into the XML Schema date/time format (ISO 8601). To get the format that you want, use the string built-in to format the date, time, or datetime object. Example Result ${answers.dateTimeIncident[0].provided.time?datetime.xs?string(\"MM-dd-yyyy hh:mm a z\")} 06-04-2024 02:07 PM PDT ${answers.DateOnlySelector[0]?date.xs?string(\"MM-dd-yyyy\")} 06-04-2024 ${answers.TimeOnlySelect[0].provided.time?time.xs?string(\"hh:mm a\")} 02:07 PM PDT The time zone resolves to the Document Time Zone Source when you use FreeMarker built-ins to format a date, time, or datetime value. In the previous examples, the time zone is displayed as PDT, which is the time zone set for the team (America/Vancouver). You can set different time zones within your template using the #setting directive, for example: <#setting time_zone=\"America/New_York\"> This setting only affects dates, times, and datetimes that you format using FreeMarker built-ins. Each time zone setting applies to the data that follows",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "until you reset the time zone with another #setting directive. DREL You can use the DREL method to change the format of a date, time, or datetime. Info:The topic DREL Complete Reference List contains detailed information about DREL expressions. Example Result <#-- For the data record (not specific answers) --> ${drel(\"%t[MM-dd-yyyy hh:mm a z]\")} <#-- For a specific answer --> ${drel(\"%a[dateTimeIncident][MM-dd-yyyy hh:mm a zzzz]\")} 06-04-2024 10:09 PM BST 06-04-2024 10:07 PM British Summer Time Time zone overrides FreeMarker time zone setting You can set different time zones within your template using the #setting directive, for example: <#setting time_zone=\"America/New_York\"> This setting only affects dates, times, and datetimes that you format using FreeMarker built-ins. Each time zone setting applies to the data that follows until you reset the time zone with another #setting directive. Example Result <#setting time_zone=\"America/New_York\">",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "${answers.dateTimeIncident[0].provided.time?datetime.xs?string(\"MM-dd-yyyy hh:mm a z\")} 06-04-2024 05:07 PM EDT DREL time zone settings You can use the DREL method to set the time zone to a specific value or to one of the following values: DataRecordTZ: Time zone on the user’s device. TeamTZ: Time zone configured at the team level. Region/City: A specific time zone. You can use any of the names in the list of tz database time zones. Example Result ${drel(\"%a[dateTimeIncident][MM-dd-yyyy hh:mm a z][America/Toronto]\")} 06-04-2024 05:07 PM EDT ${drel(\"%a[dateTimeIncident][MM-dd-yyyy hh:mm a z][TeamTZ]\")} 06-04-2024 02:07 PM PDT Shifted time The shifted time depends on the Document Time Zone Source, as described in the following table. The examples show the UTC offset for each time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. If the Document Time Zone Source is set to… Then the shifted time",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "is in the… Examples Form Submission Device time zone, which is the provided time. In this case, the provided time and the shifted time are the same. Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T22:07:00+01:00 Team Preference Setting Team time zone Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T14:07:00-07:00 Custom The custom time zone that you specify Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T23:07:00+02:00 Pages and sections You can use the FreeMarker built-in #if directive to conditionally skip a section of the template. This provides a way to show or hide content, for example. To reference specific pages and sections, set up expressions to “walk the tree” of the data model hierarchy. The path depends on the node format option that you choose. Tip:We recommend that you select All Labels as",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "Node Names when you set up your document. This makes it easier and more precise to “walk the tree” of our data model. The following examples are based on this setting. Syntax Example <#if answers.uniqueID?has_content> ${dataRecord.pages.pageID.sections.sectionID.property} <#list dataRecord.pages.pageID.sections.sectionID.rows as row> <#list row.pages.RowPageID.sections.RowSectionID.answers.uniqueID.values as value> ${value} </#list> </#list> </#if> <#if answers.KnownCause?has_content> ${dataRecord.pages.NewPage.sections.IncidentCauses.name} <#list dataRecord.pages.NewPage.sections.IncidentCauses.rows as row> <#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Cause.values as selection> <#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Details.values as detail> ${selection} - ${detail} </#list> </#list> </#list> </#if> Returns… If answered: Incident Causes Equipment failure - Worn belt Power outage - Storm If not answered, doesn’t display the section name or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "the answers in that section. drel( ) method Data Reference Expression Language (DREL) is a TrueContext proprietary language used to reference data from a submitted record. You can use the drel() method to get data and metadata from a submitted record. Syntax Example ${drel(“%reference[property]”)} ${drel(\"Display value Options-based questions have a display value and a data (server) value. The display value is the answer shown in the Mobile App. The Form Designer can choose whether the display and data values are the same or different.: %a[EquipmentCondition][display]\")} Returns: Display value: Good This example returns the display value instead of the server value for this options-based question. Tip:You can include static text in your DREL expressions. This example includes the static text Display value: Info:The topic DREL Complete Reference List describes all the available DREL references and properties. Handle optional or incomplete data Some data might not be available for all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "records, resulting in null or empty values when: Optional questions aren’t answered. Dispatched records don’t have all values prefilled. TrueContext Teamwork records are transferred as “Incomplete”. Because the tree “nodes” of the data model depend on the design of each form, undefined nodes might result when you: Use the same custom layout document with multiple forms. Set up Question filtering to hide questions, pages, or sections, or set questions to Hidden on reports. Hiding parts of a form removes the corresponding nodes from the data structure. Note:If the template expects a value that’s not in the data, document generation might fail. If you want your document to handle records that might have null or empty values, set up your template accordingly. You can handle null or empty answers in one of two ways: Use the ! null operator to check if the answer is null or empty.If the answer is null or empty, the document displays the characters inside the quotation marks. To display",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "nothing, don’t specify any text:${(answers.uniqueID[n])!\"\"}If the answer has a value, the document displays the value. Use the #if directive when you need to do more complex checks. For example, you might need to handle multiple conditions or include additional actions based on whether the value exists. The following table provides some example syntax you can use to handle null or empty data. Syntax Example ${(answers.uniqueID[n])!\"text\"} ${(answers.Inspector[0])!\"Not answered\"} Returns, if answered: Lestrade Returns, if null or empty: Not answered <#if answers.uniqueID?has_content> Text: ${answers.uniqueID[0]}. <#else> Text </#if> <#if answers.Inspector?has_content && answers.SeniorTechnician?has_content> The names of the inspectors are ${answers.Inspector[0]} and ${answers.SeniorTechnician[0]}. <#elseif answers.Inspector?size == 0 && answers.SeniorTechnician?has_content> The name of the senior technician is ${answers.SeniorTechnician[0]}. <#elseif answers.Inspector?has_content &&",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "answers.SeniorTechnician?size == 0> The name of the inspector is ${answers.Inspector[0]}. <#else> No inspector information available. </#if> Returns… If both questions are answered: The names of the inspectors are Lestrade and Watson. If only Inspector is answered: The name of the inspector is Lestrade. If only SeniorTechnician is answered: The name of the senior technician is Watson. If neither question is answered: No inspector information available. <#if answers.uniqueID??> <#if answers.uniqueID?has_content> ${answers.uniqueID[0]} <#else> Answer not provided </#if> <#else> Referenced answer is not part of this record </#if> <#if answers.Inspector??> <#if answers.Inspector?has_content> ${answers.Inspector[0]} <#else> Answer not provided </#if> <#else> The answer to \"Inspector\" is not part of this record. </#if> You can use the same document for more than one form. Remember that the structure of the data model will be the same across forms, but the specific nodes might be different.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "This example shows how to check for undefined nodes and for null or empty values. Tip:This example also checks for missing answer nodes that result from question filtering or questions set to Hidden on reports. Returns… If Inspector exists as a node in the data model and is non-empty (answered): Lestrade If Inspector exists in the data model but isn’t answered: Answer not provided If Inspector doesn’t exist in the data model: The answer to \"Inspector\" is not part of this record. Note:TrueContext does not support the FreeMarker attempt/recover directive. Escape special characters Special characters or line breaks in the data could result in a document that’s not valid for your cloud system or endpoint. Follow the instructions in the topic Escape Special Characters and Line Breaks for Template-driven Text Documents. Unsupported functions For security reasons, the system prevents the use of the include and import functions in a TrueContext FreeMarker template. If the system detects those",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "functions, it removes them from the template.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Syntax quick reference"
    }
  },
  {
    "content": "Record metadata\n\nTo reference metadata, use the dataRecord node in your expressions. Syntax Example ${dataRecord.key} ${dataRecord.identifier} Returns the unique record number that’s assigned by the TrueContext system. ${dataRecord.key.property} Note:For dataRecord keys that have multiple properties, you must specify a property. ${dataRecord.user.username} ${dataRecord.user.identifier} Returns the username and numeric identifier, but not the display name.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Record metadata"
    }
  },
  {
    "content": "Answer values\n\nThe TrueContext data model provides a top-level answers node to simplify how you reference data in a Regular or Side-by-Side section. The answers node flattens the form structure and uses the question unique IDs (labels) as keys in the key:value pairs. The keys are based on the questions and are specific to each form. The answers node syntax is the easiest way to reference data in a Regular or Side-by-Side section. Tip:Some question types don’t show all properties in the answers node, such as the Question Text. You can reference those properties by specifying the full path, for example:${dataRecord.pages.pageID.sections.sectionID.answers.uniqueID.question} Info:If you want to reference answers in a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., you must specify the full path to the answer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Answer values"
    }
  },
  {
    "content": "values. The section Answers in a Repeatable Section describes how to use the FreeMarker built-in #list directive to loop over the values. Answers with a single value Syntax Example ${answers.uniqueID[n]} Note:Because our data model uses arrays for all answer values, you must include the array index in brackets ( [ ] ). This array structure provides consistency across all answer nodes, including those that have multiple values per answer. ${answers.Inspector[0]} Returns the value of the Inspector field. [0] gets the first or only value in the array. Answers with multiple values Some question types—such as Multiselect or attachment-based questions—can have multiple values. Use the #list directive to get all of the values. Syntax Example <#list answers.uniqueID as variable> ${variable} </#list> <#list answers.MultipleAnswers as values> ${values} </#list> Returns a list of submitted values. Answers with multiple properties Some question types have multiple properties, such as Geo Location.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Answer values"
    }
  },
  {
    "content": "Syntax Examples ${answers.uniqueID[n].property} ${answers.locationOfIncident[0].address} Returns the submitted address. ${answers.locationOfIncident[0].coordinates.latitude} Returns the latitude in decimal degrees. Images and other binary content You can reference the following properties for Image, Sketch Pad, and Signature attachments. identifier—The unique attachment identifier in the TrueContext system. filename—The filename and extension assigned by the TrueContext system. contentType—The file type, such as image/jpeg or application/pdf. bytes—The actual content of the attachment, Base64-encoded. In a PDF, Word, or HTML custom layout, displays the image. Syntax Examples ${answers.uniqueID[n].property} ${answers.UploadImage[0].identifier} Returns: d9257339-aa49-4267-98a9-17cc7aaf56ee ${answers.UploadImage[0].filename} Returns: UploadImage_1.jpg ${answers.UploadImage[0].contentType} Returns: image/jpeg ${answers.UploadImage[0].bytes} Returns the Base64-encoded content:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Answer values"
    }
  },
  {
    "content": "iVBORw0KGgoAAAANSUhEUgAAAh4AAAIQCAYAAADOyWc… <img height=\"100\" width=\"150\" src=\"data:image/jpeg;base64,${answers.UploadImage[0].bytes}> In a PDF, Word, or HTML custom layout, displays the image. Tip:If you want to reference or display uploaded images, set up your form with Image, Sketch Pad, or Signature questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Answer values"
    }
  },
  {
    "content": "Embedded documents\n\ndocuments() function When using a FreeMarker Document to define the request body for a TrueContext HTTP POST Data Destination, you can include file content by using the documents() function. The documents() function embeds other documents from the same FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. directly into the request body. This is particularly useful when working with external systems that require file contents to be transmitted in Base64 format. Note:This function applies to documents generated from document templates, not to files uploaded by a field user. Usage To use the documents() function, you must supply: The unique identifier of the document that you want to embed. The property that you want to extract from the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Embedded documents"
    }
  },
  {
    "content": "The following example shows the correct usage of the documents() function: ${documents(uniqueID).property} Properties You can reference the following properties: filename—The filename of the embedded document. contentType—The file type, such as application/pdf. bytes—The actual content of the generated document, Base64-encoded. Examples Syntax Example ${documents(uniqueID).bytes} ${documents(\"JobReport\").bytes} Returns the Base64-encoded content of the document with the unique ID “JobReport”. Tip:An embedded document can be any other document in the same FormSpace, like a PDF document. The document is fully rendered, Base64-encoded, and embedded within the parent document. If the embedded document includes images, those are also encoded and included as bytes in the Base64 string. ${documents(uniqueID).filename} ${documents(\"JobReport\").filename} Returns the filename of the document: Job_Report_2025-05-10.pdf ${documents(uniqueID).contentType} ${documents(\"JobReport\").contentType}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Embedded documents"
    }
  },
  {
    "content": "Returns the MIME type of the document: application/pdf Use a variable to reference a document To make it easier to reference a document, you can assign the documents() function to a variable, as shown in the following example. { #assign Report = documents('JobReport')> \"filename\" : \"${Report.filename}\", \"mimetype\" : \"${Report.contentType}\", \"documentbody\" : \"${Report.bytes}\" }",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Embedded documents"
    }
  },
  {
    "content": "Important notes and limitations\n\nOnly documents in the current FormSpace can be referenced using the documents() function. You can’t embed documents within embedded documents. You can’t embed more than five documents. Total embedded document bytes must not exceed 100 MB. There’s no configuration-time validation of the document reference in the FreeMarker template. If you reference a document that doesn't exist, the error will only be detected at runtime when the template is processed. Base64-encoded document content can significantly increase the size of your JSON or XML payload. Consider file size limitations of your receiving system when including document content in your request body. Note: When embedding documents in JSON or XML payloads, ensure that the receiving system can parse Base64-encoded content.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Important notes and limitations"
    }
  },
  {
    "content": "Answers in a Repeatable Section\n\nThe TrueContext data model treats each “row” in a Repeatable Section as a subform. Each subform has its own pages, sections, and answers nodes. To reference answers in a Repeatable Section: Use the FreeMarker built-in #list directive to loop over the repeatable section. Set up expressions to “walk the tree” of the data model hierarchy. The path depends on the node format option that you choose. Tip:We recommend that you select All Labels as Node Names when you set up your document. This makes it easier and more precise to “walk the tree” of our data model. The following examples are based on this setting. Syntax <#list dataRecord.pages.pageID.sections.sectionID.rows as row> <#list row.pages.RowPageID.sections.RowSectionID.answers.uniqueID.values as value> ${value} </#list> </#list> Example <#list dataRecord.pages.NewPage.sections.IncidentCauses.rows as row> <#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Cause.values as selection>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Answers in a Repeatable Section"
    }
  },
  {
    "content": "<#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Details.values as detail> ${selection} - ${detail} </#list> </#list> </#list> Returns, for example: Equipment failure - BeltPower outage - Storm",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Answers in a Repeatable Section"
    }
  },
  {
    "content": "Date, Time, and Date/Time answers\n\nBasic Date/Time syntax The syntax you use to reference data in a Date/Time Selector or Date/Time Stamp field depends on the data type, as described in the following table. Info:The examples show the output in the default ISO Date and Time formats. You can change the format using either FreeMarker or DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms.. Data type Data types describe the format in which a user answers a question. For example, a user might enter a name (Text) in one question, and a dollar amount (Currency) in another. A data type also supports validation (making sure that mobile users enter a valid email address format, for example). Syntax Example Date ${answers.uniqueID[n]} ${answers.DateOnlySelector[0]} Returns, for example: 2024-05-27 Time ${answers.uniqueID[n].provided.time} ${answers.TimeOnlySelector[0].provided.time}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "Returns, for example: 14:00:00+01:00 The default time format uses the 24-hour clock, and ±HH:mm indicates the UTC offset. ${answers.uniqueID[n].provided.zone} ${answers.TimeOnlySelector[0].provided.zone} Returns, for example: Europe/London The default format is as per the list of tz database time zones. ${answers.uniqueID[n].shifted} ${answers.TimeOnlySelector[0].shifted} Returns, for example: 2024-06-04T23:07:00+02:00 This is the provided time shifted to the time zone selected as the Document Time Zone Source. Date/Time ${answers.uniqueID[n].provided.time} ${answers.DateTime[0].provided.time} Returns, for example: 2024-05-27T13:15:05+01:00 ${answers.uniqueID[n].provided.zone} ${answers.DateTime[0].provided.zone} Returns, for example: Europe/London The default format is as per the list of tz database time zones. ${answers.uniqueID[n].shifted} ${answers.DateTime[0].shifted} Returns, for example: 2024-06-04T23:07:00+02:00 This is the provided time shifted to the time zone selected as the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "Document Time Zone Source. Info:The system returns the date and time in ISO format. The section Date/Time formats describes how you can change the default format. Date/Time formats Dates, times, and date/times default to the following formats: Date—yyyy-MM-dd Time—HH:mm:ssXXX Date/Time—yyyy-MM-dd'T'HH:mm:ssXXX You can change date and time formats using either FreeMarker built-ins or DREL expressions. Note:If, by mistake, you use a date format for a Time data type or a time format for a Date data type, the system returns a default value. Check that your output Document values are as expected. FreeMarker TrueContext returns dates and times as strings. You use the date, time, or datetime built-ins to parse the strings into a date, time, or datetime object. The .xs format specifier converts the value into the XML Schema date/time format (ISO 8601). To get the format that you want, use the string built-in to format the date, time, or datetime object. Example Result",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "${answers.dateTimeIncident[0].provided.time?datetime.xs?string(\"MM-dd-yyyy hh:mm a z\")} 06-04-2024 02:07 PM PDT ${answers.DateOnlySelector[0]?date.xs?string(\"MM-dd-yyyy\")} 06-04-2024 ${answers.TimeOnlySelect[0].provided.time?time.xs?string(\"hh:mm a\")} 02:07 PM PDT The time zone resolves to the Document Time Zone Source when you use FreeMarker built-ins to format a date, time, or datetime value. In the previous examples, the time zone is displayed as PDT, which is the time zone set for the team (America/Vancouver). You can set different time zones within your template using the #setting directive, for example: <#setting time_zone=\"America/New_York\"> This setting only affects dates, times, and datetimes that you format using FreeMarker built-ins. Each time zone setting applies to the data that follows until you reset the time zone with another #setting directive. DREL You can use the DREL method to change the format of a date, time, or datetime. Info:The topic DREL Complete Reference",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "List contains detailed information about DREL expressions. Example Result <#-- For the data record (not specific answers) --> ${drel(\"%t[MM-dd-yyyy hh:mm a z]\")} <#-- For a specific answer --> ${drel(\"%a[dateTimeIncident][MM-dd-yyyy hh:mm a zzzz]\")} 06-04-2024 10:09 PM BST 06-04-2024 10:07 PM British Summer Time Time zone overrides FreeMarker time zone setting You can set different time zones within your template using the #setting directive, for example: <#setting time_zone=\"America/New_York\"> This setting only affects dates, times, and datetimes that you format using FreeMarker built-ins. Each time zone setting applies to the data that follows until you reset the time zone with another #setting directive. Example Result <#setting time_zone=\"America/New_York\"> ${answers.dateTimeIncident[0].provided.time?datetime.xs?string(\"MM-dd-yyyy hh:mm a z\")} 06-04-2024 05:07 PM EDT DREL time zone settings You can use the DREL method to set the time zone to a specific value or to one of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "following values: DataRecordTZ: Time zone on the user’s device. TeamTZ: Time zone configured at the team level. Region/City: A specific time zone. You can use any of the names in the list of tz database time zones. Example Result ${drel(\"%a[dateTimeIncident][MM-dd-yyyy hh:mm a z][America/Toronto]\")} 06-04-2024 05:07 PM EDT ${drel(\"%a[dateTimeIncident][MM-dd-yyyy hh:mm a z][TeamTZ]\")} 06-04-2024 02:07 PM PDT Shifted time The shifted time depends on the Document Time Zone Source, as described in the following table. The examples show the UTC offset for each time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. If the Document Time Zone Source is set to… Then the shifted time is in the… Examples Form Submission Device time zone, which is the provided time. In this case, the provided time and the shifted time are the same. Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "Time of Incident - shifted: 2024-06-04T22:07:00+01:00 Team Preference Setting Team time zone Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T14:07:00-07:00 Custom The custom time zone that you specify Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T23:07:00+02:00",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Date, Time, and Date/Time answers"
    }
  },
  {
    "content": "Pages and sections\n\nYou can use the FreeMarker built-in #if directive to conditionally skip a section of the template. This provides a way to show or hide content, for example. To reference specific pages and sections, set up expressions to “walk the tree” of the data model hierarchy. The path depends on the node format option that you choose. Tip:We recommend that you select All Labels as Node Names when you set up your document. This makes it easier and more precise to “walk the tree” of our data model. The following examples are based on this setting. Syntax Example <#if answers.uniqueID?has_content> ${dataRecord.pages.pageID.sections.sectionID.property} <#list dataRecord.pages.pageID.sections.sectionID.rows as row> <#list row.pages.RowPageID.sections.RowSectionID.answers.uniqueID.values as value> ${value} </#list> </#list> </#if> <#if answers.KnownCause?has_content> ${dataRecord.pages.NewPage.sections.IncidentCauses.name} <#list dataRecord.pages.NewPage.sections.IncidentCauses.rows",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Pages and sections"
    }
  },
  {
    "content": "as row> <#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Cause.values as selection> <#list row.pages.IncidentCauses.sections.IncidentCauses1.answers.Details.values as detail> ${selection} - ${detail} </#list> </#list> </#list> </#if> Returns… If answered: Incident Causes Equipment failure - Worn belt Power outage - Storm If not answered, doesn’t display the section name or the answers in that section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Pages and sections"
    }
  },
  {
    "content": "drel( ) method\n\nData Reference Expression Language (DREL) is a TrueContext proprietary language used to reference data from a submitted record. You can use the drel() method to get data and metadata from a submitted record. Syntax Example ${drel(“%reference[property]”)} ${drel(\"Display value Options-based questions have a display value and a data (server) value. The display value is the answer shown in the Mobile App. The Form Designer can choose whether the display and data values are the same or different.: %a[EquipmentCondition][display]\")} Returns: Display value: Good This example returns the display value instead of the server value for this options-based question. Tip:You can include static text in your DREL expressions. This example includes the static text Display value: Info:The topic DREL Complete Reference List describes all the available DREL references and properties.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "drel( ) method"
    }
  },
  {
    "content": "Handle optional or incomplete data\n\nSome data might not be available for all records, resulting in null or empty values when: Optional questions aren’t answered. Dispatched records don’t have all values prefilled. TrueContext Teamwork records are transferred as “Incomplete”. Because the tree “nodes” of the data model depend on the design of each form, undefined nodes might result when you: Use the same custom layout document with multiple forms. Set up Question filtering to hide questions, pages, or sections, or set questions to Hidden on reports. Hiding parts of a form removes the corresponding nodes from the data structure. Note:If the template expects a value that’s not in the data, document generation might fail. If you want your document to handle records that might have null or empty values, set up your template accordingly. You can handle null or empty answers in one of two ways: Use the ! null operator to check if the answer is null or empty.If the answer is null or empty, the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Handle optional or incomplete data"
    }
  },
  {
    "content": "document displays the characters inside the quotation marks. To display nothing, don’t specify any text:${(answers.uniqueID[n])!\"\"}If the answer has a value, the document displays the value. Use the #if directive when you need to do more complex checks. For example, you might need to handle multiple conditions or include additional actions based on whether the value exists. The following table provides some example syntax you can use to handle null or empty data. Syntax Example ${(answers.uniqueID[n])!\"text\"} ${(answers.Inspector[0])!\"Not answered\"} Returns, if answered: Lestrade Returns, if null or empty: Not answered <#if answers.uniqueID?has_content> Text: ${answers.uniqueID[0]}. <#else> Text </#if> <#if answers.Inspector?has_content && answers.SeniorTechnician?has_content> The names of the inspectors are ${answers.Inspector[0]} and ${answers.SeniorTechnician[0]}. <#elseif answers.Inspector?size == 0 && answers.SeniorTechnician?has_content> The name of the senior technician is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Handle optional or incomplete data"
    }
  },
  {
    "content": "${answers.SeniorTechnician[0]}. <#elseif answers.Inspector?has_content && answers.SeniorTechnician?size == 0> The name of the inspector is ${answers.Inspector[0]}. <#else> No inspector information available. </#if> Returns… If both questions are answered: The names of the inspectors are Lestrade and Watson. If only Inspector is answered: The name of the inspector is Lestrade. If only SeniorTechnician is answered: The name of the senior technician is Watson. If neither question is answered: No inspector information available. <#if answers.uniqueID??> <#if answers.uniqueID?has_content> ${answers.uniqueID[0]} <#else> Answer not provided </#if> <#else> Referenced answer is not part of this record </#if> <#if answers.Inspector??> <#if answers.Inspector?has_content> ${answers.Inspector[0]} <#else> Answer not provided </#if> <#else> The answer to \"Inspector\" is not part of this record. </#if> You can use the same document for more than one form. Remember that the structure of the data model",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Handle optional or incomplete data"
    }
  },
  {
    "content": "will be the same across forms, but the specific nodes might be different. This example shows how to check for undefined nodes and for null or empty values. Tip:This example also checks for missing answer nodes that result from question filtering or questions set to Hidden on reports. Returns… If Inspector exists as a node in the data model and is non-empty (answered): Lestrade If Inspector exists in the data model but isn’t answered: Answer not provided If Inspector doesn’t exist in the data model: The answer to \"Inspector\" is not part of this record. Note:TrueContext does not support the FreeMarker attempt/recover directive.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Handle optional or incomplete data"
    }
  },
  {
    "content": "Escape special characters\n\nSpecial characters or line breaks in the data could result in a document that’s not valid for your cloud system or endpoint. Follow the instructions in the topic Escape Special Characters and Line Breaks for Template-driven Text Documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Escape special characters"
    }
  },
  {
    "content": "Unsupported functions\n\nFor security reasons, the system prevents the use of the include and import functions in a TrueContext FreeMarker template. If the system detects those functions, it removes them from the template.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Unsupported functions"
    }
  },
  {
    "content": "Record metadata\n\nThe dataRecord (root) node contains all of the data and metadata from the submitted record. The dataRecord node properties include the unique identifier, name, and dates submitted and processed, for example. Child nodes contain geo stamp (geotag) and device details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Record metadata"
    }
  },
  {
    "content": "Form and FormSpace information\n\nThe form child node has properties that can help you identify the Form Definition A Form Definition is a template for an actual form or record that field users interact with. Using the Form Builder, you define the structure, layout, fields and data types, and logic of a form. A Form Definition also specifies resources available to users on their devices, such as Images and Documents, and mappings for data brought in from external sources. and version, as well as the FormSpace it’s in.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Form and FormSpace information"
    }
  },
  {
    "content": "User information\n\nThe user child node properties tell you who submitted, transferred, or edited the record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "User information"
    }
  },
  {
    "content": "The “answers” node\n\nThe JSON tree structure follows the structure of the Form Definition. There are nodes for pages, sections, and answers (fields). The TrueContext data model provides a top-level answers node to simplify how you reference data in a Regular or Side-by-Side section. The answers node flattens the form structure and uses the field unique IDs (labels) as keys in the key:value pairs. The keys are based on the questions set up in the Form Definition and are specific to each form. Note:The system strips out spaces from the unique IDs and truncates them if they’re longer than 19 characters. Use the keys exactly as shown in the data model, not as shown in the Form Builder. The answers.uniqueID syntax is the easiest way to reference data in a Regular or Side-by-Side section. Tip:Some question types don’t show all properties in the answers node, such as the Question Text. You can reference those properties by specifying the full path, for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "The “answers” node"
    }
  },
  {
    "content": "example:${dataRecord.pages.pageID.sections.sectionID.answers.uniqueID.question}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "The “answers” node"
    }
  },
  {
    "content": "Sections\n\nDifferent types of sections have different JSON representations, as shown in the following table. Section type JSON identifier Node structure Regular Flow \"sections\": [ { \"type\": \"Flow\", \"label\": \"QuestionsPush\", \"name\": \"Questions to push from\", \"answers\": [ Side-by-Side QuestionTextColumn \"sections\": [ { \"type\": \"QuestionTextColumn\", \"label\": \"Job Information\", \"name\": \"Job Information\", \"answers\": [ Repeatable (or “Repeating”) Repeat \"sections\": [ { \"type\": \"Repeat\", \"label\": \"Subform\", \"name\": \"Subform\", \"rows\": [ { \"pages\": [ { \"label\": \"Subform\", \"name\": \"Subform\", \"sections\": [ { \"type\": \"Flow\", \"label\": \"Subform 1\", \"name\": \"Subform\", \"answers\": [",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Sections"
    }
  },
  {
    "content": "Node format options\n\nWhen you set up your FreeMarker output document, you can choose how the nodes in the JSON tree are named and structured. This helps you align the data model with the requirements of your ecosystem. Choose one of the following options: Standard—This option provides the form elements in an array that you can loop over. Use this option when you want to apply generic logic to all elements of your form. All Labels as Node Names—Uses the page, section, and answer unique IDs (labels) instead of the generic names. Tip:This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. The examples in this topic all use this setting. Flat Answer List—Changes the hierarchical tree structure into a flat data structure (list). Use this option when you want to loop over answers and don’t need to reference the full form structure (pages, sections,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Node format options"
    }
  },
  {
    "content": "or Repeatable Sections).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Node format options"
    }
  },
  {
    "content": "High-level process\n\nStage Description Get the TrueContext data model This gives you the structure that you need to build your template. You can change the naming of tree nodes as needed. There are two ways that you can get the data model for a FreeMarker text document: View Template Input to download a JSON file that shows the data model for a specific Form Definition. You can view the input when you create or edit a Document, or after you save it. Download a Standard JSON file for a submitted record. This shows you actual data that your template needs to handle. For a FreeMarker PDF, Word, or HTML custom layout, the Custom Document Editor, Reference Data tab displays the JSON data model. Tip:The structure of a JSON record can vary widely, even for a single form. The data submitted by field users depends on Conditional Logic, optional questions, and Answer Exceptions An Answer Exception is a form feature that displays color-coded feedback when a mobile user selects or enters an answer.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "High-level process"
    }
  },
  {
    "content": "Answer Exceptions typically show an inspection status (pass/fail) or prompt the user for additional information. Color-coding notifies the user of the Exception's severity., for example. To avoid errors, build a template that can handle the variability of submitted records. Choose a document type and set up the basics FreeMarker templates work with the following document types: FreeMarker text document PDF, Word, and HTML custom layouts Document basics include the: Name (in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.) Description (optional) Filename of the output file Time Zone Source Option to automatically link this document to newly created Form Definitions Configure the Document and add the FreeMarker template For a FreeMarker text document, upload the FTL file. For a custom PDF, Word, or HTML layout, build or paste the template in the Custom",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "High-level process"
    }
  },
  {
    "content": "Document Editor, HTML tab. Test your Document There are a few different ways you can test your document: For a text document: Select Preview to generate a document that uses sample data. To test with actual data, complete and submit a form, and then download the document. If the document contents aren’t what you expected, you can edit the template, upload it to the document, and then generate and download the document again. For a custom layout: In the Custom Document Editor, you can preview with either sample data or with actual data from a dispatched or submitted record. Info:To save time when testing a document with actual data, dispatch the record using the TrueContext REST API. Set up a Request Body and reuse it for testing. The API documentation provides instructions and examples of how to set up an API dispatch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "High-level process"
    }
  },
  {
    "content": "Steps to build an FTL template for a FreeMarker text document\n\nOpen a text editor to start building your FreeMarker template. In TrueContext, go to Forms & Integrations > Documents > Create Document. In the Template-driven Text Documents section, select FreeMarker. On the Document Basics tab, enter the Name and Filename. On the Configuration tab, enter the document details. FreeMarker templates work with the default settings for Data Node Format and Content Type. You don’t need to change these. Data Node Format A FreeMarker template is based on the “tree” structure of our JSON Form Definitions. The Data Node Format setting changes the structure and naming of the page, section, and answer nodes. Choose one of the following options: Standard—This option provides the form elements in an array that you can loop over. Use this option when you want to apply generic logic to all elements of your form. All Labels as Node Names—Uses the page, section, and answer unique IDs (labels) instead of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Steps to build an FTL template for a FreeMarker text document"
    }
  },
  {
    "content": "the generic names. Tip:This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. The examples in this topic all use this setting. Flat Answer List—Changes the hierarchical tree structure into a flat data structure (list). Use this option when you want to loop over answers and don’t need to reference the full form structure (pages, sections, or Repeatable Sections). File Extension Enter the extension for the output file you want to create. For example, enter txt or json. Make sure the extension works with your endpoint or integration system. Content Type This specifies the kind of data contained in the output file. This helps to ensure that the correct application or method is used to view or process the data. FreeMarker Template View Template Input to download a JSON file that shows the data model for a specific Form Definition. You can view",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Steps to build an FTL template for a FreeMarker text document"
    }
  },
  {
    "content": "the input when you create or edit a Document, or after you save it. In your text editor, use this data model as a reference to build your FTL code. Tip:You can start with a very simple template and build on it later. For example, start with a single expression, such as:${dataRecord.identifier} Save the file as .ftl. Select Choose File, and then select your FTL file. (Optional) Preview the output. Are the results as expected? If yes, go to step 7. If no, you can fix the FTL file now or after you save the Document. Info:When you save a document, the system creates a new version of the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected. Tip:If the system displays a syntax error, validate your template with a FreeMarker validator. Select Create to save the FreeMarker Document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Steps to build an FTL template for a FreeMarker text document"
    }
  },
  {
    "content": "Get the TrueContext data model\n\nGo to the FreeMarker Document, and then select View Template Input. You can view the input when you create or edit the Document, or after you save it. Select a Target Form. This should be the form that you want to link to the FreeMarker document. Select Show Template Input. Result: The system generates and downloads a JSON file that contains sample data. Use this view of the tree structure to set up your FreeMarker template. Info:For examples of how to reference the data in your template, refer to the Syntax quick reference. Tip:The data model might include properties for features that aren’t available on your form or tier. Check your template to make sure that you only reference properties that are available and set up on your form. The following example also shows how to reference answers that have additional properties: Note:Test your template thoroughly with actual data from submitted forms.For security reasons, the system prevents the use of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Get the TrueContext data model"
    }
  },
  {
    "content": "include and import functions in a TrueContext FreeMarker template. If the system detects those functions, it removes them from the template.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Get the TrueContext data model"
    }
  },
  {
    "content": "Basic example of template and output\n\nIf the FreeMarker template contains this content: Username: ${dataRecord.user.username!\"\"} ID: ${dataRecord.user.identifier!\"\"} Data record A Data Record is a dispatched or submitted form, or a form saved as a draft on the user's device. Each data record has an associated reference number - a dataRecordID on the server and a clientDataRecordID on the device. ID: ${dataRecord.identifier!\"\"} First: ${answers.firstName[0]!\"\"} Middle: ${answers.middleName[0]!\"\"} Last: ${answers.lastName[0]!\"\"} Date Time of Incident - provided time: ${answers.dateTimeIncident[0].provided.time!\"\"} Date Time of Incident - provided zone: ${answers.dateTimeIncident[0].provided.zone!\"\"} Location of Incident - ${answers.locationOfIncident[0].address!\"\"} Location of Incident - latitude - ${answers.locationOfIncident[0].coordinates.latitude!\"\"} Location of Incident - longitude - ${answers.locationOfIncident[0].coordinates.longitude!\"\"} The output file looks like this: Username:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Basic example of template and output"
    }
  },
  {
    "content": "holmes ID: 123456789 Data record ID: 18000000000 First: John Middle: Alex Last: Smith Date Time of Incident - provided time: 2024-04-24T17:18:00-04:00 Date Time of Incident - provided zone: America/Toronto Location of Incident - 1234 Mystreet, Ottawa, ON A2B 3C4, Canada Location of Incident - latitude 45.3474 Location of Incident - longitude -75.9189",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerTemplates.htm",
      "title": "FreeMarker Document Templates for TrueContext Data",
      "section": "Basic example of template and output"
    }
  },
  {
    "content": "Scenario\n\nOur Standard layouts are designed to work with any form, and they support our Multi-Language Feature. Standard layouts offer a variety of formatting options that you can use to tailor your business document or report. When you need even more control over your document layout and structure, use a Custom Layout.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Scenario"
    }
  },
  {
    "content": "Why use FreeMarker?\n\nWhen you need the full power of a programming language to build templates with sophisticated loop and conditional structures, the Apache FreeMarker Template Language (FTL) can achieve results that other template types can’t. Compare template types This table can help you decide which template to use for a custom layout. Things to consider DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. FreeMarker Handlebars Programming skills None required Basic scripting and programming Basic scripting and programming Tip:Our Handlebars implementation is a subset of the Handlebars framework. When you use the TrueContext version of the Handlebars templating engine, you build your template using JavaScript syntax. Learning curve Easy to Medium Medium to Hard Easy to Medium Code readability Medium Medium High (easiest to read) Best for “Flat” forms that don’t have",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Why use FreeMarker?"
    }
  },
  {
    "content": "Repeatable Sections or images to display in the output Complex logic, formatting, and mathematical operations Basic logic and formatting Outputs PDF, Word, HTML, text PDF, Word, HTML, text PDF, Word, HTML, text Repeatable Sections (“loops”) Limited support Full support Full support Conditional logic in the template Not supported Advanced Basic to Intermediate Formatting and styles using CSS Limited Extensive Moderate Resources for help and troubleshooting TrueContext documentation and TrueContext Community Apache documentation, large user community, and TrueContext documentation TrueContext documentation and large user community",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Why use FreeMarker?"
    }
  },
  {
    "content": "What’s the result?\n\nThe resulting Document works with records in different states, such as Dispatched and Complete. Get the PDF example for a Complete record Get the PDF example for a Dispatched record",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "What’s the result?"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create and Can View permissions. The Can View permissions allow you to preview the Document using actual data from a submitted form. Your TrueContext Team must be on the Advanced or Enterprise tier. You must know how to use FreeMarker. Understanding basic programming concepts—such as variables, if-else conditions, loops, and data structures—will help you understand the FreeMarker Template Language (FTL). If you want to generate custom PDF, Word, or HTML output, you should know HTML and CSS syntax and coding conventions. To reference data based on the TrueContext data model, you should understand JSON syntax.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Import the example\n\nThe Forms Library includes a working Form Definition A Form Definition is a template for an actual form or record that field users interact with. Using the Form Builder, you define the structure, layout, fields and data types, and logic of a form. A Form Definition also specifies resources available to users on their devices, such as Images and Documents, and mappings for data brought in from external sources. and FreeMarker code for a PDF Document. Note:To use this example, your TrueContext Team must be on the Advanced or Enterprise tier. Sign in to TrueContext as an Admin user or a User in a group that has the Can Create FormSpace permission. Navigate to the FormSpace where you want to import the example: Forms & Integrations > List FormSpaces > Name Go to Forms & Integrations > Create New Form > Select a Form from the Forms Library. From the list of Forms, select Inspection - FreeMarker. Select Import. Result: The Form Diagram The Form Diagram is a visual",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Import the example"
    }
  },
  {
    "content": "overview of a selected form version found in the TrueContext Web Portal. The diagram provides details on the form's inputs and outputs and displays the user groups that can access the form. tab opens. Linked Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and output Documents are included with the imported Form Definition. Tip:If your FormSpace has auto-linked Documents and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. set up, these are linked to the imported Form Definition.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Import the example"
    }
  },
  {
    "content": "Study the example\n\nThe imported example includes a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., a Form Definition, and a PDF Document. The document has a custom FreeMarker layout that’s based on the structure of the form. Info:The topic FreeMarker Document Templates for TrueContext Data provides detailed syntax and other reference information. Navigate to the Inspection - FreeMarker PDF document in one of the following ways. From the Form Diagram, select the document. From the top menu, select Forms & Integrations > Documents > Inspection - FreeMarker. Select Formatting > Document Layout. Result: The Template Type section displays the CSS and HTML used to render the document. The example includes comments that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Study the example"
    }
  },
  {
    "content": "explain the HTML code and FreeMarker expressions, as shown in the following example. Select Edit Document > Formatting tab. Tip:The Data Node Format in this example is set to All Labels as Node Names. This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. Select Launch Document Editor. Result: The Custom Document Editor opens. On the Reference Data tab, in the Form list, select Inspection - FreeMarker. In the Submission list, select Sample Data. Result: The system generates a JSON data model that contains sample values. Info:The topic Syntax quick reference explains how to build FreeMarker expressions based on this data model. Go to the HTML tab. This tab contains the example FreeMarker expressions and directives, along with comments to explain the code. Compare the FreeMarker expressions to the data model shown in the Reference Data. Notice",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Study the example"
    }
  },
  {
    "content": "how lines 85-143 set up a Repeatable Section table to break after every 10 rows. <#assign rows = dataRecord.pages.Inspection.sections.Inspection.rows> This line assigns the list of rows from the dataRecord object to a new variable called rows. This simplifies the reference to the rows, making the code cleaner and easier to read. <#list rows as row> This line starts a loop that iterates over each item in the rows list. Each item in the list is assigned to the variable row for the duration of the loop. <#if row?index % 10 == 0> This line checks if the index of the current row (row?index) is a multiple of 10. The ?index built-in returns the zero-based index of the current item in the list. The modulo operator (%) is used to determine if the index is divisible by 10 without a remainder. <#if row?index != 0> This nested if statement checks if the index of the current row is not zero. This ensures that the closing </table> tag doesn’t output until the end of the loop. </table> If the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Study the example"
    }
  },
  {
    "content": "conditions of both if statements are met—the current row index is a multiple of 10 and not zero—this line outputs a closing </table> tag. Go to the CSS tab. This tab contains all of the style classes referenced in the HTML.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Study the example"
    }
  },
  {
    "content": "Preview the document\n\nYou can preview a document with either sample or actual data. Note:Not all CSS properties are supported by the document generator. Be sure to preview and test your documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Preview the document"
    }
  },
  {
    "content": "Preview with sample data\n\nThe TrueContext system generates sample values based on the fields in your Form Definition. Info:Only one row of sample values is generated for each Repeatable Section. To thoroughly test your Repeatable Sections, follow the steps to Preview with actual data. Navigate to your document. Preview the document in either view or edit mode. In view mode, hover over the name, and then select Preview. In edit mode, select Preview. Result: The system prompts you for the preview details. Select the Inspection - FreeMarker form, and then select Show Preview. Result: The system generates a PDF document that includes sample values. Note:The document in this example is designed to work with the Inspection - FreeMarker form. If you select a different form, you might get a document generation error.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Preview with sample data"
    }
  },
  {
    "content": "Preview with actual data\n\nYou must dispatch or submit a record to make actual data available to preview. To preview a document that displays actual data, edit the document and select Launch Document Editor. Info:To save time when testing a document with actual data, dispatch the record using the TrueContext REST API. Set up a Request Body and reuse it for testing. The API documentation provides instructions and examples of how to set up an API dispatch. Navigate to your document, and then select Edit Document. Go to the Formatting tab, and then select Launch Document Editor. On the Reference Data tab, select Form > Inspection - FreeMarker. In the Submissions list, select a record that you dispatched or submitted. Info:The record state is displayed at the beginning of the name in the list of Submissions. You can tell from the state which records were dispatched and which were submitted as complete. At the lower right of the page, select Preview as PDF. Result: The system generates a PDF",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Preview with actual data"
    }
  },
  {
    "content": "document that includes actual values. Note: Some data might not be available for all records, resulting in null or empty values when: Optional questions aren’t answered. Dispatched records don’t have all values prefilled. TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. records are transferred as “Incomplete”. Because the tree “nodes” of the data model depend on the design of each form, undefined nodes might result when you: Use the same custom layout document with multiple forms. Set up Question filtering to hide questions, pages, or sections, or set questions to Hidden on reports. Hiding parts of a form removes the corresponding nodes from the data structure. This example is set up to handle records that have null or empty values. This prevents",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Preview with actual data"
    }
  },
  {
    "content": "document generation failure when a data set is incomplete.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Preview with actual data"
    }
  },
  {
    "content": "Experiment with the example\n\nKeep the following guidelines in mind as you build your own custom layouts: Preview after each change to make sure the document works as expected. Info:When you save a document, the system creates a new version of the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected. Start with the HTML code and get it working correctly. You can add CSS properties later to style the content as needed. Test the document with actual values from records in different states. If you want your document to handle records that might have null or empty values, set up your FreeMarker expressions accordingly. Info:The topic Custom PDF, Word, and HTML Document Layouts describes how to set up a custom layout in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Experiment with the example"
    }
  },
  {
    "content": "Document Generation Errors\n\nThe TrueContext system provides you with detailed error messages when document generation fails. This might happen because: Your custom layout contains incorrect syntax. Your data set has null or empty values that your layout doesn’t handle. Document generation can fail during a preview, when a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. executes, or when a Web Portal user tries to download a document. Use the detailed error messages to fix the layout, and test your document thoroughly before using it in a Production environment.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Document Generation Errors"
    }
  },
  {
    "content": "Related topics\n\nWant to know more? The following topics provide detailed information about the features and functionality used in this recipe. Custom PDF, Word, and HTML Document Layouts FreeMarker Document Templates for TrueContext Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/FreeMarker/FreeMarkerCustomLayoutRecipe.htm",
      "title": "FreeMarker Custom PDF Layout",
      "section": "Related topics"
    }
  },
  {
    "content": "Handlebars for Custom Layouts and Text Documents\n\nTrueContext offers several options you can use to create custom output documents. One option is Handlebars templates. Use Handlebars to create custom layouts or custom document files, such as HTML/CSS, JSON, and CSV. Our Handlebars implementation is a subset of the Handlebars framework. When you use the TrueContext version of the Handlebars templating engine, you build your template using JavaScript syntax. A Handlebars template can get information from submitted records, such as: The user who submitted the record Answers to each question The record identifier and other metadata You can also use conditional statements in your template to control which answers are displayed and how they’re formatted. The following topics provide working examples and the results you can expect. Note:Test your templates thoroughly with actual data from submitted forms. Handlebars DocumentsHandlebars - Basic Question ReferencesHandlebars - Form Submission",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CustomDocumentEditor.htm",
      "title": "Handlebars for Custom Layouts and Text Documents",
      "section": "Handlebars for Custom Layouts and Text Documents"
    }
  },
  {
    "content": "Metadata ReferencesHandlebars - Date and Time FormattingHandlebars: Advanced Question ReferencesHandlebars - Advanced: How to Print out All Questions/Answers in a Regular SectionHandlebars - Advanced: How to Print all Repeatable Section Entries in a TableHandlebars - ConditionsHandlebars - Advanced: How to Conditionally Include AnswersHandlebars - Advanced: How to Add Conditional Formatting",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/CustomDocumentEditor.htm",
      "title": "Handlebars for Custom Layouts and Text Documents",
      "section": "Handlebars for Custom Layouts and Text Documents"
    }
  },
  {
    "content": "About\n\nThe Handlebars document allows you to build custom documents. For example, you could build a custom CSV format, or even a KML file. You can also add loops or conditions to control how the document behaves in different scenarios, based on the data in a form submission. If you are looking to build a custom PDF, Word, or HTML document, use those document types instead; Handlebars can be used to customize the layouts of those documents. Like all documents in TrueContext, Handlebars documents can be sent to cloud and enterprise services, web services, and more. A number of document types are available, and multiple documents can be sent with a single form submission. Read more about documents here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "About"
    }
  },
  {
    "content": "Document Basics\n\nCreate the document, and select Handlebars as the document type. Name the document, and optionally provide a description. Keep the document identifier that was added based on the name, or type in a different identifier. Use a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression to configure a document Filename. This name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Choose a Document Timezone source. Team Preference Setting—Displays times using the Team Time Zone. This applies to the shifted time and not the provided time. Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "Document Basics"
    }
  },
  {
    "content": "Submission—Displays times using the device time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. Custom—Choose a time zone. Custom time zones apply to the shifted time and not the provided time. Optionally auto-link the document to forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "Document Basics"
    }
  },
  {
    "content": "Data Node Format\n\nThis setting changes how the nodes containing question/answer information are named. Choose one of the following options: Standard—This option provides the form elements in an array that you can loop over. Use this option when you want to apply generic logic to all elements of your form. All Labels as Node Names—Uses the page, section, and answer unique IDs (labels) instead of the generic names. Tip:This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. The examples in this topic all use this setting. Flat Answer List—Changes the hierarchical tree structure into a flat data structure (list). Use this option when you want to loop over answers and don’t need to reference the full form structure (pages, sections, or Repeatable Sections).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "Data Node Format"
    }
  },
  {
    "content": "File Extension\n\nThe document can be any text-based file type (HTML, .txt. .xml, etc). This is the file type the document will create.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "File Extension"
    }
  },
  {
    "content": "Content Type\n\nLeave this blank for automatic resolution based on file extension.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "Content Type"
    }
  },
  {
    "content": "Handlebars Template\n\nSupply the document body, using Handlebars to reference answers from your form submission. . The following topics provide more information about how to format a Handlebars template: Handlebars - Basic Question References Handlebars - Form Submission Metadata References Handlebars - Date and Time Formatting Handlebars: Advanced Question References Handlebars - Advanced: How to Print out All Questions/Answers in a Regular Section Handlebars - Advanced: How to Print all Repeatable Section Entries in a Table Handlebars - Conditions Handlebars - Advanced: How to Conditionally Include Answers Handlebars - Advanced: How to Add Conditional Formatting Tip:Remember to format your template according to the content type. If you want to generate an XML document, be sure to format it correctly in XML. Info:We recommend that you escape the data to ensure that the system generates the documents in a valid format. Info:When you save a document, the system creates a new version of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "Handlebars Template"
    }
  },
  {
    "content": "the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005842343.html",
      "title": "Handlebars Documents",
      "section": "Handlebars Template"
    }
  },
  {
    "content": "Example Form\n\nThis is a sample describing the basic data structure of a form. (Highlighting added for the purposes of documentation). All questions in the form are wrapped in the \"Answers\" node (shown here in orange). The parts highlighted in blue here are the questions, followed by a sample answer. The question reference shown here is based on the Unique ID, with any spaces or special characters removed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Example Form"
    }
  },
  {
    "content": "Example Handlebars Reference\n\nYou can have the answer to \"AccountName\" printed in your document using the following reference: {{answers.AccountName.[0]}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Example Handlebars Reference"
    }
  },
  {
    "content": "Result\n\nABC Construction",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Result"
    }
  },
  {
    "content": "How does it work?\n\nThe final part of the reference (after the last \".\") is what will get printed in the document; everything before it tells the document what path to follow through the data structure in order to find it. The reference above tells the document to: Look for the \"answers\" node Look for \"AccountName\" inside of it Look inside of AccountName, for the first value wrapped in square brackets Referencing Many Questions Efficiently (using \"#with\") If you are referencing many questions, you can save yourself a bit of typing. You can do this by using the Handlebars \"with\" helper.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "How does it work?"
    }
  },
  {
    "content": "Example Reference\n\nInstead of referencing multiple questions like: {{answers.AccountName}}<br/>{{answers.Contact}}<br/>{{answers.City}}<br/>{{answers.State}}<br/> You can do this: {{#with answers}}{{Contact.[0]}}<br/>{{City.[0]}}<br/>{{State.[0]}}<br/>{{/with}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Example Reference"
    }
  },
  {
    "content": "Result\n\nJane Doe123 Avenue StreetNew York",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Result"
    }
  },
  {
    "content": "How does it work?\n\nThe #with helper tells the document to look inside of \"answers\" for every reference that comes after it, until it hits the closing /with. Questions with Multiple Properties Answers with certain data types have multiple properties. The properties either combine together to provide a full answer to a question, or the properties contain multiple ways to reference the same answer (for example, a date/time question will contain the same date/time shifted into different timezones). When an answer has multiple properties, you can choose which of these properties you want to be used in your document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "How does it work?"
    }
  },
  {
    "content": "Example Form\n\nThis form has two questions. The first is a Date, which only has one answer. The second is a Duration, which has two properties (in this case, they display the same answer, but in different units - milliseconds, or hours/minutes/seconds).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Example Form"
    }
  },
  {
    "content": "Example Handlebars Reference\n\n{{answers.Hoursworked.[0].display}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Example Handlebars Reference"
    }
  },
  {
    "content": "Result\n\n00:1:00 Image, Sketch Pad, and Signature questions Image, Sketch Pad, and Signature questions all have multiple properties. Because they can be a little difficult to reference, it's easiest to use our custom Handlebars helper for images.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Result"
    }
  },
  {
    "content": "Questions that allow a single image, sketch or signature\n\nFor Signature questions, or for Image and Sketch Pad questions set up to allow only one image, you can get the image to print out with the following reference. Specify the height or width in pixels, and images will auto-scale to maintain proportions, whether they were taken portrait or landscape. Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 {{pf:img answers.PhotoUniqueID.[0] height=200}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Questions that allow a single image, sketch or signature"
    }
  },
  {
    "content": "Questions that allow multiple images or sketches\n\nImage or Sketch Pad questions can be set up to allow multiple images. To print all collected images, use the following reference. {{#each answers.PhotoUniqueID}} {{pf:img this height=200}} {{/each}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Questions that allow multiple images or sketches"
    }
  },
  {
    "content": "Other types of attachment-based questions\n\nTip:If you want to reference or display uploaded images, set up your form with Image, Sketch Pad, or Signature questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000299783.html",
      "title": "Handlebars - Basic Question References",
      "section": "Other types of attachment-based questions"
    }
  },
  {
    "content": "About\n\nIn this article you will learn how to reference form submission metadata in Handlebars. If you are looking to reference form submission answer data, please see Basic Question References, or Advanced Question References.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360033932891.html",
      "title": "Handlebars - Form Submission Metadata References",
      "section": "About"
    }
  },
  {
    "content": "Referencing Form Submission Metadata\n\nTip:To see all of the form submission metadata available to you, navigate to a form submission in the TrueContext admin portal and download the standard JSON file. The dataRecord container wraps the entire form structure. The root node to use to reference any of the submission data, including the metadata is dataRecord.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360033932891.html",
      "title": "Handlebars - Form Submission Metadata References",
      "section": "Referencing Form Submission Metadata"
    }
  },
  {
    "content": "Simple Metadata References\n\nThe following is an excerpt of the first few lines of the standard JSON output of a form submission. { \"identifier\": \"1811776168\", \"version\": \"v2\", \"zone\": \"America/Toronto\", \"referenceNumber\": \"20190919-18117761683\", \"name\": \"Form Submission Name 2019-09-19 08:48:19\",...} Extract the metadata from any node using a reference compiled as follows: {{dataRecord.node}} Example: {{dataRecord.identifier}} Result: 18117761683",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360033932891.html",
      "title": "Handlebars - Form Submission Metadata References",
      "section": "Simple Metadata References"
    }
  },
  {
    "content": "Metadata References with Multiple Properties\n\nSome metadata elements, such as the user, have multiple properties. \"user\": { \"identifier\": \"133936022\", \"username\": \"jane.doe\", \"displayName\": \"Jane Doe (jane.doe)\" } Starting from the root node(dataRecord), traverse through the tree to the final node you want to reference. The format used to extract a single property from any metadata node is as follows: {{dataRecord.node.property}} Example: {{dataRecord.user.identifier}} Result: 133936022",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360033932891.html",
      "title": "Handlebars - Form Submission Metadata References",
      "section": "Metadata References with Multiple Properties"
    }
  },
  {
    "content": "Default Data Formats\n\nThe examples below show the default formatting for dates, times, and date/times in raw JSON. Date: \"Date\" : [ \"2019-01-21\" ] Time: \"Time\" : [ { \"provided\" : { \"time\" : \"12:36:52-05:00\", \"zone\" : \"America/Atikokan\" }, \"shifted\" : \"12:36:52-05:00\" } ] Date/Time: \"DateTime\" : [ { \"provided\" : { \"time\" : \"2019-01-21T12:36:52-05:00\", \"zone\" : \"America/Atikokan\" }, \"shifted\" : \"2019-01-21T12:36:52-05:00\" } ],",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Default Data Formats"
    }
  },
  {
    "content": "Provided and Shifted Time\n\nThe provided time shows the time in the device time zone. The shifted time depends on the Document Time Zone Source, as described in the following table. The examples show the UTC offset for each time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. If the Document Time Zone Source is set to… Then the shifted time is in the… Examples Form Submission Device time zone, which is the provided time. In this case, the provided time and the shifted time are the same. Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T22:07:00+01:00 Team Preference Setting Team time zone Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T14:07:00-07:00 Custom The custom time zone that you specify Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Provided and Shifted Time"
    }
  },
  {
    "content": "Incident - shifted: 2024-06-04T23:07:00+02:00 Formatting Dates and Times in Handlebars To format a date, time, or date/time in Handlebars, use the TrueContext custom date/time formatting helper, described below. Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Provided and Shifted Time"
    }
  },
  {
    "content": "General Format\n\nUse the following string wherever you would like to print out a formatted date, time, or date/time. {{pf:[dataType] answers.myQuestionLabel.0 [format] [timezone]}} Tip:The \"pf\" indicates this is a custom TrueContext helper. dataType: Replace with the data type of the question you are formatting (dateFormat, timeFormat, or dateTimeFormat). These are case-sensitive. format: The format you would like to output. timezone: The timezone you would like to format it in. This is optional. Use one of the codes from this list of tz database time zones.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "General Format"
    }
  },
  {
    "content": "Notes\n\nWhen including spaces or commas in the format, you must wrap the format in quotation marks (\"). When including content that is not part of the simple formatting patterns—such as a word like \"on\" or \"at\"—wrap the content in single quotation marks (').",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Notes"
    }
  },
  {
    "content": "Date\n\nTo output the format: 2001-07 {{pf:dateFormat answers.Date.0 \"YYYY-MM\"}} To output the format: Mon, January 21, 2019 {{pf:dateFormat answers.Date.0 \"EEE, MMMM DD, YYYY\"}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Date"
    }
  },
  {
    "content": "Time\n\nTo output the format: 1:15 PM {{pf:timeFormat answers.Time.0 \"h:mm a\"}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Time"
    }
  },
  {
    "content": "Date/Time\n\nTo output the format: 13:12 on Mon, 21 Jan 2019 {{pf:dateTimeFormat answers.DateTime.0 \"HH:mm 'on' EEE, d MMM yyyy \"}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360022212811.html",
      "title": "Handlebars - Date and Time Formatting",
      "section": "Date/Time"
    }
  },
  {
    "content": "What can I use this for?\n\nUsing Advanced question references, you can create more dynamic documents. Here are some things that you can accomplish: Print out all questions/answers in a regular section Print all Repeatable Section Entries in a table Conditionally Include Answers Apply Conditional Formatting These things require you to understand more of the data structure of a form submission. If you are building a custom PDF, Word, or HTML Document using Handlebars, scroll past the \"answers\" node until you get to \"dataRecord\" under Reference Data in the document editor screen. This will show you which questions you can reference. Reference Questions in Regular Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "What can I use this for?"
    }
  },
  {
    "content": "Example Form\n\nThis is a sample describing the basic data structure of a form with regular sections. (Highlighting added for the purposes of documentation). Remember that a form is structured like the following: A form can have one or many pages Each page can contain one or many sections Each section can contain one or many questions The form submission data is structured in the same way: (Not pictured) The dataRecord container wraps the entire form structure. This is followed by a \"pages\" container, which wraps all pages in the form. The pages container includes a node for each of the pages in the form, with the node name being the page's Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. (with spaces and special characters stripped). Each page has a \"sections\" container, which wraps all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Example Form"
    }
  },
  {
    "content": "sections in the page. The sections container includes a node for each of the sections on the page, with the node name being the section's Unique ID (with spaces and special characters stripped). Each section has an \"answers\" container, which wraps all questions in the section. The answers container includes a node for each of the questions on the page, with the node name being the question's Unique ID (with spaces and special characters stripped).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Example Form"
    }
  },
  {
    "content": "Example Handlebars Reference\n\nYou could have the answer to \"CustomerName\" printed in your document using the following reference: {{dataRecord.pages.HoursWorked.sections.WorkOrder.answers.CustomerName.values.[0]}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Example Handlebars Reference"
    }
  },
  {
    "content": "Result\n\nJane",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Result"
    }
  },
  {
    "content": "How does it work?\n\nThe final part of the reference (after the last \".\") is what will get printed in the document; everything before it tells the document what path to follow through the data structure in order to find it. The reference above tells the document to: Look for the \"dataRecord\" container Look for the \"pages\" container inside of it Look for the specific \"HoursWorked\" page Look for the \"sections\" container inside of that page Look for the specific \"WorkOrder\" section Look for the \"answers\" container inside of that section Look for the specific \"CustomerName\" question Look for the \"values\" property inside of that question Look for the first thing wrapped in square brackets inside of \"values\" Referencing Questions in Repeatable Sections Repeatable sections allow you to add multiple entries for the same set of questions, as many times as a user needs to. Because of this, Repeatable Sections have some extra containers in their data structure.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "How does it work?"
    }
  },
  {
    "content": "Example Form\n\nThis is a sample describing the basic data structure of a form with a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries., \"type\": \"Repeat\". (Highlighting added for the purposes of documentation). A form submission with Repeatable sections is structured like the following: A form can have one or many pages Each page can contain one or many sections Every Repeatable Section can have multiple rows (entries) Each row contains the structure of the Repeatable section The single page The sections within that page The answers within that page",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Example Form"
    }
  },
  {
    "content": "Example Handlebars Reference\n\nYou could have the answer to \"TodaysDate\" from the first entry in your Repeatable section printed in your document using the following reference: {{dataRecord.pages.HoursWorked.sections.Timesheet.rows.[0].pages.Timesheet.sections.TimesheetSection.answers.TodaysDate.values.[0]}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Example Handlebars Reference"
    }
  },
  {
    "content": "Result\n\n2018-2-22 Typically, you wouldn't use this exact reference -- you would be better off using a basic reference if you're referencing the answer to a single question. But, understanding this structure is useful for the following tasks: Display all entries in a Repeatable Section as a table",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300443.html",
      "title": "Handlebars: Advanced Question References",
      "section": "Result"
    }
  },
  {
    "content": "About\n\nIf a regular section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer. contains a number of questions you would like to print out with exactly the same formatting, it can be most efficient to loop through them, rather than referencing each question individually. We will print out the below example into a document from a Regular Section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300786.html",
      "title": "Handlebars - Advanced: How to Print out All Questions/Answers in a Regular Section",
      "section": "About"
    }
  },
  {
    "content": "Example Form\n\nHere is a form with a Regular Section named “Common Area”. Three questions with Pass/Fail answers are shown (but the section can have more, and this example would still work).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300786.html",
      "title": "Handlebars - Advanced: How to Print out All Questions/Answers in a Regular Section",
      "section": "Example Form"
    }
  },
  {
    "content": "HTML and Handlebars Example:\n\nWe will \"loop\" through all the answers in the section, printing each question/answer pair as a table row. Note: This example works for questions with simple, single property answers, like text fields or dropdowns. Refer to our Basic References article to learn about referencing questions with other data types. For example, photos need to have their \"values\" printed out in a specific way. <table> <!-- Below are the column headers --> <thead> <tr> <th>Question</th> <th>Rating</th> </tr> </thead> <tbody> <!-- This \"each\" is the beginning of the loop --> {{#each dataRecord.pages.FacilityInspection.sections.CommonArea.answers}} <!-- Below is a table row and cells, with the references (starting AFTER the answers container)--> <tr><td>{{question}}</td><!--The question text --><td>{{values.[0]}}</td> <!--The question's answer --></tr><!-- This is the end of the loop--> {{/each}} </tbody></table>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300786.html",
      "title": "Handlebars - Advanced: How to Print out All Questions/Answers in a Regular Section",
      "section": "HTML and Handlebars Example:"
    }
  },
  {
    "content": "How does it work?\n\nThe #each helper tells the document, for each question inside of \"answers\" in the CommonArea section, to print out a table row containing the two cells with the question text and the question answer. When it is done with one \"answer\", it loops back and gets the next one, until all questions in the section have been printed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000300786.html",
      "title": "Handlebars - Advanced: How to Print out All Questions/Answers in a Regular Section",
      "section": "How does it work?"
    }
  },
  {
    "content": "Example Form\n\nHere is a form with a Repeatable Section (which collects Today's Date, and the Hours Worked). Only one entry in the repeatable section is shown here to save on space. One \"row\" in the above data structure is one repeatable section entry. You will want to loop through the rows to print them all. In the example below, we will print each \"row\" in the repeatable section into its own row in the table. This will work whether there are one or many entries in the repeatable section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301043.html",
      "title": "Handlebars - Advanced: How to Print all Repeatable Section Entries in a Table",
      "section": "Example Form"
    }
  },
  {
    "content": "HTML and Handlebars Example:\n\n<table><!-- Below are the column headers --><thead><tr><th>Date</th><th>Hours</th></tr></thead><tbody> <!-- This \"each\" is the beginning of the loop --> {{#each dataRecord.pages.HoursWorked.sections.Timesheet.rows}} <!-- Below is a table row and cells, with the question references (starting AFTER the rows container)--> <tr><td>{{pages.Timesheet.sections.TimesheetSection.answers.TodaysDate.values.[0]}}</td><td>{{pages.Timesheet.sections.TimesheetSection.answers.Hoursworked.values.[0].display}}</td></tr><!-- This is the end of the loop--> {{/each}} </tbody></table>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301043.html",
      "title": "Handlebars - Advanced: How to Print all Repeatable Section Entries in a Table",
      "section": "HTML and Handlebars Example:"
    }
  },
  {
    "content": "How does it work?\n\nThe #each helper tells the document, for each \"row\" that it finds in the Repeatable section, to print out a table row containing the two cells with the question references. When it is done with one \"row\", it loops back and starts work on the next row, until all rows have been printed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301043.html",
      "title": "Handlebars - Advanced: How to Print all Repeatable Section Entries in a Table",
      "section": "How does it work?"
    }
  },
  {
    "content": "Example\n\nIn the example below, the string \"Pass\" will be shown if the \"Score\" question's answer is greater than 50. If it is NOT greater than 50, the string \"Fail\" will be shown. {{#pf:if answers.Score.[0] \">\" \"50\"}}Pass{{else}}Fail{{/pf:if}} Supported Operators You can write a condition that tests any part of a question, section, or page using the following operators. Note: The operator and comparison values must be wrapped in quotation marks (\").",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Example"
    }
  },
  {
    "content": "Text\n\nOperator Description Data Example is!is equals (exact match)does not equal text, number {{#pf:if answers.Rating.[0] \"is\" \"Fail\"}} in!in equals one of a list of strings does not equal any of a list of strings text, number {{#pf:if answers.Rating.[0] \"in\" \"Excellent\" \"Good\"}} contains !contains contains does not contain text {{#pf:if answers.Comments.[0] \"contains\" \"Poor\"}} starts-with!starts-with starts with does not start with text {{#pf:if answers.Name.[0] \"starts-with\" \"John\"}} ends-with!ends-with ends withdoes not end with text {{#pf:if answers.Name.[0] \"ends-with\" \"Smith\"}} matches!matches matches a regular expressiondoes not match a regular expression text {{#pf:if answers.ID.[0] \"matches\" \"^(ab)+$\"}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Text"
    }
  },
  {
    "content": "Numeric Only\n\nOperator Description Data Example = != equals (exact match) does not equal number {{#pf:if answers.Count.[0] \"=\" \"5\"}} < less than number {{#pf:if answers.Score.[0] \"<\" \"50\"}} <= less than or equal to number {{#pf:if answers.Age.[0] \"<=\" \"10\"}} > greater than number {{#pf:if answers.Score.[0] \">\" \"50\"}} >= greater than or equal to number {{#pf:if answers.Age.[0] \">=\" \"50\"}} Possible Comparisons",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Numeric Only"
    }
  },
  {
    "content": "Compare a question to a static value\n\nNote:The static value must always be wrapped in quotation marks (\"). {{#pf:if answers.Score.[0] \">\" \"50\"}}Something to display.{{/pf:if}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Compare a question to a static value"
    }
  },
  {
    "content": "Compare a question to another question\n\n{{#pf:if answers.Score.[0] \">\" answers.LastScore.[0]}}Something to display.{{/pf:if}} Basic Examples",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Compare a question to another question"
    }
  },
  {
    "content": "Print an answer only if it equals \"Fail\"\n\n{{#pf:if answers.Rating.[0] \"is\" \"Fail\"}}{{answers.Rating.[0]}}{{/pf:if}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Print an answer only if it equals \"Fail\""
    }
  },
  {
    "content": "Print out an answer of \"1\" as \"Pass\". Otherwise, print \"Fail\"\n\n{{#pf:if answers.Rating.[0] \"=\" \"1\"}}Pass{{else}}Fail{{/pf:if}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000634103.html",
      "title": "Handlebars - Conditions",
      "section": "Print out an answer of \"1\" as \"Pass\". Otherwise, print \"Fail\""
    }
  },
  {
    "content": "Only include a question if it has a certain answer\n\nIn the below example, we will only include a question and its answer on the document if its answer is \"Fail\". Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301906.html",
      "title": "Handlebars - Advanced: How to Conditionally Include Answers",
      "section": "Only include a question if it has a certain answer"
    }
  },
  {
    "content": "Handlebars and HTML Example:\n\n{{#pf:if answers.Carpets.values.[0] \"is\" \"Fail\"}}<p> Are the carpets clean? {{answers.Carpets.[0]}}</p>{{/pf:if}}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301906.html",
      "title": "Handlebars - Advanced: How to Conditionally Include Answers",
      "section": "Handlebars and HTML Example:"
    }
  },
  {
    "content": "Include all answers in a section that have a certain answer\n\nThis example reuses the example from this article on printing out all answers in a section into a table. We recommend becoming familiar with that example first, as this section focuses only on the formatting. In this scenario, we will only print the question and answer in a table row if the question is answered \"Fail\".",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301906.html",
      "title": "Handlebars - Advanced: How to Conditionally Include Answers",
      "section": "Include all answers in a section that have a certain answer"
    }
  },
  {
    "content": "Handlebars and HTML Sample\n\nThis example works for questions with simple, single property answers, like text fields or dropdowns. Refer to our Basic Reference article to learn about referencing questions with other data types. For example, photos need to have their \"values\" checked and printed out in a specific way. <table> <!-- Below are the column headers --> <thead> <tr> <th>Question</th> <th>Rating</th> </tr> </thead> <tbody> <!-- This \"each\" is the beginning of the loop --> {{#each dataRecord.pages.FacilityInspection.sections.CommonArea.answers}} {{#pf:if values.[0] \"is\" \"Fail\"}} <!-- Below is a table row and cells, with the references (starting AFTER the answers container)--> <tr><td>{{question}} <!--The question text --></td><td>{{values.[0]}} <!--The question's answer --></td> </tr>{{/pf:if}} <!-- This is the end of the loop--> {{/each}} </tbody></table>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301906.html",
      "title": "Handlebars - Advanced: How to Conditionally Include Answers",
      "section": "Handlebars and HTML Sample"
    }
  },
  {
    "content": "How it works\n\nThe #each helper loops through all the answers in the section. When it reaches the first question, it tests if its value is \"Fail\". If yes, it prints out a table row for it. If no, it will not print a table row. Then, it moves on to the next question and does the same test, until there are no more questions left in the section.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301906.html",
      "title": "Handlebars - Advanced: How to Conditionally Include Answers",
      "section": "How it works"
    }
  },
  {
    "content": "About\n\nUsing Handlebars, you can have things in your PDF/Word/HTML documents displayed in different ways depending on a set of conditions. For example, you can display the way an answer is shown depending on what the answer is.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "About"
    }
  },
  {
    "content": "Format the background color of an answer\n\nIt is a common request to \"highlight\" questions that have a certain answer, such as highlighting \"Fail\" answers red and \"Pass\" answers green. You can accomplish this by testing if the answer equals a certain value, and then using CSS formatting to change the background color based on this.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "Format the background color of an answer"
    }
  },
  {
    "content": "Handlebars and HTML Example\n\nUse CSS and HTML to make the formatting conditional. CSS .Pass { background-color:#b6e89d; } .Fail { background-color:#f49089; } .Recheck { background-color:#ffff99; } HTML Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 <p> Are the carpets clean? <span class=\"{{#pf:if answers.Carpets.[0] \"is\" \"Pass\"}}Pass{{/pf:if}} {{#pf:if answers.Carpets.[0] \"is\" \"Fail\"}}Fail{{/pf:if}} {{#pf:if answers.Carpets.[0] \"is\" \"Recheck\"}}Recheck{{/pf:if}}\">{{answers.Carpets.[0]}} </span> </p> Example Document Output Answer Output Pass Fail Recheck",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "Handlebars and HTML Example"
    }
  },
  {
    "content": "How does it work?\n\nThe #pf:if helper references a question and tests if it equals a value. If it does, the string of text (the class) that comes before the closing /pf:if will be used.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "How does it work?"
    }
  },
  {
    "content": "Format the background color of answers in a table\n\nThis example shows you how to use CSS and HTML to print answers from a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. in a table. Use CSS and HTML to format the table cells based on the answer to each entry.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "Format the background color of answers in a table"
    }
  },
  {
    "content": "Handlebars and HTML Example\n\nCSS .Pass { background-color:#b6e89d; } .Fail { background-color:#f49089; } .Recheck { background-color:#ffff99; } table { width: 50% } td { text-align:left; border: solid 1px #000000; border-collapse: collapse; padding-left: 1em; } HTML We will \"loop\" through all the answers in the section, printing each question/answer pair as a table row, and formatting the table cell based on the answer. <!-- Two-Column Table for Repeatable Sections --> <table> <thead> <tr> <th class =\"tableColumn\" >Room</th> <th class =\"tableColumn\" >Result</th> </tr> </thead> <tbody> <!-- Print out a table row for each repeatable section row --> {{#each dataRecord.pages.SiteInformation.sections.RSSectionName.rows}} {{#with pages.RSPageName.sections.RoomInfo.answers}} <tr> <td>{{Room.values.[0]}}</td> <!--Conditional formatting for table cell--> <td class=\"{{#pf:if Result.values.[0] \"is\" \"Pass\"}}Pass{{/pf:if}} {{#pf:if Result.values.[0] \"is\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "Handlebars and HTML Example"
    }
  },
  {
    "content": "\"Fail\"}}Fail{{/pf:if}}\">{{Result.values.[0]}}</td> </tr> {{/with}} {{/each}} </tbody> </table>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000301703.html",
      "title": "Handlebars - Advanced: How to Add Conditional Formatting",
      "section": "Handlebars and HTML Example"
    }
  },
  {
    "content": "Other Documents - Meetings Invites and Business Cards\n\nThis section includes the following content: Event InvitationsBusiness Cards",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/OtherDocumentsMeetingsInvitesBusinessCards.htm",
      "title": "Other Documents - Meetings Invites and Business Cards",
      "section": "Other Documents - Meetings Invites and Business Cards"
    }
  },
  {
    "content": "About\n\nUse this document type to send an event invitation when a form is submitted. The details of the event (date, time, description, etc.) are populated with answers from the form. Event invitations are usually sent by email through an email data destination, but can also be sent to any file-based destination. Recipients can accept invites and automatically schedule events into the calendar of their mail program.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "About"
    }
  },
  {
    "content": "Event invitations can be used for a number of business functions:\n\nBook follow-up appointments with customers Schedule phone calls to follow up on Sales Leads Book site visits in the calendars of field technicians A number of document types are available, and multiple documents can be sent with a single form submission. Read more about documents here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Event invitations can be used for a number of business functions:"
    }
  },
  {
    "content": "iCalendar File Format\n\nEvent invitations are in an iCalendar file format. The file extension is \".ics\". This file format is used for sending meeting requests, tasks, etc. When accessed through supporting software, like an email client or calendar application, recipients can respond to the invite and add it to their calendar. Supporting software includes Google Calendar, Apple Calendar, Yahoo! Calendar, and Microsoft Outlook.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "iCalendar File Format"
    }
  },
  {
    "content": "Settings\n\nCreate the document, select Event Invitation as the document type, then follow the instructions below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Settings"
    }
  },
  {
    "content": "Document Basics\n\nName the document. Optionally provide a description. Document Unique Identifier Keep the document identifier that was added based on the name, or type in a different identifier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Document Basics"
    }
  },
  {
    "content": "Auto-Link new forms to this document\n\nSelecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against auto-linked forms will be downloadable in this document format from the \"Data\" tab of the portal. Event Details",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "Event Date and Time\n\nProvide the start date and time of the event, as well as the duration (length) of the event. These fields are required. Enter unique IDs to use the answers provided in form submissions. Simply type the unique IDs as they appear in the form builder. Read more about unique IDs. Required Data Types for Inputs Each of these fields must have a particular data type in order for the date/time to be completed correctly. Date: Form question must be a date selector Time: Form question must be a time selector Duration (length of event in minutes): Form question must be a Number-> Integer (\"1\") data type",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Event Date and Time"
    }
  },
  {
    "content": "Busy Status\n\nShow recipient as busy during event? This will change the recipient's status to \"busy\" on their calendar during the event time if the invite is accepted. Choose from one of the following options: Answer defined here: Choose Busy or Free. The recipient will always be marked with this choice. Answer from form question: Enter a unique ID to take the answer from a Yes/No question. (yes means \"busy\")",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Busy Status"
    }
  },
  {
    "content": "Event Location\n\nThis is where the event will occur. This location will be listed in the event invitation. This can be an address (\"123 Elm Street, Ottawa\"). But any value can be handled (\"ABC Corp. Main Office, Room 214\"). Use Data Reference Expression Language to use answers from form submissions. Optionally combine multiple expressions, like: \"%a[Address], %a[City]\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Event Location"
    }
  },
  {
    "content": "Organizer\n\nChoose who will be listed as the event organizer. Answer from form question: Enter the question unique ID with an email data type. This allows you to choose an organizer in a form. Answer defined here: Enter the email address of the person who will always be listed as organizer. Use data record submitter's email address: The submitter of the form will be the organizer. Use data record submitter's email address: The submitter of the form will be the organizer; their alternate email address will be shown. Event Properties Note: Invitations received in Outlook will use the subject line and body from an Email destination as the Event title and body. For consistency across email clients, match the linked destination’s subject line and body to the options entered below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Organizer"
    }
  },
  {
    "content": "Event Title\n\nThis is the title of the event that will be displayed in emails (unless viewing in Outlook). Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, \"Follow-up Visit with %a[Customer Name]\" would name the file like \"Follow-up Visit with John Smith.\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Event Title"
    }
  },
  {
    "content": "Event Message Body\n\nAdd a custom body message to the event. Compose a custom message Apply formatting with the rich text editor, including styles, images, tables, and lists Use Data Reference Expression Language to insert answers from your form: Customize emails by inserting a contact name into greetings with \"%a[unique ID]\" Add a signature line to the email and insert the form submitter's name with \"%u\" Press the \"Preview Body\" button to see a sample of what the body will look like.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Event Message Body"
    }
  },
  {
    "content": "Document Timezone Source\n\nChoose a document time zone source. This is the time zone for all dates and times in your document. Team Preference Setting: Will use the time zone chosen for the team Data Record: Will use the time zone of the mobile device used to submit the form Custom: Choose a time zone. Advanced Note: The following fields do not affect meeting requests sent as email messages. They only affect data written into iCalendar (.ics) files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Document Timezone Source"
    }
  },
  {
    "content": "Filename\n\nThis will name the .ics files that are sent. This will not affect invitations sent by email. Tip:A recognizable file name can help you quickly search for and identify files. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure filenames are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %d or %t - the date or time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Filename"
    }
  },
  {
    "content": "Document to Include inside the iCalendar file\n\nOptionally include another document in the iCalendar file. The document will be included as base64 data. It will not result in an email attachment. When set up is complete, press \"Create.\" Link the document to a form in order to use it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501188EventInvitations.html",
      "title": "Event Invitations",
      "section": "Document to Include inside the iCalendar file"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501198BusinessCards.html",
      "title": "Business Cards",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501198BusinessCards.html",
      "title": "Business Cards",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %t - the time the form was submitted Document Timezone Source Choose a document time zone source. This is the time zone for all dates and times in your document. Team",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501198BusinessCards.html",
      "title": "Business Cards",
      "section": "Filename"
    }
  },
  {
    "content": "Preference Setting: Will use the time zone chosen for the team Data Record: Will use the time zone the form submission is made from (as chosen on the mobile device). Custom: Choose a time zone. Auto-Link new forms to this document Selecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against these forms will be downloadable in this document format from the \"Data\" tab of the portal. Card Details vCard Version Select a vCard version. This controls the basic structure of the data. Basic Fields Fill the contact information. Use Data Reference Expression Language to reference questions in the form. For example, %a[First Name] would use the answer to a question with the unique ID \"First Name.\" Email Address and Phone Number Fields Enter unique IDs to fill these fields. Make sure that these questions are the correct data type in the form (Email for Email, Phone for Phone Number). This will ensure that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501198BusinessCards.html",
      "title": "Business Cards",
      "section": "Filename"
    }
  },
  {
    "content": "only correctly formatted values are used. Geo Source If you want to include a Geo location in the vCard, choose where in the form the geo stamp should be pulled from. This documents where the mobile device was when the contact information was collected. None: Do not include a geo location. Data Record GeoStamp: Use the submitted form's hidden geostamp. This will only work if this option is turned on in the form's \"Advanced Settings\" in the Form Properties Form Properties is a tab that an admin can access on a form's overview page in the Web Portal. The form properties include various settings and configuration, including Mobile App behavior and how the user interacts with the form. tab. Geo Control Question: Use the answer to a geo control question in the form. Type in the question's unique IDs. When set up is complete, press \"Create.\" Link the document to a form in order to use it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501198BusinessCards.html",
      "title": "Business Cards",
      "section": "Filename"
    }
  },
  {
    "content": "Document Formats for Integrations and Developers\n\nThis section includes the following content: CSV DocumentsJSON DocumentsXML DocumentsDREL DocumentsEscape Special Characters and Line Breaks for Template-driven Text DocumentsForm Submission Formats: Standard vs. Labels as Node Names",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/DocumentFormatsIntegrations.htm",
      "title": "Document Formats for Integrations and Developers",
      "section": "Document Formats for Integrations and Developers"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %t - the time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Filename"
    }
  },
  {
    "content": "Document Timezone Source\n\nChoose a document time zone source. This is the time zone for all dates and times in your document. Team Preference Setting: Will use the time zone chosen for the team Data Record: Will use the time zone the form submission is made from (as chosen on the mobile device). Custom: Choose a time zone.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Document Timezone Source"
    }
  },
  {
    "content": "Auto-Link new forms to this document\n\nSelecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against these forms will be downloadable in this document format from the \"Data\" tab of the portal. Configuration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "Questions to Include\n\nOptions Include all questions: All questions will be included in the document. Include selected questions, hide all others: Only the selected fields will be included in the document. Hide selected questions, include all others: The selected fields will be hidden in the document. All other fields will be included. The columns you specify will appear in the order that they appear in the form. Metadata columns (selected below) will appear first.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Questions to Include"
    }
  },
  {
    "content": "Page Orientation\n\nChoose the layout of the CSV file. Horizontal: all the data from one form submission is displayed in one row Vertical: all the data from one form submission is displayed in one column The first row/column (depending on chosen orientation) will show the question labels/metadata labels, shown below. Horizontal Format Vertical Format",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Page Orientation"
    }
  },
  {
    "content": "Metadata Columns\n\nMetadata is automatically collected when the form is submitted. Move columns to the \"selected\" area to include them in the CSV file. Move them up and down in the list to control what order they will appear in. When set up is complete, press \"Create.\" Link the document to a form in order to use it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501318CSVDocuments.html",
      "title": "CSV Documents",
      "section": "Metadata Columns"
    }
  },
  {
    "content": "About\n\nOutput data from your submitted forms in a JSON format, perfect for integration with your backend system. There are different options for structuring and customizing your JSON format. JSON documents can be sent to cloud and enterprise services, web services, and more. A number of document types are available, and multiple documents can be sent with a single form submission. Note:If a JSON document is linked to a Multi-Language Form, the document displays in the languages configured when attached to a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. The document shows translated form content based on the form’s translation file. The key names and question Unique IDs don’t change. For your integrations, map to the question Unique ID A Unique ID refers to the specific identifier",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "About"
    }
  },
  {
    "content": "of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents., which doesn’t change, and not the question text.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "About"
    }
  },
  {
    "content": "Create a Document\n\nDocuments are created in the Web Portal, not the Form Builder. To create a document: Hover over Forms & Integrations, and then select Documents. From the Documents page, select Create Document. Choose a document type. Fill out the details required for your document type.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Create a Document"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %t - the time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Filename"
    }
  },
  {
    "content": "Document Time Zone Source\n\nChoose a document time zone source. This is the time zone for the shifted dates and times in your document. Team Preference Setting—Displays times using the Team Time Zone. This applies to the shifted time and not the provided time. Form Submission—Displays times using the device time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. Custom—Choose a time zone. Custom time zones apply to the shifted time and not the provided time.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Document Time Zone Source"
    }
  },
  {
    "content": "Auto-Link new forms to this document\n\nSelecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against these forms will be downloadable in this document format from the \"Data\" tab of the portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "Embed attachments within the Form Submission Document\n\nThis will include the attachment \"bytes\" property, which is necessary if you need to use the images collected at any point.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Embed attachments within the Form Submission Document"
    }
  },
  {
    "content": "Data Node Format\n\nThis setting changes how the nodes containing question/answer information are named. Choose one of the following options: Standard—This option provides the form elements in an array that you can loop over. Use this option when you want to apply generic logic to all elements of your form. All Labels as Node Names—Uses the page, section, and answer unique IDs (labels) instead of the generic names. Tip:This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. The examples in this topic all use this setting. Flat Answer List—Changes the hierarchical tree structure into a flat data structure (list). Use this option when you want to loop over answers and don’t need to reference the full form structure (pages, sections, or Repeatable Sections). For more details on these options, please read: Form Submission Formats: Standard vs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Data Node Format"
    }
  },
  {
    "content": "Labels as Node Names.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Data Node Format"
    }
  },
  {
    "content": "Image Compression Ratio\n\nEnter a value between 0 and 1 to compress images embedded in this document. Compression will reduce the size of the document, at the cost of image quality. 0 is completely compressed, 1 is no compression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Image Compression Ratio"
    }
  },
  {
    "content": "Wrapping JSON Options\n\nIf your downstream service requires that JSON documents be wrapped in either a JSON object or array, select the appropriate option. You may need to use this option if the endpoint is not built by you, and may have requirements for the incoming data that TrueContext does not adhere to without these wrappers. An example of this is the Salesforce Apex REST Data Destination. Example Wrapped Outputs JSON Object = on, JSON Array = off\"<JSON Object Name>\" : { { <data record json> }} JSON Object = off, JSON Array = on[ { <data record json> }] JSON Object = on, JSON Array = on\"<JSON Object Name>\" : { [ { <data record json> }] } JSON Object = off, JSON Array = off { <data record json> } When set up is complete, select Create. Link the document to a form in order to use it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "Wrapping JSON Options"
    }
  },
  {
    "content": "JSON Document Samples\n\nThe following examples show the structure of Regular and Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. data and metadata in a JSON document. Note:Changes to the JSON Format:For TrueContext REST APIs and JSON/XML document formats, we maintain a practice of not deleting existing properties or objects. A mechanism for versioning is used to facilitate deletions to our JSON/XML formats when necessary. Customers will be contacted in advance if they will be affected.We will occasionally, however, add new properties to existing APIs to support new features in the TrueContext Platform. We do not create a new version of our APIs for new properties, and we advise that clients of our APIs are resilient to additions by ignoring unknown properties. Client applications should ignore any properties",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "JSON Document Samples"
    }
  },
  {
    "content": "that are not relevant to their use case.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "JSON Document Samples"
    }
  },
  {
    "content": "JSON example of a Regular Section\n\nThis JSON example contains data and metadata from a Regular Section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single instance of each answer., referred to in the JSON as type “Flow”. \"pages\": [{ \"label\": \"LI\", \"name\": \"Labor Information\", \"sections\": [{ \"type\": \"Flow\", \"label\": \"WP\", \"name\": \"Work Performed\", \"answers\": [{ \"label\": \"DescWork\", \"dataType\": \"FreeText\", \"question\": \"Description of Work\", \"values\": [\"This is another test description.\"] }, { \"label\": \"Comments\", \"dataType\": \"FreeText\", \"question\": \"Comment(s)\", \"values\": [\"This is another test comment. \"] }, { \"label\": \"PoI\", \"dataType\": \"Image\", \"question\": \"Photos/Sketch of Interest\", \"values\": [{ \"identifier\": \"7da58b3b-cb3e-4895-8b8e-a9a3f6bc9f9f\", \"filename\": \"PoI_1.jpg\", \"contentType\": \"image/jpg\" }] }] }]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "JSON example of a Regular Section"
    }
  },
  {
    "content": "JSON example of a Repeatable Section\n\nThis JSON example contains data and metadata from a Repeatable Section, referred to in the JSON as type “Repeat”. \"pages\": [{ \"label\": \"Job Information\", \"name\": \"Job Information\", \"sections\": [{ \"type\": \"Repeat\", \"label\": \"Equipment details\", \"name\": \"Collect details about equipment\", \"rows\": [{ \"pages\": [{ \"label\": \"ED\", \"name\": \"Equipment Details\", \"sections\": [{ \"type\": \"Flow\", \"label\": \"New Section 3\", \"name\": \"null\", \"answers\": [{ \"label\": \"Make\", \"dataType\": \"FreeText\", \"question\": \"Make\", \"values\": [\"Equipment Make 4\"] }, { \"label\": \"Model\", \"dataType\": \"FreeText\", \"question\": \"Model\", \"values\": [\"4A\"] }, ] }] }{ \"label\": \"ED\", \"name\": \"Equipment Details\", \"sections\": [{ \"type\": \"Flow\", \"label\": \"New Section 3\", \"name\": \"null\", \"answers\": [{ \"label\": \"Make\", \"dataType\": \"FreeText\", \"question\": \"Make\", \"values\": [\"Equipment Make 3\"] }, { \"label\": \"Model\", \"dataType\": \"FreeText\", \"question\": \"Model\", \"values\": [\"2A\"] }, ] }] }] }]\"footer\": {",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "JSON example of a Repeatable Section"
    }
  },
  {
    "content": "\"answers\": [] } }]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501208JSONDocuments.html",
      "title": "JSON Documents",
      "section": "JSON example of a Repeatable Section"
    }
  },
  {
    "content": "About\n\nOutput data from your submitted forms in an XML format, for integration with your backend system. There are different options for structuring and customizing your XML format. XML documents can be sent to cloud and enterprise services, web services, and more. A number of document types are available, and multiple documents can be sent with a single form submission. Read more about documents here. Note:If an XML document is linked to a Multi-Language Form, the document displays in the languages configured when attached to a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. The document shows translated form content based on the form’s translation file. The key names and question Unique IDs don’t change. For your integrations, map to the question Unique ID A Unique ID refers to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "About"
    }
  },
  {
    "content": "the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents., which doesn’t change, and not the question text.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "About"
    }
  },
  {
    "content": "Settings\n\nCreate the document, select XML as the document type, then follow the instructions below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Settings"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %t - the time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Filename"
    }
  },
  {
    "content": "Document Time Zone Source\n\nChoose a document time zone source. This is the time zone for the shifted dates and times in your document. Team Preference Setting—Displays times using the Team Time Zone. This applies to the shifted time and not the provided time. Form Submission—Displays times using the device time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. Custom—Choose a time zone. Custom time zones apply to the shifted time and not the provided time.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Document Time Zone Source"
    }
  },
  {
    "content": "Auto-Link new forms to this document\n\nSelecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against these forms will be downloadable in this document format from the Data & Analytics tab of the portal.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "Embed attachments within the Data Record Document\n\nThis will include the attachment \"bytes\" property, which is necessary if you need to use the images collected at any point.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Embed attachments within the Data Record Document"
    }
  },
  {
    "content": "Data Node Format\n\nThis setting changes how the nodes containing question/answer information are named. Choose one of the following options: Standard—This option provides the form elements in an array that you can loop over. Use this option when you want to apply generic logic to all elements of your form. All Labels as Node Names—Uses the page, section, and answer unique IDs (labels) instead of the generic names. Tip:This option gives you precise labels you can use to reference specific nodes in the submitted record. Use this option when you want to place specific answers in specific places in your template output. The examples in this topic all use this setting. Flat Answer List—Changes the hierarchical tree structure into a flat data structure (list). Use this option when you want to loop over answers and don’t need to reference the full form structure (pages, sections, or Repeatable Sections). Learn more about Unique IDs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Data Node Format"
    }
  },
  {
    "content": "Image Compression Ratio\n\nEnter a value between 0 and 1 to compress images embedded in this document. Compression will reduce the size of the document, at the cost of image quality. 0 is completely compressed, 1 is no compression. When setup is complete, press \"Create.\" Link the document to a form in order to use it. For instructions: Form Settings: Documents",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Image Compression Ratio"
    }
  },
  {
    "content": "Sample XML Document\n\nChanges to the Data Record Format: For TrueContext REST APIs and JSON/XML document formats, we maintain a practice of not deleting existing properties or objects. A mechanism for versioning is used to facilitate deletions to our JSON/XML formats when necessary. Customers will be contacted in advance if they will be affected. However, we will occasionally add new properties to existing APIs to support new features in the TrueContext Platform. We do not create a new version of our APIs for new properties, and we advise that clients of our APIs are resilient to additions by ignoring unknown properties. Client applications should ignore any properties that are not relevant to their use case. This sample uses a page from a Work Order form detailing required equipment. The first 'page' contains a regular section A Regular Section is a set of related questions grouped together for easy reference. The data captured is “non-repeating”. That is, field users enter a single",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Sample XML Document"
    }
  },
  {
    "content": "instance of each answer., aka a flow section. The Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. contains three entries. Regular Sections: Referred to as \"flow section\" in the XML, these are sections that can contain questions in a standard format. Repeatable Section: A section containing a set of questions that can be answered multiple times. Each set of answers is displayed in a row node in the XML. For more information on Repeatable Sections, please read: Overview: Repeatable Sections. <page label=\"AIBt\" name=\"Account Information (Bill to:)\"> <sections> <section type=\"Flow\" label=\"New Section 2\" name=\"Contact Information\"> <answers> <answer label=\"Account - Name\" dataType=\"FreeText\"> <question>Account Name</question> <values> <value>LBM Drilling and Construction</value> </values> </answer> <answer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Sample XML Document"
    }
  },
  {
    "content": "label=\"Account - Contact\" dataType=\"FreeText\"> <question>Account Contact</question> <values> <value>Virginia Lewis</value> </values> </answer> <answer label=\"Account - Phone\" dataType=\"PhoneNumber\"> <question>Phone number</question> <values> <value>555-955-8202</value> </values> </answer> <answer label=\"Account - Email\" dataType=\"EmailAddress\"> <question>Email</question> <values> <value>vlewis@email.com</value> </values> </answer> </answers> </section> </sections> </page> <page label=\"Equipment Info\" name=\"Equipment Information\"> <sections> <section type=\"Repeat\" label=\"Equipment details\" name=\"Collect details about equipment\"> <rows> <row> <pages> <page label=\"ED\" name=\"Equipment Details\"> <sections> <section type=\"Flow\" label=\"Select Part\" name=\"Select Part\"> <answers> <answer label=\"Make\" dataType=\"FreeText\"> <question>Make</question> <values> <value>Equipment Make 4</value> </values> </answer> <answer label=\"Model\" dataType=\"FreeText\"> <question>Model</question> <values>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Sample XML Document"
    }
  },
  {
    "content": "<value>4A</value> </values> </answer> <answer label=\"Serial\" dataType=\"FreeText\"> <question>Serial #</question> <values> <value>987653242</value> </values> </answer> </answers> </section> </sections> </page> </pages> </row> <row> <pages> <page label=\"ED\" name=\"Equipment Details\"> <sections> <section type=\"Flow\" label=\"Select Part\" name=\"Select Part\"> <answers> <answer label=\"Make\" dataType=\"FreeText\"> <question>Make</question> <values> <value>Equipment Make 5</value> </values> </answer> <answer label=\"Model\" dataType=\"FreeText\"> <question>Model</question> <values> <value>5A</value> </values> </answer> <answer label=\"Serial\" dataType=\"FreeText\"> <question>Serial #</question> <values> <value>5645756</value> </values> </answer> </answers> </section> </sections> </page> </pages> </row> <row> <pages> <page label=\"ED\" name=\"Equipment Details\"> <sections> <section type=\"Flow\" label=\"Select Part\" name=\"Select Part\"> <answers> <answer label=\"Make\" dataType=\"FreeText\"> <question>Make</question>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Sample XML Document"
    }
  },
  {
    "content": "<values> <value>Equipment Make 1</value> </values> </answer> <answer label=\"Model\" dataType=\"FreeText\"> <question>Model</question> <values> <value>1B</value> </values> </answer> <answer label=\"Serial\" dataType=\"FreeText\"> <question>Serial #</question> <values> <value>23123124312</value> </values> </answer> </answers> </section> </sections> </page> </pages> </row> </rows> </section> </sections> </page>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501298XMLDocuments.html",
      "title": "XML Documents",
      "section": "Sample XML Document"
    }
  },
  {
    "content": "Name/Description\n\nGive the document a unique name. Optionally provide a description. Document Unique Identifier The Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Name/Description"
    }
  },
  {
    "content": "Document Unique Identifier\n\nThe Document Unique Identifier (unique ID) is created automatically based on the name of the document. You can customize the unique ID as needed. Tip:If you plan to use the embedded documents function in a FreeMarker template, you’ll need the unique ID of the embedded document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Document Unique Identifier"
    }
  },
  {
    "content": "Filename\n\nThis name applies to all instances of the document, including downloaded documents and documents sent by Data Destinations. Tip:A recognizable file name can help you quickly search for and identify files when:You download files from multiple form submissions so that you can work locally. You or your customers receive multiple messages generated by Email Destinations. Use Data Reference Expression Language to reference answers in your forms. Static text can also be included. For example, %r -- %a[Customer Name] would name the file like \"20140812-180001002 -- John Smith.\" Some data destinations will overwrite files with duplicate names. Make sure file names are unique by including one or more of: %r - the submission's reference number -- e.g. 20140920-1815562464 %r[id] - the submission's ID - e.g. 1815562464 %t - the time the form was submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Filename"
    }
  },
  {
    "content": "Document Timezone Source\n\nChoose a document time zone source. This is the time zone for all dates and times in your document. Team Preference Setting: Will use the time zone chosen for the team Data Record: Will use the time zone the form submission is made from (as chosen on the mobile device). Custom: Choose a time zone.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Document Timezone Source"
    }
  },
  {
    "content": "Auto-Link new forms to this document\n\nSelecting this option will add the document as an \"Additional Document\" to forms created or imported after this option is set. Submissions made against these forms will be downloadable in this document format from the \"Data\" tab of the portal. DREL Template Configuration File Extension The document can be any text-based file type (HTML, .txt. .xml, etc). Content Type Leave this blank for automatic resolution based on file extension. DREL Template Paste your DREL Template (whether hand-written or created through a WYSIWYG What You See is What You Get. The input looks similar to the output. editor) into the text box. You can use a combination of static text and Data Reference Expression Language. Line breaks will be preserved. Info:We recommend that you escape the data for all JSON, XML, HTML, and CSV documents. This ensures that the system generates a valid document in your selected format. HTML & DREL Template Display your data in a user-friendly",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "way by creating a custom-formatted HTML document that can look exactly like your paper forms. Your customers can see something familiar, while you can still route data to any other data destination, such as your back-office systems.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Auto-Link new forms to this document"
    }
  },
  {
    "content": "Building and Testing Custom HTML/DREL Documents\n\nBuild your desired output in HTML using a third-party WYSIWYG editor or raw HTML, adding placeholders for where you want your submitted form data to go. If using a WYSIWYG editor, remember that you must copy/paste the HTML into the \"DREL Template\" box. Map the answers to questions using DREL - %a[QuestionLabel] - as demonstrated below. Keep in mind that if you're using the same document with multiple forms, it's best to have consistent question labels. Attach the document to either a test copy of your form, or attach it as an additional document available to download on a production form to ensure that the documents are not accidentally sent to incorrect recipients. Submit several form submissions. Check that all the data you want to show up has done so in the right place. See what happens with empty fields - do they cause strange row collapses or other layout errors? Fill out every field with the longest input likely to happen to test",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Building and Testing Custom HTML/DREL Documents"
    }
  },
  {
    "content": "maximum width limits and word-wrap. Fill out every field with the shortest input likely to see how the document looks. Info:When you save a document, the system creates a new version of the template and stores that version for 45 days. This helps you to quickly download a previous version if your current version isn’t working as expected. Note: When referencing images or sketches (photo, signature, or sketch pad questions) in a DREL template, you must do more than simply add %a[Question Label]. To reference images in a document, use the <img> tag in HTML combined with correct references. <img src=\"data:%a[Question Label][contentType];base64, %a[Question Label][bytes]\"> Please note that questions collecting multiple attachments will not work in the custom document. Only questions collecting a single attachment will work.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501218.html",
      "title": "DREL Documents",
      "section": "Building and Testing Custom HTML/DREL Documents"
    }
  },
  {
    "content": "Escape data for a single DREL expression\n\nTo escape the data referenced by a DREL expression, include a property with the following syntax: [#escapeDocumentFormat] where DocumentFormat is either Json, Xml, Html, Csv, or Url. When the DREL expressions reference data with special characters or line breaks, the system escapes them in the specified format. The following table includes examples of how to escape different types of DREL expressions in different document formats. Format DREL expression Example JSON %a[CustomerFeedback][#escapeJson] Input Excellent service. Thanks for the speed and attention to detail. Result Excellent service.\\nThanks for the speed and attention to detail. XML %a[CustomerName][#escapeXml] Input Gatwell & Bowman Result Gatwell &amp; Bowman HTML %q[InspectLabel][#escapeHtml] Input Locate the section \"Equipment Information\" on the label and take a picture. Result Locate the section &quot;Equipment Information&quot; on the label and take a picture. CSV",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "Escape data for a single DREL expression"
    }
  },
  {
    "content": "%g[address][#escapeCsv] Input 95 Walnut Street, Ottawa, ON K1A 2B3, Canada Result \"95 Walnut Street, Ottawa, ON K1A 2B3, Canada\" URL %u[name][#escapeUrl] Input Harold Petrov Result Harold%20Petrov Tip:You can URL encode data from DREL expressions that you want to use as part of a URL. For example, the endpoint for a Salesforce Apex REST The Salesforce Apex REST is a type of Salesforce Data Destination that enables TrueContext to interact with Salesforce by means of an Apex REST API endpoint. If using an Apex REST API endpoint, developers can write APEX code to send custom messages that pull specific data from submitted forms. Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., or the URL Suffix in an HTTP Data Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "Escape data for a single DREL expression"
    }
  },
  {
    "content": "Escape data globally in a DREL document\n\nTo escape the data referenced by all DREL expressions in a document, include an expression with the following syntax: #c[escapeDocumentFormat] where DocumentFormat is either Json, Xml, Html, or Csv. The system automatically escapes all DREL expressions included after this expression. To override the global escape, include the following property as part of a DREL expression: [#escapeNone] In the following example: The expression #c[escapeJson] sets the output format to JSON. The system escapes the data referenced by all following DREL expressions to generate valid JSON output. Because the document is escaped globally, the system automatically escapes the data referenced by the DREL expression %a[Message]. The system overrides the global escaping for the expression %a[recordID][#escapeNone]. #c[escapeJson] { \"body\": { \"messageSegments\": [{ \"type\": \"Text\", \"text\": \"%a[Message] - Posted from TrueContext\" }] }, \"feedElementType\": \"FeedItem\",",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "Escape data globally in a DREL document"
    }
  },
  {
    "content": "\"subjectId\": \"%a[recordID][#escapeNone]\" }",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "Escape data globally in a DREL document"
    }
  },
  {
    "content": "Handlebars\n\nInfo:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 To escape the data referenced by a Handlebars expression, include one of the following expressions: {{pf:outputFormat “DOCUMENTFORMAT”}} {{#pf:outputFormat “DOCUMENTFORMAT”}}...{{/pf:outputFormat}} The following table includes examples of how to escape different types of Handlebars expressions in different document formats. Format Handlebars expression Example JSON {{pf:outputFormat “JSON”}} {{answers.CustomerFeedback.[0]}} Input Excellent service. Thanks for the speed and attention to detail. Result Excellent service.\\nThanks for the speed and attention to detail. CSV {{#pf:outputFormat “DOCUMENTFORMAT”}} {{dataRecord.geoStamp.address}} {{/pf:outputFormat}} Input 95 Walnut Street, Ottawa, ON K1A 2B3, Canada Result",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "Handlebars"
    }
  },
  {
    "content": "\"95 Walnut Street, Ottawa, ON K1A 2B3, Canada\" Note:Handlebars automatically escapes values for HTML and XML. If you don’t want to escape output for HTML or XML, use the expression {{pf:outputFormat \"NONE\"}}.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "Handlebars"
    }
  },
  {
    "content": "FreeMarker\n\nTo escape data for a FreeMarker document, include the output format in the ftl header. The following example shows how to escape the output for a JSON document: <#ftl output_format=”JSON”> TrueContext supports escaping data with FreeMarker in the following formats: JSON XML HTML CSV",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/EscapeDRELFreemarkerHandlebarsOutput.htm",
      "title": "Escape Special Characters and Line Breaks for Template-driven Text Documents",
      "section": "FreeMarker"
    }
  },
  {
    "content": "General Structure\n\nThe dataRecord root element has a number of child elements. For the sake of simplicity, this article will group all children of dataRecord into two groups: form-level information (sibling elements that contain general information about the data record), and \"pages\" (an element with children organizing page and answer data).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "General Structure"
    }
  },
  {
    "content": "dataRecord\n\nThe dataRecord node is the root element. Attributes: identifier (used in referenceNumber) version (v2) zone (device time zone) <dataRecord xmlns=\"https:/...\" xmlns:xsi=\"http:/...\" xsi:schemaLocation=\"https://...\" identifier=\"18489010\" version=\"v2\" zone=\"America/Toronto\"> ... </dataRecord> Form Information",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "dataRecord"
    }
  },
  {
    "content": "About\n\nThese nodes are: children of \"dataRecord\" Siblings to \"pages\" Elements do not repeat",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "About"
    }
  },
  {
    "content": "Reference Number\n\nThe data record reference number. Formatted as \"Date Submitted-datarecord identifier\" (see above). <referenceNumber> 20140613-1813302612 </referenceNumber>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Reference Number"
    }
  },
  {
    "content": "State\n\nThe data record state. <state> InProgress </state> Workflow State Note:The [workflowState] property replaces the [state] property. Make sure that you change to the new [workflowState] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. Helps work managers track a record through a workflow.<workflowState> Dispatched </workflowState> Data Flow State Note:The [dataFlowState] property replaces the [dataState] property. Make sure that you change to the new [dataFlowState] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. The Data Flow State A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\". describes how data from a dispatched or submitted form moves between the server and the Mobile App.<dataFlowState>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "State"
    }
  },
  {
    "content": "Downloaded </dataFlowState> Status The Status is a combination of metadata fields. All statuses include a workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\"., and some also contain the data flow state or completion result.<displayStatus> In Progress (Dispatched) </displayStatus> Workflow Status Note:The [workflowStatus] property replaces the [displayStatus] property. Make sure that you change to the new [workflowStatus] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. The Workflow Status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. is a combination of metadata fields. All statuses include a workflow state, and some also contain the data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "State"
    }
  },
  {
    "content": "flow state or completion result.<workflowStatus> Dispatched (Downloaded) </workflowStatus> Completion Result The Completion Result describes the state of Completed records that are part of an Approval Workflow (Enterprise tier only).<completionResult> Approved </completionResult>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "State"
    }
  },
  {
    "content": "Workflow State\n\nNote:The [workflowState] property replaces the [state] property. Make sure that you change to the new [workflowState] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. Helps work managers track a record through a workflow. <workflowState> Dispatched </workflowState>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Workflow State"
    }
  },
  {
    "content": "Data Flow State\n\nNote:The [dataFlowState] property replaces the [dataState] property. Make sure that you change to the new [dataFlowState] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. The Data Flow State A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\". describes how data from a dispatched or submitted form moves between the server and the Mobile App. <dataFlowState> Downloaded </dataFlowState>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Data Flow State"
    }
  },
  {
    "content": "Status\n\nThe Status is a combination of metadata fields. All statuses include a workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\"., and some also contain the data flow state or completion result. <displayStatus> In Progress (Dispatched) </displayStatus>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Status"
    }
  },
  {
    "content": "Workflow Status\n\nNote:The [workflowStatus] property replaces the [displayStatus] property. Make sure that you change to the new [workflowStatus] by September 30, 2025. The topic Changes to Work Management Metadata describes all of the recent changes in more detail. The Workflow Status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. is a combination of metadata fields. All statuses include a workflow state, and some also contain the data flow state or completion result. <workflowStatus> Dispatched (Downloaded) </workflowStatus>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Workflow Status"
    }
  },
  {
    "content": "Completion Result\n\nThe Completion Result describes the state of Completed records that are part of an Approval Workflow (Enterprise tier only). <completionResult> Approved </completionResult>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Completion Result"
    }
  },
  {
    "content": "Submit Date\n\nThere are three to four elements containing information on when the data record was submitted. deviceSubmitDate: Date/time submitted in device time zone. shifted: The shifted time depends on the Document Time Zone Source, as described in the following table. The examples show the UTC offset for each time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. If the Document Time Zone Source is set to… Then the shifted time is in the… Examples Form Submission Device time zone, which is the provided time. In this case, the provided time and the shifted time are the same. Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T22:07:00+01:00 Team Preference Setting Team time zone Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T14:07:00-07:00 Custom The custom time zone that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Submit Date"
    }
  },
  {
    "content": "you specify Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T23:07:00+02:00 serverReceiveDate: Date/time the TrueContext server received the data record. dispatchDate: Included if state (see above) = dispatched. Date/time the data record was dispatched from the TrueContext server. <deviceSubmitDate> <provided> <time>2014-06-13T13:28:05-04:00</time> <zone>America/Toronto</zone> </provided> <shifted>2014-06-13T13:28:05-04:00</shifted> </deviceSubmitDate> <serverReceiveDate>2014-06-13T13:28:07-04:00</serverReceiveDate> <dispatchDate>2014-06-11T13:28:07-04:00</dispatchDate>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Submit Date"
    }
  },
  {
    "content": "Form\n\nContains information abut the form/form version the data record was submitted against. Attributes: \"identifier\" Elements: versionIdentifier: The identifier for the version of the form the data record was submitted against. name: The name of the form the data record was submitted against. version: The version number of the form. formSpaceidentifier: The identifier of the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. the form is in. formSpacename: The name of the FormSpace the form is in. <form identifier=\"141413001\"> <versionIdentifier>152110416</versionIdentifier> <name>Demo Questions</name> <version>20</version> <formSpaceIdentifier>191162042</formSpaceIdentifier> <formSpaceName>1- Demo FormSpace</formSpaceName> </form>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Form"
    }
  },
  {
    "content": "User\n\nContains information on the user who was logged into the device that submitted the data record (the data record submitter). Attributes: \"identifier\" Elements: username: TrueContext username displayName: First Name, Last Name (username) <user identifier=\"13548142\"> <username>johndoe@abc.com</username> <displayName>John Doe (johndoe@abc.com)</displayName> </user>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "User"
    }
  },
  {
    "content": "Dispatcher\n\nThis element is included when the data record state = dispatched. It contains information on the TrueContext user who dispatched the form. Attributes: \"identifier\" Elements: username: TrueContext username displayName: First Name, Last Name (username) <dispatcher identifier=\"13548142\"> <username>johndoe@abc.com</username> <displayName>John Doe (johndoe@abc.com)</displayName> </dispatcher>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "Dispatcher"
    }
  },
  {
    "content": "GeoStamp\n\nThis element is included when the form the data record is submitted against is configured with a form-level geostamp. Elements: success: Tells if a geostamp was successfully acquired (Options: true | false) captureTimestamp provided: Date/Time geolocation was acquired in device time zone timezone shifted: The shifted time depends on the Document Time Zone Source, as described in the following table. The examples show the UTC offset for each time zone. Note:The device time zone refers to the device setting, not the user profile locale settings in the TrueContext Mobile App account details. If the Document Time Zone Source is set to… Then the shifted time is in the… Examples Form Submission Device time zone, which is the provided time. In this case, the provided time and the shifted time are the same. Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T22:07:00+01:00 Team Preference Setting Team time zone Date Time of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "GeoStamp"
    }
  },
  {
    "content": "Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T14:07:00-07:00 Custom The custom time zone that you specify Date Time of Incident - provided time: 2024-06-04T22:07:00+01:00 Date Time of Incident - shifted: 2024-06-04T23:07:00+02:00 source: what tool/service on the device was used to acquire the location (Options: GPS | Network) coordinates latitude longitude altitude address <geoStamp> <success>true</success> <captureTimestamp> <provided> <time>2014-06-13T13:27:56-04:00</time> <zone>America/Toronto</zone> </provided> <shifted>2014-06-13T13:27:56-04:00</shifted> </captureTimestamp> <source>GPS</source> <coordinates> <latitude>45.348002905586</latitude> <longitude>-75.9196980421965</longitude> <altitude>91.3237</altitude> </coordinates> <address>523 Legget Drive, Ottawa, ON, CA</address> </geoStamp> Pages and Answers The \"pages\" element appears after all the data record-level information elements and is a sibling to them. Values are",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "GeoStamp"
    }
  },
  {
    "content": "contained within answers; answers are contained within pages. The structure is as follows. <pages> <page label=\"Page 1\" name=\"Page 1\"> <sections> <section label=\"Section1\" name=\"Section1\" type=\"Flow\"> <answers> <answer label=\"New Question 1\" dataType=\"FreeText\" controlType=\"SmallTextbox\"> <question>New Question 1 </NewQuestion1> <values> <value>Testing</value> </values> </answer> <answer label=\"New Question 2\" dataType=\"FreeText\" controlType=\"SmallTextbox\"> <question>New Question</question> <values> <value>Testing Again</value> </values> </answer> </answers> </section> </sections> </page> </pages> Standard Format vs. All Labels as Node Names Format The Standard Format is listed above. The \"All Labels as Node Names\" format differs only in the Pages/Sections/Answers section of the data record (the \"Form Information\" section is identical). In \"All Labels as Node Names\" format the node containing each page, section, or question and the corresponding value is named with the page, section,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "GeoStamp"
    }
  },
  {
    "content": "or question label. As labels are unique in a form, each \"answer\" node will be uniquely named. Each \"answer\" node still has a label, as well. Question labels are assigned in the form builder. <pages> <Page1 label=\"Page 1\" name=\"Page 1\"> <sections> <Section1 label=\"Section1\" name=\"Section1\" type=\"Flow\"> <answers> <NewQuestion1 label=\"New Question 1\" dataType=\"FreeText\" controlType=\"SmallTextbox\"> <question>New Question 1 </NewQuestion1> <values> <value>Testing</value> </values> </NewQuestion1> <NewQuestion2 label=\"New Question 2\" dataType=\"FreeText\" controlType=\"SmallTextbox\"> <question>New Question</question> <values> <value>Testing Again</value> </values> </NewQuestion2> </answers> </Section1> </sections> </Page1> </pages>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501288.html",
      "title": "Form Submission Formats: Standard vs. Labels as Node Names",
      "section": "GeoStamp"
    }
  },
  {
    "content": "Process and Manage Form Submissions\n\nThis section includes the following content: Introduction to Form SubmissionsForm Submission Retention and DeletionForm Submission CorrectionsReporting OverviewView Form Submission DataView Form Submissions in the Web PortalView All Form ActivityView the Details of a Form SubmissionDownload Standard XML or JSON FilesForm Submission Workflow Status and StatesView Form Submission VersionsForm Submission Timestamp FieldsWhere to Find the Form Submission Reference Number in the Web PortalExport Form Submission DataCSV Export of Form SubmissionsSchedule a CSV Export of Form SubmissionsDisplay Accented Characters in TrueContext-Generated CSV FilesLegacy: \"All Form Activity\" - Scheduled CSV ExportsLegacy: \"All Form Activity\" CSV Export OptionsTrueContext AnalyticsTrueContext Basic AnalyticsAdvanced Analytics for TrueContextConfiguring the DashboardActivity Views",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ProcessManageFormSubmissions.htm",
      "title": "Process and Manage Form Submissions",
      "section": "Process and Manage Form Submissions"
    }
  },
  {
    "content": "Introduction to Form Submissions\n\nThis section includes the following content: Form Submission Retention and DeletionForm Submission CorrectionsReporting Overview",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntroductionFormSubmissions.htm",
      "title": "Introduction to Form Submissions",
      "section": "Introduction to Form Submissions"
    }
  },
  {
    "content": "Retention period\n\nYou can access form submission data in the TrueContext platform up to 365 days from the date the form was submitted or until the termination of your agreement, whichever comes first. After 365 days, TrueContext maintains the right to purge data, unless specific customer terms and conditions indicate otherwise. We encourage you to develop, implement, and maintain procedures to retrieve and archive form submission data to your own systems in a timely manner. Note: The form submission retention period applies only to the data contained in form submissions. This retention period does not apply to form resources or other data, which we store until you delete them, or until you terminate your TrueContext agreement.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360041103532.html",
      "title": "Form Submission Retention and Deletion",
      "section": "Retention period"
    }
  },
  {
    "content": "Form submission deletion process\n\nEach of the following events triggers the deletion process: You delete your own form submissions using the TrueContext web portal or API endpoint. Result: The data is deleted immediately from the TrueContext servers and 45 days later from the Disaster Recovery storage:Delete a specific form submissionBulk delete all form submissionsAPI: Form Submission Retrieval and Deletion You terminate your TrueContext agreement. Note: Upon termination of your TrueContext agreement, you can no longer access your form submissions.Result: Your form submissions are retained on the TrueContext servers for seven (7) days, and permanently deleted from TrueContext Disaster Recovery storage forty-five (45) days thereafter.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360041103532.html",
      "title": "Form Submission Retention and Deletion",
      "section": "Form submission deletion process"
    }
  },
  {
    "content": "Viewing Form Submissions in the Web Portal\n\nCompleted submissions are delivered to the TrueContext Portal. The Form Submissions pages provide a place to view and download form submission data. Users can select a record, view answers, and download the submission in a variety of formats. Administrators can view all form submissions submitted for their team (during the form submission retention period); Users (with standard permissions) can only view their own form submissions. Read more about the Data page here. Export Form Submissions as CSV Download selected forms into a Comma Separated Values (CSV) file. Downloading or exporting data to a CSV file is useful for making back-ups, manipulating results in Excel and for inserting data into back-end databases. There are several options available when selecting to download to CSV. CSV Export Schedules Administrators can create schedules to automatically export CSV files of submitted form data, which are then delivered by email to a selected",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501338.html",
      "title": "Reporting Overview",
      "section": "Viewing Form Submissions in the Web Portal"
    }
  },
  {
    "content": "address. CSV exports are a useful way of automatically backing up form submissions that you want to keep for more than the standard form submission retention period. Read more about CSV Export Schedules.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501338.html",
      "title": "Reporting Overview",
      "section": "Viewing Form Submissions in the Web Portal"
    }
  },
  {
    "content": "Dashboards\n\nThe Dashboard in the TrueContext web portal allows administrators to configure dynamic reports that give basic insight into overall form submissions by form/groups of forms, by user, or by location. The Dashboard is accessed through the \"Home\" tab in the main menu. Read more about configuring dashboards here",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501338.html",
      "title": "Reporting Overview",
      "section": "Dashboards"
    }
  },
  {
    "content": "Basic Analytics\n\nTrueContext Basic Analytics give TrueContext Admin users more detailed insight into the question data of their form submissions. The configuration of Basic Analytics is incredibly easy and intuitive; with just a few clicks, you can create dynamic, customized graphs. Unlike the TrueContext Dashboards, which show general information about overall form submissions, Basic Analytics allow administrators to break data down by question to easily track what answers their users are submitting. Read more about Basic Analytics here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501338.html",
      "title": "Reporting Overview",
      "section": "Basic Analytics"
    }
  },
  {
    "content": "Routing Data with Data Destinations\n\nForm submissions can also be viewed without ever accessing the web administration portal if they are routed to external services through Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. A Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. is a set of rules that determines where (and how) submitted form data should be routed. When properly configured, Data Destinations can automatically route data (often in the form of a formatted documents) to destinations of your choosing. They are most commonly used to simply send the form submission document to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501338.html",
      "title": "Reporting Overview",
      "section": "Routing Data with Data Destinations"
    }
  },
  {
    "content": "a list of email addresses, but integration with social media and cloud services is just as easy. Data can also be routed to your organization's server in a variety of formats, making data collection and storage an automated process. Read more about data destinations here.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501338.html",
      "title": "Reporting Overview",
      "section": "Routing Data with Data Destinations"
    }
  },
  {
    "content": "View Form Submission Data\n\nThis section includes the following content: View Form Submissions in the Web PortalView All Form ActivityView the Details of a Form SubmissionDownload Standard XML or JSON FilesForm Submission Workflow Status and StatesView Form Submission VersionsForm Submission Timestamp FieldsWhere to Find the Form Submission Reference Number in the Web Portal",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ViewFormSubmissionData.htm",
      "title": "View Form Submission Data",
      "section": "View Form Submission Data"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be a TrueContext Admin user or a User with Can View group permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Prerequisites"
    }
  },
  {
    "content": "View a list of dispatched and submitted forms\n\nYou can navigate to the list in one of two ways: Data & Analytics > Submissions (by Form) > FormName > Continue Scroll to find a specific form, or type the form name or FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. name to filter the list. Select the form name, and then select Continue. Forms & Integrations > FormName > Go to submissions Result: The Form Submissions page opens and shows a list of dispatched and submitted forms. The list shows forms from the last 30 days by default. You can change what the list shows by editing the Search Options filters. The following image shows an example of the Form Submissions page. The Form Submissions page displays the information that you need to identify any dispatched or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "View a list of dispatched and submitted forms"
    }
  },
  {
    "content": "submitted forms that require action. This information includes an icon that indicates the Form Submission status the date and time when the supervisor dispatched the form, the mobile user sent the form, and the system received the form the name and username of the submitter. This is the last user who sent a form or transferred an incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form (Enterprise tier only), and the name and username of the user in charge of the next action on the record (the “Assignee”). From the Form Submissions page, you can take any of the following actions. Download submission data as a CSV file You can export the data from this list as a comma-separated values (CSV) file. The topic CSV Export of Form Submissions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "View a list of dispatched and submitted forms"
    }
  },
  {
    "content": "explains this process in more detail. Plot form submissions on a map Plot form submissions on a map based on the location at the time they were submitted. Note:The form Settings > Advanced Properties > Advanced Options > Collect geo location option must be enabled before a user submits a form. Forms must have valid GPS coordinates captured at the time they were submitted. Schedule a CSV data export You can create a schedule to receive, at regular intervals, a link to download the latest form submission data. The topic Schedule a CSV Export of Form Submissions explains this process in more detail. Bulk delete form submissions Permanently delete all form submissions shown, up to 1000 at a time. This cannot be undone. Note:Your form submissions are deleted immediately from TrueContext’ servers, and permanently deleted from TrueContext’ Disaster Recovery storage forty-five (45) days later. To see more detailed information about a dispatched or submitted form, select the reference number in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "View a list of dispatched and submitted forms"
    }
  },
  {
    "content": "the first column. Result: The details page opens and displays information that includes the device number of the submitted form details about data destination processing (if applicable), and the answers that the user submitted.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "View a list of dispatched and submitted forms"
    }
  },
  {
    "content": "Filter the list of Form Submissions\n\nYou can filter the list of dispatched and submitted forms according to a number of criteria. This can be helpful to track work that users completed on a specific date, or to determine which Form Submissions need your attention. The list of forms is filtered to the last 30 days by default. On the Form Submissions page, select Search Options. Result: The Search Options section opens and displays the following options: Form Submission Name—enter any string in the search bar that the Form Submission name must contain. Submitter/Assignee—User or Group—select a user or group from the list. Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".—select a Workflow State from the list. The Filter by Workflow State section describes these options in more detail. Date—You can use one of the default date periods or specify your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Filter the list of Form Submissions"
    }
  },
  {
    "content": "own. The list shows forms from the last 30 days by default.To match on all dates, select the Any Date option.Note:Remember that TrueContext stores submitted forms for at least 365 days (see Form Submission Retention and Deletion).To use a date period, keep the default Use Date Period, and then select the period.To customize the date range, select Use Date Range, and then enter the From and To dates. Select Filter to apply your selections. Result: The system filters the Form Submissions and only displays those matching all of the selected criteria.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Filter the list of Form Submissions"
    }
  },
  {
    "content": "Filter by Workflow State\n\nFilter by Workflow State to see submitted and dispatched records at a specific stage in your company’s workflow. TrueContext categorizes these options between three headings within the Workflow State list:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Filter by Workflow State"
    }
  },
  {
    "content": "Overall\n\nAny Workflow State Displays all records regardless of Workflow State. The system displays this option by default. Dispatched (All) + Cancelled Displays all records dispatched from the Web Portal. This includes dispatched records that are Pending Download and Downloaded, and dispatched records that a field technician declined. Incomplete (All) Displays incomplete TrueContext Teamwork-enabled records that field technicians transferred (Enterprise tier only). Completed (All) + Reopened Displays records that are complete. This includes records a supervisor reopened and sent for corrections and records mobile users corrected. Errors (All) Displays records that the system can’t process due to an error.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Overall"
    }
  },
  {
    "content": "Workflow\n\nPending Download Displays dispatched records that a field technician has not yet downloaded to their device. This includes records dispatched to the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox. that haven’t been claimed (Enterprise tier only). Downloaded Displays dispatched records that a field technician has downloaded to their device. This includes records a field technician has claimed from the Group Inbox (Enterprise tier only). Dispatched (Unassigned) Displays records dispatched to a group or FormSpace that field technicians have not yet claimed from the Group Inbox (Enterprise tier only). Dispatched (Assigned) Displays dispatched records with an assignee. This includes records dispatched to a specific field technician. It also includes records that field technicians have claimed from the Group Inbox (Enterprise tier only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Workflow"
    }
  },
  {
    "content": "Incomplete (Unassigned) Displays incomplete TrueContext Teamwork-enabled records that haven’t been assigned by a supervisor or claimed by a field technician (Enterprise tier only). Incomplete (Assigned) Displays incomplete TrueContext Teamwork-enabled records (Enterprise tier only) that a field technician: Transferred directly to another user, or Submitted as incomplete, and were then assigned by a supervisor or claimed by another technician. Pending Approval (Unassigned) Displays records that are part of an Approval Workflow (Enterprise tier only) and have not been claimed for review. Pending Approval (Assigned) Displays records that are part of an Approval Workflow (Enterprise tier only) and have been claimed for review. Reopened Displays completed records that a supervisor sent to a field technician for corrections. This Workflow State persists until the field technician submits their changes. Completed Displays completed records. This includes: Complete records that field",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Workflow"
    }
  },
  {
    "content": "technicians submitted from the Mobile App. Records that a supervisor sent for corrections and a field technician corrected. Records that a field technician corrected from the Sent box. Records that a manager approved as part of an Approval Workflow (Enterprise tier only). Completed (Not Edited) Displays completed records that supervisors did not send for corrections. Completed (Approved) Displays records that are part of an Approval Workflow (Enterprise tier only) and have been approved. Completed (Corrected) Displays completed records that a field technician corrected. This includes records that a field technician corrected from the Sent box and records that a supervisor sent back for corrections. Cancelled Displays dispatched records that a field technician declined.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Workflow"
    }
  },
  {
    "content": "Troubleshooting\n\nUploading Displays records that field technicians submitted but the system hasn’t finished uploading. Upload Error Displays records that the system can’t process due to an error. Destination Error Displays records that couldn’t execute their Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. due to an error.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Related topics\n\nForm Submission Workflow Status and States View the Details of a Form Submission View Form Submission Versions CSV Export of Form Submissions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/ViewFormSubmissions.htm",
      "title": "View Form Submissions in the Web Portal",
      "section": "Related topics"
    }
  },
  {
    "content": "What’s on this page?\n\nThe All Form Activity page (Data & analytics > All Form Activity) lists your team's dispatched and submitted records. It provides an overview of your team’s ongoing and completed work. You can use it to: Get a map view of where submissions were sent from. Apply, save, and share filters. Info:By default, the list of filters is set to show records worked on in the last 30 days. The section View All Form Activity describes how to change the date settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "What’s on this page?"
    }
  },
  {
    "content": "Example of an All Form Activity page\n\nThe following image shows a TrueContext team’s All Form Activity page. Info:Each record has a status icon that indicates its progress. The topic Form Submission Status lists and describes all status icons.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Example of an All Form Activity page"
    }
  },
  {
    "content": "What permissions do I need to access the All Form Activity page?\n\nThe following table describes the access that different User Roles have depending on their FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. User Role FormSpace Permissions FormSpace permissions define what members of a user group can do within a FormSpace. For example, permissions control whether group members can submit forms on the Mobile App or manage work in the Web Portal. Access Mobile-only user Not applicable Mobile-only users can’t access the All Form Activity page User With Can View FormSpace permissions All dispatched and submitted records in the FormSpace Without Can View FormSpace permissions Their own submitted records With Can Approve FormSpace permissions Records in an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "What permissions do I need to access the All Form Activity page?"
    }
  },
  {
    "content": "Approval Workflow status (Enterprise tier only) Admin user No specific permissions required All dispatched and submitted records in any FormSpace",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "What permissions do I need to access the All Form Activity page?"
    }
  },
  {
    "content": "Filters\n\nBy default, the All Form Activity page displays dispatched and submitted records worked on within the last 30 days. You can change what the page shows by changing the Search Options.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Filters"
    }
  },
  {
    "content": "How to access filters\n\nExpand the Search Options, and apply as many filters as you need to narrow down the list of records. The following image shows all the filters available.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "How to access filters"
    }
  },
  {
    "content": "Filter examples\n\nIf you want to… Set the filters to… Find dispatched records that field technicians have not submitted yet. Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".—Dispatched Find all incomplete work that’s part of a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. workflow (Enterprise tier only), and that is unassigned. Workflow State—Incomplete Assignment—Unassigned Track records that require approval as part of an Approval Workflow (Enterprise tier only). Workflow State—Pending Approval Determine what has been completed by a specific user. Submitter/Assignee - User—Select a user Workflow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Filter examples"
    }
  },
  {
    "content": "State—Completed Determine a Group’s completed work. Group—Select the name of the group Workflow State—Completed Show the day’s completed work. Date—Use Date Period Filter By—Date Submitted on Device Within—Today Workflow State—Completed Troubleshoot records that have Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. execution errors. Execution State—Has Failed Tip:You can add more filters to refine your results as needed. For example, you can filter by both Date and Group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Filter examples"
    }
  },
  {
    "content": "How date filters work\n\nSelect one of the following options to choose a date period or range to filter the results. By default, the list of filters is set to show records worked on in the last 30 days. Any Date—Shows records from all dates available in the system. Remember that TrueContext stores submitted data for a minimum of 365 days (as per the Retention Policy). Use Date Period—Includes preset date periods including Yesterday, Last Week, Last Month, Last 24 hours, Last 7 Days, and Last 30 Days. Use Date Range—Select specific dates from a calendar picker. Select one of the following options as the date to filter by: Option Description Date Dispatched Date when the record was dispatched. Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "How date filters work"
    }
  },
  {
    "content": "TrueContext REST API). Due Date Due date specified when the record was dispatched. Date Submitted on Device Date when the record was sent from the Mobile App. Date Created Date when the TrueContext server: Dispatched a record to one or more users. Started uploading a submitted record. This applies to records opened from Forms and then submitted. Date Processed Date when the TrueContext server finished processing the submitted data. Date Received on Server Date when the record finished uploading to the TrueContext server. Date Last Updated Date when the record was last worked on. The date last updated changes when the record is: Dispatched Transferred as incomplete (TrueContext Teamwork-enabled forms only) Submitted Sent for editing Edited Tip:This is the default filter option.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "How date filters work"
    }
  },
  {
    "content": "Save filters\n\nIf you often use the same set of filters, you can save them for future reuse. You can do this in two ways: Method Procedure From Search Options On the All Form Activity page, set your filters in the Search Options, and then select Save. Result: The Save Your Filter window opens. Enter a Filter Name, and then select Save. Tip:Once you save it, you can share your filter with your team. From List Form Submission Filters On the All Form Activity page, select the arrow next to Form Submissions, and then select List Form Submission Filters. Select Create a form submission filter. Enter a Filter Name, and set up your filters. To share the filter with your team, select the Shared checkbox. Create the filter.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Save filters"
    }
  },
  {
    "content": "Apply saved filters\n\nTo apply your saved filters: Select the arrow next to Form Submissions, and then select List Form Submission Filters. Select the filter to open it. Select the arrow next to the filter name, and then select Try this Filter. Result: The All Form Activity page opens with your saved filters applied.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Apply saved filters"
    }
  },
  {
    "content": "Share saved filters with your team\n\nTo share your saved filters: Select the arrow next to Form Submissions, and then select List Form Submission Filters. Select the filter to open it. Select the arrow next to the filter name, and then select Update. Result: The saved filter opens in edit mode. Select the Shared? checkbox. Select Update to save your changes. Result: Other members of your TrueContext team can access the saved filter. Note:Saved filters show different results depending on your permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005447106.html",
      "title": "View All Form Activity",
      "section": "Share saved filters with your team"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with the correct permissions. Note:Only TrueContext Admin users can delete form submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Open the form submission details page\n\nNavigate to the submissions page of your form: Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Tip:You can change your Search Options to find specific submitted or dispatched forms. For example, filter on a date range to find all submitted forms from 2022-01-01 through 2022-12-31. Select the Reference # of the form submission. Result: The Web Portal displays the details page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Open the form submission details page"
    }
  },
  {
    "content": "Actions\n\nTo open the list of actions, select the arrow next to the form submission reference number. Tip:The actions that are listed depend on the form setup and whether the form was dispatched, submitted, or transferred. The following tables describe the actions you can find in the list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Actions"
    }
  },
  {
    "content": "Actions for incomplete TrueContext Teamwork forms\n\nThe following actions are only listed if the form submission is an incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. form. Action Description Assign to a User If the incomplete TrueContext Teamwork form is unclaimed, assign the form to a field user. Unassign From User If you want the incomplete TrueContext Teamwork form to go to a different user, first unassign the form from the current assignee. Warning:If the assigned user has started to work on the form, you will lose any changes that user has made to the form when you unassign it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Actions for incomplete TrueContext Teamwork forms"
    }
  },
  {
    "content": "Actions for submitted forms\n\nThe following actions are only listed if the form submission is a submitted form. Action Description Send for Corrections Send the record to a mobile user and request corrections. The mobile user doesn’t have to be the same person who submitted the record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Actions for submitted forms"
    }
  },
  {
    "content": "Actions for all form submissions\n\nThe following actions are listed for submitted, dispatched, and transferred form submissions. Info:The term transferred only applies to TrueContext Teamwork-enabled forms. Action Description Version History View the version history of the form submission. A form submission gets a new version whenever a field user: Receives a record the first time it’s dispatched. Transfers a TrueContext Teamwork-enabled form. Submits a completed form. Submits a corrected form. Download Attached Documents Download an output document linked to the form submission. Only documents made available for download appear in the list. Download Standard XML or JSON Files Download a standard XML or JSON document of the form submission. These standard documents include metadata that you can use for audit and compliance requirements. Download All Attachments Download the form submission attachments in a single .zip folder. Attachments include uploaded images and files, sketches, and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Actions for all form submissions"
    }
  },
  {
    "content": "signatures. Test DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. Test DREL expressions using data from the form submission. You can check that an expression returns the expected data or metadata. Re-Execute All Executions Re-execute all Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. linked to the form submission. Select this option after you fix the cause of a failed Data Destination execution. Note:When you select this option, successful Data Destinations also re-execute. These destinations may receive duplicate documents from the re-execution.You can manually re-execute a single destination on the form submission details page:Form Submission Processing >",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Actions for all form submissions"
    }
  },
  {
    "content": "Destinations > hover over Execution Details > Re-execute. Delete TrueContext Admin users can delete a form submission from the TrueContext server. Warning:This is a permanent action. If you delete a form submission, you can’t recover it from the TrueContext server.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Actions for all form submissions"
    }
  },
  {
    "content": "Processing Details\n\nThe processing table shows details on all of the different steps that happened to the submission. If something went wrong with the submission, it's a helpful tool to spot exactly what happened.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Processing Details"
    }
  },
  {
    "content": "Standard Processing Steps:\n\nSave Data: Saves the data to the web portal. The subsequent steps will not be completed if \"Save Data\" fails. Contact our support team if this step fails. Resolve Geo Address: Will be skipped if no geo location was collected by the device and attached to the form. Process Images: reading of images collected with the form. Will be skipped if no images are attached. If this step fails, the subsequent steps can still process. Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.: A new row will be listed for each data destination linked to the form. If one data destination execution fails, the others can still execute.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Standard Processing Steps:"
    }
  },
  {
    "content": "Processing Status\n\n—The step has been successfully processed. —The step has failed. See details for more information. —The step has been skipped. This usually happens because the step is not applicable. The \"Process Images\" step will be skipped if there are no images in the form. A Data Destination execution will be skipped if the submission does not meet the destination's filter rules.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Processing Status"
    }
  },
  {
    "content": "Workflow Steps\n\nIf the form was created by a dispatch from another form, or if this form created new dispatches as of a result of being submitted, you can view the relationships here. Select the submission listed to view the details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Workflow Steps"
    }
  },
  {
    "content": "Dispatch Metadata\n\nIf the submission was dispatched with notes, a priority, due date/time, or location assigned, this information will be listed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "Dispatch Metadata"
    }
  },
  {
    "content": "View Submission Data\n\nThe full data from the form submission will be listed, with the answers listed in the appropriate pages and sections. If an answer was corrected and changed from a previous version of the submission, there will be a Corrected marker beside it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005445183.html",
      "title": "View the Details of a Form Submission",
      "section": "View Submission Data"
    }
  },
  {
    "content": "Steps to download an XML or JSON file\n\nSome types of output documents might not include all metadata. If you want to get more information, you can download a standard JSON or XML file. These are available from the View the Details of a Form Submission page. You can download an XML or JSON file for any dispatched, submitted, or transferred (TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled) form. You can then open the file or manually upload it to your third-party system. Navigate to the submissions page of your form: Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Steps to download an XML or JSON file"
    }
  },
  {
    "content": "page displays form submissions from the last 30 days. Tip:You can change your Search Options to find specific submitted or dispatched forms. For example, filter on a date range to find all submitted forms from 2022-01-01 through 2022-12-31. Select the Reference # of the dispatched, submitted, or transferred form. Result: The Web Portal displays the details page. Hover over the arrow next to the reference number to show the list of actions. Select either Download Standard XML or Download Standard JSON. Result: The XML or JSON file of the selected form downloads. Info:If the XML or JSON document is linked to a Multi-Language Form, the system prompts you to select a language for the document. The document shows translated form content based on the form’s translation file. The key names and question Unique IDs don’t change. For your integrations, map to the question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Steps to download an XML or JSON file"
    }
  },
  {
    "content": "IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents., which doesn’t change, rather than the question text. Tip:You can also download an XML or JSON file with the TrueContext REST API.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Steps to download an XML or JSON file"
    }
  },
  {
    "content": "Description of metadata in a standard JSON or XML file\n\nThe following table describes the metadata that you can find in the standard XML and JSON downloads. Info:The workflowStatus, workflowState, and dataFlowState are new properties that replace the old displayStatus, state, and dataState properties. You can start using the new properties now. You must switch to the new properties before September 30, 2025, when the old properties will be deprecated. The topic Changes to Work Management Metadata describes these changes and what you need to do. Type of metadata JSON example XML example Submission details Status:\"displayStatus\": \"In Progress (Dispatching)\", Workflow status The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result.:\"workflowStatus\": \"Dispatched (Pending Download)\", State:\"state\": \"InProgress\", Workflow state The workflow state describes the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".:\"workflowState\": \"Dispatched\", Data state:\"dataState\": \"Dispatching\", Data flow state A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\".:\"dataFlowState\": \"PendingDownload\", Completion result:\"completionResult\": \"Approved\", Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). status on the Web Portal:\"orphanedDispatch\": false, If the field user submits a dispatched form after the dispatch was deleted in the Web Portal, then orphanedDispatch=true.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "Submitted date and time on the user’s device:\"deviceSubmitDate\": { \"provided\": { \"time\": \"2023-03-09T10:31:58-05:00\", \"zone\": \"America/Toronto\" }, \"shifted\": \"2023-03-09T10:31:58-05:00\" }, Received date and time on the TrueContext server:\"serverReceiveDate\": \"2023-03-09T10:32:41-05:00\", Status:<displayStatus>In Progress (Dispatching)</displayStatus> Workflow status:<workflowStatus>Dispatched (Pending Download)</workflowStatus> State:<state>InProgress</state> Workflow state:<workflowState>Dispatched</workflowState> Data state:<dataState>Dispatching</dataState> Data flow state:<dataFlowState>PendingDownload</dataFlowState> Completion result:<completionResult>Approved</completionResult> Dispatch status on the Web Portal:<orphanedDispatch>false</orphanedDispatch> If the field user submits a dispatched form after the dispatch was deleted in the Web Portal, then orphanedDispatch=true. Submitted date and time on the user’s device:<deviceSubmitDate> <provided>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "<time>2023-03-09T10:31:58-05:00</time> <zone>America/Toronto</zone> </provided> <shifted>2023-03-09T10:31:58-05:00</shifted> </deviceSubmitDate> Received date and time on the TrueContext server:<serverReceiveDate>2023-03-09T10:32:41-05:00</serverReceiveDate> Dispatch details Dispatch date and time:\"dispatchDate\": \"2023-08-10T10:52:10-04:00\", Dispatch details: \"dispatchMetadata\": { \"notes\": \"Tell building security about your arrival before you start work.\", \"priority\": \"Medium\", \"dueDate\": { \"provided\": { \"time\": \"2023-08-18T11:30:00-04:00\", \"zone\": \"America/New_York\" }, \"shifted\": \"2023-08-18T11:30:00-04:00\" }, \"coordinates\": { \"latitude\": 45.3472904, \"longitude\": -75.9095115, \"altitude\": null } }, Dispatch date and time:<dispatchDate>2023-08-10T10:52:10-04:00</dispatchDate> Dispatch details: <dispatchMetadata> <notes>Tell building security about your arrival before you start work.</notes> <priority>Medium</priority> <dueDate> <provided> <time>2023-08-18T11:30:00-04:00</time>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "<zone>America/New_York</zone> </provided> <shifted>2023-08-18T11:30:00-04:00</shifted> </dueDate> <coordinates> <latitude>45.3472904</latitude> <longitude>-75.9095115</longitude> </coordinates> </dispatchMetadata> Form details Form and FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. identifiers and versions:\"form\": { \"identifier\": \"1423164009\", \"versionIdentifier\": \"1527638015\", \"name\": \"HVAC Work Order\", \"version\": 48, \"formSpaceIdentifier\": \"195823004\", \"formSpaceName\": \"Existing Customers\" }, Form and FormSpace identifiers and versions:<form identifier=\"1423164009\"> <versionIdentifier>1527638015</versionIdentifier> <name>HVAC Work Order</name> <version>48</version> <formSpaceIdentifier>195823004</formSpaceIdentifier> <formSpaceName>Existing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "Customers</formSpaceName> </form> Submitter details Submitter identifiers:\"user\": { \"identifier\": \"1317016005\", \"username\": \"j.smith\", \"displayName\": \"Jenny Smith\" }, Submitter identifiers:<user identifier=\"1317016005\"> <username>j.smith</username> <displayName>Jenny Smith</displayName> </user> Dispatcher details Dispatcher identifiers:\"dispatcher\": { \"identifier\": \"137549047\", \"username\": \"l.yung\", \"displayName\": \"Lynn Yung\" }, Dispatcher identifiers:<dispatcher identifier=\"137549047\"> <username>l.yung</username> <displayName>Lynn Yung</displayName> </dispatcher> Submitter’s geo location Geo location details include: Timestamp (date and time) of when the location was collected Location coordinates Location address \"geoStamp\": { \"success\": true, \"captureTimestamp\": { \"provided\": { \"time\": \"2023-06-14T12:46:53-04:00\", \"zone\": \"America/Toronto\" }, \"shifted\": \"2023-06-14T12:46:53-04:00\" }, \"errorMessage\": null, \"source\": \"GPS\", \"coordinates\": { \"latitude\": 45.342761120048436, \"longitude\":",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "-75.915798518297, \"altitude\": 0.0 }, \"accuracy\": 4025.286, \"address\": \"2500 Solandt Rd, Kanata, ON K2K 3G5, Canada\", \"addressDetails\": { \"source\": \"Google\", \"components\": [ { \"shortName\": \"2500\", \"longName\": \"2500\", \"types\": [ \"street_number\" ] }, { \"shortName\": \"Solandt Rd\", \"longName\": \"Solandt Road\", \"types\": [ \"route\" ] }, { \"shortName\": \"Kanata\", \"longName\": \"Kanata\", \"types\": [ \"political\", \"sublocality\", \"sublocality_level_1\" ] }, { \"shortName\": \"Ottawa\", \"longName\": \"Ottawa\", \"types\": [ \"locality\", \"political\" ] }, { \"shortName\": \"Ottawa\", \"longName\": \"Ottawa\", \"types\": [ \"administrative_area_level_3\", \"political\" ] }, { \"shortName\": \"Ottawa\", \"longName\": \"Ottawa\", \"types\": [ \"administrative_area_level_2\", \"political\" ] }, { \"shortName\": \"ON\", \"longName\": \"Ontario\", \"types\": [ \"administrative_area_level_1\", \"political\" ] }, { \"shortName\": \"CA\", \"longName\": \"Canada\", \"types\": [ \"country\", \"political\" ] }, { \"shortName\": \"K2K 3G5\", \"longName\": \"K2K 3G5\", \"types\": [ \"postal_code\"",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "] } ] } }, Geo location details include: Timestamp (date and time) of when the location was collected Location coordinates Location address <geoStamp> <success>true</success> <captureTimestamp> <provided> <time>2023-06-14T12:46:53-04:00</time> <zone>America/Toronto</zone> </provided> <shifted>2023-06-14T12:46:53-04:00</shifted> </captureTimestamp> <source>GPS</source> <coordinates> <latitude>45.342761120048436</latitude> <longitude>-75.915798518297</longitude> <altitude>0.0</altitude> </coordinates> <accuracy>4025.286</accuracy> <address>2500 Solandt Rd, Kanata, ON K2K 3G5, Canada</address> <addressDetails> <source>Google</source> <components> <component> <shortName>2500</shortName> <longName>2500</longName> <types> <type>street_number</type> </types> </component> <component> <shortName>Solandt Rd</shortName> <longName>Solandt Road</longName> <types> <type>route</type> </types> </component> <component> <shortName>Kanata</shortName> <longName>Kanata</longName> <types>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "<type>political</type> <type>sublocality</type> <type>sublocality_level_1</type> </types> </component> <component> <shortName>Ottawa</shortName> <longName>Ottawa</longName> <types> <type>locality</type> <type>political</type> </types> </component> <component> <shortName>Ottawa</shortName> <longName>Ottawa</longName> <types> <type>administrative_area_level_3</type> <type>political</type> </types> </component> <component> <shortName>Ottawa</shortName> <longName>Ottawa</longName> <types> <type>administrative_area_level_2</type> <type>political</type> </types> </component> <component> <shortName>ON</shortName> <longName>Ontario</longName> <types> <type>administrative_area_level_1</type> <type>political</type> </types> </component> <component> <shortName>CA</shortName> <longName>Canada</longName> <types> <type>country</type> <type>political</type> </types> </component> <component> <shortName>K2K 3G5</shortName> <longName>K2K 3G5</longName> <types> <type>postal_code</type> </types>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "</component> </components> </addressDetails> </geoStamp> Device details OS type and TrueContext Mobile App version:\"device\": { \"os\": \"iOS\", \"osVersion\": \"15.5\", \"mobileAppVersion\": \"16.6.0.3480\" }, OS type and TrueContext Mobile App version:<device> <os>iOS</os> <osVersion>15.5</osVersion> <mobileAppVersion>16.6.0.3480</mobileAppVersion> </device> Last time an answer was modified Date and time last modified:\"lastModified\": { \"provided\": { \"time\": \"2023-08-10T11:05:46-04:00\", \"zone\": \"America/New_York\" }, \"shifted\": \"2023-08-10T11:05:46-04:00\" }, User details:\"modifiedBy\": { \"identifier\": \"1317016008\", \"username\": \"p.schmidt\", \"displayName\": \"Paul Schmidt\" }, If a dispatcher prefills any answers, their user details show in the modifiedBy section. Date and time last modified:<lastModified> <provided> <time>2023-08-10T11:05:46-04:00</time> <zone>America/New_York</zone> </provided> <shifted>2023-08-10T11:05:46-04:00</shifted> </lastModified> User details:<modifiedBy",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "identifier=\"1317016008\"> <username>p.schmidt</username> <displayName>Paul Schmidt</displayName> </modifiedBy> If a dispatcher prefills any answers, their user details show in the modifiedBy section. Info:You can also set up the question-level metadata in the following output documents:Custom PDF, Word, and HTML Document Layouts (when you use a Handlebars or FreeMarker template)Handlebars DocumentsFreeMarker Documents",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Description of metadata in a standard JSON or XML file"
    }
  },
  {
    "content": "Explanation of timestamp values\n\nThe standard downloads display two timestamps: provided and shifted. For submitted and transferred (TrueContext Teamwork-enabled) forms: provided—Timestamp in the mobile user’s time zone (from their device settings). shifted—In standard downloads, the shifted timestamp is the same as the provided timestamp. For dispatched forms, the mobile user’s time zone isn’t available to the server. In these cases, we fall back to: The Web Portal user’s time zone—This is the user who downloads the standard JSON or XML file. UTC—for system-generated dispatches, such as a Dispatch Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. or API dispatch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/Manage%20Forms%20in%20the%20Web%20Portal/DownloadXMLJSONFiles.htm",
      "title": "Download Standard XML or JSON Files",
      "section": "Explanation of timestamp values"
    }
  },
  {
    "content": "What is the workflow status?\n\nThe workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result. A workflow state describes the current stage in a workflow as a result of the last action taken on that record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "What is the workflow status?"
    }
  },
  {
    "content": "Statuses with combined fields\n\nSome statuses include a data flow state or completion result, enclosed in parentheses. A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App.The following image demonstrates how a record status combines a workflow state and a data flow state. A completion result describes records that were approved (Enterprise tier) or corrected (Advanced and Enterprise tiers). The following image demonstrates how a record status combines a workflow state and a completion result.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Statuses with combined fields"
    }
  },
  {
    "content": "Statuses with only one field\n\nThe following example shows a record status that only displays the workflow state, not the data flow state or completion result.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Statuses with only one field"
    }
  },
  {
    "content": "Workflow state\n\nA workflow state describes the current stage in a workflow as a result of the last action taken on that record. A record can have any of the following workflow states: Dispatched: The record was dispatched to a field technician. The record remains in this state until a field technician submits or declines the record, or transfers a TrueContext Teamwork-enabled record (Enterprise tier only). Dispatched also describes records dispatched to a group or FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. (Enterprise tier only). Incomplete: A field technician transferred an incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Workflow state"
    }
  },
  {
    "content": "workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled record (Enterprise tier only). The record might be assigned to another technician or available for a technician to claim or a dispatcher to reassign. Pending Approval: A field technician submitted a record that requires approval. Any user in a group with the Can Approve FormSpace permission can claim and review the record. This workflow state is specific to records with an Approval Workflow set up (Enterprise tier only). Changes Requested: A supervisor requested changes to the submitted record as part of an Approval Workflow (Enterprise tier only). Reopened: A supervisor sent a completed record back to a field technician to make corrections. Completed: A field technician submitted a completed record. This includes records that have been corrected (Advanced and Enterprise tier only) and records approved through an Approval Workflow (Enterprise tier only). Cancelled: A field",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Workflow state"
    }
  },
  {
    "content": "technician declined the record after a dispatcher or the system dispatched it to them.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Workflow state"
    }
  },
  {
    "content": "Data flow state\n\nA data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. A record can have any of the following data flow states: Pending Download: The record has been dispatched, reopened, sent for changes in an Approval Workflow (Enterprise tier), or transferred with TrueContext Teamwork (Enterprise tier). However, a field technician has not downloaded it. The technician must reconcile their device to download the record or claim it from the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox.. Downloaded: A field technician has downloaded the record to their mobile device or claimed the record. Uploading: The system is uploading a newly submitted or transferred record. The record remains in this state if a field technician’s device disconnects during the upload. Upload Failed: The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Data flow state"
    }
  },
  {
    "content": "system can’t upload the submitted record. This might be: A server issue. The upload will continue when servers are back online. A connectivity issue on a field technician’s device. The system will retry the upload when the field technician reconciles the Mobile App. Uploaded: The system finished uploading a newly submitted or transferred record. Processing: The system received and is processing the record. Processing Failed: The system can't process the submitted record due to an error. Processed: The system processed the record successfully.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Data flow state"
    }
  },
  {
    "content": "When does the status change?\n\nA status changes when: A dispatcher dispatches a record. A field technician sends a completed or corrected record, or transfers a record for an incomplete TrueContext Teamwork-enabled form. A dispatcher reassigns an incomplete record for a TrueContext Teamwork-enabled form (Enterprise tier only). An approver approves or requests changes to a record that requires approval through an Approval Workflow (Enterprise tier only). A dispatcher sends a record for corrections (Advanced and Enterprise tiers only). A field technician declines a record dispatched to them. The system returns an error, dispatches a record, or processes a submitted record. Tip: To see more details about the status of a Form Submission, select the reference number to go to the details page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "When does the status change?"
    }
  },
  {
    "content": "Related topics\n\nView Form Submission Versions View Form Submissions in the Web Portal View the Details of a Form Submission Where to find the Form Submission Reference Number in the Web Portal",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionStatus.htm",
      "title": "Form Submission Workflow Status and States",
      "section": "Related topics"
    }
  },
  {
    "content": "What are Form Submission versions?\n\nForm Submission versions are records of all the changes users make to a single Form Submission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "What are Form Submission versions?"
    }
  },
  {
    "content": "How Form Submission versions work\n\nThe system creates a new form submission version A form submission version is a record of the changes a user made to a single Form Submission. The system creates a new form submission version when a form is dispatched, transferred as incomplete (TrueContext Teamwork only), edited, or submitted. each time form submission data changes. Form submission A form submission is a dispatched or submitted form. versions provide a way for you to review the data that changed and identify the user who changed it. The following table describes a workflow initiated by a supervisor dispatching a form. Note:Users can also start work on a form by opening it from the Forms tab in the Mobile App. In this case, the first Form Submission version is created when the user transfers or sends the form. Action Changestodata? FormSubmissionversion Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "How Form Submission versions work"
    }
  },
  {
    "content": "includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). to mobile user Yes 1 Mobile user transfers incomplete form Yes 2 Mobile user claims incomplete form No 2 Mobile user transfers incomplete form Yes 3 Supervisor assigns form No 3 Supervisor unassigns form No 3 Mobile user claims unassigned form No 3 Mobile user sends complete form Yes 4 Supervisor sends form for corrections No 4 Mobile user sends corrected form Yes 5 Note:The term transferred only applies to TrueContext Teamwork-enabled forms. For more information about the TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. feature, go to What is TrueContext",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "How Form Submission versions work"
    }
  },
  {
    "content": "Teamwork?.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "How Form Submission versions work"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be a TrueContext Admin user or a User with Can View group permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "Prerequisites"
    }
  },
  {
    "content": "View a Form Submission version\n\nNote:The following example includes a Form Submission version created when a user transfers an incomplete TrueContext Teamwork-enabled form. This feature is only available for Enterprise tier accounts. Go to Data & Analytics > Submissions (by Form) > FormName > Continue or Forms & Integrations > FormName > Go to submissions Result: The Web Portal displays the Form Submissions page for the selected form. By default, The Form Submissions page displays form submissions from the last 30 days. Select the Reference #. Result: The Form Submission Details page opens. Select the reference number, and then select Version History. Result: The Form Submission Versions page displays a row for each version the state of each version the user who last submitted (sent or transferred) data for each version, and the user assigned to each version. The following example shows the version history of a completed form. To see the answers provided for a specific form version,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "View a Form Submission version"
    }
  },
  {
    "content": "select the version number. Result: The Form Submission Version Details page displays the answers and indicates whether the submitter edited any previous answers. Tip: The Last Updated column shows the date, time, and time zone of the latest update to the Form Submission. The Assignee column shows the user who currently has the form in their Inbox. The system displays an assignee when the supervisor dispatches a form, sends a form for corrections, or assigns a TrueContext Teamwork-enabled incomplete form (Enterprise tier only).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "View a Form Submission version"
    }
  },
  {
    "content": "Related topics\n\nView Form Submissions in the Web Portal Form Submission Workflow Status and States Form Submission Corrections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionVersioning.htm",
      "title": "View Form Submission Versions",
      "section": "Related topics"
    }
  },
  {
    "content": "About\n\nA number of dates and times are collected when mobile forms are dispatched, opened on a mobile device, submitted on a mobile device, and received by the TrueContext servers. These are visible in the web administration portal and on individual form submission documents, whether processed by a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. or manually downloaded from the portal. There are different types of dates and times collected: Timestamps, date stamps, and date/time stamps can all be manually added to individual pages of a form. These stamps are all activated when the page they are on is accessed. Date/time selectors are also manually added to individual pages of a form, but they allow mobile users to select a date/time. Form metadata, including a submit time, is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "About"
    }
  },
  {
    "content": "collected when a mobile user submits a form. A time is also collected when a form is launched. Data receipt and processing times are collected by the TrueContext servers once a form has been submitted.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "About"
    }
  },
  {
    "content": "Form submissions\n\nTwo submission timestamps are shown in the Form Submissions list view; one collected on the device, and one collected by the TrueContext server: Date Sent on Device: This timestamp corresponds with when the mobile user submitted the form, and the submission moved to the Outbox on the device. If the submission remains in the Outbox (due to connection or other errors), this timestamp is still saved. Date Received on Server: This indicates the date and time when the submission was uploaded to the TrueContext server. This is usually within moments of the Date Sent on Device, but slight delays can occur with image-heavy submissions. Larger delays may show if the user had network connection issues at the time of their form submission. If, due to an error, forms have been sent to TrueContext Support for manual upload, or if data has been recovered by TrueContext Support for any reason, the time of the manual upload will show as Date Received on Server.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Form submissions"
    }
  },
  {
    "content": "Individual form submissions\n\nAfter clicking on the reference number of a submitted form, more detailed information, including processing times and sent times in different time zones, are available.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Individual form submissions"
    }
  },
  {
    "content": "Form submission processing\n\nWhen viewing an individual submission, processing details are listed in the top right of the screen. Upload Started/Completed: These fields show what time the submission was received and uploaded to the TrueContext server. A long upload time indicates a large form or a large number of images. Upload Completed indicates that the TrueContext server has received and stored the submission. After uploading, there will be a short delay (a minute or so) before the submission begins to process. Processing Started/Completed: These fields show when the data in the submission is actually read and processed. This includes saving the data, reading Geo Addresses, processing images, and executing any data destinations. In the expandable Form Submission Processing tab, a timestamp is included for every step of processing, from saving data to processing data destinations. These steps are all executed on the TrueContext server. Steps can be skipped (in the above screenshot,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Form submission processing"
    }
  },
  {
    "content": "there were no images to process) or fail to process (as in the case of an email Data Destination above). These timestamps bear little importance to most organizations, except in the instance where a Data Destination execution has failed. In the above image, note that the failed step shows a much later timestamp; this is the time of the most recent execution attempt, as failed data record executions reprocess every 30 minutes until they are successful.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Form submission processing"
    }
  },
  {
    "content": "Page-level timestamps\n\nAny dates/times listed on specific form pages are manually added to the form. With a datestamp, timestamp or date/timestamp, the date/time are collected when the page is accessed. With a date/time selector, the mobile user makes the selection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Page-level timestamps"
    }
  },
  {
    "content": "Timestamps in Documents (.PDF, .Doc)\n\nDocuments, whether processed through a Data Destination or downloaded directly from the portal, also contain a number of timestamps. Submission Date: This timestamp corresponds with when the mobile user submitted the form and the submission moved to the Outbox on the device. If the submission remains in the Outbox (due to connection or other errors), this timestamp is still saved. Date Received on Server: This indicates the date and time when the submission was uploaded to the TrueContext server. This is usually within moments of the Date Sent on Device, but slight delays can occur with image-heavy submissions. Larger delays may show if the user had network connection issues at the time of their form submission. If, due to an error, forms have been sent to TrueContext Support for manual upload, or if data has been recovered by TrueContext Support for any reason, the time of the manual upload will show as Date Received on Server. Location: The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Timestamps in Documents (.PDF, .Doc)"
    }
  },
  {
    "content": "system collects a form-level location upon form submission when the form has Collect geo location enabled. The topic Set Up Form Properties describes the Collect geo location setting in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Timestamps in Documents (.PDF, .Doc)"
    }
  },
  {
    "content": "Related Topics\n\nReporting on Form Submissions Scheduling CSV Exports Activity Views",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ProcessAndManageFormSubmissions/FormSubmissionTimestampFields.html",
      "title": "Form Submission Timestamp Fields",
      "section": "Related Topics"
    }
  },
  {
    "content": "Where to Find the Form Submission Reference Number in the Web Portal Available on all tiers: Essentials Advanced Enterprise Overview Are you looking for where to find the Reference Number in the web portal? This is a common question you may run into when speaking with Support. In order to troubleshoot and assist with any Form submission A form submission is a dispatched or submitted form. related questions, we will require the Submission ID. In this article I will detail the steps needed on how to find your Teams Reference Number per Form through Portal. Steps In order to view the Reference Number for your Team you will need to have Admin level access to Portal. Please see below for steps on how to find the Reference Number. Go to your Data & Analytics dropdown. Select Submissions (by Form) Navigate to the proper FormSpace (area listed in bold within the list) Go to the Form in question and select Continue. You will then be taken to that Form's Form Submission page. On the left side of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032263172.html",
      "title": "Where to Find the Form Submission Reference Number in the Web Portal"
    }
  },
  {
    "content": "the submissions listed, you will see the column labeled 'Reference #' This number is the number Support will need to look into a submission for your Team, please copy the number and send it to the Agent working on your ticket If for any reason you cannot find the Submission Reference Number (aka submission ID) please let us know and we will help you navigate to this page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360032263172.html",
      "title": "Where to Find the Form Submission Reference Number in the Web Portal"
    }
  },
  {
    "content": "Export Form Submission Data\n\nThis section includes the following content: CSV Export of Form SubmissionsSchedule a CSV Export of Form SubmissionsDisplay Accented Characters in TrueContext-Generated CSV FilesLegacy: \"All Form Activity\" - Scheduled CSV ExportsLegacy: \"All Form Activity\" CSV Export Options",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ExportFormSubmissionData.htm",
      "title": "Export Form Submission Data",
      "section": "Export Form Submission Data"
    }
  },
  {
    "content": "About\n\nA list of Form Submissions can be exported from the TrueContext web portal in a CSV spreadsheet format. This report will contain all data included in each submission that is included. This is useful for: backing up the data from form submissions searching across the data to easily find a specific submission building your own reports in Excel, or importing TrueContext data into other reporting tools or sharing data with external stakeholders Note:You can export up to 1,000,000 submissions at one time. You can apply filters to reduce the number of submissions to export.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "About"
    }
  },
  {
    "content": "Export a List of Form Submissions\n\nIn the Data & Analytics tab, select Submissions (by Form). Choose the form you want to export a list of submissions for. On the Submissions page for your form, apply the desired filters to limit the list of results to the submissions you want to export. By default, filters limit the list to forms from the last 30 days. Locate the CSV Export button above the table of results. A pop-up will appear with a list of export settings. See below. Note: If you are exporting a very high volume of submissions (for example, over 25000 submissions in a single export), depending on the size of your form, the export can take minutes to hours to complete. If the export takes too long, try filtering the results to export a smaller group of submissions. We also recommend scheduled exports and data destinations, which can be used to automate the export of data to email or other systems on a regular basis, so that the regular export of large amounts of data becomes",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Export a List of Form Submissions"
    }
  },
  {
    "content": "unnecessary.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Export a List of Form Submissions"
    }
  },
  {
    "content": "Email a download link to:\n\nThe export will be delivered by email. Your email address should appear by default, but you can change it to another email address.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Email a download link to:"
    }
  },
  {
    "content": "File Options\n\nInclude a header row: If yes, column headers will be displayed in the CSV export above your submission data. Column headers: Choose what will appear in the headers for each column that contains data from a question in the form. Question Text - uses the actual text of each question in your form. Question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. - uses the shorter Unique Identifier for each question in your form. You set up the question Unique Identifier when you add the question to the form. You can choose to display both the question text and Unique ID. LanguageChoose what language any metadata columns will appear in: English, French, Spanish, or Japanese. UTF-8 encodedSpecial characters in TrueContext-generated CSV files might display incorrectly when opened in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "File Options"
    }
  },
  {
    "content": "Microsoft Excel. Excel does not recognize UTF-8 encoded CSVs and may display them with the wrong encoding (for example, \"Stéphane\" may display as \"StÃ©phane\"). To ensure data with special characters is imported properly, disable this option. For detailed information, please read: Display Accented Characters in TrueContext-Generated CSV Files",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "File Options"
    }
  },
  {
    "content": "Data to Include\n\nSelect the metadata columns to include in your CSV export. These columns include additional information about your dispatched or submitted forms. The following image shows how to add or remove metadata columns. You can add any of the following metadata columns to your CSV export: Address—Street address of the location where the user submitted the form. Data Record Name—Name of the dispatched or submitted form. Device Entry Time—Date and time when the mobile user submitted the form on the device. The date and time is shown in the mobile user’s local date and time. Device OS—Operating system of the device from which the user submitted the form. Device OS Version—Version of the operating system. Execution State—Indicates if the system successfully executed Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Data to Include"
    }
  },
  {
    "content": "storage) in several different formats. and other processes related to the submitted form. This column is included by default. Form Name—Name of the form. Form Submission Status—Status of the dispatched or submitted form within your workflow. This column is included by default. Note:The Form Submission Status references the record state and data state. For up-to-date status information, refer to the Workflow Status, which references the workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\". and data flow state A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\".. Form Version—Version of the form. FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Data to Include"
    }
  },
  {
    "content": "multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. Name—Name of the FormSpace where the form is stored. Local Submitter Entry Time—Date and time when the user submitted the form. The date and time is shown in your local date and time. Location—Coordinates of the location where the user submitted the form. Coordinates are shown in a latitude | longitude format. Mobile Application Version—Version of the Mobile App. Reference Number—Data ID and date of the dispatched or submitted form. This column is included by default. Server Receive Time—Date and time when a submitted form reached the server. If the form hasn’t been submitted, it shows when the form was dispatched. The date and time is shown in your local date and time. This column is included by default. User Name—First name, last name, and username of the user who submitted the form. This column is included by default. Workflow Status",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Data to Include"
    }
  },
  {
    "content": "The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result.—The status of a dispatched or submitted record within your company’s workflow. The Workflow Status always lists a workflow state, and might include a data flow state or completion state for additional context. This column is included by default. Info:The topic Form Submission Workflow Status and States describes workflow states and data flow states in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Data to Include"
    }
  },
  {
    "content": "CSV Format\n\nYou will get an email containing a CSV file. Below are a few examples of what that file might look like. Color-coding had been added to help you spot the differences.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "CSV Format"
    }
  },
  {
    "content": "Submissions without Repeatable Section Data\n\nForms without Repeatable Sections result in a very simple CSV format. 1 column for each Question 1 row for the form submission The file pictured below has 4 form submissions in it (one per row).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Submissions without Repeatable Section Data"
    }
  },
  {
    "content": "Submissions with Repeatable Section Data\n\nRepeatable Sections allow users to add multiple entries for the same set of questions. Using Repeatable Sections in your forms will cause some noticeable changes in the CSV export file. 1 column for each question Extra rows per Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. entry (5 rows = 5 repeatable section entries) Non-Repeat data is repeated on every row The file below shows 4 submissions. The orange highlighted columns represent two questions in a Repeatable Section. The first submission only contains 1 Repeat entry, so it only takes up 1 row. The second contains 3 entries, so it takes up 3 rows.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Submissions with Repeatable Section Data"
    }
  },
  {
    "content": "Submissions with Data from Multiple Repeatable Sections\n\nHere's an example of a CSV file for submissions that have data for two Repeatable Sections. The orange columns and blue columns are two different repeatable sections.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Submissions with Data from Multiple Repeatable Sections"
    }
  },
  {
    "content": "Submissions with Data from Nested Repeatable Sections\n\nRepeatable sections can also have repeatable sections nested within them. The below file shows a single form submission. There are two entries into the Repeatable Section \"Floor\". The first \"Floor\" has two nested entries for \"Units\". The second \"Floor\" only has one nested \"Unit\" entry.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/115005463603.html",
      "title": "CSV Export of Form Submissions",
      "section": "Submissions with Data from Nested Repeatable Sections"
    }
  },
  {
    "content": "About\n\nSchedule an export of Form Submissions, and have it delivered by email on regular intervals in a CSV spreadsheet format. This report will contain all data included in each submission that is included. This is useful for: backing up the data from form submissions searching across the data to easily find a specific submission building your own reports in Excel, or importing TrueContext data into other reporting tools or sharing data with external stakeholders Note:You can export up to 1,000,000 submissions at one time. If your scheduled export has more submissions, your export fails, and the system sends an email with an error to your problem contact email addresses. Apply filters to your scheduled export to reduce the number of submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "About"
    }
  },
  {
    "content": "Prerequisite\n\nYou must be a TrueContext Admin user. Note:If you schedule a CSV export as an Admin user, and then your role changes, the scheduled export fails with an error and is deactivated.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Prerequisite"
    }
  },
  {
    "content": "List Existing Schedules\n\nTo view your existing schedules: In the Data & Analytics tab, select Submissions (by Form). Choose your desired form. Mouse over the form name, and press List Schedules.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "List Existing Schedules"
    }
  },
  {
    "content": "Create a Schedule\n\nGo to the Submissions (by Form) page for your desired form. Select the calendar icon above the list of Form Submissions. Set up the schedule according to the options below.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Create a Schedule"
    }
  },
  {
    "content": "Schedule Options\n\nSchedule Name Provide a name for the schedule. In the event of a team using multiple schedules, the name should make it easily distinguishable from other schedules. Time Zone The time zone will default to the team time zone on this page. This sets the time zone for the Schedule Recurrence Pattern. Schedule Recurrence Pattern This setting controls both when your data will be delivered and what date/time period of data will be delivered. Note: Date/time settings on saved filters will not be respected in the schedule; the schedule recurrence pattern acts as the date/time filter for which dispatched and submitted forms to include. For example: Set an hourly export at the 30-minute mark every hour. If I receive an export at 2:30, it will include submissions completed between 1:30 and 2:30. Set a daily export at 2:30 AM The export will include submissions completed between 2:30 AM yesterday and 2:30 AM today Set a weekly export on Fridays at 3:00 PM The export will include",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Schedule Options"
    }
  },
  {
    "content": "submissions completed between 3:00 PM last Friday and 3:00 PM this Friday Set a monthly export on the 1st of the month at 10:00 AM The export will include submissions completed between 10:00 AM on the 1st of last month, and 10:00 AM on the first of the current month",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Schedule Options"
    }
  },
  {
    "content": "Update a Scheduled Export\n\nHow do I update the filtered forms on a scheduled export, or how do I update a scheduled export to remove forms? Navigate to the desired scheduled export. Expand the Form Submission Filter and select Go To Filter. Select Update from the dropdown menu next to the filter name. Update which forms you wish to use in the filter and select Update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Update a Scheduled Export"
    }
  },
  {
    "content": "Filter Options\n\nSet up filters to control which form submissions are included. Read more about these filters.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Filter Options"
    }
  },
  {
    "content": "File Options & Data to Include\n\nRead more information about these settings in our manual CSV Export article.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "File Options & Data to Include"
    }
  },
  {
    "content": "Email Options\n\nEmail Addresses of Export Recipients Supply the email addresses of the individuals to send the exported data to. If multiple addresses need to be included, separate them with a semi-colon or a comma between each address. Do not send empty Email Reports With this option selected, in the event that no form submissions meet the filter rules, no email will be sent.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "Email Options"
    }
  },
  {
    "content": "File Format\n\nRead more about the data export format in our manual CSV Export article.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360000692783.html",
      "title": "Schedule a CSV Export of Form Submissions",
      "section": "File Format"
    }
  },
  {
    "content": "About\n\nSpecial characters in TrueContext-generated CSV files might display incorrectly when opened in Microsoft Excel. Excel does not recognize UTF-8 encoded CSVs and may consequently display them with the wrong encoding. For example, \"Stéphane\" may display as \"StÃ©phane\"). To ensure data with special characters is imported properly into Excel, the UTF-8 Encoded file option under Data & Analytics > Submissions (by Form) in the Web Portal must be cleared.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501088.html",
      "title": "Display Accented Characters in TrueContext-Generated CSV Files",
      "section": "About"
    }
  },
  {
    "content": "Remove UTF-8 encoding for manual exports\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., select Data & Analytics > Submissions (by Form). In View Form Submissions, choose a form from the list, and then select Continue. Result: The system displays a list of dispatches and submissions for the selected form from the last 30 days. Select the CSV icon. In Select Export Options, verify that the email address for the download link is correct. In the File Options section, clear the UTF-8 Encoded checkbox. Select Export. Result: The system sends you the file by email.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501088.html",
      "title": "Display Accented Characters in TrueContext-Generated CSV Files",
      "section": "Remove UTF-8 encoding for manual exports"
    }
  },
  {
    "content": "Remove UTF-8 encoding for scheduled exports\n\nInfo:You can remove UTF-8 encoding for data that is exported on a schedule.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501088.html",
      "title": "Display Accented Characters in TrueContext-Generated CSV Files",
      "section": "Remove UTF-8 encoding for scheduled exports"
    }
  },
  {
    "content": "Create a schedule and remove UTF-8 encoding\n\nSelect Data & Analytics > Submissions (by Form). Choose a form from the list, and then select Continue. Result: The system displays a list of dispatches and submissions for the selected form from the last 30 days. On the Form Submissions page, select the Create a Schedule icon. Navigate to Data Options > File Options, and clear the UTF-8 Encoded checkbox. Select Create to save changes. Result: Accented characters display correctly in the scheduled export.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501088.html",
      "title": "Display Accented Characters in TrueContext-Generated CSV Files",
      "section": "Create a schedule and remove UTF-8 encoding"
    }
  },
  {
    "content": "Update a schedule and remove UTF-8 encoding\n\nNavigate to the existing schedule: Data & Analytics > Submissions (by Form) > FormName > Continue. Result: The system displays a list of dispatches and submissions for the selected form from the last 30 days. Select FormName > List Schedules. From the list, select the schedule that you want to update. Result: The system displays the details page of the selected schedule. Go to ScheduleName > Update. On the Data Options tab, in the File Options section, clear the UTF-8 Encoded checkbox. Select Update to save changes. Result: Accented characters display correctly in the scheduled export.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501088.html",
      "title": "Display Accented Characters in TrueContext-Generated CSV Files",
      "section": "Update a schedule and remove UTF-8 encoding"
    }
  },
  {
    "content": "Legacy: \"All Form Activity\" - Scheduled CSV Exports About List \"All Form Activity\" Schedules Create an \"All Form Activity\" Schedule Schedule Options Data Record Options Email Options NOTE: This is a legacy feature for the All Form Activity view. This feature is no longer generally available. About This article documents scheduling a of Form Submissions from the All Form Activity page. This feature is legacy and no longer generally available. Please note that this type of scheduled export does not include data from Repeatable Sections. To include Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. data in your scheduled exports, set up the export from a Submissions (by Form) page. List Existing \"All Form Activity\" Schedules To view your existing schedules: Navigate to the All Form Activity page. Mouse over the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501068.html",
      "title": "Legacy: \"All Form Activity\" - Scheduled CSV Exports"
    }
  },
  {
    "content": "header, and select List Schedules. Create an \"All Form Activity\" Schedule Go to the All Form Activity page. Select the calendar icon above the list of Form Submissions. Set up the export according to the options below. Schedule Options Schedule Name Provide a name for the schedule. In the event of a team using multiple schedules, the name should make it easily distinguishable from other schedules. Time Zone When export schedule is enabled, the time zone will be defaulted to team time zone on this page. Schedule Recurrence Pattern This setting controls both when your data will be delivered and what date/time period of data will be delivered.Note: Date/time settings on saved filters will not be respected in the schedule; the schedule recurrence pattern acts as the date/time filter for which data records to include. For example: Set an hourly export at the 30 minute mark every hour.If I receive an export at 2:30, it will include submissions completed between 1:30 and 2:30. Set a daily",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501068.html",
      "title": "Legacy: \"All Form Activity\" - Scheduled CSV Exports"
    }
  },
  {
    "content": "export at 2:30 AM The export will include submissions completed between 2:30 AM yesterday and 2:30 AM today Set a weekly export on Fridays at 3:00 PM The export will include submissions completed between 3:00 PM last Friday and 3:00 PM this Friday Set a monthly export on the 1st of the month at 10:00 AM The export will include submissions completed between 10:00 AM on the 1st of last month, and 10:00 AM on the first of the current month Form Submission Options Configure Filtering options by either choosing an existing filter, or creating a new one. Read here for more information on configuring filter settings. Configure Export options following the guidelines discussed here. Display accented characters in CSV files. Email Options Email Addresses of Export Recipients Supply the email addresses of the individuals to send the exported data to. If multiple addresses need to be included, separate them with a semi-colon or a comma between each address. Do not send empty Email Reports With",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501068.html",
      "title": "Legacy: \"All Form Activity\" - Scheduled CSV Exports"
    }
  },
  {
    "content": "this option selected, in the event that no form submissions meet the filter rules, no email will be sent.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501068.html",
      "title": "Legacy: \"All Form Activity\" - Scheduled CSV Exports"
    }
  },
  {
    "content": "About\n\nThis page discusses exporting data as CSV from the \"All Form Activity\" page. Please note that this CSV Export does NOT support exporting data from Repeatable sections. To download data from Repeatable Sections, perform a CSV export from a Submissions (by Form) page. Note: If you are exporting a very high volume of submissions (for example, over 25000 submissions in a single export), depending on the size of your form, the export can take minutes to hours to complete. If export takes too long, try filtering the results to export a smaller group of submissions. We also recommend scheduled exports and data destinations, which can be used to automate the export of data to email or other systems on a regular basis, so that the regular export of large amounts of data becomes unnecessary.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "About"
    }
  },
  {
    "content": "Export Delivery\n\nDownload Now: This is only recommended for smaller exports, as large exports can result in long wait times. This option opens a pop-up window; when the export is complete, open the file. Receive an email with a link to download: The system sends you an email when the download is complete.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Export Delivery"
    }
  },
  {
    "content": "Do you want a header?\n\nChoose Yes to display column headers above the rows of submitted form data. Choose No to turn headers off. Your header row can be one of two options: Question Text - uses the actual text of each question in your form Question Unique Identifier - uses the shorter Unique Identifier for each question in your form. You set up the question Unique Identifier when you add the question to the form..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Do you want a header?"
    }
  },
  {
    "content": "Advanced Options\n\nLanguage: Choose what language metadata columns will appear in: English, French, Spanish, or Japanese. UTF-8 encoded: Special characters in TrueContext-generated CSV files might display incorrectly when opened in Microsoft Excel. Excel does not recognize UTF-8 encoded CSVs and may display them with the wrong encoding (i.e., \"Stéphane\" may display as \"StÃ©phane\"). To ensure data with special characters is imported properly, disable this option. For detailed information, please read: Display Accented Characters in TrueContext-Generated CSV Files",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Advanced Options"
    }
  },
  {
    "content": "Metadata Columns\n\nSelect the metadata columns to include in your CSV export. These columns include additional information about your dispatched or submitted forms. The following image shows how to add or remove metadata columns. You can add any of the following metadata columns to your CSV export: Address—Street address of the location where the user submitted the form. Data Record Name—Name of the dispatched or submitted form. Device Entry Time—Date and time when the mobile user submitted the form on the device. The date and time is shown in the mobile user’s local date and time. Device OS—Operating system of the device from which the user submitted the form. Device OS Version—Version of the operating system. Execution State—Indicates if the system successfully executed Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Metadata Columns"
    }
  },
  {
    "content": "storage) in several different formats. and other processes related to the submitted form. This column is included by default. Form Name—Name of the form. Form Submission Status—Status of the dispatched or submitted form within your workflow. This column is included by default. Note:The Form Submission Status references the record state and data state. For up-to-date status information, refer to the Workflow Status, which references the workflow state The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\". and data flow state A data flow state describes how data from a dispatched or submitted record moves between the Web Portal and the Mobile App. For example, a record might have a data flow state of \"Downloaded\".. Form Version—Version of the form. FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Metadata Columns"
    }
  },
  {
    "content": "multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. Name—Name of the FormSpace where the form is stored. Local Submitter Entry Time—Date and time when the user submitted the form. The date and time is shown in your local date and time. Location—Coordinates of the location where the user submitted the form. Coordinates are shown in a latitude | longitude format. Mobile Application Version—Version of the Mobile App. Reference Number—Data ID and date of the dispatched or submitted form. This column is included by default. Server Receive Time—Date and time when a submitted form reached the server. If the form hasn’t been submitted, it shows when the form was dispatched. The date and time is shown in your local date and time. This column is included by default. User Name—First name, last name, and username of the user who submitted the form. This column is included by default. Workflow Status",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Metadata Columns"
    }
  },
  {
    "content": "The workflow status describes how a record moves through your company’s workflow. All statuses include a workflow state, and some also contain the data flow state or completion result.—The status of a dispatched or submitted record within your company’s workflow. The Workflow Status always lists a workflow state, and might include a data flow state or completion state for additional context. This column is included by default. Info:The topic Form Submission Workflow Status and States describes workflow states and data flow states in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Metadata Columns"
    }
  },
  {
    "content": "Header Blocks\n\nChoose whether to include a single header block, or multiple header blocks. Multiple: If submissions from multiple forms are included in the export, headers for each form will be included, and submissions will be sorted into groups by form for easier viewing. Single: Only the headers from the Master Form will be included.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501118.html",
      "title": "Legacy: \"All Form Activity\" CSV Export Options",
      "section": "Header Blocks"
    }
  },
  {
    "content": "TrueContext Analytics\n\nThis section includes the following content: TrueContext Basic AnalyticsAdvanced Analytics for TrueContextConfiguring the DashboardActivity Views",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/PFAnalytics.htm",
      "title": "TrueContext Analytics",
      "section": "TrueContext Analytics"
    }
  },
  {
    "content": "About\n\nTrueContext Basic Analytics give TrueContext Admins more detailed insight into the question data of their data records. The configuration of Basic Analytics is incredibly easy and intuitive; with just a few clicks, you can create dynamic, customized graphs. Unlike the TrueContext Dashboards, which show general information about overall form submissions, Basic Analytics allow administrators to break data down by question to easily track what answers their users are submitting. View the video below to learn more about using Basic Analytics.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501158.html",
      "title": "TrueContext Basic Analytics",
      "section": "About"
    }
  },
  {
    "content": "Configure Analytics\n\nMouse over the dropdown beside Data & Analytics, and select Basic Analytics.Select the Configure Basic Analytics For a Form button ().Select the desired form from the dropdown list. One Basic Analytics configuration can include only one form. Create multiple configurations to view data for more forms.Under Analyzed Questions, select the answer data that you would like to include in the analysis. Questions are listed by question Unique ID. To select multiple questions, simply select one, reopen the dropdown list, and select another. Repeat until all desired questions are selected.Note: Some data types cannot be used for Basic Analytics (ie. Information, Image, Signature, etc.), so their unique IDs will not be included in the list. Click the Create button.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501158.html",
      "title": "TrueContext Basic Analytics",
      "section": "Configure Analytics"
    }
  },
  {
    "content": "View Existing Analytics\n\nNote: Once you configure the Analytics, you must submit a form in order to activate the feature and pull historical data from previous form submissions. Mouse over the dropdown beside Data & Analytics, and select Basic Analytics.Select the name of the form in the list on the Basic Analytics Page.Select the time period to show data from.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501158.html",
      "title": "TrueContext Basic Analytics",
      "section": "View Existing Analytics"
    }
  },
  {
    "content": "Delete Analytics\n\nTo delete a basic Analytics configuration, navigate to it as discussed above.Mouse over the dropdown beside the Form Name.Select Remove this Page.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501158.html",
      "title": "TrueContext Basic Analytics",
      "section": "Delete Analytics"
    }
  },
  {
    "content": "How TrueContext Advanced Analytics works\n\nTrueContext offers optional advanced data analytics functionality through a partnership with Birst Agile Business Analytics. Birst is a Business Intelligence platform that analyzes data and provides dashboards and reports that help connect submitted data with your business and processes. Easily configure the reporting settings from within the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. by selecting which mobile form fields are to be reported out. This automatically creates powerful executive reports and dashboards that can be shared with company executives, business partners or customers. TrueContext Advanced Analytics provides the connection between data from the field and the Birst portal, where you are able to: Build dashboards and reports to analyze data at a glance. Share data with customers or use it",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "How TrueContext Advanced Analytics works"
    }
  },
  {
    "content": "internally. Get immediate access to reports about Data Record metadata. Integration with Birst is set up by creating an \"Analytics Project\" in TrueContext. A TrueContext analytics project controls how data flows from the TrueContext system into the Birst business analysis platform. When creating a TrueContext Analytics Project, you select a group of mobile forms that will send data to an Analytics \"Space\". For example, suppose an organization has two mobile forms for invoicing; one that is used for field services, and another that is used for product sales. There are some differences between these forms, but both are used for invoicing customers, and you would like to create reports and dashboards that provide analysis for all invoices. The TrueContext Analytics Project will channel all data from these two forms into a single data set within the analytics system. The use of consistent Unique IDs across the forms in an analytics project is important. For our two invoice forms, for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "How TrueContext Advanced Analytics works"
    }
  },
  {
    "content": "instance, we want to make sure that the \"Customer Name\" questions on both have a matching ID, like \"customerName\". This way, the Analytics Project knows that the data from these questions belong in the same column in the Analytics System. Read more about Unique IDs here. After the Birst Space has been created, you can use the Birst system to create reports and dashboards, and even upload related data sets from your business to create \"mash-ups\".",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "How TrueContext Advanced Analytics works"
    }
  },
  {
    "content": "TrueContext Analytics FAQ\n\nDo I have to install or download anything No. Upon signup, log in to TrueContext and select the Data & Analytics tab. The user will then be taken to Analytics partner Birst.com. Can you input non-TrueContext data into this analytics subscription? Yes. Combined, uploaded independent data in CSV format, can be mashed up with TrueContext generated data, for full analysis. How many user IDs can I have? Your Advanced Analytics subscription comes with unlimited user licenses, which are unrelated to the number of licenses on your TrueContext account. All users, however, must have the same email domain (mycompany.com, for example). What are the different user types? Users can be granted “Admin” or “User” roles in their own spaces. You can create custom Groups to control authorization for shared spaces. Can I send the findings and analysis to anyone I want? Yes and no. This Analytics subscriptions allow for communication between subscription users only. To share data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "TrueContext Analytics FAQ"
    }
  },
  {
    "content": "with non-subscription contacts, data must be exported and shared separately. What format can I upload or export data in? CSV only for upload. CSV, Excel, PDF or PNG for export. What types of data are supported? String, numeric and date. Information, when you select the option to Include Information Label Questions. What types of charts are supported? Line, bar, stacked bar, pie, area, stacked area, column, stacked column, doughnut, pyramid, waterfall, scatter, meters, gauges, tree, heat map, funnel, radar map and geo map. How long until I am fully up and running following signup? Depending on the learning curve for each user, as well as customer upload requirements, the timeframe can be same-day. How long is my data kept? Forever. Your data does not expire. How fast can I generate reports? Report generation time depends on the size of the data file(s), with generation time being as little as a minute. Can a TrueContext Analytics account be upgraded to a full Birst.com account? No. Any",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "TrueContext Analytics FAQ"
    }
  },
  {
    "content": "new full Birst.com account setup starts from scratch. TrueContext Analytics accounts cannot be expanded upon. Can I permanently delete data I have uploaded to the Birst.com platform? Yes. When you delete a Project, all data within it is deleted and physically wiped from storage. Can I push data from questions that never have answers? Yes. You can push data from Information Label questions if you select the option to Include Information Label Questions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "TrueContext Analytics FAQ"
    }
  },
  {
    "content": "Sign Up for Advanced Analytics\n\nTo sign up for TrueContext Advanced Analytics: Select DATA & ANALYTICS > Advanced Analytics, or visit https://live.truecontext.com/analytics. Select SIGN UP FOR ADVANCED ANALYTICS. Fill out the form to request the addition of the TrueContext Analytics service to your account. An account manager will contact you when the service has been enabled. Browse to https://live.truecontext.com/analytics to accept the terms and conditions, and you will be ready to start creating Analytics Projects.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "Sign Up for Advanced Analytics"
    }
  },
  {
    "content": "Create an Analytics Project\n\nTo create an Analytics Project (once the service has been enabled): Select DATA & ANALYTICS > Advanced Analytics. Select CREATE ANALYTICS PROJECT. Complete the required fields: Name: Enter a name for the Analytics Project. Time Zone: Enter a time zone. This determines the time of the Project’s push schedule. Optionally, set the push schedule frequency with cron expressions. Select the forms and Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. you want to include in the Project. Information Label questions don’t have answers associated with them. Do you want to include Information Label question data in the Project? If yes, select the Include Information Label Questions checkbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "Create an Analytics Project"
    }
  },
  {
    "content": "Result: This pushes the question data, but no answer data except for the answer ID. If no, go to Step 6. Optionally, set up column names and Unique IDs in the Pivots table to organize or filter submission data. Select Create. Result: The system creates the Analytics Project. The first data push occurs 24 hours after creation.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "Create an Analytics Project"
    }
  },
  {
    "content": "Accessing Analytics Data\n\nThe Analytics Project is not immediately ready in the Birst system. After a Data Record has been submitted against one of the associated forms, the project will be initiated on the Next Data Push date, specified in the Analytics Project details and as shown below. Once data has been pushed, the project will be set up in a \"Space\" in the Birst system.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "Accessing Analytics Data"
    }
  },
  {
    "content": "Update an Analytics Project\n\nNavigate to the desired Analytics Project. From the ProjectName dropdown menu, select Update. After applying the desired changes, select Update. Please note that data from newly-added questions will not appear in the Birst system immediately; this will occur after the Next Data Push, as shown above.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501138_AdvancedAnalytics.html",
      "title": "Advanced Analytics for TrueContext",
      "section": "Update an Analytics Project"
    }
  },
  {
    "content": "Using the Dashboard\n\nPages In dashboards containing multiple reports, reports can be organized into pages for easy viewing. For example, you may want to set up one page for reports showing data from the current week, while another page could host only reports showing data from the current day. Reports There are two types of reports available. Form Submissions reports track the number of submissions made against specified forms. User submission reports track the submissions made by specified users. Both types of reports can be customized to only show information that falls within a specified time period. Reports can be displayed in either a chart form, or plotted on a map based on a form geo stamp. Chart Map Add a Page Mouse over the icon in the top right of the dashboard screen. Select Add Page from the dropdown list. Choose a Name for the page, and select the Save button. Add Reports With the desired page chosen, mouse over the lower icon and select the desired report type. Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Using the Dashboard"
    }
  },
  {
    "content": "Submissions Reports",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Using the Dashboard"
    }
  },
  {
    "content": "Report Properties\n\nName Output Format: Chart or Map Time Period: The report will show Form Submission Data that falls within the chosen time period. Note that the time period chosen is relative to when the report is being viewed, not when it is created. For example, if \"This Hour\" is chosen as the time period, the only data visible in the report will be from forms submitted in the hour that the user is viewing the report.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Report Properties"
    }
  },
  {
    "content": "Aggregation Properties\n\nChart: Show Annotations Show Aggregate Data Time Increment By: Week, Day, Day of Week, Hour Workflow State The workflow state describes the current stage in a workflow as a result of the last action taken on a record. For example, a record might have the workflow state \"Dispatched\".: Report on records in a specific workflow state, or report on records in all states. Select one of the following options: All Dispatched Incomplete Pending Approval Changes Requested Reopened Completed Cancelled Info:The topic Form Submission Workflow Status and States: Workflow state describes these options in more detail. Map: This output format will only collect successfully completed Data Records that have been submitted by the end user; data from incomplete forms will not be included. Geo Stamp Search Type: Select which Form geostamp to use to plot submissions on the map. All Data Record: Use the data record geo location automatically collected when the form is started on the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Aggregation Properties"
    }
  },
  {
    "content": "mobile device. Geo Answer Data: Use the data collected by a Geo location control on the form; these controls collect geo location only when the page they are on is first accessed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Aggregation Properties"
    }
  },
  {
    "content": "Linked Forms\n\nSelect the forms that will be included in the report. Move forms between the Available and Selected columns with the arrow buttons. User Submissions Reports",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Linked Forms"
    }
  },
  {
    "content": "Report Properties\n\nName Output Format: Chart or Map Time Period: The report will show User Submission Data that falls within the chosen time period. Note that the time period chosen is relative to when the report is being viewed, not when it is created. For example, if \"This Hour\" is chosen as the time period, the only data visible in the report will be from forms submitted in the hour that the user is viewing the report.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Report Properties"
    }
  },
  {
    "content": "Aggregation Properties\n\nChart: Show Annotations Show Aggregate Data Time Increment By: Week, Day, Day of Week, Hour Workflow State: Report on records in a specific workflow state, or report on records in all states. Select one of the following options:AllDispatchedIncompletePending ApprovalChanges RequestedReopenedCompletedCancelledInfo:The topic Form Submission Workflow Status and States: Workflow state describes these options in more detail. Map: This output format will only collect successfully completed Data Records that have been submitted by the end user; data from incomplete forms will not be included. Geo Stamp Search Type: Select which Form geostamp to use to plot submissions on the map. All Data Record: Use the data record geo location automatically collected when the form is started on the mobile device. Geo Answer Data: Use the data collected by a Geo location control on the form; these controls collect geo location only when the page they are on is first accessed.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Aggregation Properties"
    }
  },
  {
    "content": "Linked Users\n\nSelect the users to be included in the report. Move users between the Available and Selected columns with the arrow buttons. Edit or Delete a Page To Edit or Delete an existing page: Select the desired page from the dashboard screen. Mouse over the lower icon and select Edit Page or Delete Page. Edit, Delete or Move Reports To Edit, Delete, or Move an existing report: Select the page that the report is on. Scroll down to the report, and mouse over the icon on the right. Select Edit, Delete, or Move Report.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501148.html",
      "title": "Configuring the Dashboard",
      "section": "Linked Users"
    }
  },
  {
    "content": "About\n\nThere are several areas in the TrueContext Portal where quick and pre-filtered views of submitted forms can be viewed. These Activity pages can be found in the following places.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501128.html",
      "title": "Activity Views",
      "section": "About"
    }
  },
  {
    "content": "Dashboard Activity Views\n\nDashboards have moved and been expanded. Read here for more information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501128.html",
      "title": "Activity Views",
      "section": "Dashboard Activity Views"
    }
  },
  {
    "content": "Form-Specific Activity Views\n\nThe topic View Form Submissions in the Web Portal describes how to view and filter data from submitted forms. It also shows you how to export data and plot the location where the form was submitted on a map.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501128.html",
      "title": "Activity Views",
      "section": "Form-Specific Activity Views"
    }
  },
  {
    "content": "User-Specific Activity Views\n\nEach user has an Activity tab. Users can see their own activity, while Admins can view any user's activity by navigating to their profile. With this tab selected, recent form submissions for the selected user are listed. A graph also displays the number of forms submitted in a specified time period.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501128.html",
      "title": "Activity Views",
      "section": "User-Specific Activity Views"
    }
  },
  {
    "content": "Manage Users and Permissions\n\nThis section includes the following content: Users and GroupsUser ProfileManage User AccountsUser RolesSetting up User AliasesManage GroupsPermissionsUser PermissionsPermissions Quick ReferenceFormSpace PermissionsOverview: Assigning Forms to UsersHow-To: Give Users Access to FormsSelf-RegistrationSelf-Registration OverviewSet Up Self-RegistrationSelf-Register with TrueContextGenerate a New URL for Self-Registration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ManageUsersPermissions.htm",
      "title": "Manage Users and Permissions",
      "section": "Manage Users and Permissions"
    }
  },
  {
    "content": "Users and Groups\n\nThis section includes the following content: User ProfileManage User AccountsUser RolesSetting up User AliasesManage Groups",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/UsersGroups.htm",
      "title": "Users and Groups",
      "section": "Users and Groups"
    }
  },
  {
    "content": "Account\n\nThis page summarizes the user account information. It lists: The user's role: The user's role controls their access to the product. Note that adjusting this will affect what form submissions they can view in the web portal. Language/Timezone preferences. Subscription and Max Active Devices: What type of subscription the user is on, and how many devices they can have logged in before one is deactivated. If your team has Self-Registration enabled (Advanced or Enterprise tier only), the profile shows whether the user self-registered. Activity: The date and time when the user last signed into the web portal, reconciled a device, and submitted a record. The Contact information for the user, such as their phone number, email address, and so forth. Organization: If configured, the Organization box displays information on the user's role in the company or organization, such as Employee ID, Supervisor's name, or other relevant information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Account"
    }
  },
  {
    "content": "Permissions\n\nPermissions control: What forms users have access to on their mobile devices, What access users have in the web portal (beyond what is configured by their user role). User Groups This shows what groups the user is in, and if the user has special user permission in these groups (data record listener, etc) User FormSpace Permissions This shows what forms the groups the user is part of have access to, and what kind of access they have to these forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Permissions"
    }
  },
  {
    "content": "Devices\n\nThis tab lists the user's active devices and past devices. Note that by default, users are allowed three active devices per account. Logging in on the mobile app with a new device after three will deactivate the oldest one.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Devices"
    }
  },
  {
    "content": "Activity\n\nThis tab shows the user's recent data record submission activity in both chart and tabular form. Shown below is the chart form: Editing the User Profile Need to update your company information, or contact info? You can edit your own profile, and TrueContext Admin users can edit the profiles of anyone on their team. To edit your profile, select Update from the dropdown menu next to the username. When editing the user profile, you have access to the following tabs: Account First and Last Name: Used in submitted records and generated documents, can be referenced using the DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression %u[name]. Username: Used to sign into the TrueContext system. Throughout the system, used to associate the user with submitted or assigned records. Can be referenced using the DREL expression %u[username]. Note:Only team admins (Admin",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Activity"
    }
  },
  {
    "content": "users) can change a username. We recommend that you don't change a username once a user has signed in. If you do, the user must log out and then back in with the new username, losing any work in progress. Email Address: For users to access and recover their account if they forget their password or if multi-factor authentication (MFA) is enabled. Also used with Email Data Destinations. Can be referenced using the DREL expression %u[email]. To change an email address, use one of these methods: Team admins: Select Users & Groups to open the list of users, hover over the user row and select the update icon. Result: This opens the Edit Account page where you can update the email address. All users: In the TrueContext Mobile App, go to Settings > Account Details > User Information. Third-party systems: Use the TrueContext REST API /api/1.1/users/{userId} endpoint. Role: The user's role controls what users can access in the Web Portal. It works together with the user's groups and FormSpace",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Activity"
    }
  },
  {
    "content": "FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Info:The topic Permissions Quick Reference: How permissions work describes the relationship of user roles and FormSpace permissions in more detail. Language: The display language for the Web Portal and the Form Builder. This does not change the language displayed on the Mobile App. Info:The topic Language Settings and Translations describes the standard TrueContext language options and how to set them up in more detail. Preferred Time Zone: The time zone used to display data in the Web Portal. This setting overrides the team-level setting. This setting only changes how the time is displayed for this user, not the actual value stored in the system. Info:The topic Time Zone Settings: User Profile Settings explains",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Activity"
    }
  },
  {
    "content": "this setting in more detail. Billing The Billing Account is the subscription that you added the user to. To identify the user as the Account Owner, select the checkbox. This simply flags the user as the account owner in our system and has no other effect. Contact (optional) Contact information includes phone number, address, and a second (alternate) email address. This information is available in the User Data Source and when you export user data. Provide an Alternate Email Address when you want to: Use the alternate email address as the organizer of an event. For example, you might want customer appointments to show service.team@company.com as the organizer rather than the individual technician's email. Send submitted data to a different email address than the user's primary account address. For example, a field technician completes a service report using their company tablet. Their primary email (alex.general@company.com) is their general work email where they receive daily",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Activity"
    }
  },
  {
    "content": "communications. Their alternate email (alex.reports@company.com) is specifically set up to receive copies of completed service reports. By sending the submitted data to the alternate email address, the technician can keep their service documentation organized separately. This makes it easier to track and reference completed work. Organization (optional) You can add organizational information—such as the user's employee ID or manager's name—to help identify users within your team. This information appears in User List CSV Exports and User Data Sources. Advanced Aliases: Aliases provide a way for you to set up alternative usernames that map to usernames in other systems. This streamlines integration between TrueContext and back-office systems. Each user can have up to five unique system-alias pairs. If your team uses SSO (SAML), you might also have a username suffix set up. If you do, the alias must include the suffix, for example: Username suffix: @company.co Alias: alexl@company.co.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Activity"
    }
  },
  {
    "content": "This ensures the correct username mapping between systems. Show 'Get Started' Tab: The Get Started tab is displayed when a user signs into the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. As the name suggests, this tab contains links to content designed to help users get started using TrueContext. The Progress indicator on the Get Started tab keeps track of how many of the recommended topic links a user has clicked through. To hide the tab, clear the checkbox. Preferred Page Size: For Admin users and Web Portal Users, specifies the number of results per page. For example, the list of form submissions (dispatched and submitted records) shows 100 records per page unless you change this setting. CSV Export File Delimiter: For Admin users and Web Portal Users, specifies the delimiter—either a comma or a semi-colon—for CSV export files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217501388.html",
      "title": "User Profile",
      "section": "Activity"
    }
  },
  {
    "content": "Prerequisites\n\nAdmin user role (team admin) in TrueContext Available licenses for new users (Check your subscription) Info:You can add a user for each license that you purchased. Licenses are the \"seats\" you pay for, while users are created to use those seats. Learn more about managing your subscription. User information: Full name and email address. Role they need (Admin, User, or Mobile-Only). Which groups they should be assigned to. Password policy decision: Will users set their own passwords (recommended) or will you set them (not recommended)?",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Create a user and enter account details\n\nGo to Users & Groups > Users > Create User. Does your team have more than one TrueContext subscription? If yes, choose a subscription for the new user. If no, the system doesn't prompt you to choose a subscription. Go to the next step. Enter the user details. Username and Email Address are required. Choose one of the password options. Note:We recommend that you choose the option to Send user a link to securely set their password. This option provides the highest level of security, because only the user knows their password.If you choose to set the password yourself (not recommended), you must:Enter and confirm the password.Securely communicate the password to the user. It's your responsibility to make sure that only the user knows their password.Advise the user to change their password immediately after their first login:On the Mobile App > Settings > Change Password.By selecting Forgot Password on the login page of the Mobile App or Web",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Create a user and enter account details"
    }
  },
  {
    "content": "Portal.By signing into the Web Portal and going to username > User Profile > Change Password. In the Permissions section, select a user role. Mobile-only user: For field technicians, gives limited access to the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. User: Can use the Mobile App and the Web Portal—access depends on group FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Admin user: Gives access to the Web Portal team admin functions. Assign groups. Groups control which forms, resources, and data users can access and what permissions they have. New users are automatically assigned to the Production Group and the Test Group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Create a user and enter account details"
    }
  },
  {
    "content": "Note:Groups are the only way to give users access to forms. Users can't access forms unless they belong to a group that has permissions in the FormSpace where those forms are stored. To assign the user to a group, click in the Attached Groups field, and then select a group from the list. Repeat this step to add more groups. To remove the user from an assigned group, select the \"x\" next to the group name. Info:The topic Manage Groups describes how to create groups and assign permissions in more detail. Set up the user's Locale. Language: The display language for the Web Portal and the Form Builder. This does not change the language displayed on the Mobile App. Info:The topic Language Settings and Translations describes the standard TrueContext language options and how to set them up in more detail. Preferred Time Zone: The time zone used to display data in the Web Portal. This setting overrides the team-level setting. This setting only changes how the time is displayed for this user,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Create a user and enter account details"
    }
  },
  {
    "content": "not the actual value stored in the system. Info:The topic Time Zone Settings: User Profile Settings explains this setting in more detail. Set up the welcome email. In step 4, did you select the Send user a link... password option (recommended)? If yes, the option to Send Welcome Email... is automatically selected. If no, you can choose whether to automatically send the user a welcome email. The welcome email includes: Sign-in instructions. Password setup link (if you selected the Send user a link... option). Mobile App download information. In the Custom Message in Welcome Email field, you can enter a message to add to the standard welcome email (optional). Once you've added all the information on the Account tab, you can either: Add more user profile information on the other tabs. Select Create to add the user to your team. You can update the user's profile later if you want to add information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Create a user and enter account details"
    }
  },
  {
    "content": "User profile information\n\nThe following sections describe the user profile tabs and the information they contain. Account First and Last Name: Used in submitted records and generated documents, can be referenced using the DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression %u[name]. Username: Used to sign into the TrueContext system. Throughout the system, used to associate the user with submitted or assigned records. Can be referenced using the DREL expression %u[username]. Note:Only team admins (Admin users) can change a username. We recommend that you don't change a username once a user has signed in. If you do, the user must log out and then back in with the new username, losing any work in progress. Email Address: For users to access and recover their account if they forget their password or if multi-factor authentication (MFA) is enabled. Also used with",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "User profile information"
    }
  },
  {
    "content": "Email Data Destinations. Can be referenced using the DREL expression %u[email]. Role: The user's role controls what users can access in the Web Portal. It works together with the user's groups and FormSpace permissions. Info:The topic Permissions Quick Reference: How permissions work describes the relationship of user roles and FormSpace permissions in more detail. Language: The display language for the Web Portal and the Form Builder. This does not change the language displayed on the Mobile App. Info:The topic Language Settings and Translations describes the standard TrueContext language options and how to set them up in more detail. Preferred Time Zone: The time zone used to display data in the Web Portal. This setting overrides the team-level setting. This setting only changes how the time is displayed for this user, not the actual value stored in the system. Info:The topic Time Zone Settings: User Profile Settings explains this setting in more detail. Billing The Billing Account",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "User profile information"
    }
  },
  {
    "content": "is the subscription that you added the user to. To identify the user as the Account Owner, select the checkbox. This simply flags the user as the account owner in our system and has no other effect. Contact (optional) Contact information includes phone number, address, and a second (alternate) email address. This information is available in the User Data Source and when you export user data. Provide an Alternate Email Address when you want to: Use the alternate email address as the organizer of an event. For example, you might want customer appointments to show service.team@company.com as the organizer rather than the individual technician's email. Send submitted data to a different email address than the user's primary account address. For example, a field technician completes a service report using their company tablet. Their primary email (alex.general@company.com) is their general work email where they receive daily communications. Their alternate email (alex.reports@company.com)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "User profile information"
    }
  },
  {
    "content": "is specifically set up to receive copies of completed service reports. By sending the submitted data to the alternate email address, the technician can keep their service documentation organized separately. This makes it easier to track and reference completed work. Organization (optional) You can add organizational information—such as the user's employee ID or manager's name—to help identify users within your team. This information appears in User List CSV Exports and User Data Sources. Advanced Aliases: Aliases provide a way for you to set up alternative usernames that map to usernames in other systems. This streamlines integration between TrueContext and back-office systems. Each user can have up to five unique system-alias pairs. If your team uses SSO (SAML), you might also have a username suffix set up. If you do, the alias must include the suffix, for example: Username suffix: @company.co Alias: alexl@company.co. This ensures the correct username mapping between systems. Show",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "User profile information"
    }
  },
  {
    "content": "'Get Started' Tab: The Get Started tab is displayed when a user signs into the TrueContext Web Portal. As the name suggests, this tab contains links to content designed to help users get started using TrueContext. The Progress indicator on the Get Started tab keeps track of how many of the recommended topic links a user has clicked through. To hide the tab, clear the checkbox. Preferred Page Size: For Admin users and Web Portal Users, specifies the number of results per page. For example, the list of form submissions (dispatched and submitted records) shows 100 records per page unless you change this setting. CSV Export File Delimiter: For Admin users and Web Portal Users, specifies the delimiter—either a comma or a semi-colon—for CSV export files.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "User profile information"
    }
  },
  {
    "content": "Verify a newly-created user account\n\nAfter creating the account: Select Users & Groups. Find the new user in the list. Info:You can sort the list by Date Created to find the most recently added users at the end of the list. The section View and filter the user list explains in detail how to search for specific users in the list. Check that their role and group assignments are correct. Confirm that they received their welcome email (if selected).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Verify a newly-created user account"
    }
  },
  {
    "content": "Prerequisites\n\nYou must have the Admin user role (team admin) in TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Prerequisites"
    }
  },
  {
    "content": "View and filter the user list\n\nWhat you can do with the user list The user list helps you to manage your team user accounts, troubleshoot access issues, and review account activity. For example, you can: Find users who can't log in, haven't reconciled data recently, or have account problems. Identify inactive users who haven't used the system recently. Review user activity to optimize user license allocation. Check for suspended subscriptions or locked accounts that need attention. Step-by-step: View and filter the user list Select Users & Groups. Result: The user list opens and displays the following fields: Display Name: First name, last name, and username. Email Address: The user's primary email address. Role: User's access to Web Portal functionality. Last Login: When the user last signed into the Web Portal. Last Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and filter the user list"
    }
  },
  {
    "content": "dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity.: When the user last reconciled mobile data (good indicator of activity). Device: Registered mobile devices (devices on which a user has signed into the TrueContext Mobile App). Details include the device model, operating system, and Mobile App version. Subscription: Which billing account each user is assigned to. Do you want to find specific users who need help? If yes, search for a user by name, or use the filter options to find users by: Activity status (never logged in, never reconciled). Account status (suspended subscription, locked out, password expired). User role. Self-registration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and filter the user list"
    }
  },
  {
    "content": "Info:This option only displays if an Admin user sets up Set Up Self-Registration for your team. If no, continue with other user management tasks.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and filter the user list"
    }
  },
  {
    "content": "View and edit user profiles\n\nYou can check and edit user profile information when you need to update contact information or troubleshoot access issues. Info:If you need to change a user's group membership, you do this by updating the group. The topic Manage Groups: How to make changes to existing groups describes the steps in detail. View and filter a list of users. From the list, select the user whose profile you want to check. Result: The user profile displays the following tabs and fields. Account Tab Overview: Summarizes user account information and settings. Field Description User Role Controls access to the Web Portal. Language and Timezone User's preferred language and timezone settings. These only affect the display language in the Web Portal and don't change the Mobile App language or the stored values of timestamps. Subscription and Max Active Devices Subscription type and number of registered devices allowed. Self-Registration Status Displayed when Self-Registration is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and edit user profiles"
    }
  },
  {
    "content": "enabled for your team (Advanced or Enterprise tier only), indicates whether a user self-registered. Activity Last login to the Web Portal, last device reconciliation, and last record submitted by this user. Contact Phone number, email address, and other contact details. Organization Company role information such as Employee ID, manager name, and other relevant details (if already entered). Permissions Tab Overview: Shows the user's group membership and the FormSpace permissions for those groups. Key sections: User Groups: Shows which groups the user belongs to and any special permissions within those groups, such as Group Admin. User FormSpace Permissions FormSpace permissions define what members of a user group can do within a FormSpace. For example, permissions control whether group members can submit forms on the Mobile App or manage work in the Web Portal.: Shows which FormSpaces the user's groups can access and what actions they can perform (such as submit, test, approve, or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and edit user profiles"
    }
  },
  {
    "content": "manage assignments). Devices Tab Overview: Lists the user's registered mobile devices (devices on which a user has signed into the TrueContext Mobile App). Details include the device model, operating system, and Mobile App version. Key information: Users can have up to three active devices by default. Signing in with a fourth device deactivates the first device that the user registered. Activity Tab Overview: Shows data record submission activity as a chart and table. Each option provides a different way to analyze the user's activity—through charts, geographic mapping, data export, or detailed lists. Do you need to update any information in the user's profile? If yes, hover over the arrow next to the username and then select Update. Result: The Edit Account page opens where you can change the user's details. When you're done, select Update to save the changes. If no, continue with other user management tasks. Tip:For security reasons, only a team admin can change a user's email",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and edit user profiles"
    }
  },
  {
    "content": "address in the Web Portal. All users can change their own email address in the Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "View and edit user profiles"
    }
  },
  {
    "content": "Export user data\n\nExport detailed user information for reporting or team management. The exported file includes the details of all users on your team. Select Users & Groups. Hover over the arrow next to Users and select Export Users to CSV. Result: The CSV export is downloaded to your default download location.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Export user data"
    }
  },
  {
    "content": "Change passwords\n\nNote:Users can change their own passwords using the Forgot Password link on the login page. We recommend that users change their own passwords whenever possible. View and filter a list of users. From the list, select the user whose password you want to change. Select Change Password. Set and confirm the new password. Note:When you set a password on behalf of another user, you should:Securely communicate the new password to the user. It's your responsibility to make sure that only the user knows their password.Advise the user to change their password immediately after their first login. Users can do this on the Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Change passwords"
    }
  },
  {
    "content": "Unlock a user's account\n\nTo protect your TrueContext data, the system locks a user account after five failed login attempts. Locked-out users can’t sign in to the TrueContext Mobile App or Web Portal to complete, submit, or view forms. Info:The topic User Account Lockout describes this feature in detail. Some users might not have access to an email address associated with their account. Because they can’t receive the password reset link by email, a TrueContext Admin user (team admin) must unlock the account for them. Go to Users & Groups and then select the user from the list. Hover over the arrow next to the username, and then select Force Unlock. When prompted, confirm that you want to unlock this user. Result: The system unlocks the account and removes the warning banner. Note: For added security, we recommend that you change the user’s password after you unlock their account.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Unlock a user's account"
    }
  },
  {
    "content": "Delete a user\n\nNote: Only delete users when absolutely necessary. Deleted user accounts cannot be recovered.User submissions remain but the user profile is permanently removed.Any Data Source partitions linked to the user are automatically deleted. Deleting the partition does not delete any data.Deleting users doesn't reduce your license count. Go to the user's profile. Hover over the arrow next to the username and select Delete. Confirm the deletion.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Delete a user"
    }
  },
  {
    "content": "Troubleshoot user issues\n\nUse the user list filters and individual user profiles to identify and resolve common user problems.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Troubleshoot user issues"
    }
  },
  {
    "content": "Find users who have login issues\n\nCheck for login issues. Filter the user list by: Never Logged In, to find users who haven't successfully accessed the system. Locked Out, to identify users who need password resets after multiple failed login attempts. Password Expired, to find users who need to set new passwords. Check for account status problems: Filter the user list by Access Suspended to find users on suspended subscriptions. Review individual user profiles for specific account status details. Verify that users can receive welcome emails: Verify that the email address is correct in the user's profile. Check whether your organization blocks external emails. Info:The topic Network Connectivity Reference lists the IPs, domains, and endpoints that must not be blocked.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Find users who have login issues"
    }
  },
  {
    "content": "Identify inactive Mobile App users\n\nTo check Mobile App usage: Filter the user list by Never Reconciled to find users who haven't used the Mobile App while online. Sort the list by Last Reconcile date to identify users who haven't reconciled recently. Give a user access to forms Check which groups the user belongs to and which FormSpaces are assigned to the group. Verify that the required forms are in the FormSpaces assigned to the group. Add the user to the groups that have access to the correct FormSpaces.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Identify inactive Mobile App users"
    }
  },
  {
    "content": "Give a user access to forms\n\nCheck which groups the user belongs to and which FormSpaces are assigned to the group. Verify that the required forms are in the FormSpaces assigned to the group. Add the user to the groups that have access to the correct FormSpaces.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManagingUsers.htm",
      "title": "Manage User Accounts",
      "section": "Give a user access to forms"
    }
  },
  {
    "content": "Mobile-only\n\nMany field technicians only use the TrueContext Mobile App and don’t need full access to the Web Portal. The Mobile-only user role is ideal for field technicians. A Mobile-only user can: Submit records from their mobile device in FormSpaces where they have the Can Submit permission. Change their own password and name in the Web Portal. Change the language and preferred time zone that displays in the Web Portal. Add contact and organization details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360028036072.html",
      "title": "User Roles",
      "section": "Mobile-only"
    }
  },
  {
    "content": "User\n\nUsers have more access to Web Portal functionality than Mobile-only users. A User’s access depends on the groups they’re in and their FormSpace Permissions. A User can, with the relevant permissions: Submit records from their mobile device in FormSpaces where they have the Can Submit permission. Log into the Web Portal to view their own submitted records in FormSpaces where they have the Can Submit permission. Change their own password and name. View submitted records from other users in FormSpaces where they have the Can View permission. Create, edit, or delete forms in FormSpaces where they have the Can Create permission. Create, edit, or delete Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., Data Sources Data sources, also known as \"Lookups\", are external sources of data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360028036072.html",
      "title": "User Roles",
      "section": "User"
    }
  },
  {
    "content": "that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., Documents, and Resources in FormSpaces where they have the Can Create permission.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360028036072.html",
      "title": "User Roles",
      "section": "User"
    }
  },
  {
    "content": "Admin\n\nAdmin users have the highest level of access to a TrueContext team. In addition to functions covered by the Mobile-only and User roles, Admin users can: View all dispatched and submitted forms across the team. Create, edit, and delete forms. Create Connections in a FormSpace. Manage all Forms, FormSpaces, Users, Groups, Data Destinations, Documents, and Data Sources in their TrueContext team. Set up corporate login (Single Sign-On) and security restrictions. Configure a Password Policy. They can also expire all existing passwords to force password changes. Set up Self-Registration for their team.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/360028036072.html",
      "title": "User Roles",
      "section": "Admin"
    }
  },
  {
    "content": "System Aliases\n\nSystem aliases are an identification tool for what non-TrueContext system or program the user is going to be linked to. System aliases: must be alphanumeric, but can include the special characters _ and -. are not case sensitive and have a maximum of 20 characters. can only be listed once per user. can be listed on multiple users on the same team. can be used on multiple teams.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/228225648.html",
      "title": "Setting up User Aliases",
      "section": "System Aliases"
    }
  },
  {
    "content": "User Aliases\n\nUser aliases are essentially secondary usernames for users in the TrueContext system. User aliases: are alphanumeric, with the same character restrictions as standard TrueContext usernames. can be used multiple times per user, provided the system alias differs. can be used on multiple different users on a team, provided the system aliases differ. can be used on multiple teams.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/228225648.html",
      "title": "Setting up User Aliases",
      "section": "User Aliases"
    }
  },
  {
    "content": "System/User Alias Pairs\n\nThe combination of a system and a user alias provides a team-level unique identifier. System/User Alias pairs: must be unique on the team. The same system and user alias pair can be used on different teams. must be a maximum of 255 characters. are limited to 5 per user. Using Aliases for SAML/Single Sign-On (SSO) Available on the Enterprise tier only: Essentials Advanced Enterprise Aliases can be used to match usernames in your Identity Provider system. This is only done when the standard TrueContext username and suffix combination is not flexible enough to match. It is configured by creating an alias on the user, using saml as the system. DREL for User Aliases If you need to refer to the user alias used when submitting a form, the syntax is: %u[alias] to get all aliases for the user, or%u[alias][system] to get the alias for a specific system.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/228225648.html",
      "title": "Setting up User Aliases",
      "section": "System/User Alias Pairs"
    }
  },
  {
    "content": "Why groups are essential\n\nGroups and the FormSpaces assigned to groups control user access: FormSpaces organize your forms, resources, and data into logical collections based on business needs. Groups organize your users by function or business unit. FormSpace permissions determine what actions each group can perform.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Why groups are essential"
    }
  },
  {
    "content": "How permissions work\n\nMobile users can only access forms if their group has permissions in the FormSpace that contains those forms. Similarly, Web Portal users need the correct FormSpace permissions to view data, manage assignments, or perform other tasks. Info:The topic FormSpace Permissions describes the different types of permissions in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "How permissions work"
    }
  },
  {
    "content": "Default groups\n\nAll new TrueContext teams are created with two groups: Production Group: For deployed forms used in daily operations. New users are automatically assigned to this group. Test Group: For testing Draft forms before deployment. You can use these groups as-is, modify them, or create new groups based on your team's needs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Default groups"
    }
  },
  {
    "content": "Prerequisites\n\nAdmin user role (team admin) in TrueContext. Info:There are two different levels of group management permissions:Team admins can create, delete, and fully manage groups.Group admins can only add and remove users from existing groups they manage.The topic Permissions Quick Reference: Web Portal permissions for user and group management describes group admin permissions in more detail. Understanding of your team structure: Which users need access to which forms and data. FormSpace organization: Forms, resources, data, integrations, and generated outputs organized into FormSpaces that reflect your team's access patterns and workflow needs—such as by region, business unit, service territory, customer type, or equipment specialization. TrueContext Users: Users on your TrueContext team that you want to add automatically or manually to the group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Create a group and assign users\n\nGo to Users & Groups > Groups > Create Group. Enter the group information: Name: Required. Choose a descriptive name that reflects the group's purpose (for example, \"Field Technicians,\" \"Supervisors,\" \"Quality Inspectors\"). Description: Optional. Add details about the group's purpose or which users should belong to it. Add users to the group: Click in the Selected Users field, and then select a user from the list. Repeat this step to add more users. To remove a user from the group, select the \"x\" next to the user name. You can set up the group so that new users created on your team are automatically added to this group. Do you want to do this? If yes, select Add New Users to This Group. Note: Users in this group have access to all Active, Draft, and Archived Forms forms and resources in the FormSpaces assigned to this group. If no, go to the next step. Assign FormSpaces to the group: Click in the Selected FormSpaces field, and then select a FormSpace",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Create a group and assign users"
    }
  },
  {
    "content": "from the list. Repeat this step to add more FormSpaces. To remove a FormSpace from the group, select the \"x\" next to the FormSpace name. Info:By default, new groups have Can Submit FormSpace permissions. You assign specific FormSpace permissions after you create the group. Select Create to save the new group. Result: The group details page opens and displays the setup that you saved.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Create a group and assign users"
    }
  },
  {
    "content": "Assign FormSpace permissions\n\nAfter creating the group, you can add or change the FormSpace permissions. Are you still on the group details page? If yes, go to step 3. If no, go to the group details page: Users & Groups > Groups > List Groups. Select the name of the group you just created. Tip:You can use the Search option to find the group by name. Result: The group details page opens. Hover over the arrow next to the group name, and then select Edit FormSpace Permissions. For each FormSpace, choose the appropriate permissions. The following table lists the different FormSpace permissions and the actions that each permission allows. Permission Actions allowed When to use Relevant user roles Can Create Create, edit, or delete a Form Definition A Form Definition is a template for an actual form or record that field users interact with. Using the Form Builder, you define the structure, layout, fields and data types, and logic of a form. A Form Definition also specifies resources",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Assign FormSpace permissions"
    }
  },
  {
    "content": "available to users on their devices, such as Images and Documents, and mappings for data brought in from external sources. Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. Document Resource Archive an active Form Definition Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Assign FormSpace permissions"
    }
  },
  {
    "content": "automated (using a Dispatch Data Destination or the TrueContext REST API). a form to one or more users Give this permission to users who are authorized to build and edit Form Definitions and to dispatch forms to field users. Tip:Admin users have this permission built-in for all FormSpaces. Users Can Test Open and submit test versions of forms. These are forms based on Draft Form Definitions. Set this permission so that specific users can test forms before you make them available for general use. Mobile-only users Users Admin users Can View View and download records dispatched to or submitted by other users. Unassign and Assign incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms (Enterprise tier only). Send a submitted record for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Assign FormSpace permissions"
    }
  },
  {
    "content": "editing. Apply this permission to supervisory groups who need to manage their team’s work. Tip:Admin users have this permission built-in for all FormSpaces. Users Can Submit Open and submit an Active form on the Mobile App. In the Mobile App, search for and edit submitted records. Send or transfer (submit) a TrueContext Teamwork-enabled form (Enterprise tier only). Claim a TrueContext Teamwork-enabled form submitted as incomplete (Enterprise tier only). Apply this permission to all Field Technicians who require form access to complete their work. Tip:All groups have the Can Submit permission preselected by default. Mobile-only users Users Admin users View and export your own submitted records. Users Admin users Can Approve Approval Workflow (Enterprise tier only) Claim a submitted record to review. Approve a submitted record. Request changes to a submitted record. Withdraw approval from a completed record. Apply this permission to approver groups who are responsible for reviewing and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Assign FormSpace permissions"
    }
  },
  {
    "content": "approving work. Users Admin users Can Manage Assignments Send a new or previously dispatched record to a mobile user. Send a new or previously dispatched record to a mobile user, Group, or FormSpace (Enterprise tier only). Apply this permission to Users who need to create and manage work. Tip:Admin users have this permission built-in for all FormSpaces. Users Admin users Info:The topic Permissions Quick Reference includes a detailed list of the actions that users can take in TrueContext and the permissions that they need. Select Update to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Assign FormSpace permissions"
    }
  },
  {
    "content": "Verify the group setup\n\nAfter creating and configuring the group: Check that users can see the expected forms on their mobile devices. Test that Web Portal users can perform their required tasks. Review the group's FormSpace permissions to ensure they align with user roles.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Verify the group setup"
    }
  },
  {
    "content": "Prerequisites\n\nYou must have the Admin user role (team admin) in TrueContext. To add or remove users, if you're not a team admin, you must be a Group Admin.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Prerequisites"
    }
  },
  {
    "content": "How to make changes to existing groups\n\nTo… Go to group details > group name… Change group details, including: Group name or description Group membership (add or remove users) Option to automatically Add New Users to This Group Add or remove assigned FormSpaces Update Set up group administrators Edit User Permissions Change FormSpace permissions Edit FormSpace Permissions Delete a group Delete",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "How to make changes to existing groups"
    }
  },
  {
    "content": "Change group details\n\nUse the group Update option to: Change the group name and description. Add or remove users. Select or clear the option to automatically Add New Users to This Group. Add or remove assigned FormSpaces. Go to the group list: Users & Groups > Groups > List Groups. Result: The Groups page displays all groups in your team. From the Groups page, select the name of the group you want to update. From the group dropdown menu, select Update. Make the required changes, and then select Update to save your changes. Note: Removing users from a group immediately removes their access to the FormSpaces assigned to that group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Change group details"
    }
  },
  {
    "content": "Set up group administrators\n\nAdmin users (team admins) and users identified as Group Admins can: Add or remove users from a group. Identify users as Form Submission Listeners. Email data destinations can be set up to automatically send data to Form Submission Listeners (such as supervisors or managers). Go to the group list: Users & Groups > Groups > List Groups. Result: The Groups page displays all groups in your team. From the Groups page, select the name of the group you want to manage. From the group dropdown menu, select Edit User Permissions. Select the users you want to be Group Admins and the users you want to be Form Submission Listeners. Users can be either or both. Select Update to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Set up group administrators"
    }
  },
  {
    "content": "Change FormSpace permissions\n\nGo to the group list: Users & Groups > Groups > List Groups. Result: The Groups page displays all groups in your team. From the Groups page, select the name of the group you want to manage. From the group dropdown menu, select Edit FormSpace Permissions. Result: The FormSpace Information page opens and displays a list of FormSpaces assigned to the group. For each FormSpace listed, select the permissions that you want the group to have. Select Update to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Change FormSpace permissions"
    }
  },
  {
    "content": "Delete a group\n\nNote:Deleting a group is permanent and can't be undone. Users in the deleted group will lose access to assigned FormSpaces unless they belong to other groups with appropriate FormSpace permissions.Before you delete a group, you might want to:Assign users to other groups.Verify that users won't lose access to forms, data, or records they need.Check whether any automated processes, such as Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats., or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Delete a group"
    }
  },
  {
    "content": "scheduled CSV exports depend on the group. Go to the group list: Users & Groups > Groups > List Groups. Result: The Groups page displays all groups in your team. From the Groups page, select the name of the group you want to delete. From the group dropdown menu, select Delete. Result: The system prompts you to confirm the deletion. Select Ok to delete the group. Result: The Groups page displays a list of remaining groups.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Delete a group"
    }
  },
  {
    "content": "Users can't access forms on mobile devices\n\nProblem: Users report they can't see forms on their mobile devices. Solution: Verify the user belongs to a group that has permissions in the FormSpace containing the forms. Check that the forms are Active, not Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder.. Confirm the user has reconciled their mobile device recently. Review the group's FormSpace permissions to ensure they include Can Submit at minimum.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Users can't access forms on mobile devices"
    }
  },
  {
    "content": "Web Portal users can't perform required tasks\n\nProblem: Users can't view data, manage assignments, or perform other Web Portal functions. Solution: Check the user's role (Admin, User, or Mobile-Only). Verify the user belongs to groups with appropriate FormSpace permissions. Review the specific permissions required for the task: Can Approve: Required to approve submitted records. Can Manage Assignments: Required to dispatch forms. Can Test: Required to test Draft forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "Web Portal users can't perform required tasks"
    }
  },
  {
    "content": "New users aren't getting expected access\n\nProblem: New users don't have access to the forms they need. Solution: Check if the user was added to the correct groups during account creation. Verify that groups have Add New Users to This Group enabled if automatic assignment is expected. Manually add the user to the appropriate groups if needed. Confirm the groups have the correct FormSpace permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/ManageGroupsNew.htm",
      "title": "Manage Groups",
      "section": "New users aren't getting expected access"
    }
  },
  {
    "content": "Permissions\n\nThis section includes the following content: User PermissionsPermissions Quick ReferenceFormSpace PermissionsOverview: Assigning Forms to UsersHow-To: Give Users Access to Forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/Permissions.htm",
      "title": "Permissions",
      "section": "Permissions"
    }
  },
  {
    "content": "Group Admin\n\nThis permission allows a regular User access to administer group memberships and user permissions for their group, but they cannot change FormSpace assignments and permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500968_UserPermissions.html",
      "title": "User Permissions",
      "section": "Group Admin"
    }
  },
  {
    "content": "Form Submission Listener\n\nThis permission allows a User to receive email copies of all form submissions (submitted by users in the group) that pass through an email data destination with the \"Send email to the users with 'Form Submission Listener' checked in the Form Submitter's groups\" option turned on. This permission is typically used for a manager or supervisor. Viewing Configured Permissions There are a few different pathways for viewing and editing permissions. View permissions currently configured for a Group Mouse over the Users & Groups tab in the main dashboard of the TrueContext web portal. Select the desired group. Users: Shows Users and their User Permissions, as discussed above. FormSpaces: Lists the group's FormSpace Permissions. View permissions currently configured for a User Mouse over the Users & Groups tab in the main dashboard of the TrueContext web portal. Select the desired user. Enter the user's Permissions tab. User Groups: Shows groups that the user is part",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500968_UserPermissions.html",
      "title": "User Permissions",
      "section": "Form Submission Listener"
    }
  },
  {
    "content": "of, as well as User Permissions in these groups. User FormSpace Permissions: Lists FormSpace Permissions. All FormSpaces the user has permissions for through any group are listed, along with a detailed list of every form and data source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. included in each of the FormSpaces. Updating User Permissions Navigate to the desired Group. Mouse over the dropdown beside the group name. Select Edit User Permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500968_UserPermissions.html",
      "title": "User Permissions",
      "section": "Form Submission Listener"
    }
  },
  {
    "content": "How permissions work\n\nUser roles User roles determine the areas of the Web Portal that a user can access. There are three role types: Mobile-Only User (can submit forms in the mobile app and change their password in the Web Portal), User (can submit forms in the mobile app and access tools in the Web Portal, depending on their FormSpace permissions), and Admin (can do the same as users, plus create and edit forms in the Form Builder, and more). An admin can change a user's role in their user profile. A user role defines whether a TrueContext user can access the Web Portal and what they can access within the portal. User groups A group is a collection of users in a TrueContext team. Team admins assign users to their groups, and group settings determine what permissions users have for accessing forms. Users must be in a group to access forms. User groups provide a way to assign FormSpace permissions to different sets of users. Users can be members of one or more groups. FormSpace",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "How permissions work"
    }
  },
  {
    "content": "permissions FormSpace permissions define what group members can do within the FormSpace. For example, you might want to give: Can Create permissions to form designers. Can Submit permissions to field users. Can View permissions to supervisors. Can Manage Assignments permissions to dispatchers. Can Approve permissions to reviewers who must approve submitted records (Enterprise tier only). Tip:Remember that FormSpace permissions apply to groups. To edit FormSpace permissions, go to Users & Groups > Groups > GroupName. Hover over the arrow next to the group name, and then select Edit FormSpace Permissions FormSpace permissions define what members of a user group can do within a FormSpace. For example, permissions control whether group members can submit forms on the Mobile App or manage work in the Web Portal.. Team settings Team-level mobile device settings provide access to different types of functionality. For example, you must enable Search at the team level so that users can search",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "How permissions work"
    }
  },
  {
    "content": "on the mobile device. At the team level, you can control access to the following Mobile App tabs: Forms Inbox Sent Search (Advanced and Enterprise tiers only) Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox. (Enterprise tier only) Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. (Enterprise tier only) Info:The following topics provide more details about the different levels of permissions.User RolesManage GroupsFormSpace PermissionsCustomize the Mobile App Tabs",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "How permissions work"
    }
  },
  {
    "content": "User roles\n\nAdmin user: By default, Admin users can access all Form Definitions A Form Definition is a template for an actual form or record that field users interact with. Using the Form Builder, you define the structure, layout, fields and data types, and logic of a form. A Form Definition also specifies resources available to users on their devices, such as Images and Documents, and mappings for data brought in from external sources., Resources, and Records on the Web Portal. They can also set up Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection. to third-party systems and create Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "User roles"
    }
  },
  {
    "content": "answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and Data Destinations. Tip:Admin users have most of the permissions they might need, including Can View, Can Create, and Can Manage Assignments permissions for all FormSpaces. For Can Submit, Can Test, and Can Approve permissions, the Admin user must belong to a user group that has those permissions. User: Users have access to the Mobile App and some of the Web Portal functionality. The functionality they can use depends on the assigned FormSpace permissions. Mobile-only user: A Mobile-only user has permissions to open and submit forms and to use the Web Portal to change their password and update their account details.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "User roles"
    }
  },
  {
    "content": "Mobile App permissions\n\nAction User role Other settings Open an active form Any user role in a group with the Can Submit FormSpace permission None Open a draft form for testing Note:This refers to a form definition saved as “Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder.” in the Web Portal, not on the user’s device. Any user role in a group with the Can Test FormSpace permission None Claim a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form Any user role in a group with the Can Submit FormSpace permission Your TrueContext Team must be on the Enterprise tier. Display tab 'Search'? must be enabled in the Mobile Device Team Settings",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Mobile App permissions"
    }
  },
  {
    "content": "The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information.. Send or transfer (submit) a TrueContext Teamwork-enabled form Any user role in a group with the Can Submit FormSpace permission Your TrueContext Team must be on the Enterprise tier. View resources in the Resource Library Any user role in a group with the Can Submit or Can Test FormSpace permission Your TrueContext Team must be on the Enterprise tier. Display tab 'Resources'? must be enabled in the Mobile Device Team Settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Mobile App permissions"
    }
  },
  {
    "content": "Web Portal permissions for account setup\n\nAction User role Change password Admin user Note:Admins can change passwords for other users on their team, except for other admins. Team admins must change their own passwords. User Mobile-only user Edit their own user profile Admin user User Mobile-only user Tip: To change an email address, use one of these methods: Team admins: Select Users & Groups to open the list of users, hover over the user row and select the update icon. Result: This opens the Edit Account page where you can update the email address. All users: In the TrueContext Mobile App, go to Settings > Account Details > User Information. Third-party systems: Use the TrueContext REST API /api/1.1/users/{userId} endpoint.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for account setup"
    }
  },
  {
    "content": "Web Portal permissions for forms and form resources\n\nTip:The term User refers to the specific role “User,” not to Mobile-only users. Action User role Create, edit, or delete a Form Definition Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. Document Resource Admin user User in a group with the Can Create FormSpace permission Archive an active Form Definition Admin user User in a group with the Can Create FormSpace permission Create, edit, or delete a FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for forms and form resources"
    }
  },
  {
    "content": "Admin user Create, edit, or delete a Connection. Admin user Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). a form. Admin user User in a group with the Can Create or Can Manage Assignments FormSpace permission",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for forms and form resources"
    }
  },
  {
    "content": "Web Portal permissions for dispatched and submitted forms\n\nAction User role Other settings View and export your own form submissions Admin user User in a group with the Can Submit FormSpace permission None View and export forms dispatched to or submitted by other users within the same FormSpace Admin user User in a group with the Can View FormSpace permission None Schedule a CSV export of a form’s dispatches and submissions Admin user Note:If an Admin user schedules a CSV export, and then their role changes, the scheduled export fails with an error and is deactivated. View and filter a list of all dispatched and submitted forms Admin user User in a group with the Can View FormSpace permissions None View and filter records that are part of an Approval Workflow (Enterprise tier only) Admin user User in a group that has Can Approve FormSpace permissions Receive by email form submissions from a specific group Any User role with the following User permissions: Form Submission Listener You",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for dispatched and submitted forms"
    }
  },
  {
    "content": "must have an email Data Destination configured for the form with the option to send an email to the Form Submission Listener selected. The user receives emails according to the Data Destination’s filtering configurations. Note:You can enable all users in a group to receive all submitted forms in their group when you configure an email Data Destination. Go to the Email Data Destination topic to learn how to configure the Form Submission email recipients. View and export all dispatched and submitted forms Admin user None Unassign and assign incomplete TrueContext Teamwork-enabled forms (for Enterprise tier only) Admin user User in a group with the Can View FormSpace permission None Send a complete form for editing Admin user User in a group with the Can View FormSpace permission None For records in an Approval Workflow (Enterprise tier only): Claim a submitted record to review it Approve a submitted record Request changes to a submitted record Withdraw approval from a completed record",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for dispatched and submitted forms"
    }
  },
  {
    "content": "User or Admin user in a group with the Can Approve FormSpace permission None Reassign a dispatched record Admin user User in a group with the Can Manage Assignments FormSpace permission None Tip:Customers on the Enterprise tier can send the record to a user, group, or FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for dispatched and submitted forms"
    }
  },
  {
    "content": "Web Portal permissions for user and group management\n\nAction User role Add or remove users from a group. Admin user User with the Group Admin permission Create or edit users. Admin user Create or edit groups. Admin user Edit user permissions—grant users Group Admin and Form Submission Listener permissions. Admin user User with the Group Admin permission",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ManageUsersAndPermissions/Permissions/PermissionsQuickRef.htm",
      "title": "Permissions Quick Reference",
      "section": "Web Portal permissions for user and group management"
    }
  },
  {
    "content": "User roles and FormSpace user groups\n\nA user’s role and the groups they’re assigned to define what they can access within a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. A user role defines whether a TrueContext user can access the Web Portal and what they can access within the portal. For example, Mobile-only users can only use the Web Portal to update their account information and change their passwords. User groups A group is a collection of users in a TrueContext team. Team admins assign users to their groups, and group settings determine what permissions users have for accessing forms. Users must be in a group to access forms. provide a way to assign FormSpace permissions to different sets of users. Users can be members of one or more groups. For example: A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "User roles and FormSpace user groups"
    }
  },
  {
    "content": "Mobile-only user in a group that has Can Submit and Can Test permissions can open and submit both Active and Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. (test) forms. A regular (non-Admin) User in a group that has Can View permissions can access dispatched and submitted records. They can’t access forms and resources unless their group also has Can Create permissions. Tip:Admin users have most of the permissions they might need, including Can View, Can Create, and Can Manage Assignments permissions for all FormSpaces. For Can Submit, Can Test, and Can Approve permissions, the Admin user must belong to a user group that has those permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "User roles and FormSpace user groups"
    }
  },
  {
    "content": "Categories of FormSpace permissions\n\nCategory Permissions Mobile App Can Submit—Open and submit Active forms, including forms saved to the Drafts list on the device. Can Test—Open and submit forms in the Draft state. This refers to the state of the form on the Web Portal, not on the device. Administration Can Create— Create and edit Form Definitions A Form Definition is a template for an actual form or record that field users interact with. Using the Form Builder, you define the structure, layout, fields and data types, and logic of a form. A Form Definition also specifies resources available to users on their devices, such as Images and Documents, and mappings for data brought in from external sources., and dispatch forms. Using an existing Connection created by an Admin user, create and edit Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "Categories of FormSpace permissions"
    }
  },
  {
    "content": "options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Create and edit output Documents and Resources. Can View—Access and download dispatched and submitted records in the Web Portal. Supervision Can Approve—Approve submitted records as part of an Approval Workflow (Enterprise tier only). Dispatching Can Manage Assignments—Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). records or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "Categories of FormSpace permissions"
    }
  },
  {
    "content": "reassign them. On the Enterprise tier, dispatchers can send a record to a user, a group, or to all groups in the FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "Categories of FormSpace permissions"
    }
  },
  {
    "content": "How FormSpace permissions work\n\nAn Admin user sets up user groups and assigns FormSpace permissions to each group. Consider the following when you set up permissions: Every group is assigned Can Submit permissions by default. These permissions are enough for users who only need to open and submit forms. Admin users can assign multiple permissions to the same group, such as Can Submit and Can Test. Users have all the permissions assigned to the group. Permissions are additive. If a user is assigned to two groups, for example, the user has all the permissions assigned to both groups. Admin users have most of the permissions they need by default. The Admin user role has built-in Can View, Can Manage Assignments, and Can Create permissions for all FormSpaces. For an Admin user to have Can Approve, Can Submit, and Can Test permissions, they must be part of a group that has those permissions. Only enable Can Create permissions for users who are authorized to access and change Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "How FormSpace permissions work"
    }
  },
  {
    "content": "Definitions and Resources in a given FormSpace. Email notifications can be enabled for each form that’s set up with the Approval Workflow (Enterprise tier only). The system sends emails to users with Can Approve permissions every time a Field Technician submits a form that requires approval. Keep that in mind when assigning Can Approve permissions to your groups so that you don’t overwhelm users with email notifications.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "How FormSpace permissions work"
    }
  },
  {
    "content": "FormSpace permissions reference table\n\nThe following table lists the different FormSpace permissions and the actions that each permission allows. Permission Actions allowed When to use Relevant user roles Can Create Create, edit, or delete a Form Definition Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. Document Resource Archive an active Form Definition Dispatch a form to one or more users Give this permission to users who are authorized to build and edit Form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "FormSpace permissions reference table"
    }
  },
  {
    "content": "Definitions and to dispatch forms to field users. Tip:Admin users have this permission built-in for all FormSpaces. Users Can Test Open and submit test versions of forms. These are forms based on Draft Form Definitions. Set this permission so that specific users can test forms before you make them available for general use. Mobile-only users Users Admin users Can View View and download records dispatched to or submitted by other users. Unassign and Assign incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms (Enterprise tier only). Send a submitted record for editing. Apply this permission to supervisory groups who need to manage their team’s work. Tip:Admin users have this permission built-in for all FormSpaces. Users Can Submit Open",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "FormSpace permissions reference table"
    }
  },
  {
    "content": "and submit an Active form on the Mobile App. In the Mobile App, search for and edit submitted records. Send or transfer (submit) a TrueContext Teamwork-enabled form (Enterprise tier only). Claim a TrueContext Teamwork-enabled form submitted as incomplete (Enterprise tier only). Apply this permission to all Field Technicians who require form access to complete their work. Tip:All groups have the Can Submit permission preselected by default. Mobile-only users Users Admin users View and export your own submitted records. Users Admin users Can Approve Approval Workflow (Enterprise tier only) Claim a submitted record to review. Approve a submitted record. Request changes to a submitted record. Withdraw approval from a completed record. Apply this permission to approver groups who are responsible for reviewing and approving work. Users Admin users Can Manage Assignments Send a new or previously dispatched record to a mobile user. Send a new or previously dispatched record to a mobile user,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "FormSpace permissions reference table"
    }
  },
  {
    "content": "Group, or FormSpace (Enterprise tier only). Apply this permission to Users who need to create and manage work. Tip:Admin users have this permission built-in for all FormSpaces. Users Admin users Info:The topic Permissions Quick Reference includes a detailed list of the actions that users can take in TrueContext and the permissions that they need.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "FormSpace permissions reference table"
    }
  },
  {
    "content": "Check a Group’s permissions\n\nGo to Users & Groups > Groups... > List Groups, and then select a group from the list. Result: The Group details page opens and shows: A list of users in the group. Each user’s group FormSpace permissions. The FormSpace permissions set for the group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "Check a Group’s permissions"
    }
  },
  {
    "content": "Check a User’s permissions\n\nGo to Users & Groups > Users... > List Users, and then select a user from the list. Select Permissions, and then expand the User FormSpace Permissions FormSpace permissions define what members of a user group can do within a FormSpace. For example, permissions control whether group members can submit forms on the Mobile App or manage work in the Web Portal. section. Result: The Permissions tab shows: A list of Groups that the user is in. The user’s group FormSpace permissions. A list of FormSpaces, the Form Definitions and Data Sources included in each FormSpace, and the user’s group FormSpace permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "Check a User’s permissions"
    }
  },
  {
    "content": "Edit FormSpace permissions\n\nGo to Users & Groups > Groups... > List Groups, and then select a group from the list. Hover over the arrow next to the group name to show a list of actions. Select Edit FormSpace Permissions. Select the permissions you want to set for the group. Select Update to save your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500958_FormSpacePermissions.html",
      "title": "FormSpace Permissions",
      "section": "Edit FormSpace permissions"
    }
  },
  {
    "content": "Overview: Assigning Forms to Users Available on all tiers: Essentials Advanced Enterprise About The Basic Form Assignment Structure Assign Forms to Users About TrueContext users, groups and FormSpaces are all managed through the TrueContext web administration portal. Any team administrator can easily configure users, groups and FormSpaces to manage how forms are assigned, control the data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. users have access to, and determine special permissions for users and groups. The Basic Form Assignment Structure Forms are organized into containers called FormSpaces. Users are organized into groups. Groups are assigned FormSpaces (and the forms within them). To give users access to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500928_OverviewAssigningFormsToUsers.html",
      "title": "Overview: Assigning Forms to Users"
    }
  },
  {
    "content": "forms: Add those users to a group. Add the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. containing the forms to the group. Confirm that FormSpace Permissions FormSpace permissions define what members of a user group can do within a FormSpace. For example, permissions control whether group members can submit forms on the Mobile App or manage work in the Web Portal. are set to Can Submit. Info:The topic Manage Groups describes these steps in detail. Many organizations using TrueContext can keep it simple and assign all forms to all users, which requires only one FormSpace and one Group.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500928_OverviewAssigningFormsToUsers.html",
      "title": "Overview: Assigning Forms to Users"
    }
  },
  {
    "content": "How-To: Give Users Access to Forms Available on all tiers: Essentials Advanced Enterprise About Assign Forms to Users Permissions About In order for users to submit forms from the mobile app, the forms must be assigned to them. The basic structure of form assignment is: Forms are organized into containers called FormSpaces. Users are organized into groups. FormSpaces (and their contents) are assigned to groups. Assign Forms to Users To assign forms to users, the users must be added to the group that has access to the form. Under the USERS & GROUPS tab, select Groups. Select the group the user will be added to. Mouse over the group name, and select Update. Under Available Users, select the user that requires access to forms, and move them over to Selected Users. If the team has multiple FormSpaces, use the arrow button to assign the desired FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500978_HowToAssignFormsToUsers.html",
      "title": "How-To: Give Users Access to Forms"
    }
  },
  {
    "content": "depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. to the group. Select Update. Permissions By default, users have access to Active forms from assigned FormSpaces on their mobile devices. Other permissions can be granted -- read more about User Permissions and FormSpace Permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217500978_HowToAssignFormsToUsers.html",
      "title": "How-To: Give Users Access to Forms"
    }
  },
  {
    "content": "Self-Registration Users can create their own accounts through Self-Registration. An Admin user sets up Self-Registration for their team on the Subscription page. Once activated, self-registered users automatically become members of a specific user group, with access permissions predefined by the Admin user. Tip:This feature is available on request by contacting support@truecontext.com. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SelfRegistrationLandingPage.htm",
      "title": "Self-Registration"
    }
  },
  {
    "content": "Benefits of Self-Registration\n\nSome TrueContext customers work with third-party contractors that need access to forms and resources. Managing access for contractors can create significant work for Admin users due to turnover and technician availability. With Self-Registration, an Admin user generates a URL where new users can create their own accounts. Contractors can be self-sufficient and enroll their own users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationOverview.htm",
      "title": "Self-Registration Overview",
      "section": "Benefits of Self-Registration"
    }
  },
  {
    "content": "Self-Registration process diagram\n\nThe following diagram shows how a user creates their own account with Self-Registration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationOverview.htm",
      "title": "Self-Registration Overview",
      "section": "Self-Registration process diagram"
    }
  },
  {
    "content": "Related topics\n\nSet Up Self-Registration Self-Register with TrueContext Generate a New URL for Self-Registration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationOverview.htm",
      "title": "Self-Registration Overview",
      "section": "Related topics"
    }
  },
  {
    "content": "Set up a Self-Registration group\n\nWhen a user self-registers, TrueContext adds them to one or more default groups. You define the default groups when you set up Self-Registration. Create a dedicated group for self-registered users. TrueContext recommends that you give this group no FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. This setup prevents self-registered users from accessing forms and resources until an Admin user confirms they are authorized. The Admin user can then move authorized users to groups with the correct FormSpace permissions for their work. Info:When you create a group, there's an option to automatically add new users to the group. Don't select this option when the group is used for self-registration.The topic Manage Groups: Setup",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Set up a Self-Registration group"
    }
  },
  {
    "content": "instructions: Create a group describes how to create groups in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Set up a Self-Registration group"
    }
  },
  {
    "content": "Add Self-Registration to your subscription\n\nSelect your username > Team Settings > Billing and Usage, and then select a subscription. Hover over the arrow next to the subscription name, and then select Update Subscription Properties. Select Allow User Self-Registration. Result: The User Self-Registration section expands. Enter the information you want to appear on the Self-Registration page. This ensures users know what the Self-Registration page is for. This includes: The legal name of your company as it appears on official documents. Your company name can be up to 255 characters. Info:The section Legal Name guidelines describes company name requirements in more detail. (Optional) A team or company logo. The logo must be in PNG or JPEG format, and it must not exceed 1MB. (Optional) A subtitle. If the Self-Registration page is for a specific team, business unit, or division within your company, a subtitle provides that context. The subtitle can be up to 255 characters. Select a default",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Add Self-Registration to your subscription"
    }
  },
  {
    "content": "role for self-registering users, usually Mobile-only. If self-registered users need to access submitted records, you can assign a different user role. Select one or more default groups for self-registering users. Note:For added security, the default group should be the dedicated group you created with no FormSpace permissions. Once an Admin user confirms a self-registered user is authorized, they can reassign the user to a group that has the appropriate FormSpace permissions. Read and consent to the Admin authorized personnel agreement. By consenting to this agreement, you, the customer, confirm that: Appropriate security measures have been taken to ensure that the URL to the Self-Registration page is only provided to personnel authorized by the customer, Only authorized personnel use the TrueContext service, and TrueContext will have no responsibility to verify whether such personnel have been authorized by the customer to be a user of the TrueContext service. Select Update. Result:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Add Self-Registration to your subscription"
    }
  },
  {
    "content": "The system generates a Self-Registration URL. Select Show to display the full URL to the Self-Registration page. Share the URL with authorized personnel as necessary. Tip:You can copy the URL text or download a QR code to embed in a webpage or document. A user can scan the QR code with their device camera to open the Self-Registration page on their device. Info:The topic Self-Register with TrueContext describes how users create their own accounts with Self-Registration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Add Self-Registration to your subscription"
    }
  },
  {
    "content": "Legal Name guidelines\n\nThe Legal Name field captures the official name of your company as registered with your government or legal entity. An accurate Legal Name ensures users associate their Self-Registration process with your organization. Respect the following guidelines when you enter the Legal Name of your company for Self-Registration: Enter your company name as it appears on official documents. Official documents include invoices, tax forms, and government filings. Enter the full name of your company. Don’t use abbreviations or nicknames, and don’t use a shortened version of your company name. For example, if your company is called Company Co Ltd., don’t shorten it to CC Ltd. Include suffixes like LLC, Ltd., or Inc. if the legal name of your company includes one. Avoid non-essential symbols like emojis or special characters that are not part of your company name.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Legal Name guidelines"
    }
  },
  {
    "content": "Reassign self-registered users\n\nAn Admin user should review self-registered user accounts before giving users access to forms and resources. Note:The customer is responsible for ensuring all self-registered users are authorized by the customer. Monitor users that have joined the Self-Registration group. You can do this in two ways: Select Users & Groups > Groups > GroupName, and check for new users that have joined the Self-Registration group. Select Users & Groups > Users. Hover over the arrow next to Users, and then select Export Users to CSV. The Self-Registration column has a value of TRUE for users that self-registered. You can also check the Group Names column to see users assigned to the initial self-registration group. Reassign new self-registered users to groups with FormSpace permissions defined by a Team Admin. This gives authorized users access to the forms and resources for the work they will do. Select a self-registered user, and then select Permissions > Add/Update",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Reassign self-registered users"
    }
  },
  {
    "content": "Group(s). Result: The Edit User Groups Permissions page opens. Select Add Group, and then choose a group that has the appropriate FormSpace permissions. Do you want to add the user to another group? If yes, repeat step 3 for each new group. If no, go to step 5. Once you've assigned the user to the relevant groups, you can remove them from the group that you set up for self-registration. To remove the user from that group, hover over the row and select the delete icon. Select Update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Reassign self-registered users"
    }
  },
  {
    "content": "Related topics\n\nSelf-Registration Overview Self-Register with TrueContext Generate a New URL for Self-Registration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/SetUpSelfRegistration.htm",
      "title": "Set Up Self-Registration",
      "section": "Related topics"
    }
  },
  {
    "content": "Create an account with Self-Registration\n\nYour team lead should provide a URL or QR code to a Self-Registration webpage where you can create your own account. Enter your email address, first name, and last name. Set and confirm a password, and agree to the terms of use and privacy policy. Tip:Your email address becomes your username to log into the TrueContext Mobile App. Select Continue. Result: A Confirm your details page displays. The system sends a confirmation email to the email address you provided. Tip:The confirmation email comes from donotreply@truecontext.com, and it might end up in your spam folder.If you don’t receive the email or you can’t find it, select Resend Email. The link is valid for one hour. If you don’t complete registration before the link expires, return to step 1 and try again. Go to the confirmation email and select Confirm. Result: A Registration complete page displays. TrueContext sends you an email that confirms your account setup is complete. Tip:If the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Create an account with Self-Registration"
    }
  },
  {
    "content": "Confirm link doesn’t work, return to the Confirm your details page and select Link not working. Enter the token code from the confirmation email and select Submit. This confirms your account. Log into the TrueContext Mobile App with the username and password you set up. Note:Your access to TrueContext might be limited until your team admin confirms you are authorized to use the service. If you can log in but you can’t access the forms you need to complete your work, notify your team admin.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Create an account with Self-Registration"
    }
  },
  {
    "content": "Troubleshooting\n\nThis section describes issues and errors you might encounter during Self-Registration, and how to resolve them.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Key not recognized\n\nThe Self-Registration URL is no longer valid. Ask your team admin to generate and share a new Self-Registration URL.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Key not recognized"
    }
  },
  {
    "content": "Company’s subscription does not allow Self-Registration\n\nSelf-Registration is only available to TrueContext customers on the Advanced and Enterprise tiers. Your team admin’s company might have switched to a lower tier since they generated the Self-Registration URL. The Self-Registration URL will not work unless the company upgrades to the Advanced or Enterprise tier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Company’s subscription does not allow Self-Registration"
    }
  },
  {
    "content": "Username already exists\n\nIf your email address already exists in the system, you will not receive a confirmation email. Instead, the system will send you an email to let you know your email username already exists. This email prompts you to log in with the password you created. If you did not self-register with this email address, notify your team admin. If you’ve forgotten your password, open the TrueContext Mobile App and select Forgot password.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Username already exists"
    }
  },
  {
    "content": "Max users in billing\n\nTeams on user-based billing pay for a set number of user accounts. Once your team reaches its user account limit, you can’t create a new account with Self-Registration. Ask your team admin to increase the user account limit or remove unused accounts so you can register.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/Self-RegistrationHelpLink.htm",
      "title": "Self-Register with TrueContext",
      "section": "Max users in billing"
    }
  },
  {
    "content": "Deactivate the Self-Registration URL\n\nNote:If you deactivate the Self-Registration URL, users who have already created accounts will not lose their accounts. However, new users cannot use the deactivated URL to self-register. Select your username > Team Settings > Billing and Usage, and then select your subscription. Hover over the arrow next to the subscription name, and then select Deactivate Self-Registration. Result: A Self-Registration Deactivation Warning displays. Read the warning carefully, and then select Proceed. Result: The Self-Registration URL is deactivated and can’t be restored.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/GenerateNewSelfRegURL.htm",
      "title": "Generate a New URL for Self-Registration",
      "section": "Deactivate the Self-Registration URL"
    }
  },
  {
    "content": "Generate a new Self-Registration URL\n\nTo reactivate Self-Registration, repeat the process to Add Self-Registration to your subscription.This generates a new Self-Registration URL to share with new users. Note:This URL is not the same as the one you disabled. Once disabled, a URL cannot be restored.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/GenerateNewSelfRegURL.htm",
      "title": "Generate a New URL for Self-Registration",
      "section": "Generate a new Self-Registration URL"
    }
  },
  {
    "content": "Related topics\n\nSelf-Registration Overview Set Up Self-Registration Self-Register with TrueContext",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/Self-Registration/GenerateNewSelfRegURL.htm",
      "title": "Generate a New URL for Self-Registration",
      "section": "Related topics"
    }
  },
  {
    "content": "Use the TrueContext API\n\nInfo:We're now TrueContext.To support both new and existing integrations, the TrueContext REST API will continue to use api.prontoforms.com as the base URL.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 This section includes the following content: TrueContext REST APITrueContext REST API RecipesHow-To: Dispatch a form via the API using PostmanDispatch a Form Using the API with ReqBin",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/UseThePFAPI.htm",
      "title": "Use the TrueContext API",
      "section": "Use the TrueContext API"
    }
  },
  {
    "content": "FormSpaces\n\nRetrieve information related to your team's FormSpaces GET /api/1.1/formspaces Retrieves a list of FormSpaces in your account GET /api/1.1/formspaces{formSpaceId} Retrieves the details of a specific FormSpace",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "FormSpaces"
    }
  },
  {
    "content": "Forms\n\nRetrieve information related to your team's forms GET /api/1.1/formspaces/{formSpaceId}/forms Retrieves a list of forms in a specific FormSpace GET /api/1.1/formspaces/{formSpaceId}/forms/{formId} Retrieves the details of a specific form GET /api/1.1/formspaces/{formSpaceId}/forms/{formId}/iterations Retrieves a list of form versions for a specific form GET /api/1.1/formspaces/{formSpaceId}/forms/{formId}/iterations/{formVersionId} Retrieves the details of a specific form version",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Forms"
    }
  },
  {
    "content": "Data Exports\n\nExport data from dispatched and submitted forms for a specific form POST /api/1.1/formspaces/{formSpaceId}/forms/{formId}/data/export Initiates an export of all Form Submissions for a specific form GET /api/1.1/formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId}/status Retrieves the status of a data export for a specific form GET /api/1.1/formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId} Retrieves the completed data export for a specific form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Data Exports"
    }
  },
  {
    "content": "Documents\n\nRetrieve information related to your team's documents GET /api/1.1/formspaces/{formSpaceId}/documents Retrieves a list of documents in a FormSpace GET /api/1.1/formspaces/{formSpaceId}/documents/{documentId} Retrieves the details of a document",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Documents"
    }
  },
  {
    "content": "Resources\n\nRetrieve information and take action on your team's resources GET /api/1.1/formspaces/{formSpaceId}/resources Retrieves a list of Resources in a FormSpace GET /api/1.1/formspaces/{formSpaceId}/resources/{resourceId} Retrieves the details of a Resource DELETE /api/1.1/formspaces/{formSpaceId}/resources/{resourceId} Deletes a Resource GET /api/1.1/formspaces/{formSpaceId}/resources/{resourceId}/contents Downloads the Resource file PUT /api/1.1/formspaces/{formSpaceId}/resources/{resourceId}/upload.{extension} Uploads a new file to an existing Resource",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Resources"
    }
  },
  {
    "content": "Data Sources\n\nManage and take action on your Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. GET /api/1.1/formspaces/{formSpaceId}/sources Retrieves a list of Data Sources in a FormSpace GET /api/1.1/formspaces/{formSpaceId}/sources/{sourceId} Retrieves the details of a Data Source DELETE /api/1.1/formspaces/{formSpaceId}/sources/{sourceId} Deletes a Data Source POST /api/1.1/formspaces/{formSpaceId}/sources/{sourceId}/fetch Forces a fetch of dynamic Data Source contents PUT /api/1.1/formspaces/{formSpaceId}/sources/{sourceId}/upload.{extension} Uploads new data for a Manual Upload type Data Source GET /api/1.1/formspaces/{formSpaceId}/sources/{sourceId}/content.{extension} Retrieves the contents of a Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Data Sources"
    }
  },
  {
    "content": "Data Destinations\n\nRetrieve information and take action on your Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. GET /api/1.1/formspaces/{formSpaceId}/destinations Retrieves a list of Data Destinations in a FormSpace GET /api/1.1/formspaces/{formSpaceId}/destinations/{destinationId} Retrieves the details of a Data Destination GET /api/1.1/data/{dataId}/destinations/{destinationId} Retrieves the details of a Data Destination execution POST /api/1.1/data/{dataId}/destinations/{destinationId} Updates the \"Automatic Retries\" setting for a Data Destination execution POST /api/1.1/data/{dataId}/destinations/execute Re-executes all the Data Destinations for a Form Submission POST /api/1.1/data/{dataId}/destinations/{destinationId}/execute Re-executes a Data Destination for a Form Submission",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Data Destinations"
    }
  },
  {
    "content": "Form Submissions\n\nManage and take action on dispatched and submitted forms GET /api/1.1/data Retrieves a list of all Form Submissions GET /api/1.1/data/{dataId} Retrieves the details of a Form Submission DELETE /api/1.1/data/{dataId} Deletes a Form Submission GET /api/1.1/data{dataId}/attachments.zip Retrieves the attachments of a Form Submission GET /api/1.1/data/{dataId}/attachments/{attachmentId} Retrieves a Form Submission attachment GET /api/1.1/data/{dataId}/document.{extension} Retrieves the contents of a Form Submission in a JSON or XML document GET /api/1.1/data/{dataId}/documents/{documentId} Retrieves a Form Submission document",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Form Submissions"
    }
  },
  {
    "content": "Executions\n\nTake action on the executions that Form Submissions trigger GET /api/1.1/data/{dataId}/executions/{executionId} Retrieves the details of an execution triggered by a Form Submission POST /api/1.1/data/{dataId}/executions/{executionId} Updates the \"Automatic Retries\" setting for a Data Destination execution POST /api/1.1/data/{dataId}/executions/execute Re-executes all executions for a Form Submission POST /api/1.1/data/{dataId}/executions/{executionId}/execute Re-executes a specific execution for a Form Submission",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Executions"
    }
  },
  {
    "content": "Dispatch Forms\n\nDispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). forms to your users to initiate a workflow POST /api/1.1/data/dispatch Dispatches a form to a user POST /api/1.1/data/dispatch/bytag Dispatches forms that have the same tag GET /api/1.1/data/dispatch/bytag/{requestId} Retrieves the status of a dispatch by tags request POST /api/1.1/data/{dataId}/change_assignment Change assignment of a dispatched form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Dispatch Forms"
    }
  },
  {
    "content": "Form Submission Editing\n\nSend completed Form Submissions for editing or cancel a request for editing POST /api/1.1/data/{dataId}/edit Sends a completed Form Submission to a user for editing POST /api/1.1/data/{dataId}/cancel_edit Cancels a Form Submission sent for editing",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Form Submission Editing"
    }
  },
  {
    "content": "TrueContext Teamwork\n\nUnassign or assign incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms (Enterprise tier only) POST /api/1.1/data/{dataId}/unassign Unassigns an incomplete TrueContext Teamwork-enabled form POST /api/1.1/data/{dataId}/reassign Assigns an incomplete TrueContext Teamwork-enabled form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "TrueContext Teamwork"
    }
  },
  {
    "content": "Users\n\nManage and take action on your user accounts GET /api/1.1/users Retrieves a list of users in your team POST /api/1.1/users Creates a user account GET /api/1.1/users/{userId} Retrieves a user's details by user ID PUT /api/1.1/users/{userId} Updates a specific user's account information DELETE /api/1.1/users/{userId} Deletes a user account POST /api/1.1/users/{userId}/expirepassword Expires a user's password POST /api/1.1/users/{userId}/password Changes a user's password GET /api/1.1/users/user Retrieves a user's details by username GET DEPRECATED /api/1.1/users/username/{username} (Deprecated) Retrieves a user's details by username Note:If you are using this endpoint, update your integrations to use /api/1.1/users/user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Users"
    }
  },
  {
    "content": "Groups\n\nManage groups, membership, and FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. access GET /api/1.1/groups Retrieves a list of groups on your team POST /api/1.1/groups Creates a group GET /api/1.1/groups/{groupId} Retrieves the details of a specific group PUT /api/1.1/groups/{groupId} Updates information for an existing group DELETE /api/1.1/groups/{groupId} Deletes a group GET /api/1.1/groups/{groupId}/users Lists the users assigned to a group POST /api/1.1/groups/{groupId}/users Adds users to a group or updates permissions on existing members DELETE /api/1.1/groups/{groupId}/users Removes specified users from a group PATCH /api/1.1/groups/{groupId}/users Sync group user information and permissions GET /api/1.1/groups/{groupId}/formspaces Lists FormSpaces",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Groups"
    }
  },
  {
    "content": "that a group can access POST /api/1.1/groups/{groupId}/formspaces Adds FormSpace access to a group or updates permissions DELETE /api/1.1/groups/{groupId}/formspaces Removes specified FormSpaces from a group PATCH /api/1.1/groups/{groupId}/formspaces Sync group Formspace information",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/APIEndpoints_LandingPage.htm",
      "title": "TrueContext REST API",
      "section": "Groups"
    }
  },
  {
    "content": "TrueContext REST API Recipes\n\nInfo:We're now TrueContext.To support both new and existing integrations, the TrueContext REST API will continue to use api.prontoforms.com as the base URL.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 This section includes the following content: How-To: Dispatch a form via the API using PostmanDispatch a Form Using the API with ReqBin",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ProntoFormsAPIRecipes.htm",
      "title": "TrueContext REST API Recipes",
      "section": "TrueContext REST API Recipes"
    }
  },
  {
    "content": "How-To: Dispatch a form via the API using Postman Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise About Dispatch via the API About Dispatching via the API sends a dispatch message to the TrueContext server, which in turn will dispatch that record to the user. To use this dispatching system, you will have to install an API add-on to your browser, such as Postman. Info:We're now TrueContext.To support both new and existing integrations, the TrueContext REST API will continue to use api.prontoforms.com as the base URL.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Dispatch via the API Ensure the form you would like to dispatch to is enabled to receive dispatches. For more, see the How to: Set up a form for dispatching. Launch the Postman Plugin, and choose to create a Request. Name your request something like \"Dispatch The term \"dispatch\" refers to the act of sending a form to a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217496588_DispatchFormAPIPostman.html",
      "title": "How-To: Dispatch a form via the API using Postman"
    }
  },
  {
    "content": "mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). to User\". You'll be able to re-use this request later. If you don't already have a collection (which is like a folder for different requests), create one. I've named ours \"TrueContext Dispatch.\" Select the collection, then save the request. Change the method to POST. This is the method supported for creating dispatches. Insert the Request URL https://api.prontoforms.com/api/1.1/data/dispatch.xml Go to the Authorization tab. Change the type to \"Basic Auth\". Use the API Key as the Username and the API Key An API Key is used to authenticate calls to the TrueContext REST API. An admin creates the API Key in the TrueContext Web Portal to generate the necessary credentials to connect to the API. Secret as the Password. If you do not have an API",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217496588_DispatchFormAPIPostman.html",
      "title": "How-To: Dispatch a form via the API using Postman"
    }
  },
  {
    "content": "Key and Secret, read about Setting up an API Application on TrueContext. Go to the Body tab and select the radiobutton for \"raw.\" In the text area, identify: the ID of the form to dispatch to: <formId>FORM ID</formId> the ID of the user who will receive the form: <userId>USER ID</userId> the Unique ID of the question being filled, and the data to dispatch to that field: <answer label=\"UNIQUE ID\">ANSWER</answer> Sample: <dispatch> <formId>141938312</formId> <userId>131662191</userId> <data> <answer label=\"E-mail\">j.doe@email.com</answer> <answer label=\"Name\">Jane Doe</answer> <answer label=\"Phone\">9145551026</answer> </data></dispatch> In Postman: Below is a sample of what the raw text will look like after form, user, question and response have been identified: 9.Tap Send. Look at the Response area. If successful, a Dispatch Result will appear complete with a Data ID and Reference Number.<dispatchResult> <dataId>123</dataId>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217496588_DispatchFormAPIPostman.html",
      "title": "How-To: Dispatch a form via the API using Postman"
    }
  },
  {
    "content": "<referenceNumber>20110902-123</referenceNumber></dispatchResult>",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Published/217496588_DispatchFormAPIPostman.html",
      "title": "How-To: Dispatch a form via the API using Postman"
    }
  },
  {
    "content": "Prerequisites\n\nCreate an API Key An API Key is used to authenticate calls to the TrueContext REST API. An admin creates the API Key in the TrueContext Web Portal to generate the necessary credentials to connect to the API. (USERS & GROUPS > API Keys... > Create an API Key). Note the API Key ID and the API Key Secret. Note:Copy and securely store your API Key Secret now—this is your only chance to view it. For security reasons, the secret is permanently hidden after you leave this page. You must have a form already configured in the Web Portal. Note the Form ID of the form you want to dispatch. Select Forms & Integrations > FormName. The Form ID displays in the form details below the form name, as shown in the following example. Note the username of the user you want to dispatch the form to. Navigate to the user (USERS & GROUPS > Users... > List Users). Select the user, and locate their username as shown in the following example. Note the Unique ID A Unique ID refers to the specific",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/API_Kickstart.htm",
      "title": "Dispatch a Form Using the API with ReqBin",
      "section": "Prerequisites"
    }
  },
  {
    "content": "identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. of the questions you want to prepopulate when you dispatch the form. Navigate to your form, and select the Pages & Questions tab. The Label column lists all of the form’s Unique IDs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/API_Kickstart.htm",
      "title": "Dispatch a Form Using the API with ReqBin",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Steps\n\nGo to https://reqbin.com/. In the URL field, enter https://api.prontoforms.com/api/1.1/data/dispatch.json Select POST as the HTTP method as shown in the following example. Under Authorization, select Basic Auth. Enter the following: For the Username, enter the API Key ID. For the Password, enter the API Key Secret. Under Content, select JSON (application/json). Enter the following Request Body. Enter the Form ID, Username, Unique IDs, and the answers you want to dispatch where needed.{ \"formId\": \"{formId}\", \"username\": \"{username}\", \"data\": [ { \"label\": \"{uniqueId1}\", \"answer\": \"{answer1}\" }, { \"label\": \"{uniqueId2}\", \"answer\": \"{answer2}\" }, { \"label\": \"{uniqueId3}\", \"answer\": \"{answer3}\" } ] } The Request Body might look like the following example.{ \"formId\": \"149119149\", \"username\": \"username.user\", \"data\": [ { \"label\": \"CompanyName\", \"answer\": \"ProntoForms\" }, { \"label\": \"Email\", \"answer\": \"sample@mycompany.com\" }, { \"label\": \"PhoneNumber\", \"answer\": \"6132229999\" } ] }",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/API_Kickstart.htm",
      "title": "Dispatch a Form Using the API with ReqBin",
      "section": "Steps"
    }
  },
  {
    "content": "Select Send. Result: You used the API to dispatch a form. The system returns a Response Body similar to the following example.{ \"dataId\": \"18188004681\", \"referenceNumber\": \"20210520-18188004681\" }",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/API_Documentation/API_Kickstart.htm",
      "title": "Dispatch a Form Using the API with ReqBin",
      "section": "Steps"
    }
  },
  {
    "content": "Integrate with Other Systems\n\nThis section includes the following content: ServiceNow IntegrationIntroduction to ServiceNow IntegrationsServiceNow Integration Demo VideosSet up a ServiceNow ConnectionSet up a ServiceNow Table Data SourceSet up a ServiceNow Table Data DestinationServiceNow Repeatable Destination: Create Multiple Test Records Linked to an AssetUse the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile AppSalesforce Integration OverviewIntroduction to Salesforce IntegrationsEstablish a Salesforce ConnectionSet up a Salesforce Data SourceSet up a Salesforce Data DestinationSalesforce Integration CookbookSalesforce TrueContext AppExchange PackageServiceMax Integration OverviewIntroduction to ServiceMax IntegrationSet Up a ServiceMax IntegrationLaunch TrueContext from ServiceMax GoServiceMax Integration CookbookApp‑to‑App CommunicationIntroduction to App‑to‑App communicationApp‑to‑App Allow ListApp‑to‑App Custom Callback ParametersApp‑to‑App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntegrateWithOtherSystems.htm",
      "title": "Integrate with Other Systems",
      "section": "Integrate with Other Systems"
    }
  },
  {
    "content": "CookbookApp‑to‑App Technical DetailsMicrosoft 365 Integration OverviewMicrosoft 365 ConnectionMicrosoft SharePoint Document Library Data SourceMicrosoft SharePoint Document Library Data DestinationVideo Demo of a SharePoint List IntegrationMicrosoft SharePoint List Data SourceMicrosoft SharePoint List Data DestinationSend Data from a Repeatable Section to a SharePoint ListMicrosoft OneDrive for Business Data SourceMicrosoft OneDrive for Business Data DestinationMicrosoft OneDrive IntegrationMicrosoft OneDrive ConnectionMicrosoft OneDrive Data SourceMicrosoft OneDrive Data DestinationMicrosoft SharePoint Server IntegrationSharePoint Server ConnectionSharePoint Server Data DestinationHTTP Integration Points OverviewHTTP ConnectionHTTP GET Data SourceHow Data Sources Store JSON and XML DataHTTP Data DestinationHTTP File Upload Data DestinationWebDav (HTTP PUT) Data DestinationPost a Slack Notification using the HTTP Data DestinationDocument Formats for Integrations and DevelopersCSV",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntegrateWithOtherSystems.htm",
      "title": "Integrate with Other Systems",
      "section": "Integrate with Other Systems"
    }
  },
  {
    "content": "DocumentsJSON DocumentsXML DocumentsDREL DocumentsFreeMarker DocumentsHandlebars DocumentsEscape Special Characters and Line Breaks for Template-driven Text DocumentsForm Submission Formats: Standard vs. Labels as Node NamesAmazon Web ServicesAmazon Web Services ConnectionAmazon S3 Data SourceAmazon S3 Data DestinationAmazon SNS Data DestinationAmazon Glacier Data DestinationBoxIntegrating TrueContext with BoxBox ConnectionBox Data SourceBox User Group Data SourceBox Data DestinationManage your form data with BoxDropboxDropbox ConnectionDropbox Data SourceDropbox Data DestinationEmails and NotificationsEmail ConnectionEmail Data DestinationSMS Data DestinationFTP/SFTPFTP/Secure FTP ConnectionFTP/Secure FTP Data SourceFTP/Secure FTP (SFTP) Data DestinationGoogle and Google WorkspaceTrueContext and Google: Two-Way IntegrationGoogle ConnectionGoogle Sheets Data SourceGoogle Sheets Data DestinationGoogle Drive Data DestinationRecipe to Update a Google Sheets Data Source Using Data from",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntegrateWithOtherSystems.htm",
      "title": "Integrate with Other Systems",
      "section": "Integrate with Other Systems"
    }
  },
  {
    "content": "Submitted FormsManage your form data with Google DriveSharefileShareFile ConnectionShareFile Data SourceShareFile User Group Data SourceShareFile Data DestinationZendeskZendesk ConnectionZendesk Ticket Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/IntegrateWithOtherSystems.htm",
      "title": "Integrate with Other Systems",
      "section": "Integrate with Other Systems"
    }
  },
  {
    "content": "ServiceNow Integration\n\nThe topics in this section describe how to integrate TrueContext with your ServiceNow instance. First, create a secure ServiceNow Connection. Then, create a ServiceNow Table Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. to retrieve data from your ServiceNow tables. You can also create a ServiceNow Table Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. to send data from submitted forms to ServiceNow. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/LandingPages/ServiceNowIntegration.htm",
      "title": "ServiceNow Integration",
      "section": "ServiceNow Integration"
    }
  },
  {
    "content": "What is a ServiceNow integration?\n\nA ServiceNow integration is the seamless and secure communication between TrueContext and your ServiceNow instance. With a ServiceNow Table Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., you can include data from ServiceNow records in your forms. A ServiceNow Table Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. can push data from submitted forms into ServiceNow Tables, including documents that contain details collected in TrueContext. An integrated experience with the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/IntroductionServiceNow.htm",
      "title": "Introduction to ServiceNow Integrations",
      "section": "What is a ServiceNow integration?"
    }
  },
  {
    "content": "ServiceNow Agent mobile app can be established using deep links (App‑to‑App calls).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/IntroductionServiceNow.htm",
      "title": "Introduction to ServiceNow Integrations",
      "section": "What is a ServiceNow integration?"
    }
  },
  {
    "content": "How a ServiceNow integration works\n\nServiceNow Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. retrieve data from your ServiceNow tables. You can use this data to: Prefill answers when you assign a form for a user to work on. Define answer options in Dropdown, Radio Button, and Multiselect questions. Automatically push answers to subsequent questions in the form. Tip:You can also automatically prefill answers when you launch the TrueContext Mobile App from an App‑to‑App call from the ServiceNow Agent app. Field users complete work in the TrueContext Mobile App and submit a form. ServiceNow Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/IntroductionServiceNow.htm",
      "title": "Introduction to ServiceNow Integrations",
      "section": "How a ServiceNow integration works"
    }
  },
  {
    "content": "automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. send data to tables in the ServiceNow instance. You can set up Data Destinations to: Update record fields using data collected in TrueContext. Create records according to your workflow requirements. Save formatted documents in PDF and other formats in ServiceNow records. These documents include all the information and images collected and calculated in TrueContext. Save images and documents uploaded in TrueContext as attachments in ServiceNow records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/IntroductionServiceNow.htm",
      "title": "Introduction to ServiceNow Integrations",
      "section": "How a ServiceNow integration works"
    }
  },
  {
    "content": "How to integrate TrueContext and ServiceNow\n\nWe recommend that you set up your ServiceNow integration points in the following order. You can also follow these steps if you’re setting up TrueContext for the first time. Set up a ServiceNow Connection. You might need help from your ServiceNow administrator. Set up one or more ServiceNow Table Data Sources. Retrieve the records you want to reference in your form. Set up your form. Use the data you retrieved from the Data Sources to define answer options in your form. Set up one or more ServiceNow Table Data Destinations. Map the data you want to send to ServiceNow records. Add the Data Destination and documents to your form. Test your workflow to make sure everything works as expected. Save and deploy your form to make it available to users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/IntroductionServiceNow.htm",
      "title": "Introduction to ServiceNow Integrations",
      "section": "How to integrate TrueContext and ServiceNow"
    }
  },
  {
    "content": "Related topics\n\nSet up a ServiceNow Connection Set up a ServiceNow Table Data Source Set up a ServiceNow Table Data Destination Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/IntroductionServiceNow.htm",
      "title": "Introduction to ServiceNow Integrations",
      "section": "Related topics"
    }
  },
  {
    "content": "Use TrueContext with the ServiceNow Agent app for Field Service Management\n\nThis video shows a field technician doing preventive maintenance on an elevator: The technician launches the TrueContext Mobile App from a Work Order Task in the ServiceNow Agent app. The form guides the field technician through the steps required to service the elevator. The field technician submits the form. TrueContext updates records in ServiceNow to include data from the submitted form. The Service Operations Manager can access the new data from the ServiceNow Work Order Task record. Info:The topic Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App describes how to set up a workflow that integrates the ServiceNow Agent app with TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowVideos.htm",
      "title": "ServiceNow Integration Demo Videos",
      "section": "Use TrueContext with the ServiceNow Agent app for Field Service Management"
    }
  },
  {
    "content": "Use TrueContext with ServiceNow’s Healthcare and Life Sciences Service Management\n\nThis video shows a field technician repairing a medical device at a clinician’s request: The field technician launches the TrueContext Mobile App from a Work Order Task in the ServiceNow Agent app. The form guides the field technician through the steps required to repair the device. The field technician submits the form. The Service Operations Manager can access the new data from the ServiceNow Work Order Task record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowVideos.htm",
      "title": "ServiceNow Integration Demo Videos",
      "section": "Use TrueContext with ServiceNow’s Healthcare and Life Sciences Service Management"
    }
  },
  {
    "content": "Build a ServiceNow integration workflow\n\nThis video shows you how to set up a full TrueContext workflow integrated with ServiceNow: Set up a ServiceNow Table Data Source that fetches data from a ServiceNow table. Create a form to capture the field data and guide the user through a workflow. You use the data fetched from ServiceNow to define answer options and to push data to other questions in the form. Set up a ServiceNow Table Data Destination. The Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. updates a ServiceNow record using data from the submitted form and attaches a document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowVideos.htm",
      "title": "ServiceNow Integration Demo Videos",
      "section": "Build a ServiceNow integration workflow"
    }
  },
  {
    "content": "Related topics\n\nIntroduction to ServiceNow Integrations Set up a ServiceNow Table Data Source Set up a ServiceNow Table Data Destination Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowVideos.htm",
      "title": "ServiceNow Integration Demo Videos",
      "section": "Related topics"
    }
  },
  {
    "content": "How a ServiceNow Connection works\n\nA ServiceNow Connection uses a ServiceNow OAuth application endpoint so that TrueContext can communicate with your ServiceNow instance. In ServiceNow, you create the OAuth application registry and enter a TrueContext URL as the Redirect URL. In TrueContext, you enter the Client ID and Client Secret from your OAuth application registry.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "How a ServiceNow Connection works"
    }
  },
  {
    "content": "Video demo\n\nThis video shows you how to set up a ServiceNow Connection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "Video demo"
    }
  },
  {
    "content": "TrueContext prerequisites\n\nYou must be a TrueContext Admin user. Your team must be on the Advanced or Enterprise tier.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "TrueContext prerequisites"
    }
  },
  {
    "content": "ServiceNow prerequisites\n\nYou must have an admin user role. Make sure that the OAuth plugin is active and that you set the OAuth activation property. You must create an OAuth application endpoint. Take note of the User name and Password you want to use for the Connection. Note: We recommend that you create a dedicated integration user. The Connection has the same permissions as the user, so you can control the tables TrueContext can access. Make sure any access control list (ACL) rules you apply to your integration user don’t restrict access to tables you want to use in TrueContext. This can cause errors when you configure your Data Sources and Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "ServiceNow prerequisites"
    }
  },
  {
    "content": "Steps to create an OAuth application endpoint\n\nIn your ServiceNow Instance, go to All > System OAuth > Application Registry. Select New, and then select Create an OAuth API endpoint for external clients. Enter a Name, and then enter the following information. Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Redirect URL (Required): https://live.prontoforms.com/security/oauth/connections/servicenow, https:/mycompany.service-now.com/oauth_redirect.do Where mycompany is your ServiceNow instance subdomain. Logo URL (Optional): https://live.prontoforms.com/security/branding/logo Tip:The Logo URL replaces a placeholder image with the TrueContext logo. This helps you identify your OAuth application endpoint. Select Submit. Open your new OAuth application endpoint and take note of your",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "Steps to create an OAuth application endpoint"
    }
  },
  {
    "content": "application Client ID and Client Secret. Info:The ServiceNow product documentation provides detailed steps to create an OAuth application endpoint.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "Steps to create an OAuth application endpoint"
    }
  },
  {
    "content": "Steps to set up a ServiceNow Connection\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., go to Forms & Integrations > Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection. > Create Connection. Select ServiceNow Connection. Result: The system opens the Create ServiceNow Connection page. Enter a unique Name (required) and a Description (optional). If you have multiple ServiceNow Connections, a detailed description helps you identify each one. Choose the FormSpaces that can access the Connection. Enter your ServiceNow Instance URL. For example, https://mycompany.service-now.com/. Note:You must include https:// in your Instance URL. Enter the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "Steps to set up a ServiceNow Connection"
    }
  },
  {
    "content": "Client ID and Client Secret from the OAuth application endpoint you created. Select Connect. Are you already signed in to ServiceNow in the same browser? If yes, the system connects you automatically. Note:When you select Connect, ServiceNow automatically uses the credentials that you already signed in with. If the system displays the wrong First and Last name, sign out from ServiceNow, Clear the Connection, and repeat step 7. If no, the system prompts you to enter your User name and Password and to Allow access to ServiceNow. Result: The system connects to the ServiceNow instance and displays your ServiceNow First name and Last name. Select Create. Result: The system creates a ServiceNow Connection. You can use the Connection to set up ServiceNow Table Data Sources and Destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "Steps to set up a ServiceNow Connection"
    }
  },
  {
    "content": "Related topics\n\nConnections Overview Set up a ServiceNow Table Data Destination Set up a ServiceNow Table Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowConnection.htm",
      "title": "Set up a ServiceNow Connection",
      "section": "Related topics"
    }
  },
  {
    "content": "How a ServiceNow Table Data Source works\n\nA ServiceNow Table Data Source fetches data from records in a ServiceNow Table. You set up the Data Source to fetch values from the columns and records that you specify: Enter Column Names to specify the columns to fetch. Enter a query string to filter the records that the Data Source fetches. Once the Data Source fetches the data from ServiceNow, you can use that data in your forms. When you add a Dropdown, Radio Button, or Multiselect question, you define the answer options based on the columns in the Data Source. When you dispatch the form, you can prepopulate answers in the form using data from ServiceNow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "How a ServiceNow Table Data Source works"
    }
  },
  {
    "content": "How you select the data to fetch\n\nWhen you configure a ServiceNow Table Data Source, you specify the columns and the records to fetch.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "How you select the data to fetch"
    }
  },
  {
    "content": "Column Selection\n\nServiceNow Table Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. fetch data from the columns you specify. By default, the Data Source fetches the Display Value of each column. You can choose to also fetch the column Database Value. The Database Value is crucial when you fully integrate TrueContext and ServiceNow using a Data Destination. This is because ServiceNow uses the Database Value to update fields.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Column Selection"
    }
  },
  {
    "content": "Record filtering\n\nBy default, ServiceNow Table Data Sources fetch all the records in a Table. Use Record Filtering to limit the number of records that the Data Source fetches. To do that, you use a query string that you generate in ServiceNow. Your browser does not support the video tag.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Record filtering"
    }
  },
  {
    "content": "Prerequisites to configure a ServiceNow Table Data Source\n\nYour TrueContext account must be on the Advanced or Enterprise tier. You must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Either a ServiceNow Connection already exists in your FormSpace, or you are a TrueContext Admin user and can create a ServiceNow Connection or modify an existing one to make it available in your FormSpace. Note the Name of the ServiceNow Table to map data. To find the Table Name in ServiceNow, go to System Definition > Tables. The following example shows Table Names in ServiceNow:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Prerequisites to configure a ServiceNow Table Data Source"
    }
  },
  {
    "content": "Steps to configure a ServiceNow Table Data Source\n\nGo to Forms & Integrations > Data Sources > CREATE DATA SOURCE > ServiceNow Table. Result: The system opens a new ServiceNow Table Data Source in edit mode. Enter a Name. On the Data Retrieval and Format tab, configure how the Data Source fetches data, including the fetch frequency. On the Connection tab, select an existing ServiceNow Connection or create a new one. Tip:If the system doesn’t list the Connection you want to use, make sure it’s available in the same FormSpace. Enter the Name of the Table from ServiceNow to fetch data from. Specify the columns you want the Data Source to fetch. Under Column Name, enter the name of your ServiceNow columns as shown in your ServiceNow tables. You must enter at least one column name for the Data Source to fetch. Tip:Select Describe ServiceNow Table to open a list of your Table Column Labels and Column Names. Make sure to include the ServiceNow Column Name (not the label) in your Column",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Steps to configure a ServiceNow Table Data Source"
    }
  },
  {
    "content": "Selection. Select Include Database Value to fetch the Database Value. The system fetches the Database Value as a separate column. The following example shows a Column Selection. The Data Source fetches the Display Value for all entered columns. It also fetches the Database Value for the columns that the user selected. In this case, the user selected the columns that have different Display and Database values. Tip:We recommend that you only fetch the Database Value when it’s different from the Display Value. The following example shows a CSV export of the data fetched by the Data Source: The system uses the following format for each column heading: Display Value—ColumnName Database Value—ColumnName_dbValue Tip:You can move each Column Name to change the order. The order you choose is the order displayed in the Form Builder and in CSV exports of the Data Source. Enter a query string to filter the records you want the Data Source to fetch. To generate the query string in ServiceNow:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Steps to configure a ServiceNow Table Data Source"
    }
  },
  {
    "content": "Navigate to the ServiceNow table that you want to fetch data from. Select Show / hide filter. Apply and Run filter rules. Copy the query string: Right-click the last filter of the list. Select Copy query. Result: The system copies the query string to your clipboard. Info:The ServiceNow Topic Generate an encoded query string through a filter describes how to generate a query string in more detail. Once you copy the query string, you paste it in your ServiceNow Table Data Source Record Filtering section. The following example shows a query string from ServiceNow in TrueContext. Select Create to save your Data Source. Tip:You can now use the Data Source to define answer options in Dropdown, Radio Button, or Multiselect questions, and to prefill question answers when you dispatch a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Steps to configure a ServiceNow Table Data Source"
    }
  },
  {
    "content": "Related topics\n\nCreate and Manage Data Sources Use Data Sources in Forms Push Data to Other Questions from a Data Source Set up a ServiceNow Connection Set up a ServiceNow Table Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataSource.htm",
      "title": "Set up a ServiceNow Table Data Source",
      "section": "Related topics"
    }
  },
  {
    "content": "How a ServiceNow Table Data Destination works\n\nA ServiceNow Table Data Destination sends submitted form data to ServiceNow. Depending on your configuration, you can use a ServiceNow Table Data Destination to: Create or update records in a ServiceNow Table. Populate fields with submitted form data. Attach Documents that include submitted form data to a record. Attach submitted files such as images or audio recordings to a record. The following example shows how a ServiceNow Table Data Destination sends data from a submitted form to ServiceNow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "How a ServiceNow Table Data Destination works"
    }
  },
  {
    "content": "Map data to ServiceNow Tables\n\nIn TrueContext, you map submitted form data and metadata to your ServiceNow Table fields, as shown in the following example. When a user submits a form, the Data Destination searches for the specified column. Then, the Data Destination populates the field using the data referenced by the DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression. Warning:ServiceNow ignores data that is not compatible with your Table fields. Make sure that you map data using the correct format, length, and values for the specified Column.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Map data to ServiceNow Tables"
    }
  },
  {
    "content": "Create or update records in ServiceNow\n\nYou can configure your ServiceNow Table Data Destination to: Always create new records. Update a record if a query match exists. If not, create a new record. Always update existing records. The following example shows a Data Destination configured to update a record if a match exists. The record must have a Work Order Number that matches the answer to the question with the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. Job ‑ Work Order #. If the system doesn’t find a match, it creates a new record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Create or update records in ServiceNow"
    }
  },
  {
    "content": "Send attachments and files to ServiceNow\n\nSubmitted forms might include audio recordings, images, or uploaded files. You can choose to attach these to your ServiceNow record so you can access and review them from ServiceNow. This makes it easy to inspect the images in detail or access the audio recordings without having to sign in to TrueContext. You can configure a ServiceNow Table Data Destination to attach the following file types to the record: Photos and sketches Audio recordings Signatures File uploads Annotated documents When the Data Destination executes, you can find these files in the Manage Attachments section of your ServiceNow record. Tip:File attachments are different from Documents:File attachments are collected when the user fills out the form.Documents are generated when the system processes the submitted form. They include all the collected data and metadata.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Send attachments and files to ServiceNow"
    }
  },
  {
    "content": "Send all submitted form data as a Document\n\nYou can bundle all the data collected in the field—including images—into a single Document. Your Data Destination can save a copy of this document to a ServiceNow record as an attachment. This means that all details collected in TrueContext are available to review in ServiceNow. After the Data Destination executes, you can find Documents in the Manage Attachments section of your ServiceNow record. Info:You add Documents to your Data Destination when you add the Data Destination to your form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Send all submitted form data as a Document"
    }
  },
  {
    "content": "Send data from Repeatable Sections\n\nYou can create or update multiple records in a ServiceNow Table using data from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. Each entry in the Repeatable Section can create or update a different record in ServiceNow. Info:When you configure your destination, you can select the option to use it as a Repeatable Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Send data from Repeatable Sections"
    }
  },
  {
    "content": "Store Response Outputs\n\nWhen your Data Destination executes, it receives a response from ServiceNow. The response includes the sys_id of the record that the Data Destination created or updated. You can set the Data Destination to store the response and then reference the sys_id in a subsequent Data Destination. This way, you can create a parent-child relationship between records. Info:The topic Use Response Data Handling to Store Data Received from a Third-Party System describes how to store Response Outputs in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Store Response Outputs"
    }
  },
  {
    "content": "Prerequisites to configure a ServiceNow Table Data Destination\n\nYour TrueContext account must be on the Advanced or Enterprise tier. You must be either: A TrueContext Admin user. A member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Either a ServiceNow Connection already exists in your FormSpace, or you are a TrueContext Admin user and can create a ServiceNow Connection or modify an existing one to make it available in your FormSpace. Note the Name (not the label) of the ServiceNow Table to map data to. To find the Table Name in ServiceNow, go to System Definition > Tables. The following example shows Table Names in ServiceNow:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Prerequisites to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "Steps to configure a ServiceNow Table Data Destination\n\nGo to Forms & Integrations > Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. > CREATE DATA DESTINATION > ServiceNow Table. Result: The system opens a new ServiceNow Table Data Destination in edit mode. Enter a Name and a Destination Unique Identifier. Do you want to send data to a ServiceNow table from a Repeatable Section? If yes, select Use as a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system. for a Repeatable Section, and then enter the Repeatable Section Unique Identifier. Tip:Ensure that you enter the correct ID. Remember, if you change a section unique ID, the linked destination does not automatically update.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Steps to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "If no, select Use as a Regular Destination for a form. Note:Once you link the destination to a form, you can’t change the destination type. On the Filtering tab, configure the conditions that each submitted form must meet for the Data Destination to execute. Info:Refer to the following topics for details about Data Destination filtering:Regular Destination—Apply Filtering to Data DestinationsRepeatable Destination—Create Filter Rules for Individual Rows in a Repeatable Destination On the Connection tab, select an existing ServiceNow Connection or create a new one. Tip:If the system doesn’t list the Connection you want to use, make sure it’s available in the same FormSpace. On the ServiceNow Table Fields tab: Enter the Name of the Table to update. Map form data to specific columns in your Table. Warning:ServiceNow ignores data that is not compatible with your Table fields. Make sure that you map data using the correct format, length, and values for the specified Column. ServiceNow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Steps to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "Column Name—enter column names as shown in your ServiceNow tables. Tip:Select Describe ServiceNow Table to open a list of your Table Column Labels and Column Names. Make sure to include the ServiceNow Column Name (not the Label) in your field mapping configuration. Value Expression—enter a DREL expression to reference submitted form data or metadata. Note:Consider the following:Column Names are case sensitive.You can only enter each Column Name once. If you need to map more than one answer to a column, enter multiple DREL expressions in the Value field.ServiceNow uses the Database Value to update fields. Send the correct data to ServiceNow by configuring lookup questions that use the Database Value as the answer. On the Update Query tab, specify which rows to update. The following table describes how to configure your Data Destination to create or update records. Update Handling Selection Additional Configuration Required Result Never update, always create new You must map data to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Steps to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "ServiceNow fields. When the destination executes, the system creates a new record. Update if exists, otherwise create new You must configure Query Options to specify which record to update. Under ServiceNow Column Name, enter column names as shown in your ServiceNow tables. Under Value Expression, enter a DREL expression to reference submitted form data or metadata. Tip:Select Describe ServiceNow Table to open a list of your Table Column Labels and Column Names. If you enter more than one query, select a Query Operator: Select And to match all queries. Select Or to match at least one query. Note:If you select And, you can’t include the same Column Name more than once. When the destination executes, the system searches for a matching record. If the system doesn’t find a match, it creates a new record. Update if exists, do not create new When the destination executes, the system searches for a matching record. If the system doesn’t find a match, the Data Destination fails. Note:The Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Steps to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "Destination fails when:The system finds multiple matching records.The system finds no matching records, and the destination is set to only update records. On the Attachments tab, select which file types that users submit in forms you want to attach to your ServiceNow records. Go to the Response Configuration tab. Do you want to store response outputs? If yes, select Store all response outputs for use in later destinations. If no, select Don’t store response outputs. Tip:If you want to make this destination a parent of a child destination, select the option to store response outputs. When you configure the child destination, you can use the %o DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. property to reference the stored output. Create your Data Destination. Tip:Remember that you need to link the Data Destination to each form that you want to trigger this",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Steps to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Steps to configure a ServiceNow Table Data Destination"
    }
  },
  {
    "content": "Related topics\n\nCreating and Managing Data Destinations Connecting Destinations and Documents to Forms Set up a ServiceNow Connection Set up a ServiceNow Table Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/ServiceNowDataDestination.htm",
      "title": "Set up a ServiceNow Table Data Destination",
      "section": "Related topics"
    }
  },
  {
    "content": "Scenario\n\nA field service technician performs system tests as part of preventive maintenance on Medical Devices. The service organization keeps a record of the tests and their results in a ServiceNow table. This enables asset management dashboards and automation to trigger workflows such as break-fix and other asset life cycle tasks.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Scenario"
    }
  },
  {
    "content": "Objectives\n\nTechnicians capture multiple tests for an Asset using a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. in the form. The TrueContext connection updates the Asset record to include details of the service using a Regular Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. The TrueContext connection creates a child test record for each entry captured in the Repeatable Section using a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Objectives"
    }
  },
  {
    "content": "Result\n\nThe field service technician performs preventive maintenance on a medical device. When they start the work, they select the Asset they’ll work on from a predefined list of options. The technician adds an entry in a repeatable section for each test performed on the Asset. When the technician submits the form, a Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. updates the Asset record to include details about the latest inspection. The following image shows the ServiceNow field populated with the data from TrueContext. A Repeatable Destination creates a record for each of the tests performed. These records have a Reference field that links them to the serviced Asset. The following image shows the Test records in ServiceNow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Result"
    }
  },
  {
    "content": "ServiceNow prerequisites\n\nYou must have a ServiceNow admin role or another role that allows you to create tables.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "ServiceNow prerequisites"
    }
  },
  {
    "content": "TrueContext prerequisites\n\nYou must be a TrueContext Admin user. Your team must be on the Advanced or Enterprise tier. You must set up a ServiceNow Connection to use ServiceNow Table Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "TrueContext prerequisites"
    }
  },
  {
    "content": "Overview of steps\n\nSystem Action ServiceNow Create a Tests and Calibrations table that has a reference field. TrueContext Set up a Data Source to fetch Asset data from ServiceNow. Set up your form to capture the Asset sys_id. Create a Repeatable Section to capture the tests. Set up a Data Destination to update the Asset record. Set up a Repeatable Destination to create test records linked to the Asset record. Add the Data Destinations to the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Overview of steps"
    }
  },
  {
    "content": "Detailed steps\n\nCreate a Tests and Calibrations table in ServiceNow The Tests and Calibrations table stores the data from the tests that the field technician performs on an asset. Create a table as described in the ServiceNow Documentation. For this recipe, enter the following: Label—Tests and Calibrations Name—u_test_and_calibration Add a Reference field. Enter the table name alm_hardware. Tip:Your Assets could be stored in a different table than alm_hardware. Enter the name of the table that’s best for your workflow. Add any other columns you need to store the data collected in each test. The following example shows some columns added to the Test and Calibrations table: Set up a TrueContext Data Source to fetch Asset data from ServiceNow Create a ServiceNow Table Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.: Forms & Integrations > Data Sources > CREATE DATA SOURCE > ServiceNow Table Enter the name Medical Devices. Go to the Connection tab. For this recipe set up the Data Source as follows: Field Value Name of the Table alm_hardware Tip:Your Assets could be stored in a different table than alm_hardware. Enter the name of the table that’s best for your workflow. Column Selection sys_id display_name Record Filtering asset_tagLIKEH2456^NQasset_tagLIKEMRI^NQasset_tagLIKEXR Tip:This string filters assets that have the tags H24556, MRI, and XR. Use a query string that works for your records. Select Create to save your Data Source. Set up your form to capture the Asset sys_id Create a new form or edit an existing form: Go to Forms & Integrations > List Forms > Create Form or Forms & Integrations > List Forms > FormName > Edit Form or Continue Editing. Create a Dropdown question for the list",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "of Asset names. When a field technician selects an Asset, this question populates the Asset ID question. ADD A QUESTION > Dropdown Set up the GENERAL details: Field Value Question Text Asset Unique Identifier for Question Asset Go to the OPTIONS tab and set up the question as follows: Field Value Option Type Select Use Data Source for Options. Select Data Source Select Medical Devices. This is the Data Source you created. Column value displayed on device Select display_name. These are the Asset names from the ServiceNow Data Source. In the Push Data To Other Questions section, select Populate questions in the main form. Set the following: Field Value Question to populate Enter Asset ID and press the Enter key. Answer source Select sys_id. Result: When the technician selects an Asset from the Dropdown, the Asset ID question is automatically populated. Create a Repeatable Section to capture the tests Add a Repeatable Section to your form: ADD A SECTION > Repeatable Enter the following",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "General Information: Field Value Section Name Tests Unique Identifier for the Section Tests Tip:Take note of this Unique Identifier. You’ll need it when you create the Repeatable Destination. SAVE the new Repeatable Section. Select EDIT SUMMARY TABLE OR QUESTIONS. Add test questions to the Repeatable Section. The following image shows an example of test questions to add to the section. Select SAVE AS DRAFT. Set up a Data Destination to update the Asset record Create a ServiceNow Table Data Destination: Forms & Integrations > Data Destinations > CREATE DATA DESTINATION > ServiceNow Table Enter the Destination Basics. Name this destination Update Medical Asset. In the Destination Type section, select the option to make this a Regular Destination. On the ServiceNow Table Fields tab: Enter alm_hardware as the Name of the Table, or enter the name of the table where you store your Assets. Map the ServiceNow fields you want to update as shown in the following example: Field Value ServiceNow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "Column Name Enter the names of the ServiceNow columns to update. In the example, the Data Destination updates a field called Last Checklist Activity. Value Expression Enter a DREL expression to reference submitted form data or metadata. The example shows an expression that references the form name, the date and time when the form was submitted, and the field technician’s name. Set up an Update Query that finds and updates the Asset that has a matching sys_id. The sys_id is a unique identifier for each Asset record. In this example, The Data Destination references the question that you populated with the Asset sys_id when you set up the Data Source. This ensures that the system updates the correct Asset that the technician inspected. Select Create to save your Data Destination. Set up a Repeatable Destination to create the test records linked to the Asset record Create a ServiceNow Table Data Destination: Forms & Integrations > Data Destinations > CREATE DATA DESTINATION > ServiceNow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "Table Enter the Destination Basics. Name this destination Medical Asset Tests. In the Destination Type section, select the option to make this a Repeatable Destination. Enter the Unique Identifier of the Repeatable Section you created. In this recipe, the Unique Identifier is Tests. Go to the ServiceNow Table Fields tab. Enter u_test_and_calibration as the Name of the Table. Map the Asset Reference field to the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. of the Asset ID question: Result: When the destination executes, it populates the Reference field with the Asset sys_id. This is how each record is linked to the serviced Asset. Map the other columns in the ServiceNow Tests and Calibrations table to the Unique IDs of the questions in the Repeatable Section. Go to the Update Query",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "tab. Set the Update Handling to Never update, always create new. Result: The Data Destination creates a new record for each entry in the Repeatable Section. Select Create to save your Data Destination. Add the Data Destinations to the form Go to Forms & Integrations > List Forms > FormName > Edit Form or Continue Editing. On the Destinations tab, select Add a Data Destination. Add the ServiceNow Table Data Destinations you created: Update Medical Asset and Medical Asset Tests. Save and Deploy the form. Result: When the field technician submits the form, the system executes both Data Destinations and sends data to ServiceNow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Detailed steps"
    }
  },
  {
    "content": "Related topics\n\nSet up a ServiceNow Connection Set up a ServiceNow Table Data Destination Set up a ServiceNow Table Data Source Overview: Repeatable Sections",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/SNRepeatableDestinationRecipe.htm",
      "title": "ServiceNow Repeatable Destination: Create Multiple Test Records Linked to an Asset",
      "section": "Related topics"
    }
  },
  {
    "content": "Workflow example\n\nIn the ServiceNow Agent mobile app, you can set up a Smart Button that makes an App‑to‑App request to the TrueContext Mobile App. This enables you to follow your standard dispatch and scheduling processes in ServiceNow while using TrueContext for rich data collection. If you follow this recipe, this is what you can do with your own workflow. You assign a work order task to a ServiceNow Agent app user. The user opens the work order task in the app as shown in the following example. The user selects the Launch Maintenance Form Smart Button from the work order task top menu. Result: The ServiceNow Agent app makes an App‑to‑App request to the TrueContext Mobile App. The TrueContext Mobile App opens and performs the requested action. In this example, it opens a form and prefills it using data from the work order task. The user completes and sends the form. Then, the App‑to‑App call sends the user back to the ServiceNow Agent mobile app. Result: TrueContext sends the data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Workflow example"
    }
  },
  {
    "content": "to ServiceNow using a Data Destination. The following example shows the updated work order record in ServiceNow. Note:The ServiceNow Agent mobile app does not support custom callback parameters. The only way to send data back to ServiceNow from TrueContext is with a Data Destination. Users must be online to upload the submitted form. When the submitted form reaches the TrueContext cloud server, the Data Destination executes and sends the data and documents to ServiceNow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Workflow example"
    }
  },
  {
    "content": "High-level process\n\nThe following table describes what you need to set up in TrueContext and ServiceNow to complete this recipe. System Action Result ServiceNow Make the TrueContext Mobile App available for Deep Linking. This gives ServiceNow authorization to open the TrueContext Mobile App using a deep link (App‑to‑App call). Create a Smart Button URL Function that includes a TrueContext Mobile App App‑to‑App call. The Smart Button makes an App‑to‑App call to open and send data to the TrueContext Mobile App. Add the Smart Button as a top Menu function. Field users can access the Smart Button from the top menu of their Work Order Tasks. TrueContext Add ServiceNow Agent mobile app to your App‑to‑App allow list. This gives the TrueContext Mobile App authorization to send callbacks to the ServiceNow Agent mobile app. (Optional) Create a Data Source. You can use data from your ServiceNow tables to prefill answers in the form. Set up the form question Unique Identifiers to match the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "High-level process"
    }
  },
  {
    "content": "parameters in the App‑to‑App call. The App‑to‑App call prefills the right questions in your form using data from the work order task. Create a Data Destination. The Data Destination updates related records in ServiceNow using data from the submitted form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "High-level process"
    }
  },
  {
    "content": "ServiceNow prerequisites\n\nYour ServiceNow Instance must be on the Rome release or later. Your ServiceNow instance must have the Field Service Mobile plugin active. Your users must have the ServiceNow Agent mobile app installed on their iOS or Android device. You must have admin permissions to: Configure external apps for deep linking. Configure a smart button. You must have wm_qualifier permissions to create and assign work order tasks to test the recipe.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "ServiceNow prerequisites"
    }
  },
  {
    "content": "TrueContext prerequisites\n\nYou must be a TrueContext Admin user. Your team must be on the Advanced or Enterprise tier. App‑to‑App communication requires that field users install and sign in to the TrueContext Mobile App. Note:App‑to‑App requests sent to logged-out users fail without triggering an x-error callback. You must set up a ServiceNow Connection to use ServiceNow Table Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "TrueContext prerequisites"
    }
  },
  {
    "content": "Make the TrueContext Mobile App available for deep linking in ServiceNow\n\nIn your ServiceNow instance, navigate to sys_properties.list. Open the glide.sg.allowed_external_deeplinks record in edit mode. In the Value field, enter truecontext or prontoforms. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Select Update to save your changes. Info:The topic Configure which external apps are available for deep linking in the ServiceNow documentation includes more details about Deep Linking in ServiceNow.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Make the TrueContext Mobile App available for deep linking in ServiceNow"
    }
  },
  {
    "content": "Create a Smart Button function in ServiceNow\n\nIn your ServiceNow instance, navigate to All > System Applications > Studio. Select the Field Service Mobile application. Go to Mobile Studio > Functions > Smart Buttons. Select the pop out icon to open a list of Smart Buttons as shown in the following example. Result: The Smart Buttons list opens. Select Create new. Result: A new Smart Button opens in edit mode. Configure the Smart Button as follows: Name—enter TrueContext_Preventive_Maintenance. Type—select URL. Context—select Record. Use source value from field—clear this option. Table—select Work Order Task [wm_task]. URL Link—enter the following deep link (App‑to‑App call) formatted according to TrueContext",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Create a Smart Button function in ServiceNow"
    }
  },
  {
    "content": "requirements:truecontext://x-callback-url/open?name=Elevator%20Preventive%20Maintenance&WorkOrderTaskID={{sys_id}}&WorkOrderTaskNumber={{number}}&ShortDescription={{short_description}}&Description={{description}}&AssetName={{asset}}&x-success=snagent://&x-error=snagent://&x-cancel=snagent:// where: truecontext://x-callback-url/open?name=Elevator%20Preventive%20Maintenance Opens the TrueContext Mobile App and opens a form or a list of forms that have the words “Elevator Preventive Maintenance” in the form name. &WorkOrderTaskID={{sys_id}}& WorkOrderTaskNumber={{number}}& ShortDescription={{short_description}}& Description={{description}}& AssetName={{asset}} Are parameters that define the TrueContext questions to prepopulate using values from the work order task record. WorkOrderTaskID, WorkOrderTaskNumber, ShortDescription, Description, and AssetName are the unique IDs of the questions in the form that you want to prefill. &x-success=snagent://&x-error=snagent://&x-cancel=snagent://",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Create a Smart Button function in ServiceNow"
    }
  },
  {
    "content": "Brings the user back to the Agent mobile app when the App‑to‑App call results in an error, or when a user: Saves or submits a form. Transfers a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form. Closes and discards the form. URL Label—enter Launch Elevator Preventive Maintenance Form. Available Offline—enable this setting so that field users can use the Smart Button even if they’re offline. Select Save. Info:The topics Smart button functions and Configure a smart button in the ServiceNow documentation include more detailed information.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Create a Smart Button function in ServiceNow"
    }
  },
  {
    "content": "Add the Smart Button as a top menu function in ServiceNow\n\nIn your ServiceNow instance, navigate to All > System Applications > Studio. Select the Field Service Mobile application. Go to Mobile Studio > Applets > Work Order Tasks. Result: The Work Order Tasks Applet opens. Go to Form Screen > Functions, and then select the add button as shown in the following example. Result: A new Top menu function opens in edit mode. Configure the Top menu function as follows: Label—Enter Launch Maintenance Form. The ServiceNow Agent app displays this label. Function—Select the Smart Button function you created, TrueContext_Preventive_Maintenance. Select Save. Result: You added a top menu function that field users can access from Work Order Tasks in the ServiceNow Agent app. Info:The topic Associate a function with a location in the app in the ServiceNow documentation includes more details about how to add a top menu function.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Add the Smart Button as a top menu function in ServiceNow"
    }
  },
  {
    "content": "Add ServiceNow to your TrueContext App‑to‑App allow list\n\nThe App‑to‑App call you entered in the Smart Button includes x-callback parameters. To use x-callback parameters As part of an App‑to‑App call to the TrueContext app, x-callback parameters provide a way to launch and send data to the calling app. These include x-success, x-cancel, and x-error parameters., TrueContext requires that you add the ServiceNow Agent app to your App‑to‑App allow list. The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all callbacks allowed. For teams created after February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom App‑to‑App allow list. To add the ServiceNow Agent app to your App‑to‑App allow list: Go to USERNAME > TEAM SETTINGS > Security > App-to-App Allow List > Update. Add snagent:// to the list of allowed URLs. Select Update to save",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Add ServiceNow to your TrueContext App‑to‑App allow list"
    }
  },
  {
    "content": "your changes.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Add ServiceNow to your TrueContext App‑to‑App allow list"
    }
  },
  {
    "content": "Create a Data Source\n\nFrom the Smart Button, you can only prefill your form using data from the work order task record. If you want to get data from other ServiceNow tables, use a ServiceNow Table Data Source (Forms & Integrations > Data Sources > CREATE DATA SOURCE > ServiceNow Table). In this example, when the user selects an Equipment Model, the form automatically populates additional details about the equipment. Info:The topic Set up a ServiceNow Table Data Source describes how to configure a Data Source in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Create a Data Source"
    }
  },
  {
    "content": "Set up your form questions\n\nFor questions that the ServiceNow Smart Button function App‑to‑App call sends data to, configure the corresponding unique identifiers. You can do this in a new or an existing form. Create a new form or edit an existing form: Go to Forms & Integrations > List Forms > Create Form or Forms & Integrations > List Forms > FormName > Edit Form or Continue Editing. For this example, set up questions that have the following Unique IDs: WorkOrderTaskID WorkOrderTaskNumber ShortDescription Description AssetName SAVE AND DEPLOY your form when you’re ready to make it available to your users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Set up your form questions"
    }
  },
  {
    "content": "Create a Data Destination\n\nServiceNow Table Data Destinations enable you to update your ServiceNow records using the data from submitted forms. When online field users submit the form, the Data Destination automatically updates the work order task record to include data from the submitted form. Note:The ServiceNow Agent mobile app does not support custom callback parameters. The only way to send data back to ServiceNow from TrueContext is with a Data Destination. Users must be online to upload the submitted form. When the submitted form reaches the TrueContext cloud server, the Data Destination executes and sends the data and documents to ServiceNow. Create a ServiceNow Table Data Destination (Forms & Integrations > Data Destinations > CREATE DATA DESTINATION > ServiceNow Table). On the ServiceNow Table Fields tab: Enter wm_task as the Name of the Table. Map the ServiceNow fields you want to update as shown in the following example: ServiceNow Column Name—enter the names of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Create a Data Destination"
    }
  },
  {
    "content": "ServiceNow columns to update. Value Expression—enter a DREL expression to reference submitted form data or metadata. Set up an Update Query that finds and updates the work order task record that has a matching number. The work order task number is a unique identifier for each work order task record. In this example, the App‑to‑App call prefills the question that has the unique ID WorkOrderTaskNumber with the ServiceNow work order task number. Use this question to find the matching work order task record as shown in the following example. Select Create to save your Data Destination. Add the Data Destination to your form. Go to Forms & Integrations > List Forms > FormName > Edit Form or Continue Editing. On the Destinations tab, select Add a Data Destination. Select the ServiceNow destination that you set up in steps 1-4. In the Documents to attach section, select a default document. For this recipe, select PDF (V2). Save and Deploy the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Create a Data Destination"
    }
  },
  {
    "content": "Related topics\n\nGet Started with App‑to‑App Communication Set up a ServiceNow Table Data Source Set up a ServiceNow Table Data Destination Introduction to DREL",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceNow/LaunchPFFromSNApp.htm",
      "title": "Use the ServiceNow Agent Mobile App to Open and Send Data to the TrueContext Mobile App",
      "section": "Related topics"
    }
  },
  {
    "content": "Seamless integration with Salesforce\n\nTrueContext integrates with any solution and app built on the Salesforce platform, such as Sales Cloud, Service Cloud, Salesforce Field Service, and partner apps like ServiceMax Core and ServiceMax Asset 360. Mobile deep linking enables a seamless experience with the Salesforce Field Service and Salesforce mobile apps.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Seamless integration with Salesforce"
    }
  },
  {
    "content": "Efficient data handling and visibility\n\nUsers can bring list data into TrueContext and create or update records in any standard or custom Salesforce object. A single TrueContext submission can update multiple objects in Salesforce, including related objects with a parent-child relationship. Automatically generate and attach submission data in PDF, Word and other formats to Salesforce records to enhance visibility and reach of all captured data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Efficient data handling and visibility"
    }
  },
  {
    "content": "Leverage Salesforce reporting and analytics tools\n\nSince TrueContext submission data maps to Salesforce objects and fields, users can gain further insights from standard Salesforce dashboards and reporting, as well as other business intelligence and analytics solutions from Salesforce and Salesforce partners. Salesforce Integration Cookbook Get “recipes” for frequently used Salesforce Integration procedures. Post a Chatter Feed Item using the Salesforce Apex REST Data Destination Use a Repeatable Destination to Update Existing Child Records in Salesforce Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App Post a Slack Notification using the HTTP Data Destination Key Concepts TrueContext can pull data from Salesforce records of any Object type into your forms. TrueContext can also create or update Salesforce records with data from submitted forms. The following integration points in TrueContext enable this type of communication: Salesforce",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Leverage Salesforce reporting and analytics tools"
    }
  },
  {
    "content": "Connection—to establish a secure, OAuth connection between Salesforce and TrueContext Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.— to use Salesforce reports or Salesforce Object Query Language (SOQL) to pull data into TrueContext Salesforce Data Destination—to push data from TrueContext to Salesforce Objects Tip: TrueContext supports both Salesforce sandbox and production environments. What is a Salesforce Integration? How a Salesforce Integration Works Examples of Salesforce Data Destinations Examples of Salesforce Data Sources Configuration You can configure Salesforce Data Destinations to send form data to specific fields in Salesforce, such as account information, contacts, or records. A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Leverage Salesforce reporting and analytics tools"
    }
  },
  {
    "content": "Salesforce Apex REST Data Destination can send data to complete custom actions in Salesforce, such as to update a Chatter feed. A Salesforce Report Data Source can retrieve data from specific Salesforce fields, such as account information, report status, and case number. A Salesforce Query Data Source uses SOQL to retrieve data from Salesforce Objects to populate forms. Regardless of the Salesforce Data Source or Data Destinations you choose, you must first have a Salesforce Connection that enables you to send and receive data. Steps to Set Up a Salesforce Connection Set Up a Salesforce Report or Query Data Source Set Up a Salesforce Apex REST Data Destination Set Up a Salesforce Data Destination Troubleshooting Error messages help you identify where there is missing information in a submission or configuration. When TrueContext and Salesforce communicate, you may receive an error message. Resolve the issues and resend the data to ensure that your Salesforce records update properly.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Leverage Salesforce reporting and analytics tools"
    }
  },
  {
    "content": "Troubleshoot a Salesforce Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Leverage Salesforce reporting and analytics tools"
    }
  },
  {
    "content": "Salesforce Integration Cookbook\n\nGet “recipes” for frequently used Salesforce Integration procedures. Post a Chatter Feed Item using the Salesforce Apex REST Data Destination Use a Repeatable Destination to Update Existing Child Records in Salesforce Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App Post a Slack Notification using the HTTP Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Salesforce Integration Cookbook"
    }
  },
  {
    "content": "Key Concepts\n\nTrueContext can pull data from Salesforce records of any Object type into your forms. TrueContext can also create or update Salesforce records with data from submitted forms. The following integration points in TrueContext enable this type of communication: Salesforce Connection—to establish a secure, OAuth connection between Salesforce and TrueContext Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.— to use Salesforce reports or Salesforce Object Query Language (SOQL) to pull data into TrueContext Salesforce Data Destination—to push data from TrueContext to Salesforce Objects Tip: TrueContext supports both Salesforce sandbox and production environments. What is a Salesforce Integration?",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Key Concepts"
    }
  },
  {
    "content": "How a Salesforce Integration Works Examples of Salesforce Data Destinations Examples of Salesforce Data Sources",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nYou can configure Salesforce Data Destinations to send form data to specific fields in Salesforce, such as account information, contacts, or records. A Salesforce Apex REST Data Destination can send data to complete custom actions in Salesforce, such as to update a Chatter feed. A Salesforce Report Data Source can retrieve data from specific Salesforce fields, such as account information, report status, and case number. A Salesforce Query Data Source uses SOQL to retrieve data from Salesforce Objects to populate forms. Regardless of the Salesforce Data Source or Data Destinations you choose, you must first have a Salesforce Connection that enables you to send and receive data. Steps to Set Up a Salesforce Connection Set Up a Salesforce Report or Query Data Source Set Up a Salesforce Apex REST Data Destination Set Up a Salesforce Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Configuration"
    }
  },
  {
    "content": "Troubleshooting\n\nError messages help you identify where there is missing information in a submission or configuration. When TrueContext and Salesforce communicate, you may receive an error message. Resolve the issues and resend the data to ensure that your Salesforce records update properly. Troubleshoot a Salesforce Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceLandingPageH1.htm",
      "title": "Salesforce Integration Overview",
      "section": "Troubleshooting"
    }
  },
  {
    "content": "Introduction to Salesforce Integrations\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Salesforce Integration is the secure communication and data sharing between the Salesforce and TrueContext systems. The topics in this section describe the TrueContext integration points and how connected Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. pull data from and push data to Salesforce.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/IntroToSalesforceLandingPageH2.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Introduction to Salesforce Integrations"
    }
  },
  {
    "content": "Benefits of a Salesforce integration\n\nOrganizations often use their CRM in conjunction with a field service management system, such as Salesforce Field Service or ServiceMax, to dispatch work to front-line workers. The work orders typically provide essential data about scheduling, work location, customer contacts, and details of the service to be delivered. A Salesforce integration with TrueContext enables you to share data between the two systems and enhance the functionality of your field service management system.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/1WhatisSalesforceIntegration.htm",
      "title": "What is a Salesforce Integration?",
      "section": "Benefits of a Salesforce integration"
    }
  },
  {
    "content": "TrueContext integration points\n\nTrueContext can pull data from Salesforce records of any Object type into your forms. TrueContext can also create or update Salesforce records with data from submitted forms. The following integration points in TrueContext enable this type of communication: Salesforce Connection—to establish a secure, OAuth connection between Salesforce and TrueContext Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.— to use Salesforce reports or Salesforce Object Query Language (SOQL) to pull data into TrueContext Salesforce Data Destination—to push data from TrueContext to Salesforce Objects Tip: TrueContext supports both Salesforce sandbox and production environments.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/1WhatisSalesforceIntegration.htm",
      "title": "What is a Salesforce Integration?",
      "section": "TrueContext integration points"
    }
  },
  {
    "content": "Supported Salesforce orgs, apps, and extensions\n\nTrueContext supports the following: Any API-enabled Salesforce orgs and industry-specific cloud applications Applications like Chatter Extended solutions like ServiceMax Core, ServiceMax Asset 360, and other AppExchange partners",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/1WhatisSalesforceIntegration.htm",
      "title": "What is a Salesforce Integration?",
      "section": "Supported Salesforce orgs, apps, and extensions"
    }
  },
  {
    "content": "Related topics\n\nHow a Salesforce Integration Works What is a Salesforce Data Source? What is a Salesforce Data Destination?",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/1WhatisSalesforceIntegration.htm",
      "title": "What is a Salesforce Integration?",
      "section": "Related topics"
    }
  },
  {
    "content": "Pull data from Salesforce\n\nIf you want to automatically populate a form with data from Salesforce, set up a Salesforce Data Source in TrueContext. For example, you might have a list of customer names, customer contacts, and customer equipment specifications stored in your Salesforce account. You can use this data in TrueContext to populate the answer choices for a Dropdown, Multiselect, or Radio Button question, and prefill the answers to certain questions based on the previous responses. The following illustration shows an example of how a TrueContext Data Source pulls Account Names from Salesforce into a form. Info:The following topics explain how to set up a Salesforce Data Source:Decide on the Type of Salesforce Data SourceSet Up a Salesforce Report or Query Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/2BasicSalesforceExamples.htm",
      "title": "How a Salesforce Integration Works",
      "section": "Pull data from Salesforce"
    }
  },
  {
    "content": "Push data to Salesforce\n\nIf you want the submitted form data to update existing records or create new records in Salesforce, set up a Salesforce Data Destination in TrueContext. For example, your front-line workers enter customer data such as city, email address, and mobile number in TrueContext. You can use this data to update or create records in Salesforce to keep customer information up-to-date. The following illustration shows an example of how TrueContext pushes data to Salesforce. Info:The following topics explain how to set up a Salesforce Data Destination:Decide on the Type of Salesforce Data DestinationSet Up a Salesforce Data DestinationSet Up a Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/2BasicSalesforceExamples.htm",
      "title": "How a Salesforce Integration Works",
      "section": "Push data to Salesforce"
    }
  },
  {
    "content": "Related topics\n\nWhat is a Salesforce Integration? What is a Salesforce Data Source? What is a Salesforce Data Destination?",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/2BasicSalesforceExamples.htm",
      "title": "How a Salesforce Integration Works",
      "section": "Related topics"
    }
  },
  {
    "content": "Establish a Salesforce Connection\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise You must set up a Salesforce Connection before TrueContext can share data with your team’s Salesforce org. The topics in this section describe the necessary prerequisites and configuration to connect to the Salesforce system. These topics also describe how a Salesforce Connection determines the Salesforce environment that receives and sends data through data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and destinations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/EstablishASalesforceConnectionLandingPageH2.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Establish a Salesforce Connection"
    }
  },
  {
    "content": "TrueContext prerequisites\n\nYour TrueContext account must be on the Enterprise or Advanced tier. You must be a TrueContext Admin user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/4PrerequisitesSalesforceConnection.htm",
      "title": "Prerequisites for a Salesforce Connection",
      "section": "TrueContext prerequisites"
    }
  },
  {
    "content": "Salesforce prerequisites\n\nYou must have API Access enabled in Salesforce. TrueContext calls the Salesforce API whenever you send or retrieve data through a Salesforce Connection. Calls from TrueContext to Salesforce count towards your Salesforce API request limits. The execution of a single Data Destination or Data Source can count towards several calls to the API. A call may: Check for data updates in a Data Source at the frequency of its fetch schedule. Fetch data from a Data Source. Look up Fields in a Salesforce Object to identify where TrueContext sends data when a user submits a form. Look up existing Records in Salesforce when you configure a Data Destination to make updates to existing Records. Look up Salesforce Record references to establish parent-child relationships. Send documents and answers as separate attachments. A Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/4PrerequisitesSalesforceConnection.htm",
      "title": "Prerequisites for a Salesforce Connection",
      "section": "Salesforce prerequisites"
    }
  },
  {
    "content": "system. calls the API for every individual row in the Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries.. This means that if a Repeatable Section contains 20 rows, for example, then the Repeatable Destination makes 20 calls. Test your TrueContext setup to make sure that you have the right Salesforce licensing to support your intended TrueContext use. Tip: We update our platform annually following the Salesforce API Spring release. Currently, TrueContext works with Salesforce API version 63. Info:The following Salesforce topics describe how to check and enable API access:Salesforce editions with API accessSalesforce user permissions Your Salesforce user profile must have Read, Create and Edit permissions for the Objects you want to use. Info:The Salesforce topic Object permissions describes how to understand",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/4PrerequisitesSalesforceConnection.htm",
      "title": "Prerequisites for a Salesforce Connection",
      "section": "Salesforce prerequisites"
    }
  },
  {
    "content": "and modify your permissions. Keep the login information for the following Salesforce environments ready for use:Sandbox environment (test.salesforce.com)Production environment (login.salesforce.com)Tip:Your organization might have custom URLs for Salesforce Sandbox and Production environments. Get the custom URLs from your Salesforce Admin. Create a dedicated Integration User. When you configure the connection, log in to Salesforce as the Integration User (optional but recommended). Info:The following Salesforce topics describe how and why to create an Integration User:The Value of Having A Dedicated Salesforce Integration UserWhy You Need A Dedicated Salesforce Integration UserHow to Create a Dedicated Integration User in Salesforce",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/4PrerequisitesSalesforceConnection.htm",
      "title": "Prerequisites for a Salesforce Connection",
      "section": "Salesforce prerequisites"
    }
  },
  {
    "content": "Related topics\n\nSteps to Set Up a Salesforce Connection Set Up a Salesforce Report or Query Data Source Set Up a Salesforce Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/4PrerequisitesSalesforceConnection.htm",
      "title": "Prerequisites for a Salesforce Connection",
      "section": "Related topics"
    }
  },
  {
    "content": "Related topics\n\nPrerequisites for a Salesforce Connection Set Up a Salesforce Report or Query Data Source Set Up a Salesforce Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/5StepsSetUpSalesforceConnection.htm",
      "title": "Steps to Set Up a Salesforce Connection",
      "section": "Related topics"
    }
  },
  {
    "content": "Salesforce login issue\n\nYou might see the following error message: “Please check your username and password. If you still can't log in, contact your Salesforce administrator.” Make sure that you enter your Salesforce login credentials correctly. Did that solve the problem? If yes, continue to Steps to set up a Salesforce Connection. If no, check that you selected the correct environment, either Production or Sandbox. If you still see the error message, contact your Salesforce administrator for help.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/TroubleshootingTheSalesforceIntegration.htm",
      "title": "Troubleshoot a Salesforce Connection",
      "section": "Salesforce login issue"
    }
  },
  {
    "content": "Wrong user shown on connection\n\nIf you already logged in to Salesforce in the same browser session, when you click Connect, Salesforce automatically uses the credentials that you logged in with. To force the browser to ask you for the correct credentials: Select Create to create the connection even though the system shows the wrong user. This saves you having to start over. Open an incognito tab, or open a browser that you haven’t used to log in to Salesforce. Log in to the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. From the Forms & Integrations menu, navigate to Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection.. Select the Name of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/TroubleshootingTheSalesforceIntegration.htm",
      "title": "Troubleshoot a Salesforce Connection",
      "section": "Wrong user shown on connection"
    }
  },
  {
    "content": "connection you just created. From the menu next to the name of the connection, select Update. In the Connection section, select Clear to remove the current user. Select Connect, and then enter the Salesforce login credentials for your integration Salesforce user. If you need more help, here's how to contact TrueContext Support.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/TroubleshootingTheSalesforceIntegration.htm",
      "title": "Troubleshoot a Salesforce Connection",
      "section": "Wrong user shown on connection"
    }
  },
  {
    "content": "Related topics\n\nPrerequisites for a Salesforce Connection Steps to Set Up a Salesforce Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/TroubleshootingTheSalesforceIntegration.htm",
      "title": "Troubleshoot a Salesforce Connection",
      "section": "Related topics"
    }
  },
  {
    "content": "Set up a Salesforce Data Source\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise A Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. retrieves data from Salesforce to populate answer choices in a TrueContext form. The topics in this section describe how to choose and configure the right Salesforce Data Source for your integration. These topics also describe how Salesforce Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SetUpASalesforceDataSourceLandingPageH2.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Set up a Salesforce Data Source"
    }
  },
  {
    "content": "most current data. create consistent responses in TrueContext forms that reflect the information in your team’s Salesforce records and Objects.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SetUpASalesforceDataSourceLandingPageH2.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Set up a Salesforce Data Source"
    }
  },
  {
    "content": "Benefits of a Salesforce Data Source\n\nAs with any Data Source, a Salesforce Data Source retrieves data from an external source. The Data Source pulls the record data of any Object type from your Salesforce org. You can use this data to populate the choices in a TrueContext Dropdown, Multiselect, or Radio Button question. Based on the user’s selection, you can also auto-populate subsequent questions with additional Salesforce data. You can pull this information into a form and keep the form updated when the data in Salesforce changes. You can configure a Data Source to “fetch” data on a specified schedule. This enables you to maintain and update your data using Salesforce as your system of record without the need to manually fetch the data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/6.0What%20is%20a%20Salesforce%20Data%20Source.htm",
      "title": "What is a Salesforce Data Source?",
      "section": "Benefits of a Salesforce Data Source"
    }
  },
  {
    "content": "Salesforce Report Data Source\n\nA Salesforce Report Data Source pulls data from a Salesforce report into a form. For example, a Salesforce Case report includes fields such as Case Owner, Account Name, Subject, Status, and Case Number. A Salesforce Report Data Source can populate a form with data from these report fields. Info:The topic Decide on the Type of Salesforce Data Source provides the required format for Salesforce reports.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/6.0What%20is%20a%20Salesforce%20Data%20Source.htm",
      "title": "What is a Salesforce Data Source?",
      "section": "Salesforce Report Data Source"
    }
  },
  {
    "content": "Salesforce Query Data Source\n\nA Salesforce Query Data Source uses the Salesforce Object Query Language (SOQL) to pull data from the Salesforce Standard, Custom, or Big Objects into a form. For example, the SOQL query SELECT Id, Name FROM Contact enables you to populate a form with IDs and names from the Contact Object.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/6.0What%20is%20a%20Salesforce%20Data%20Source.htm",
      "title": "What is a Salesforce Data Source?",
      "section": "Salesforce Query Data Source"
    }
  },
  {
    "content": "Related topics\n\nDecide on the Type of Salesforce Data Source Set Up a Salesforce Report or Query Data Source How a Salesforce Integration Works",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/6.0What%20is%20a%20Salesforce%20Data%20Source.htm",
      "title": "What is a Salesforce Data Source?",
      "section": "Related topics"
    }
  },
  {
    "content": "Example of a Salesforce Report Data Source\n\nYour company might use Salesforce to track cases, work orders, accounts, and contacts. Your technician is currently on site at a hospital working on an equipment maintenance case. The technician uses the TrueContext app to select from a list of required parts. A Salesforce Report Data Source retrieves the list of part names from your Salesforce Report and auto-populates the part ID and unit price based on the user’s selection. The submitted form provides the data that you need to generate an invoice to the customer and a backfill request to the inventory department. You can lock or hide the unit price and part ID questions so that the user can't change the values.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesSalesforceDataSources.htm",
      "title": "Examples of Salesforce Data Sources",
      "section": "Example of a Salesforce Report Data Source"
    }
  },
  {
    "content": "Example of a Salesforce Query Data Source\n\nYour front-line workers might have to complete complex site audit forms to determine the site readiness. You can provide your front-line workers with prepopulated form data pulled from your Salesforce org. You can configure multiple Salesforce Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. and link them to a single form. The following example shows the job details section of a site audit form. The answer choices for the Dropdown questions are prepopulated with Salesforce Data Sources. Notice that each Dropdown question requires data from a different Salesforce object. It is necessary to configure one Salesforce Query Data Source for each object (when the objects are not",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesSalesforceDataSources.htm",
      "title": "Examples of Salesforce Data Sources",
      "section": "Example of a Salesforce Query Data Source"
    }
  },
  {
    "content": "related to each other in a Salesforce org). In this example, there are three Salesforce Query Data Sources configured. All three use a Salesforce Object Query Language (SOQL) query. The first Data Source uses a query to pull case information from the Salesforce Case Object: The second Data Source uses a query to pull account information from the Salesforce Account Object: The third Data Source uses a query to pull contact information from the Salesforce Contact Object:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesSalesforceDataSources.htm",
      "title": "Examples of Salesforce Data Sources",
      "section": "Example of a Salesforce Query Data Source"
    }
  },
  {
    "content": "Related topics\n\nWhat is a Salesforce Data Source? Decide on the Type of Salesforce Data Source Set Up a Salesforce Report or Query Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesSalesforceDataSources.htm",
      "title": "Examples of Salesforce Data Sources",
      "section": "Related topics"
    }
  },
  {
    "content": "Related topics\n\nSet Up a Salesforce Report or Query Data Source What is a Salesforce Data Source? How a Salesforce Integration Works",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/6DecideTypeOfDataSource.htm",
      "title": "Decide on the Type of Salesforce Data Source",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Either a Salesforce Connection already exists in your TrueContext FormSpace, or you are a TrueContext Admin user and can create a Salesforce Connection. In TrueContext, when a Team Admin sets up a Connection, they enter the account credentials for the third-party system. Once they save the Connection, it becomes available to TrueContext and other users for Data Source and Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Prerequisites"
    }
  },
  {
    "content": "different formats. setup. This means that other TrueContext users on the team can fetch and access data available to the third-party user account. Note:We recommend that you create a dedicated Integration User account for your third-party system and use that account to set up TrueContext Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection.. Set up the Integration User with specific permissions and limited access to the third-party system data. This ensures that TrueContext Admin users and users with “Can Create” permissions can only access the data that they need. Make sure that the team has at least one Problem Contact Email Address. If the scheduled data fetch fails, the system sends an email with an error message and details to the Problem Contact Email Addresses. To",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Prerequisites"
    }
  },
  {
    "content": "configure a Salesforce Report Data Source, set up a Salesforce Report that has a tabular format no grouped data, and no more than 2000 rows. Note:Check that any filters on your Report return the records you need. If your filters don’t return any records, the Data Source fetch results in an error. To use a Salesforce Query Data Source, test your query in the Developer Console Query Editor before you use the query in TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Select the type of Data Source\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., go to Forms & Integrations > Data Sources. Select Create Data Source. From the Cloud Service Integration list, select Salesforce Report or Salesforce Query. If you want to… Then… Reference records from any reportable Salesforce Object using a report that has a tabular format does not have grouped data, and has up to 2000 rows. Set up a Salesforce Report Data Source. Note:The data fetched by a Salesforce Report Data Source is truncated after 2000 rows. Use Salesforce Object Query Language (SOQL) to reference Salesforce records from any Salesforce Standard, Custom, or Big Objects, and with any number of rows. Set up a Salesforce Query Data Source. Result: The system displays the page on which you configure the Data Source.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Select the type of Data Source"
    }
  },
  {
    "content": "Name the Data Source and provide a description\n\nThe following image shows how to configure the Name settings. Enter the Data Source Name. You might have multiple Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. in your TrueContext Web Portal. Follow best practices for easy identification: Identify the Salesforce org. Identify the Object. Identify the Fields you intend to reference. For example, you might name your Data Source:ServiceMax_Account_Province_City_Street Provide a Description (optional). Add a description that will help you identify the Data Source later, if you need to modify or delete it. Note:The system displays Cells Allowed and Rows Allowed. based on your TrueContext tier. These values represent",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Name the Data Source and provide a description"
    }
  },
  {
    "content": "TrueContext size limits that optimize performance. The actual number of cells or rows that the system fetches from your Salesforce org also depends on the limits imposed by Salesforce.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Name the Data Source and provide a description"
    }
  },
  {
    "content": "Configure the data retrieval frequency and format options\n\nThe following image shows how to configure the Data Retrieval and Format settings. Do you want to notify TrueContext Mobile App users after a data fetch? If yes, select the Push updates... option. This ensures that your users have the most current data. Note:The TrueContext Mobile App users must enable notifications on their devices to receive updates. If no, clear the Push updates... option. Do you want to fetch data automatically? If yes, select the Automatically fetch... option, and then set up the frequency and time zone. The system fetches the data at midnight in the selected timezone for all frequencies except hourly. Tip:Consider the fetch frequency and users’ experience when you decide whether to enable push notifications. For example, hourly notifications might distract users. If no, clear the Automatically fetch... option. Remember that you must fetch the data manually when you want to update it. Select Activate this",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Configure the data retrieval frequency and format options"
    }
  },
  {
    "content": "schedule… to start the automatic fetches. When you want to pause the Fetch Schedule and switch to a manual fetch, edit the Data Source and clear the check box. Once you’ve created the Data Source, you can manually fetch new data at any time:Forms & Integrations > Data Sources > Data Source Name > Fetch New Data. Keep the Trim whitespace… option selected to remove spaces, tabs, or other “whitespace” characters from all elements in the source data. This prevents formatting errors.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Configure the data retrieval frequency and format options"
    }
  },
  {
    "content": "Configure the Salesforce Connection options\n\nThe configuration options depend on whether you selected a Salesforce Report or Salesforce Query Data Source. The following image shows how to configure the Connection settings for a Salesforce Report Data Source. The next image shows how to configure the Connection settings for a Salesforce Query Data Source. In the Query box, enter a SOQL expression. For example, to retrieve IDs and Names from your Contact Object, enter the following expression:SELECT Id, Name FROM Contact Result: The query fetches the following data. ID Name 4321 John Smith 1234 Jane Doe 2341 John Doe Tip:Test your query in the Developer Console Query Editor before you use the query in TrueContext. Your Salesforce org’s data model is inaccessible to external integrations, and TrueContext cannot troubleshoot SOQL issues. Do you have a TrueContext Admin user role? If yes, you can either select an existing Salesforce Connection or create a new one. If no, you can only select",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Configure the Salesforce Connection options"
    }
  },
  {
    "content": "an existing Salesforce Connection that’s configured for your current FormSpace. If the system displays No available connections, contact your company’s TrueContext administrator for help. The configuration options depend on the type of Salesforce Data Source. If you want to configure a... Then... Salesforce Report Data Source Enter the Report ID. To find the Report ID, open your Salesforce Report. The URL in the browser's address bar includes the Report ID. https://na7.salesforce.com/01OE0010002k1NJ For example, the last part of this address, after the domain, is the Report ID. Note:Remember to check that any filters on your Report return the records you need. If your filters don’t return any records, the Data Source fetch results in an error. Salesforce Query Data Source In the Query box, enter a SOQL expression. For example, to retrieve IDs and Names from your Contact Object, enter the following expression:SELECT Id, Name FROM Contact Result: The query fetches the following data. ID",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Configure the Salesforce Connection options"
    }
  },
  {
    "content": "Name 4321 John Smith 1234 Jane Doe 2341 John Doe Tip:Test your query in the Developer Console Query Editor before you use the query in TrueContext. Your Salesforce org’s data model is inaccessible to external integrations, and TrueContext cannot troubleshoot SOQL issues. Select the type of Salesforce API based on the number of records. Do you have 10,000 or fewer data records in the Object? If yes, select Query. If no, select Bulk. Note: The Bulk API improves speed and efficiency but does not support all SOQL functions or field types. Refer to the Salesforce documentation for more details. TrueContext only supports the Salesforce Bulk API version 1.0. Do you want to fetch data as soon as you create the Data Source? If yes, select the Fill the Source Data immediately option. If no, clear this option to fetch data as scheduled. Select Create to save the Data Source. Result: The system creates your Salesforce Data Source in TrueContext. You can reference the Data Source in any form within",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Configure the Salesforce Connection options"
    }
  },
  {
    "content": "the same FormSpace. Note:When you link a Salesforce Report Data Source to a form, you reference specific Salesforce Fields in your report. Any changes that a Salesforce user makes to the original report format could cause problems when TrueContext loads the data.For example, you might have a Salesforce Report Data Source that includes case number and preferred technician Fields. If a Salesforce user removes the preferred technician Field from the Report in Salesforce, TrueContext can no longer populate the related question.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Configure the Salesforce Connection options"
    }
  },
  {
    "content": "Related topics\n\nDecide on the Type of Salesforce Data Source What is a Salesforce Data Source? How a Salesforce Integration Works",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/7StepsSetUpSalesforceReportOrQueryDataSource.htm",
      "title": "Set Up a Salesforce Report or Query Data Source",
      "section": "Related topics"
    }
  },
  {
    "content": "Set up a Salesforce Data Destination\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise A Salesforce Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. sends data from TrueContext to update fields in a Salesforce record. The topics in this section describe how to choose and configure the right Salesforce Data Destination for your integration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SetUpASalesforceDataDestinationLandingPageH2.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Set up a Salesforce Data Destination"
    }
  },
  {
    "content": "Related topics\n\nExamples of Salesforce Data Destinations Decide on the Type of Salesforce Data Destination Set Up a Salesforce Data Destination Set Up a Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/What%20is%20a%20Salesforce%20Data%20Destination.htm",
      "title": "What is a Salesforce Data Destination?",
      "section": "Related topics"
    }
  },
  {
    "content": "Create or update records in Salesforce\n\nYour mobile users out in the field can update customer and equipment information in a form and seamlessly push that data to Salesforce. Organizations often create custom Salesforce objects and fields to store detailed data collected in the field by TrueContext users: Tip:You can show the TrueContext custom object records in the context of related records for objects such as Account, Case, or Contact. A single Salesforce Standard, Custom, or Big Object Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. pushes the data from submitted forms to multiple fields within an object. The Salesforce Object Fields configuration maps specific form data to different Salesforce fields: The Update Query configuration identifies the correct record to update in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Create or update records in Salesforce"
    }
  },
  {
    "content": "Salesforce by matching reference numbers in both systems:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Create or update records in Salesforce"
    }
  },
  {
    "content": "Route submitted form data to different Salesforce environments or objects\n\nYou can set up multiple Data Destinations to route submitted form data to different Salesforce environments or objects. For example, you can use one Data Destination to send data from submitted Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. forms to a Sandbox environment, and another Data Destination to send submitted Active form An active form is a form that a form designer saved and deployed. Depending on your configuration settings, a mobile user can open an active form from their Forms box (user-initiated) or Inbox (dispatched). data to a Salesforce Big Object. Push data to Salesforce big objects You have ten years of archived field history data stored in a Salesforce big object for audit and compliance purposes. You can configure a Salesforce Standard, Custom, or Big Object Data Destination to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Route submitted form data to different Salesforce environments or objects"
    }
  },
  {
    "content": "push data from your forms to the big object and maintain your audit trail. Update a Salesforce path You might have a Salesforce path to visually represent the stages required for working through a process. A Salesforce Data Destination can update the path with data from submitted forms. The integration works in the following way: A Dropdown question mirrors the picklist that drives the path. A Data Destination configuration maps the Dropdown question responses to the Salesforce picklist. A TrueContext mobile user responds to the Dropdown question and submits the form. The Data Destination pushes the Dropdown question response to the Salesforce picklist. The Salesforce path shows progression. Note:The Update Query settings ensure that the system updates the path for the correct record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Route submitted form data to different Salesforce environments or objects"
    }
  },
  {
    "content": "Push data to Salesforce big objects\n\nYou have ten years of archived field history data stored in a Salesforce big object for audit and compliance purposes. You can configure a Salesforce Standard, Custom, or Big Object Data Destination to push data from your forms to the big object and maintain your audit trail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Push data to Salesforce big objects"
    }
  },
  {
    "content": "Update a Salesforce path\n\nYou might have a Salesforce path to visually represent the stages required for working through a process. A Salesforce Data Destination can update the path with data from submitted forms. The integration works in the following way: A Dropdown question mirrors the picklist that drives the path. A Data Destination configuration maps the Dropdown question responses to the Salesforce picklist. A TrueContext mobile user responds to the Dropdown question and submits the form. The Data Destination pushes the Dropdown question response to the Salesforce picklist. The Salesforce path shows progression. Note:The Update Query settings ensure that the system updates the path for the correct record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Update a Salesforce path"
    }
  },
  {
    "content": "Post notifications to Salesforce Chatter\n\nYour technician completes a field inspection and submits the form. A Data Destination can send the form data to update a Chatter Feed Item with details of the inspection. Info:The recipe Post a Chatter Feed Item using the Salesforce Apex REST Data Destination provides an example of the configuration in TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Post notifications to Salesforce Chatter"
    }
  },
  {
    "content": "Related topics\n\nWhat is a Salesforce Data Destination? Set Up a Salesforce Data Destination Set Up a Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/ExamplesOfSFDataDestination.htm",
      "title": "Examples of Salesforce Data Destinations",
      "section": "Related topics"
    }
  },
  {
    "content": "Types of Salesforce Data Destinations\n\nThere are six types of Salesforce Data Destinations in TrueContext, as described in the following table. Type of Salesforce Data Destination Description Salesforce Account Salesforce Case Salesforce Contact Salesforce Lead These four types use preconfigured, standard Field Labels to make it easier to configure the Data Destinations in TrueContext. You can also map data to Salesforce Custom Fields. Salesforce Standard, Custom, or Big Object This type doesn’t provide any preconfigured Field Labels. You must enter the API names of the Salesforce Object and Fields manually. Tip:The TrueContext Describe Salesforce Object functionality shows you a list of API names for the Salesforce Fields in your Object. Salesforce Apex REST A Salesforce Apex REST The Salesforce Apex REST is a type of Salesforce Data Destination that enables TrueContext to interact with Salesforce by means of an Apex REST API endpoint. If using an Apex REST API endpoint, developers",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/8DecideDataDestinationForStandardCustomOrBigObjects.htm",
      "title": "Decide on the Type of Salesforce Data Destination",
      "section": "Types of Salesforce Data Destinations"
    }
  },
  {
    "content": "can write APEX code to send custom messages that pull specific data from submitted forms. Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. enables the interaction between TrueContext and a Salesforce or Apex Rest API endpoint. With a Salesforce Apex REST Data Destination, you can fully utilize the data collected in TrueContext for custom actions in your Salesforce org.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/8DecideDataDestinationForStandardCustomOrBigObjects.htm",
      "title": "Decide on the Type of Salesforce Data Destination",
      "section": "Types of Salesforce Data Destinations"
    }
  },
  {
    "content": "Configuration options\n\nAll Salesforce Data Destinations—except the Salesforce Apex REST Data Destination—have the following configuration options: Destination Basics—to name the Destination, disable the Destination, automatically link the Destination to new forms, or configure the Destination as “Repeatable” to send form data from a Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. Filtering—to apply conditions that determine if TrueContext sends data to the Destination Info:When you configure a Data Destination as Repeatable, you can create custom Row Filter Rules for individual rows of a Repeatable Section. This enables you to control which rows the destination sends. The topic Create Filter Rules for Individual Rows in a Repeatable Destination explains Row Filters in more detail. Fields—to push specific",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/8DecideDataDestinationForStandardCustomOrBigObjects.htm",
      "title": "Decide on the Type of Salesforce Data Destination",
      "section": "Configuration options"
    }
  },
  {
    "content": "form data to specific fields in Salesforce Attachments—to send images, audio, or other files Update Query—to apply conditions for updating an existing record in Salesforce Response Configuration—to store response outputs from Salesforce—such as record IDs—for creating multiple records sequentially",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/8DecideDataDestinationForStandardCustomOrBigObjects.htm",
      "title": "Decide on the Type of Salesforce Data Destination",
      "section": "Configuration options"
    }
  },
  {
    "content": "Related topics\n\nSet Up a Salesforce Data Destination Set Up a Salesforce Apex REST Data Destination Examples of Salesforce Data Destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/8DecideDataDestinationForStandardCustomOrBigObjects.htm",
      "title": "Decide on the Type of Salesforce Data Destination",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Either a Salesforce Connection already exists in your TrueContext FormSpace, or you are a TrueContext Admin user and can create a Salesforce Connection. Make sure that the TrueContext team has at least one Problem Contact Email Address. If the system fails to update records in a Data Destination, the Problem Contact Email Addresses get the error message and details. Decide on the form data or metadata that you want to push to Salesforce fields. Note any question unique IDs and the DREL expressions needed to get that data from the submitted form. For example, if you want to push the answer from an “Email",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Address” question to a Salesforce Field, use the DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expression (%a[EmailAddress]), where EmailAddress is the question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.. If you want to configure a Salesforce Standard, Custom, or Big Object Data Destination, keep the API Name of the Salesforce Object ready for use. Info:The Salesforce topic Find API name describes how to find API names for Standard and Custom Objects in Salesforce Classic and Lightning experience. If you want to configure a Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "field-based, third-party system., note the Unique ID of the Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. that you want to link to the destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Select a Salesforce Data Destination\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., go to Forms & Integrations > Data Destinations. Select Create Data Destination. From the Cloud Service Integration list, select the type of Salesforce Data Destination that you want to use. Type of Salesforce Data Destination Description Salesforce Account Salesforce Case Salesforce Contact Salesforce Lead These four types use preconfigured, standard Field Labels to make it easier to configure the Data Destinations in TrueContext. You can also map data to Salesforce Custom Fields. Salesforce Standard, Custom, or Big Object This type doesn’t provide any preconfigured Field Labels. You must enter the API names of the Salesforce Object and Fields manually. Tip:The TrueContext Describe Salesforce Object functionality shows you a list of API names for the Salesforce Fields",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Select a Salesforce Data Destination"
    }
  },
  {
    "content": "in your Object. Salesforce Apex REST A Salesforce Apex REST Data Destination enables the interaction between TrueContext and a Salesforce or Apex Rest API endpoint. With a Salesforce Apex REST Data Destination, you can fully utilize the data collected in TrueContext for custom actions in your Salesforce org. Info:A Salesforce Apex REST Data Destination works differently than the others. The topic Set Up a Salesforce Apex REST Data Destination explains the differences and provides detailed configuration steps.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Select a Salesforce Data Destination"
    }
  },
  {
    "content": "Configure the Name and other Destination Basics\n\nOn the Destination Basics tab, you can configure the name and other preferences: Auto-link newly created forms and specific document types to this destination. Disable the destination (to configure the destination for future use). Select the number of times the destination fails before the system sends a problem notification. Select the type of destination, either Regular or Repeatable (to send data from Repeatable Sections). The following image shows how to configure the Destination Basics settings. Name your Data Destination. The name helps you to identify and differentiate this Data Destination from other Data Destinations in your FormSpace. Enter a Unique ID. The system automatically generates a Unique ID based on the name. You can change the system-generated Unique ID to any alphanumeric or special characters, but the ID must be unique within the FormSpace. Do you want to set up this destination, but temporarily prevent sending",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure the Name and other Destination Basics"
    }
  },
  {
    "content": "submitted form data to it? If yes, select the Disable this destination... option. This prevents the execution of the Data Destination, even if you link it to one or more forms. You can save the configuration and enable the destination later. If no, clear the Disable this destination… option to enable this destination for immediate use. The Auto-Link new forms… option automatically links new forms created or imported in the same FormSpace to the Data Destination. Do you want to auto-link forms? If yes, select this option. Result: The system prompts you to auto-link documents. Go to step 5. If no, clear this option, and then go to step 6. The Auto-Link documents… option applies to auto-linked forms. This option saves you the effort of specifying a list of documents for each new form. Do you want to automatically link documents to this Data Destination? If yes, select this option, and then select the documents to link. If no, clear this option. Note:You can’t attach documents to a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure the Name and other Destination Basics"
    }
  },
  {
    "content": "Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system.. This prevents duplication of the same document across multiple records. Do you want the Data Destination to loop through a Repeatable Section and create or update multiple records? If yes, for any Salesforce Destination other than Apex REST, select the Use as a Repeatable Destination... option. Result: The system prompts you to enter a Repeatable Section Unique ID. If no, select the Use a Regular Destination...option. For Error Handling, from the Wait to send failure notification… list, select your preferred frequency. If a Data Destination fails to execute, the system continues the attempts to execute it on a regular schedule. The system sends emails to the Problem Contact Email Addresses based on the configured frequency. Tip: Most failures correct themselves and require no intervention.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure the Name and other Destination Basics"
    }
  },
  {
    "content": "Configure filtering rules for Data Destination execution\n\nFiltering gives you greater control over which submitted forms are sent to your Data Destination. The Data Destination executes only when all conditions configured in the Filtering settings are met. Keep the default settings or configure additional filter rules. Filter rules enable you to apply more conditions that determine whether the submitted form data gets sent to this specific Data Destination. You can apply filter rules to each of several Data Destinations to direct submitted forms to different destinations. The following image shows how to configure the Filtering settings. Select at least one Form Version State. If you want the Data Destination to receive data from… Then select... previous form versions, not currently in use Archived For example, you sent data from form submissions to an Email Data Destination. You now prefer to store all data in Salesforce instead. You can select Archived to send data from previous",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "forms versions to Salesforce. Note:Make sure you link this Data Destination to the previous form versions: Forms & Integrations > FormName > Version History > Version > Form Outputs > Edit Form Outputs the latest form version, currently accessible to front-line workers Active For example, you change a form to reflect the new product specifications. You can select Active to send data from only the latest form version to Salesforce. forms used for testing Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. For example, you dispatch a draft form to a few app users with Can Test permissions. You can select Draft to send data from the draft form to a Salesforce Sandbox. In this example, your Salesforce Connection must be configured as a Sandbox connection. Select at least one Form Submission State. Complete—execute the Data Destination when front-line workers submit complete forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "Incomplete—execute the Data Destination when front-line workers submit incomplete TrueContext Teamwork-enabled forms (Enterprise tier only). Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Declined—execute the Data Destination when you dispatch a prepopulated form to a Mobile App user and the app user declines the form. In the Filter Rules section, you can apply conditions to execute the Data Destination based on form data and metadata. For example, you can create a rule to execute the destination only when a question has a response of “Pass”. Do you want to execute the Data Destination only if the submitted data matches all of the rules? If yes, select Match All. The destination executes if the submitted data matches",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "all of the rules. If no, select Match Any. The destination executes if the submitted form data matches at least one rule. Note:The Match Any/Match All option applies to the conditions defined in the Filter Rules section only. The Data Destination executes only when all conditions for Form Submission Filtering and Filter Rules are met. Input Expression—enter a DREL expression to specify the form data or metadata to match. Filter Expression—enter a regular expression to define the string that you want to match, for example, Pass. For a Repeatable Destination, you can also create conditions to filter out rows in a Repeatable Section. For example, you can create a rule to execute only rows that have a response of “Pass” to a question. Do you want to execute the Repeatable Section rows only if the submitted data matches all of the rules? If yes, select Match All. The destination executes a row if the submitted data matches all of the rules. If no, select Match Any. The destination executes",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "a row if the submitted form data matches at least one rule. Input Expression—enter a DREL expression to specify the form data or metadata to match. Filter Expression—enter a regular expression to define the string that you want to match, for example, Pass. Info:The topic Apply Filtering to Data Destinations describes in detail how to configure the Filtering settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "Map form data to Salesforce Fields\n\nFor all Salesforce Data Destinations except Apex REST, the Salesforce Objects Fields or standard fields settings map submitted form data to Salesforce fields. The TrueContext system pushes the data referenced by a DREL expression to the mapped Salesforce Fields. Whether the system updates existing records or creates new records depends on the Update Query settings you configure. What type of Salesforce Data Destination is this? Salesforce Standard, Custom, or Big Object Data Destination—On the Salesforce Object Fields tab, enter the API Name of the object, and then go to step 2. Salesforce Account, Case, Contact, or Lead—On the fields tab for the selected destination type, you can map submitted form data to standard Salesforce fields. Enter a DREL expression to reference the submitted form data that you want to push. For example: Enter %a[UniqueID] to reference the answer to a question. Enter %u[name] to reference the submitter's name. Enter %d to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Map form data to Salesforce Fields"
    }
  },
  {
    "content": "reference the submission date. Enter %t to reference the submission time. You can combine a DREL expression with static text. In the expression Form Submitted by %u[name], “Form Submitted by” is static text. For standard objects, TrueContext provides a set of standard fields that you can use to map data from submitted forms. TrueContext uses these standard fields to automatically link records based on Salesforce lookups. For example, in the Salesforce Case destination, we use Account Name to find the AccountId that links the Case record to the Account record. Note:If more than one Salesforce record matches the specified value, TrueContext links the new or updated record to the most recently created matching record. You can configure Custom Salesforce Fields for any standard or custom Salesforce Data Destination. To map data to custom fields, select Add to insert a row. Note:For Salesforce Account, Case, Contact, or Lead destinations, TrueContext uses standard fields to automatically",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Map form data to Salesforce Fields"
    }
  },
  {
    "content": "link records based on Salesforce lookups. To avoid a “Duplicate Key” error: Do not add custom field mappings for the following Salesforce fields:For the destination type...Do not map to...Salesforce Account DestinationOwnerIdParentIdSalesforce Case DestinationOwnerIdContactIdAccountIdSalesforce Contact DestinationOwnerIdAccountIdSalesforce Lead DestinationOwnerIdDo not map to the same Salesforce field more than once. For example, do not map to a standard field and then add a custom field mapping that points to the same Salesforce field. Result: You can enter the custom field data and a DREL expression. Enter the Salesforce Field or API Name you want to push data to. Use Describe Object to find Salesforce API names When you map TrueContext data to fields in a Salesforce Data Destination, you might need to enter the Salesforce API names. The Describe Salesforce Object option retrieves a list of Fields and their API names from your Salesforce org. Tip:Select Describe Salesforce Object for",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Map form data to Salesforce Fields"
    }
  },
  {
    "content": "help with API names. The Describe Salesforce Object option retrieves a list of Fields and their API names from your Salesforce org. Enter the DREL Value Expression of the submitted form data or metadata that you want to push to a Salesforce Field. Do you want to push data to a Salesforce Geolocation field? If no, go to the next section. If yes, the following information shows you how to set up the DREL expression. Push Data to a Salesforce Geolocation Field The Salesforce Geolocation custom field is a compound field made up of latitude and longitude. To use a Data Destination to populate a Salesforce Geolocation field, you must include a DREL expression for each sub-field. Reference the location where a user submitted a form: %g[coordinates.latitude] %g[coordinates.longitude] Reference a location that a user submitted as the answer to a Geo location question: %a[UniqueID][coordinates.latitude] %a[UniqueID][coordinates.longitude] The following example shows a Data Destination configured",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Map form data to Salesforce Fields"
    }
  },
  {
    "content": "to populate Geolocation fields based on the location where a user submitted a form. Make sure to use the correct Salesforce API name for the Geolocation sub-fields in your org. To find your org’s API names, select Describe Salesforce Object as shown in the following example. Info:To populate a Geolocation field with the location where a user submitted a form, you need to enable the Collect geo location setting on your form. The topic Set Up Form Properties describes how to configure the Geo location setting.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Map form data to Salesforce Fields"
    }
  },
  {
    "content": "Select or create a Salesforce Connection\n\nThe Connection Configuration options available to you in this section vary depending on your account role settings and existing Salesforce Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection.. Do you have a TrueContext Admin role? If yes, you can either select an existing Salesforce Connection or configure a new one. If no, you can only select an existing Salesforce Connection that’s configured for your current FormSpace. If the system displays No available connections, contact your company’s TrueContext administrator for help. The following image shows how to configure the Connection settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Select or create a Salesforce Connection"
    }
  },
  {
    "content": "Send attachments and files to Salesforce\n\nYou can choose to store attachments and files in a Files or Notes & Attachments related list. On the Attachments tab, choose the option that matches your current Salesforce version and configuration. Attachments can include images, audio, or other files, and TrueContext Documents. Whether the attachments create new records or update existing records depends on the Update Query configuration. The following image shows how to configure the Attachments settings. Specify where in Salesforce you want to upload attachments, files, and documents. Depending on the configuration and version of your Salesforce org, select either Files related list or Notes & Attachments related list. Do you need full-size images, audio, or other attachments and files from submitted forms? If yes, in the Attachments to send field, enter a unique ID for each relevant question, separated by commas. If no, leave the Attachments to send field empty. You can configure",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Send attachments and files to Salesforce"
    }
  },
  {
    "content": "Documents and link the Documents to the Data Destination. TrueContext Documents contain inline images and links to files such as audio recordings and other attachments. Configure an Update Query to manage the creation of Salesforce records How an Update Query works By default, Salesforce Data Destinations create a new record for each submitted form. For example, a Data Destination can create new account records in a Salesforce Account object. If the account record already exists, however, you can update it rather than create a duplicate. To update a Salesforce record, you must set up matching criteria so that the system can find the correct record in Salesforce. The term matching criteria refers to the mapping between Salesforce fields and the values from a submitted form. For example, you can use a Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Send attachments and files to Salesforce"
    }
  },
  {
    "content": "answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. to populate a read-only question in a form. In this example, the question has a unique identifier of CaseID. When the front-line worker submits the form, the system updates the Salesforce record that matches the CaseID value from the submitted form. Tip:You can use a TrueContext Data Destination to update a Salesforce path with data from a submitted form. When a TrueContext mobile user submits the form, the Salesforce path shows progression. Steps to configure an Update Query The following image shows how to configure the Update Query settings for a Salesforce Data Destination. For Match Handling, select an Update Handling option as described in the following table. If you select... Then TrueContext... Never update, always create new (default) Does not search for matching records and always creates new records. This option requires",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Send attachments and files to Salesforce"
    }
  },
  {
    "content": "fewer API calls, which improves overall performance. Update if exists, otherwise create new Searches for matching records: If a match is found, the system updates an existing record. If no match is found, the system creates a new record. Update if exists, do not create new Searches for matching records: If a match is found, the system updates an existing record. If no match is found, the system does not create a new record. Result: If you select one of the update options, the system displays the additional configuration options described in steps 2 and 3. Specify the behavior when the system finds multiple matches. Tip:When TrueContext searches for matching records in Salesforce, the results are sorted by creation date, with the newest records first. You can change the default sort order with an “order by” statement in a Custom SOQL Query. If you select... Then TrueContext... Update the first record found (default) Updates the newest matching record. Update the last record found",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Send attachments and files to Salesforce"
    }
  },
  {
    "content": "Updates the oldest matching record. Create a new record Preserves the existing matching records and creates a new one. Select the type of query that you want to build to find matching Salesforce records. Do you have a custom Salesforce UI? If yes, you might want to manually build a Custom SOQL query. You can also control the sort order with this type of query, as shown in the following example:Select FirstName, LastName, CompanyName from Contact where FirstName= '%a[FormFieldFirstName]' and CompanyName = '%a[FormFieldCompanyName]' and LastName = '%a[FormFieldLastName]' order by CreatedDate DESC Note: You must put single quotation marks around the DREL Value Expressions. Date/Time values in the form must match the format required by Salesforce: Date only: YYYY-MM-DD Date and Time: YYYY-MM-DD:mm:ss+hh:mm You can use a SOQL query when you need matching criteria on related objects, not just the object associated with the Data Destination. If no, you can use the default Query Builder to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Send attachments and files to Salesforce"
    }
  },
  {
    "content": "match Salesforce Field or API Names to DREL Value Expressions. Go to step 4. Select a Query Operator to define the matching behavior. And matches Salesforce records for all specified form data values. Or matches Salesforce records for at least one of the specified form data values.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Send attachments and files to Salesforce"
    }
  },
  {
    "content": "How an Update Query works\n\nBy default, Salesforce Data Destinations create a new record for each submitted form. For example, a Data Destination can create new account records in a Salesforce Account object. If the account record already exists, however, you can update it rather than create a duplicate. To update a Salesforce record, you must set up matching criteria so that the system can find the correct record in Salesforce. The term matching criteria refers to the mapping between Salesforce fields and the values from a submitted form. For example, you can use a Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. to populate a read-only question in a form. In this example, the question has a unique",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "How an Update Query works"
    }
  },
  {
    "content": "identifier of CaseID. When the front-line worker submits the form, the system updates the Salesforce record that matches the CaseID value from the submitted form. Tip:You can use a TrueContext Data Destination to update a Salesforce path with data from a submitted form. When a TrueContext mobile user submits the form, the Salesforce path shows progression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "How an Update Query works"
    }
  },
  {
    "content": "Steps to configure an Update Query\n\nThe following image shows how to configure the Update Query settings for a Salesforce Data Destination. For Match Handling, select an Update Handling option as described in the following table. If you select... Then TrueContext... Never update, always create new (default) Does not search for matching records and always creates new records. This option requires fewer API calls, which improves overall performance. Update if exists, otherwise create new Searches for matching records: If a match is found, the system updates an existing record. If no match is found, the system creates a new record. Update if exists, do not create new Searches for matching records: If a match is found, the system updates an existing record. If no match is found, the system does not create a new record. Result: If you select one of the update options, the system displays the additional configuration options described in steps 2 and 3. Specify the behavior when the system",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Steps to configure an Update Query"
    }
  },
  {
    "content": "finds multiple matches. Tip:When TrueContext searches for matching records in Salesforce, the results are sorted by creation date, with the newest records first. You can change the default sort order with an “order by” statement in a Custom SOQL Query. If you select... Then TrueContext... Update the first record found (default) Updates the newest matching record. Update the last record found Updates the oldest matching record. Create a new record Preserves the existing matching records and creates a new one. Select the type of query that you want to build to find matching Salesforce records. Do you have a custom Salesforce UI? If yes, you might want to manually build a Custom SOQL query. You can also control the sort order with this type of query, as shown in the following example:Select FirstName, LastName, CompanyName from Contact where FirstName= '%a[FormFieldFirstName]' and CompanyName = '%a[FormFieldCompanyName]' and LastName = '%a[FormFieldLastName]' order by CreatedDate DESC",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Steps to configure an Update Query"
    }
  },
  {
    "content": "Note: You must put single quotation marks around the DREL Value Expressions. Date/Time values in the form must match the format required by Salesforce: Date only: YYYY-MM-DD Date and Time: YYYY-MM-DD:mm:ss+hh:mm You can use a SOQL query when you need matching criteria on related objects, not just the object associated with the Data Destination. If no, you can use the default Query Builder to match Salesforce Field or API Names to DREL Value Expressions. Go to step 4. Select a Query Operator to define the matching behavior. And matches Salesforce records for all specified form data values. Or matches Salesforce records for at least one of the specified form data values.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Steps to configure an Update Query"
    }
  },
  {
    "content": "Store response outputs to create multiple records sequentially\n\nSalesforce Data Destinations typically return a record ID to TrueContext. These responses enable you to make sequential requests, typically to create parent-child records. Info: The topic Use Response Data Handling to Store Data Received from a Third-Party System explains how these work and provides example use cases.The topic Configure Response Data Handling for Salesforce Data Destinations describes how to set up a parent-child relationship.Keep in mind that TrueContext stores the ID of the last object created in Salesforce. If a Data Destination creates a record and attaches files to it, TrueContext stores the ID of the last file attached. If you need to create a record and attach files to it, we recommend that you create two separate Data Destinations.For more information about Salesforce API responses, refer to the Salesforce API documentation. On the Response Configuration tab, select either the Don’t store… or Store",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Store response outputs to create multiple records sequentially"
    }
  },
  {
    "content": "all… option as shown in the following example. Tip:If you want to make this destination a parent of a child destination, select the option to store response outputs. When you configure the child destination, you can use the %o DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. property to reference the stored output.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Store response outputs to create multiple records sequentially"
    }
  },
  {
    "content": "Create and save the new Data Destination\n\nOnce you configure all required settings, select Create. Result: The system creates your Salesforce Data Destination in TrueContext and displays the Data Destination details page. You can now link the Data Destination to forms in the same FormSpace. Tip: Test and troubleshoot a Salesforce Data Destination before you use the Data Destination in a live Salesforce environment.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Create and save the new Data Destination"
    }
  },
  {
    "content": "Related topics\n\nExamples of Salesforce Data Destinations Set Up a Salesforce Apex REST Data Destination What is a Salesforce Data Destination?",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/10ConfigureStandardCustomorBigObjectDataDestinations.htm",
      "title": "Set Up a Salesforce Data Destination",
      "section": "Related topics"
    }
  },
  {
    "content": "How a Salesforce Apex REST Data Destination works\n\nYou can configure a Salesforce Apex REST Data Destination to enable TrueContext to: Interact with the Salesforce REST API functions for standard objects. For example, a Salesforce Apex REST Data Destination can push form data to update Chatter feeds. Send a custom message to an Apex REST API endpoint. For example, your developers can write APEX code to parse the JSON request body that contains data from submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "How a Salesforce Apex REST Data Destination works"
    }
  },
  {
    "content": "Prerequisites\n\nYou must be either a TrueContext Admin user or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Either a Salesforce Connection already exists in your TrueContext FormSpace, or you are a TrueContext Admin user and can create a Salesforce Connection. Make sure that the TrueContext team has at least one Problem Contact Email Address. If the system fails to update records in a Data Destination, the Problem Contact Email Addresses get the error message and details. Obtain the required header parameters and the URL for the REST API endpoint that you want to call. Configure a Document with a Request Body formatted as per the Salesforce requirements, and then link the Document to one or more forms. Info:The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "following topics describe in detail how to configure each template-driven document type to build your own data structure:DREL DocumentsFreeMarker DocumentsHandlebars DocumentsSalesforce requires that you properly escape all the content in your Request Body for the specified document format.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Select the Salesforce Apex REST Data Destination\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., go to Forms & Integrations > Data Destinations. Select Create Data Destination. From the Cloud Service Integration list, select Salesforce Apex REST Data Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Select the Salesforce Apex REST Data Destination"
    }
  },
  {
    "content": "Configure the Name and other Destination Basics\n\nOn the Destination Basics tab, you can configure the name and other preferences: Auto-link newly created forms and specific document types to this destination. Disable the destination (to configure the destination for future use). Select the number of times the destination fails before the system sends a problem notification. The following image shows how to configure the Destination Basics settings. Name your Data Destination. The name helps you to identify and differentiate this Data Destination from other Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. in your FormSpace. Enter a Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure the Name and other Destination Basics"
    }
  },
  {
    "content": "points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.. The system automatically generates a Unique ID based on the name. You can change the system-generated Unique ID to any alphanumeric or special characters, but the ID must be unique within the FormSpace. Do you want to set up this destination, but temporarily prevent sending submitted form data to it? If yes, select the Disable this destination... option. This prevents the execution of the Data Destination, even if you link it to one or more forms. You can save the configuration and enable the destination later. If no, clear the Disable this destination… option to enable this destination for immediate use. The Auto-Link new forms… option automatically links new forms created or imported in the same FormSpace to the Data Destination. Do you want to auto-link forms? If yes, select this option. Result: The system prompts you to auto-link documents. Go to step 5. If no, clear this option,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure the Name and other Destination Basics"
    }
  },
  {
    "content": "and then go to step 6. The Auto-Link documents… option applies to auto-linked forms. This option saves you the effort of specifying a list of documents for each new form. Do you want to automatically link documents to this Data Destination? If yes, select this option, and then select the documents to link. If no, clear this option. For Error Handling, from the Wait to send failure notification… list, select your preferred frequency. If a Data Destination fails to execute, the system continues the attempts to execute it on a regular schedule. The system sends emails to the Problem Contact Email Addresses based on the configured frequency. Tip: Most failures correct themselves and require no intervention.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure the Name and other Destination Basics"
    }
  },
  {
    "content": "Configure filtering rules for Data Destination execution\n\nFiltering gives you greater control over which submitted forms are sent to your Data Destination. The Data Destination executes only when all conditions configured in the Filtering settings are met. Keep the default settings or configure additional filter rules. Filter rules enable you to apply more conditions that determine whether the submitted form data gets sent to this specific Data Destination. You can apply filter rules to each of several Data Destinations to direct submitted forms to different destinations. The following image shows how to configure the Filtering settings. Select at least one Form Version State. If you want the Data Destination to receive data from… Then select... previous form versions, not currently in use Archived For example, you sent data from form submissions to an Email Data Destination. You now prefer to store all data in Salesforce instead. You can select Archived to send data from previous",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "forms versions to Salesforce. Note:Make sure you link this Data Destination to the previous form versions: Forms & Integrations > FormName > Version History > Version > Form Outputs > Edit Form Outputs the latest form version, currently accessible to front-line workers Active For example, you change a form to reflect the new product specifications. You can select Active to send data from only the latest form version to Salesforce. forms used for testing Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder. For example, you dispatch a draft form to a few app users with Can Test permissions. You can select Draft to send data from the draft form to a Salesforce Sandbox. In this example, your Salesforce Connection must be configured as a Sandbox connection. Select at least one Form Submission State. Complete—execute the Data Destination when front-line workers submit complete forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "Incomplete—execute the Data Destination when front-line workers submit incomplete TrueContext Teamwork-enabled forms (Enterprise tier only). Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). Declined—execute the Data Destination when you dispatch a prepopulated form to a Mobile App user and the app user declines the form. In the Filter Rules section, you can apply conditions to execute the Data Destination based on form data and metadata. For example, you can create a rule to execute the destination only when a question has a response of “Pass”. Do you want to execute the Data Destination only if the submitted data matches all of the rules? If yes, select Match All. The destination executes if the submitted data matches",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "all of the rules. If no, select Match Any. The destination executes if the submitted form data matches at least one rule. Note:The Match Any/Match All option applies to the conditions defined in the Filter Rules section only. The Data Destination executes only when all conditions for Form Submission Filtering and Filter Rules are met. Input Expression—enter a DREL expression to specify the form data or metadata to match. Filter Expression—enter a regular expression to define the string that you want to match, for example, Pass. Info:The topic Apply Filtering to Data Destinations describes in detail how to configure the Filtering settings.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Configure filtering rules for Data Destination execution"
    }
  },
  {
    "content": "Select or create a Salesforce Connection\n\nThe following image shows how to configure the Connection settings. The Connection Configuration options available to you in this section vary depending on your account role settings and existing Salesforce Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection.. Do you have a TrueContext Admin role? If yes, you can either select an existing Salesforce Connection or configure a new one. If no, you can only select an existing Salesforce Connection that’s configured for your current FormSpace. If the system displays No available connections, contact your company’s TrueContext administrator for help. Select an HTTP Method. Post uses data from a submitted form to create a record in Salesforce. Put uses data from a submitted form to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Select or create a Salesforce Connection"
    }
  },
  {
    "content": "create or replace an existing record in Salesforce. Patch uses data from a submitted form to update part of an existing record in Salesforce. You can pass additional parameters to the endpoint by defining a set of key-value pairs in the Headers section. You can even use DREL expressions to populate the values with data from submitted forms. For example, you might store different forms in different locations within Salesforce, based on the form name. Enter a Key that identifies the location and the Value Expression %f to send the form name as the value. The following image shows examples of other key-value pairs, in this case, defined by static text rather than a DREL expression. A custom URL prefix enables you to target specific locations in the Data Destination. Does the endpoint use a custom URL prefix? If yes, from Apex REST Prefix list, select Custom and then enter the prefix. If no, keep the default value /services/apexrest. Enter the Apex REST Endpoint URL. You can use a DREL",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Select or create a Salesforce Connection"
    }
  },
  {
    "content": "expression to dynamically generate the URL. Info:If you use a DREL expression to generate the URL, remember to escape the data you reference. This ensures that the system URL encodes the output generated by the DREL expression.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Select or create a Salesforce Connection"
    }
  },
  {
    "content": "Store response outputs to create multiple records sequentially\n\nSalesforce Data Destinations typically return a record ID to TrueContext. These responses enable you to make sequential requests, typically to create parent-child records. Info: The topic Use Response Data Handling to Store Data Received from a Third-Party System explains how these work and provides example use cases.The topic Configure Response Data Handling for Salesforce Data Destinations describes how to set up a parent-child relationship.Keep in mind that TrueContext stores the ID of the last object created in Salesforce. If a Data Destination creates a record and attaches files to it, TrueContext stores the ID of the last file attached. If you need to create a record and attach files to it, we recommend that you create two separate Data Destinations.For more information about Salesforce API responses, refer to the Salesforce API documentation. On the Response Configuration tab, select either the Don’t store… or Store",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Store response outputs to create multiple records sequentially"
    }
  },
  {
    "content": "all… option as shown in the following example. Tip:If you want to make this destination a parent of a child destination, select the option to store response outputs. When you configure the child destination, you can use the %o DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. property to reference the stored output.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Store response outputs to create multiple records sequentially"
    }
  },
  {
    "content": "Create and save the new Data Destination\n\nOnce you configure all required settings, select Create. Result: The system creates your Salesforce Data Destination in TrueContext and displays the Data Destination details page. You can now link the Data Destination to forms in the same FormSpace. Tip: Test and troubleshoot a Salesforce Data Destination before you use the Data Destination in a live Salesforce environment.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Create and save the new Data Destination"
    }
  },
  {
    "content": "Related topics\n\nSet Up a Salesforce Data Destination Decide on the Type of Salesforce Data Destination Examples of Salesforce Data Destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/11SetUpSalesforceAPEXRestDestination.htm",
      "title": "Set Up a Salesforce Apex REST Data Destination",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext account must be on the Advanced or Enterprise tier. You must be either a TrueContext Admin user, or a member of a FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. group with Can Create permissions. Ensure that you meet the prerequisites to Set up a Salesforce Data Destination. You must have already set up a Salesforce Connection.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Supported Data Destinations\n\nYou can configure any of the following Salesforce Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. as repeatable: Salesforce Account Salesforce Case Salesforce Contact Salesforce Lead Salesforce Standard, Custom, or Big Object Info:The topic Set Up a Salesforce Data Destination describes all of the configuration options in detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "Supported Data Destinations"
    }
  },
  {
    "content": "Steps to set up a Salesforce Repeatable Destination\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., go to Forms & Integrations > Data Destinations. Select an existing Salesforce Data Destination or create a new one. Make sure you select a supported Data Destination. Configure the Destination Basics settings. In the Destination Type section, select the option to make the destination repeatable. Note:To prevent errors and other unexpected results, you can’t change this to a regular destination once it’s linked to a form. This rule applies to forms in any state (Active, Draft A draft form is a partially filled-out form saved on a device, or a preliminary version of a form that's been saved but not deployed in the Form Builder., or Archived). To link to a different Repeatable Section A Repeatable Section is a subform that contains a set of related",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "Steps to set up a Salesforce Repeatable Destination"
    }
  },
  {
    "content": "questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. or change the destination type to Regular, first remove the destination from all linked forms. Enter the unique identifier of the Repeatable Section that you want to link to this destination. Tip:Ensure that you enter the correct ID. Remember, if you change a section unique ID, the linked destination does not automatically update. Do you want the submitted data to link to a parent record in Salesforce? If no, go to step 6. If yes, set up the parent-child relationship on the field mapping tab of your Salesforce destination. You can do this in one of two ways, as described in the following table. Method Works when Example %a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. reference Records and relationships already exist in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "Steps to set up a Salesforce Repeatable Destination"
    }
  },
  {
    "content": "your Salesforce org. Use a Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. to pass the record IDs to questions in your form. Then, you can use the %a DREL reference to extract that data and map it to your Salesforce fields. %o DREL reference You run two or more destinations sequentially to create or update a parent record. When a destination creates or updates Salesforce records, Salesforce responds with the record IDs. In the parent destination, select the option to Store all response outputs… to store these Salesforce IDs. Note:The parent destination must be a Regular destination. In the child Repeatable Destination, use the %o DREL reference to map the output from the parent destination to your Salesforce",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "Steps to set up a Salesforce Repeatable Destination"
    }
  },
  {
    "content": "field: %o[DestinationID][key] where %o is the DREL expression to reference the stored output of the parent destination DestinationID is the unique ID of the parent destination in TrueContext key is the key returned as part of a key:value pair in the Salesforce API response body, typically id. Note:Remember, if you change the parent destination unique ID, the child destination does not automatically update. Complete the configuration, and then Save the destination. In the TrueContext Form Builder, add the relevant destinations to a form in the order you want them to execute. Parent destinations should be before (above) the child destinations. Note:You can’t attach documents to a Repeatable Destination. This prevents duplication of the same document across multiple records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "Steps to set up a Salesforce Repeatable Destination"
    }
  },
  {
    "content": "How to avoid configuration errors\n\nRepeatable Section IDs If you change a unique ID of a Repeatable Section, you must also change it in any Repeatable Destinations that reference it. Parent destination IDs If you change the unique ID of a parent destination, you must also change it in any child destinations that reference that parent. Changing between Regular and Repeatable Destinations You can’t change the type of destination if that destination is “in use”. This applies when a destination is linked to a form that’s Active, Draft, or Archived.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/ConfigureRepeatableDestinationProcedure.htm",
      "title": "Set Up a Salesforce Repeatable Destination",
      "section": "How to avoid configuration errors"
    }
  },
  {
    "content": "Salesforce Integration Cookbook\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The Salesforce Integration Cookbook provides useful “recipes” for frequently used Salesforce Integration procedures.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceIntegrationCookbookLandingPageH2.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Salesforce Integration Cookbook"
    }
  },
  {
    "content": "Configure a Salesforce Apex REST Data Destination to post a Chatter Feed Item\n\nPrerequisites Your TrueContext team must be on the Advanced or Enterprise tier. You must be an Admin user. You must have a Salesforce account with Chatter enabled. Chatter is enabled by default on Salesforce organizations created after June 22, 2010. You must have a Salesforce Connection configured. Info:The topic Salesforce Connection describes in detail how to configure a Salesforce Connection. Steps Go to Forms & Integrations > Data Destinations. Select CREATE DATA DESTINATION, and then select Salesforce Apex REST. Configure the Destination Basics, Filtering, and Response Configuration tabs as needed. Info:The topic Salesforce Apex Data Destination describes in detail how to configure a Salesforce Apex REST The Salesforce Apex REST is a type of Salesforce Data Destination that enables TrueContext to interact with Salesforce by means of an Apex REST API endpoint. If using an Apex REST API endpoint,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Salesforce Apex REST Data Destination to post a Chatter Feed Item"
    }
  },
  {
    "content": "developers can write APEX code to send custom messages that pull specific data from submitted forms. Data Destination. On the Connection tab: Select your Salesforce Connection. Select POST as the HTTP Method. Under Apex REST Prefix, select Custom, and enter the following as the prefix: /services/data/v51.0 Note:Make sure to adjust the API version to your current Salesforce API version. In the example, the API version is 51.0. Enter the following as the Apex REST Endpoint: /chatter/feed-elements The following example shows the configuration of the Connection tab. Tip:You can leave the custom prefix field blank, and enter the prefix and the endpoint in the Apex REST Endpoint section. Select Create. Result: You created a Salesforce Apex REST Data Destination that can post a Chatter Feed Item.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Salesforce Apex REST Data Destination to post a Chatter Feed Item"
    }
  },
  {
    "content": "Configure a Document with a Request Body to post a Chatter Feed Item\n\nPrerequisites Make note of the Salesforce Record ID, Group ID, or User ID that will parent the Feed Item. You must include one of the IDs in the Salesforce SubjectId parameter. You must have a Request Body formatted according to Salesforce requirements. Info:The Salesforce Developer Guide explains in detail how to format a Request body to Post a Chatter Feed item. Steps Go to Forms & Integrations > Documents. Select CREATE DOCUMENT. Select a document type from the Template-driven Text Documents. You can select DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms., FreeMarker, or Handlebars. Configure your document as needed. Info:The following topics describe in detail how to configure each document type:DREL DocumentsFreeMarker DocumentsHandlebars Documents Include the Request Body formatted according",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "to Salesforce requirements in the following sections: DREL documents—in the DREL Template section. FreeMarker documents—upload an FTL file in the FreeMarker Template section. Handlebars documents—in the Handlebars Template section. Info:We recommend that you escape the data for all JSON, XML, HTML, and CSV documents. This ensures that the system generates a valid document in your selected format. The following example shows a DREL Document with a Request Body formatted according to Salesforce requirements. Info:The following sections contain Request Body examples.DREL Request Body examplesHandlebars Request Body example Select Create. Result: You created a Document with a Request Body to post a Salesforce Chatter Feed Item. DREL Request Body examples The following Request Body posts a message to Chatter based on the answer to a question in a TrueContext form, where a question with the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. Message populates part of the text in the Chatter Feed Item, and a question with the Unique ID recordID populates the Salesforce subjectId parameter in the Request Body. This means that the subjectId might change for every submitted form. Note:All DREL expressions in the example include a property to escape the data. This means that if the answer has special characters or line breaks, the system still generates a valid JSON document. { \"body\": { \"messageSegments\": [ { \"type\": \"Text\", \"text\": \"%a[Message][#escapeJson] - Posted from TrueContext\" } ] }, \"feedElementType\": \"FeedItem\", \"subjectId\": \"%a[recordID][#escapeJson]\" } In this next example, a question with the Unique ID SiteID populates the Salesforce entityId parameter a question with the Unique ID WOLocation populates part of the text in the Chatter Feed Item a question with the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "Unique ID SFDCUserID populates a Salesforce User ID that displays as a Mention in the Chatter message, and the Salesforce subjectID parameter is hardcoded. This means that the subjectId is the same for every submitted form. Note:All DREL expressions in the example include a property to escape the data. This means that if the answer has special characters or line breaks, the system still generates a valid JSON document. { \"body\": { \"messageSegments\": [ { \"type\": \"Text\", \"text\": \"A site inspection was submitted for location \" }, { \"type\": \"EntityLink\", \"entityId\": \"%a[SiteID][#escapeJson]\" }, { \"type\": \"Text\", \"text\": \" at %a[WOLocation][#escapeJson] by \" }, { \"type\": \"Mention\", \"id\": \"%a[SFDCUserID][#escapeJson]\" } ] }, \"feedElementType\": \"FeedItem\", \"subjectId\": \"0F91I000000hndjSAA\" } In this final DREL example, a question with the Unique ID AccountID, and a question with the Unique ID SiteID populate the Salesforce entityId parameter a question with the Unique ID SFDCUserID populates",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "a Salesforce User ID that displays as a Mention in the Chatter message, and the Salesforce subjectID parameter is hardcoded. This means that the subjectId is the same for every submitted form. Note:All DREL expressions in the example include a property to escape the data. This means that if the answer has special characters or line breaks, the system still generates a valid JSON document. { \"body\": { \"messageSegments\": [ { \"type\": \"Text\", \"text\": \"A new opportunity was was created for account \" }, { \"type\": \"EntityLink\", \"entityId\": \"%a[AccountID][#escapeJson]\" }, { \"type\": \"Text\", \"text\": \" from an inspection at location \" }, { \"type\": \"EntityLink\", \"entityId\": \"%a[SiteID][#escapeJson]\" }, { \"type\": \"Text\", \"text\": \" by \" }, { \"type\": \"Mention\", \"id\": \"%a[SFDCUserID][#escapeJson]\" }, { \"type\": \"Hashtag\", \"tag\": \"NewSalesOpp\" } ] }, \"feedElementType\": \"FeedItem\", \"subjectId\": \"0F91I000000hndjSAA\" } Handlebars Request Body example In the following example, the expression",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "{{pf:outputFormat \"JSON\"}} sets the output format to JSON. When you add this expression, the system escapes the data referenced by Handlebars and generates valid JSON output. a question with the Unique ID GroupID populates the Salesforce subjectId parameter in the Request Body. This means that the subjectId might change for every submitted form. a question with the Unique ID RecordID populates the Salesforce entityId parameter a question with the Unique ID TechnicianId, and a question with the Unique ID SupervisorId populate a Salesforce User ID that displays as a Mention in the Chatter message, and the {{#pf:if}} element indicates a condition based on the answer to a question with the Unique ID FollowUpWorkOrder. {{pf:outputFormat \"JSON\"}} { \"feedElementType\": \"FeedItem\", \"subjectId\": \"{{answers.GroupID.[0]}}\", \"body\": { \"messageSegments\": [ { \"type\": \"Text\", \"text\": \"Work Order \" }, { \"type\": \"EntityLink\", \"entityId\": \"{{answers.RecordID.[0]}}\" }, { \"type\": \"Text\", \"text\": \"has been",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "completed by \" }, { \"type\": \"Mention\", \"id\": \"{{answers.TechnicianId.[0]}}\" }, {{#pf:if answers.FollowUpWorkOrder. [0] \"is\" \"Yes\"}} { \"type\": \"Mention\", \"id\": \"{{answers.SupervisorId.[0]}}\" }, { \"type\": \"Text\", \"text\": \" - A follow-up work order will be generated.\" }, {{/pf:if}} ] } }",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Configure a Document with a Request Body to post a Chatter Feed Item"
    }
  },
  {
    "content": "Link the Data Destination and Document to the form\n\nPrerequisites You must have a form configured. You must have a Salesforce Apex REST Data Destination configured to post a Chatter Feed Item. You must have a Document with a Request Body to post a Chatter Feed Item configured. Note:Make sure that the Unique IDs of your questions match the Unique IDs you specified in the Document. Steps From the Forms & Integrations menu, navigate to the form you want to set up. Select EDIT FORM. Result: The form opens in edit mode. Select DESTINATIONS, and then select ADD A DATA DESTINATION. Result: A list of your Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. opens. Select the Salesforce Apex REST Data Destination you configured to post a Chatter Feed Item. Result: The system adds the Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Link the Data Destination and Document to the form"
    }
  },
  {
    "content": "Destination to your form. A page to configure the Data Destination on the form opens. In the Documents section, select the document you configured to post a Chatter Feed Item from the dropdown. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Link the Data Destination and Document to the form"
    }
  },
  {
    "content": "Related topics\n\nSet Up a Salesforce Apex REST Data Destination DREL Documents Creating and Managing Data Destinations Steps to Set Up a Salesforce Connection",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/PostChatterWithSFApexREST.htm",
      "title": "Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext account must be on the Enterprise or Advanced tier. You must be a TrueContext Admin user. You must meet the requirements to set up a Salesforce Connection. You must know how to set up Salesforce objects and records with lookups to establish parent-child relationships.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Scenario\n\nIn the field, your service technicians perform equipment calibrations as part of their preventive maintenance tasks. Your back office maintains records of this work in a custom “Calibration List” object linked to a standard Case object. In this scenario, the Case and Calibration List records and their lookup relationships already exist in Salesforce. Info:In this recipe, you don’t need to set up the TrueContext Data Destinations as parent and child. You can use the TrueContext Repeatable Sections, Regular Destinations, and Repeatable Destinations to: Enable technicians to enter multiple line items for the calibration tests. Update the Calibration List records with data from the Repeatable Section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which creates multiple entries. using a Repeatable Data Destination A Data Destination specifies where to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "Scenario"
    }
  },
  {
    "content": "send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats.. Update Salesforce Case records with details of the service call, including the calibration tests.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "Scenario"
    }
  },
  {
    "content": "High-level process\n\nSystem Action Result Salesforce Create a custom “Calibration List” object. This object stores the line-item data from the Repeatable Section in the form. Link the Calibration List to the Case object. This makes the Calibration List details available from the Case view. TrueContext Set up two Salesforce Data Sources, one for the Case records and the other for the Calibration List records. These prepopulate the form with the IDs and other data from the existing Case and Calibration List records. Build a form that includes a question to capture the Case record ID. When the technician selects the case number from a Dropdown question, the associated Case ID gets pushed to another question in the form. Add a Repeatable Section to the form. The technician enters the calibration test details as line-item entries. Set up a Salesforce Case Data Destination. This is the initial Regular Destination that updates the Salesforce Case record. Set up a Salesforce Standard, Custom,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "High-level process"
    }
  },
  {
    "content": "or Big Object Data Destination for the Calibration List. This is the subsequent Repeatable Destination A Repeatable Destination is a TrueContext Data Destination that sends data from a Repeatable Section to a field-based, third-party system. that updates the Calibration List records. Associate the two Data Destinations with the form, and then deploy the form. When the user submits the form, the Data Destinations run sequentially. The initial destination updates the Case record, and the subsequent destination updates the Calibration List records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "High-level process"
    }
  },
  {
    "content": "In Salesforce\n\nCreate a custom “Calibration List” object with a lookup to the parent “Case” object.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "In Salesforce"
    }
  },
  {
    "content": "In TrueContext\n\nSet up a Salesforce Data Source to send the Case data from Salesforce to TrueContext. This example uses a SOQL query. Name this Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. “Cases”. Set up another Salesforce Data Source to send the Calibration List data from Salesforce to TrueContext. This example also uses a SOQL query. Name this Data Source “Calibration List”. In your form, add a “Case number” dropdown question that uses the Cases Data Source. Configure this question to push data to the Case ID question. Add a Repeatable Section to the form: Add a Section > Repeatable Tip:Take note of the unique identifier to use in step 7a. Add an “Equipment Name” dropdown question that uses the Calibration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "In TrueContext"
    }
  },
  {
    "content": "List Data Source. Configure the Equipment question to push data to the Equipment ID and Model questions. Set up the Salesforce Case Data Destination: Enter the Destination Basics. Name this destination “Case Updates”. In the Destination Type section, select the option to make this a Regular Destination. This destination updates the Case record with data from the regular sections in the form. Use the %a DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. reference to map the Case Fields to the unique IDs of the questions in the form. Set up a Salesforce Standard, Custom, or Big Object Data Destination for the “Calibration List” Repeatable Destination. Enter the Destination Basics, and name this destination “Calibration Tests”. In the Destination Type section, select the option to make this a Repeatable Destination. Enter the unique identifier of the Repeatable Section",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "In TrueContext"
    }
  },
  {
    "content": "that contains the calibration questions. Tip:You can find the section unique identifier here: Forms & Integrations > FormName > Pages & Questions Map the Custom Fields in the destination to the unique IDs of the questions in the form. In this example, the parent-child records and relationships already exist in Salesforce. This means that you can use the %a DREL reference to link the Calibration Test records with the parent Case record. You don’t need to create a parent-child relationship between the Regular and Repeatable Destinations. Associate the Data Destinations with the form. In your form, go to Destinations, and then select Add a Destination. Result: You can choose from a list of all destinations, or you can filter the list to display only Regular or Repeatable Destinations. Select the Regular Destination. Repeat steps 8a and 8b for the Repeatable Destination. Note:You can’t attach documents to a Repeatable Destination. This prevents duplication of the same document across",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "In TrueContext"
    }
  },
  {
    "content": "multiple records. After you’ve tested the form, Save and deploy it. In the TrueContext Mobile App, open the form, enter data, and submit the form. Result: The Data Destinations update the Salesforce Case and Calibration List records. Go to your Salesforce Org and check the updated records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "In TrueContext"
    }
  },
  {
    "content": "Related topics\n\nWant to know more? The following topics provide detailed information about the features and functionality used in this recipe. Steps to Set Up a Salesforce Connection Set Up a Salesforce Report or Query Data Source Set Up a Salesforce Data Destination Introducing and Testing New Form Versions in a Production Environment",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/BuildAndManageForms/DataDestinations/CreateUseDestination/RecipeParentChildRepeatableDestinations.htm",
      "title": "Use a Repeatable Destination to Update Existing Child Records in Salesforce",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext team must be on the Advanced or Enterprise tier. You must be a TrueContext Admin user. You must have the correct Salesforce and Field Service permissions. You must know how to set up Salesforce objects, records, and custom formula fields.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Scenario\n\nUse Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App App Extensions enable you to follow your standard dispatch and scheduling processes while using TrueContext for rich data collection. You can create a standard Work Order and dispatch a related Service Appointment to the Field Service Mobile App. When a technician selects an App Extension from the Actions menu, the App Extension “calls” the TrueContext Mobile App. As part of that call, the Field Service Mobile App provides information about the Field Service object and record. The App Extension can also ask the TrueContext Mobile App to “call back” with data from the submitted form. Tip:Organizations that use a work order management system can combine the offline functionality of App‑to‑App communication with the online functionality of a TrueContext cloud-based Data Destination. A Data Destination A Data Destination specifies where to send data from a submitted form. You can use",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Scenario"
    }
  },
  {
    "content": "Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. is typically used to send detailed data to the back-office system of the source app. Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. enable full access to the data submitted from the TrueContext Mobile App, including photos. This recipe shows you how to configure both Salesforce Field Service and TrueContext. In Salesforce Field Service In TrueContext 1 Configure custom formula fields for the x-callback parameters. 3 Add Salesforce Field Service to the App‑to‑App allow list. 2 Configure the App Extension Launch Value. 4 (Optional) Configure a Data Source. 5 Set up the form questions with the correct unique identifiers. 6 Define",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Scenario"
    }
  },
  {
    "content": "custom callback parameters to send data back to the Field Service Mobile App. 7 (Optional) Set up and add a Data Destination to upload attachments, documents, and other submitted data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Scenario"
    }
  },
  {
    "content": "Open and prepopulate a form in the TrueContext Mobile App\n\nEach App Extension includes a Launch Value that you define as a deep link (App‑to‑App) URL. To use deep links with the TrueContext Mobile App, enter a Launch Value consistent with the TrueContext App‑to‑App URL Scheme. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Field Service Mobile App users launch the TrueContext Mobile App by selecting an App Extension from the Actions menu. In this example, the Maintenance Activity App Extension has a Launch Value of: truecontext://x-callback-url/open?name=Maintenance&Description={!$Description}&Asset={!$AssetName__c}&WorkOrderNumber={!$WorkOrderNumber}&WorkOrderID={!$Id} where:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Open and prepopulate a form in the TrueContext Mobile App"
    }
  },
  {
    "content": "truecontext://x-callback-url/open?name=Maintenance Opens the TrueContext Mobile App and displays a form or a list of forms with the word “Maintenance” in the form name. &Description={!$Description}&Asset={!$AssetName__c}&WorkOrderNumber={!$WorkOrderNumber}&WorkOrderID={!$Id} Are parameters that define the TrueContext questions to prepopulate with values from the Work Order record. Description, Asset, WorkOrderNumber, and WorkOrderID are the unique IDs of the questions in the form that you want to prepopulate. Info:You can use the open action with any compatible parameters, such as name, tag, or type. The topic App‑to‑App Action Details describes all of the App‑to‑App actions and their associated parameters. The technician uses the Field Service Mobile App to: Select the calendar icon to access the assigned service appointment. Select the appointment to access the work order details. Swipe up to display the Actions menu. Select an App Extension, in this example, Maintenance Activity.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Open and prepopulate a form in the TrueContext Mobile App"
    }
  },
  {
    "content": "The following example shows the TrueContext Mobile App open on the user’s device with the Description, Work Order Number, Work Order ID, and Asset fields prepopulated.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Open and prepopulate a form in the TrueContext Mobile App"
    }
  },
  {
    "content": "Bring the user back to the Field Service Mobile App\n\nYou can include x-callback parameters in the Launch Value to: Bring the user back to the Field Service App. Send data from the TrueContext Mobile App back to the Field Service app, even when the user is offline. In this example, the Launch Value includes x-success, x-cancel, and x-error callback parameters. Tip: To improve efficiency and provide an optimal user experience, we recommend that you include all three x‑callback parameters in your requests. In Salesforce Field Service, the deep link URLs for App Extensions only allow up to 255 characters. We recommend that you use “formula fields” whenever possible to save characters. truecontext://x-callback-url/open?name=Maintenance&Description={!$Description}&Asset={!$AssetName__c}&WorkOrderNumber={!$WorkOrderNumber}&WorkOrderID={!$Id}&x-success={!$x_success__c}&x-cancel={!$x_cancel__c}&x-error={!$x_error__c} where: &x-success={!$x_success__c} References a formula field that contains",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Bring the user back to the Field Service Mobile App"
    }
  },
  {
    "content": "the x-success value triggered when a user saves or submits a form, or transfers a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form:\"com.salesforce.fieldservice://v1/sObject/\" & Id & \"/edit?\" where com.salesforce.fieldservice:// is the supported Salesforce scheme v1 is the current deep link version sObject represents the instance of the Salesforce object Id is the Record ID sent in the App‑to‑App request edit is the action used as per the Salesforce deep-linking scheme This formula opens the Field Service Mobile app in edit mode to update the calling Work Order record with submitted form data. Info:As per the Field Service Mobile App deep linking schema, the Id is concatenated in the callback URL. This brings the user back to the root Work",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Bring the user back to the Field Service Mobile App"
    }
  },
  {
    "content": "Order after they submit the form. The x-success callback sends data from any custom callback parameters defined in the TrueContext Form Builder. &x-cancel={!$x_cancel__c} References a formula field that contains the x-cancel value:\"com.salesforce.fieldservice://?\" This formula returns the user to the Field Service Mobile App when the user discards changes. &x-error={!$x_error__c} References a formula field that contains the x-error value:\"com.salesforce.fieldservice://?\" This formula returns the user to the Field Service Mobile App when there’s an error. For example, an error can occur when an inbound App‑to‑App request interrupts an active TrueContext Mobile App reconcile. Tip:Configure a Salesforce Data Destination to update the Work Order record with additional details, including images and documents.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Bring the user back to the Field Service Mobile App"
    }
  },
  {
    "content": "Limitations of Mobile App Extensions\n\nThe App‑to‑App call can’t contain more than 255 characters. This is a Salesforce limitation. Salesforce does not have a dedicated Windows application for Field Service. You must select iOS or Android to open a form in the TrueContext Mobile App.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Limitations of Mobile App Extensions"
    }
  },
  {
    "content": "Field Service setup\n\nConfigure custom fields for the x-success, x-cancel, and x-error callback parameters. This ensures that users always return to the Field Service Mobile App. In this example, enter the x-callback parameter names as the Field Label for each custom field. To configure the App Extensions, navigate to the Field Service Mobile Settings: Setup > Feature Settings > Service > Field Service > Field Service Mobile > Field Service Mobile Settings Tip:You can also enter Field Service Mobile Settings in the Quick Find box, and then select Field Service Mobile Settings from the left navigation. Select one of the mobile settings rows. Result: The system displays the mobile settings details. In the App Extensions section: To add a new extension, select Add. To edit an existing extension, select Edit next to a row. Select the Type of each App Extension, either iOS or Android. Enter the Launch Value. This field is where you add the App‑to‑App call, including the x‑callback",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Field Service setup"
    }
  },
  {
    "content": "parameters. In this example, enter the following:truecontext://x-callback-url/open?name=Maintenance&Description={!$Description}&Asset={!$AssetName__c}&WorkOrderNumber={!$WorkOrderNumber}&WorkOrderID={!$Id}&x-success={!$x_success__c}&x-cancel={!$x_cancel__c}&x-error={!$x_error__c} To create a global App Extension for users to activate from any type of record, leave the Scoped To Object Types field empty. Tip:If you want to make the extension available for specific object types, enter the object names as comma-separated values with no spaces. Save the extension. The following example shows the App Extension configuration for this example. Info:The Salesforce Field Service help pages provide more detailed information about the Field Service setup.Salesforce also provides details about the Field Service Mobile App deep linking schema.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "Field Service setup"
    }
  },
  {
    "content": "TrueContext setup\n\nAdd Salesforce Field Service to the list of apps that can receive data from the TrueContext Mobile App. The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all callbacks allowed. For teams created after February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom App‑to‑App allow list. Username > Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Security > App-to-App Allow List > Update. Add com.salesforce.fieldservice:// to the list of allowed URLs. Configure one or more Salesforce Data Sources to prepopulate data in the form with values from the Salesforce Field Service records. This example uses a “Cases”",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "Salesforce Query Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. with the following SOQL query:SELECT CaseNumber, Id, AccountId, Account.Name, Contact.Name, ContactPhone, ContactEmail, Account.Street__c, Account.City__c, Account.State_Province__c, Account.Country__c, Account.Zip_Postal_Code__c FROM Case For questions that the App Extension Launch Value sends data to, configure the corresponding unique identifiers. Go to Forms & Integrations > List Forms > Create Form or Forms & Integrations > List Forms > FormName > Edit Form or Continue Editing. In this example, set up the following unique IDs: Description WorkOrderNumber WorkOrderID Asset Set up the question unique identifiers for any additional fields that send",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "data back to the Field Service Mobile App. You’ll add these to the list of custom callback parameters in the next step. In this example, set up the following ID: Subject Configure the custom callback parameters. These parameters specify the questions that send data back from TrueContext to the Field Service Mobile App. Note:The parameter payload sent from the TrueContext Mobile App must be URL‑encoded. When you use the Form Builder to define custom callback parameters, the payload is automatically URL-encoded. Go to Settings > Workflow Settings > App-to-App Callbacks. Map the Field Service parameter names to data from the submitted form. Use a DREL expression Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. to define the data and metadata that you want to send from the TrueContext Mobile App. In this example, the first and third DREL Data Reference Expression Language",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "(DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions include static text: The DREL Expression Resolves to %a[Subject] (In Progress) The technician’s entry in the Subject question followed by the static text (In Progress). %a[Description] Changes to the Description field that the user entered. %u[name] modified the %f form on %d Name of the user who submitted, saved, or transferred the form Static text modified the Form name Static text form on Date the form was submitted, saved, or transferred To upload attachments, documents, and submitted data to Salesforce Field Service when the user is online, configure a Salesforce Data Destination. Note:A Data Destination is not required to send data directly between the TrueContext Mobile App and the Field Service Mobile app. This example uses a Salesforce Standard, Custom, or Big Object destination to update the Work Order record. On the Salesforce Object",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "Fields tab, enter the object API name WorkOrder. Map the Salesforce fields that you want to update. Tip:Use the Describe Salesforce Object option to get Field and API names from your Salesforce org. On the Update Query tab, set up a query to find the matching Work Order record. In this example, the App Extension Launch Value sends the Id to the question with unique identifier WorkOrderId. Add the Data Destination to the form. Go to Forms & Integrations > List Forms > FormName > Edit Form or Continue Editing. On the Destinations tab, select Add a Data Destination. Select the Salesforce destination that you configured in step 5. Save and Deploy the form. Advise users to Sync and Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. both the Field Service Mobile App and the TrueContext Mobile App. Result: When a user saves, transfers, or submits the form, the x-success callback defined in the App Extension Launch Value executes. In this example, the callback: Re-launches the Field Service Mobile App. Takes the user to the corresponding Work Order record in the Field Service Mobile App, in edit mode. Updates the values in the Work Order with the values sent from the custom callback parameters. The following example shows the Work Order record updated with the values entered in the TrueContext Mobile App by the technician. In this example, the Work Order opens in “edit” mode. To update the Work Order, the user must Save the values sent back from the TrueContext Mobile",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "App. Tip:In the Field Service Mobile App, the user might see a prompt to confirm the launch action. To hide this prompt, follow the instructions provided by Salesforce. After the Data Destination executes successfully, you can find the uploaded attachments and documents linked to the Work Order record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/FieldServiceMobileAppExtensions.htm",
      "title": "Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "Prerequisites\n\nYour TrueContext team must be on the Advanced or Enterprise tier. You must be a TrueContext Admin user. You must have permissions to create and install Slack apps in your Slack workspace. Tip:Check with your Slack Workspace Owner to verify your workspace permissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Prerequisites"
    }
  },
  {
    "content": "High-level process\n\nWhen a user submits a form, the Data Destination makes a request to post a Slack notification. The notification includes a Request Body that you configure as a Document. System Action Result Slack Create a Slack app that has an Incoming Webhook. The Webhook URL enables incoming Slack notification requests. TrueContext Create an HTTP Connection. The Connection uses the Incoming Webhook to link TrueContext with your Slack app. Create an HTTP Data Destination. When the Data Destination executes, it sends a request to the Slack app to post a notification. Configure a Document with a Request Body. The document includes a Request Body formatted according to Slack requirements. The Request Body defines the information from the submitted form to include in the notification. Link the Data Destination and the Document to your form. When a user submits the form, the Data Destination makes a request to post a Slack notification. The notification includes the Request Body from",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "High-level process"
    }
  },
  {
    "content": "the Document.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "High-level process"
    }
  },
  {
    "content": "Create a Slack app that has an Incoming Webhook\n\nIn Slack, Create a Slack app. Enable Incoming Webhooks on your app (Incoming Webhooks > Activate Incoming Webhooks). Create an Incoming Webhook: Select Add New Webhook to Workspace. Select the channel where you want to post notifications from TrueContext. Select Allow. Copy the Webhook URL to use when you create your TrueContext HTTP Connection. Info:The Slack topic Sending messages using Incoming Webhooks describes how to create a Slack app and an Incoming Webhook in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Create a Slack app that has an Incoming Webhook"
    }
  },
  {
    "content": "Create an HTTP Connection that includes the Webhook URL\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., Go to Forms & Integrations > Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection. > CREATE CONNECTION > HTTP Connection. Enter a Name. Select the FormSpaces in which you want to use the Connection. Under Base Connection URL, paste the Webhook URL from your Slack app Incoming Webhook. Select Anonymous Access. Select Create to save your Connection. Info:The topic HTTP Connection describes how to configure an HTTP Connection in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Create an HTTP Connection that includes the Webhook URL"
    }
  },
  {
    "content": "Configure an HTTP Data Destination to post a Slack notification\n\nGo to Forms & Integrations > Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. > CREATE DATA DESTINATION > HTTP. Enter a Name and a Destination Unique Identifier. On the Connection tab, select the HTTP Connection you created. On the Request Configuration tab, select POST as the HTTP Method. Select Create to save your Data Destination. Info:The topic HTTP Data Destination describes how to configure an HTTP Data Destination in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Configure an HTTP Data Destination to post a Slack notification"
    }
  },
  {
    "content": "Configure a Document with a Request Body\n\nTo post a Slack notification using your Incoming Webhook, you need a message formatted according to Slack’s base structure. The message contents must be formatted as a JSON object. Once you have the contents of your message, you add them to a TrueContext Document that you link to your Data Destination. The Document can reference data from your submitted forms using DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms., FreeMarker, or Handlebars. Tip:Use the Slack Block Kit Builder to preview your message contents. Go to Forms & Integrations > Documents > CREATE DOCUMENT. Select a document type from the Template-driven Text Documents. You can select DREL, FreeMarker, or Handlebars. Result: The system opens a new Document in edit mode. Fill in your Document Basics and Configuration. Info:The following topics describe in detail how to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Configure a Document with a Request Body"
    }
  },
  {
    "content": "configure each document type:DREL DocumentsFreeMarker DocumentsHandlebars Documents Include the Request Body formatted according to Slack requirements in the following sections: DREL documents—in the DREL Template section. FreeMarker documents—upload an FTL file in the FreeMarker Template section. Handlebars documents—in the Handlebars Template section. Info:We recommend that you escape the data in the Request Body. This ensures that the system generates a valid JSON document. The following example shows a DREL Document with a Request Body formatted according to Slack requirements. Note:The Document File Extension must be .json. Select Create. Result: You created a Document with a Request Body that posts a Slack notification with data from submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Configure a Document with a Request Body"
    }
  },
  {
    "content": "Request for assistance\n\nThe following example shows a Slack notification to request assistance from other members of the company. Notification Request Body #c[escapeJson] { \"blocks\": [ { \"type\": \"header\", \"text\": { \"type\": \"plain_text\", \"text\": \"Request for assistance\", \"emoji\": true } }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\": \"Technician *%u[name]* has requested assistance for the following issue:\" } ] }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\": \"_%a[IssueDescription]_\" } ] }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\": \"Reply to this thread to provide assistance.\" } ] } ] } Where: #c[escapeJson] escapes the data in the Request Body to ensure the system generates a valid JSON document. %u[name] populates the First and Last name of the technician who submitted the form. A question with the Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Request for assistance"
    }
  },
  {
    "content": "reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. IssueDescription populates part of the text in the Slack notification.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Request for assistance"
    }
  },
  {
    "content": "New sales opportunity\n\nThe following example shows a Slack notification for a new sales opportunity. Notification Request body #c[escapeJson] { \"blocks\": [ { \"type\": \"header\", \"text\": { \"type\": \"plain_text\", \"text\": \"New Sales Opportunity\", \"emoji\": true } }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\": \"A new <https://yourcompany.lightning.force.com/lightning/r/Opportunity/%o[CreateOpportunity][id]/view|sales opportunity> has been identified for the account <https://yourcompany.lightning.force.com/lightning/r/Account/%a[ID]/view|%a[CustomerName]>.\" } ] }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\": \"The following details were provided: \\n\\n _%a[OpportunityDetails]_\" } ] } ] } Where:#c[escapeJson] escapes the data in the Request Body to ensure the system generates a valid JSON document.The notification includes links that direct users to Salesforce records.%o[CreateOpportunity][id] populates the ID of the Opportunity record that the submitted form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "New sales opportunity"
    }
  },
  {
    "content": "created.Note:To use %o, you must configure a Salesforce Data Destination to create a record and store the response output.A question with the Unique ID ID populates the Account ID in the Salesforce URL.A question with the Unique ID CustomerName populates the displayed customer name.A question with the Unique ID OpportunityDetails populates the details provided by the user when they submitted the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "New sales opportunity"
    }
  },
  {
    "content": "Security risk\n\nThe following example shows a Slack notification for a security risk. Notification Request body #c[escapeJson] { \"blocks\": [ { \"type\": \"header\", \"text\": { \"type\": \"plain_text\", \"text\": \"Alert: Safety-Related Finding WO-%a[WorkOrderNumber]\", \"emoji\": true } }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\": \"A <https://yourcompany.lightning.force.com/lightning/r/ProntoForms__ProntoForms_Submission__c/%o[ProntoFormsSubmission][id]/view|Preventative Maintenance> inspection report has been submitted.\\n\\n*A safety-related finding with asset <https://yourcompany.lightning.force.com/lightning/r/Asset/%a[AssetId]/view|%a[SelectedEquipmentID]> requires attention.*\" }, { \"type\": \"mrkdwn\", \"text\": \"*Submitted by:*\\n<https://yourcompany.lightning.force.com/lightning/r/ServiceResource/0Hn1I000000M0mySAC/view|%u>\" } ] }, { \"type\": \"section\", \"fields\": [ { \"type\": \"mrkdwn\", \"text\":",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Security risk"
    }
  },
  {
    "content": "\"*Account:*\\n<https://yourcompany.lightning.force.com/lightning/r/Account/%a[ID]/view|%a[CustomerName]>\" } ] } ] } Where:#c[escapeJson] escapes the data in the Request Body to ensure the system generates a valid JSON document.The notification includes links that direct users to Salesforce records.%o[TrueContextSubmission][id] populates the ID of the TrueContext Submission record that the submitted form created.Note:To use %o, you must configure a Salesforce Data Destination to create a record and store the response output.A question with the Unique ID AssetId populates the Asset ID in the Salesforce URL.A question with the Unique ID SelectedEquipmentID populates the displayed equipment ID.%u populates the name and username of the user who submitted the form.A question with the Unique ID ID populates the Account ID in the Salesforce URL.A question with the Unique ID CustomerName populates the displayed customer name.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Security risk"
    }
  },
  {
    "content": "Link the Data Destination and Document to the form\n\nFrom the Forms & Integrations menu, navigate to the form you want to set up. Select EDIT FORM. Result: The form opens in edit mode. Select DESTINATIONS, and then select ADD A DATA DESTINATION. Result: A list of your Data Destinations opens. Select the HTTP Data Destination that you configured. Result: The system adds the Data Destination to your form. The system opens a page where you add Documents to the Data Destination. In the Documents section, select the document you configured. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/IntegrateWithOtherSystems/PostSlackNotifications.htm",
      "title": "Post a Slack Notification using the HTTP Data Destination",
      "section": "Link the Data Destination and Document to the form"
    }
  },
  {
    "content": "Salesforce TrueContext AppExchange Package\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The Salesforce TrueContext AppExchange package enables you to quickly integrate your Salesforce org with TrueContext. Use our preconfigured forms, Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. to complete field work while keeping your Salesforce records up to date. The topics in this section describe how to get started with the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceProntoFormsAppExchange.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Salesforce TrueContext AppExchange Package"
    }
  },
  {
    "content": "TrueContext AppExchange package. They also describe what the package includes, and how it integrates TrueContext with Salesforce.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/RevisedSalesforceIntegration/LandingPages/SalesforceProntoFormsAppExchange.htm",
      "title": "Salesforce Integration Key Features",
      "section": "Salesforce TrueContext AppExchange Package"
    }
  },
  {
    "content": "How the AppExchange package works\n\nDownload the package and follow the steps in the Quickstart page to: Set your credentials for a TrueContext trial account. Open ready-to-use forms in the Mobile App. Prefill answers in the form with data from Salesforce records. Submit forms. Automatically create Salesforce records that include data from your submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "How the AppExchange package works"
    }
  },
  {
    "content": "Prerequisites to install the Salesforce TrueContext app\n\nYou must have one of the following Salesforce editions: Professional Enterprise Unlimited Developer You must have API Access enabled in Salesforce. You must be using the latest version of Google Chrome™, Mozilla Firefox, Microsoft Edge, or Safari®.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "Prerequisites to install the Salesforce TrueContext app"
    }
  },
  {
    "content": "Install the Salesforce TrueContext app\n\nGo to the TrueContext listing in AppExchange, and then select Get It Now. Enter your information when the system prompts you. Select the users you want to have access to the app. You can install it for Admins only, for all users, or for specific profiles. Select Install. Result: The system: Downloads the TrueContext AppExchange package and installs it in your Salesforce org. Creates the custom object Submission. From the Salesforce App Launcher, search for TrueContext, and then open the TrueContext app. Result: The TrueContext app opens on the TrueContext Quickstart page. Follow the steps on the TrueContext Quickstart page to set up your TrueContext trial account. Result: When the system creates your TrueContext account, it automatically dispatches forms for you to fill out. The following images show how to find and fill out those forms in the Mobile App. Tip:When you submit the form, the system creates a new record in the Submission custom",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "Install the Salesforce TrueContext app"
    }
  },
  {
    "content": "object.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "Install the Salesforce TrueContext app"
    }
  },
  {
    "content": "Update the Salesforce TrueContext app\n\nTrueContext releases new versions of the AppExchange package that include updates and improvements. To check if a new version of the app is available, go to the TrueContext AppExchange listing. If an update is available, you can download it from that page. When you update the AppExchange package, the system keeps any changes you made to the Submission custom object. It also keeps all your submitted forms stored in the custom object. Note:As a best practice, we recommend that you first update the TrueContext app in a Sandbox org. After you test your workflows, update the app in your Production org.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "Update the Salesforce TrueContext app"
    }
  },
  {
    "content": "Uninstall the Salesforce TrueContext app\n\nWarning:If you uninstall the TrueContext AppExchange package, all related custom objects, fields, records, and tabs are deleted. In Salesforce, go to Setup. In the Quick Find box, enter Installed Packages, and then select Installed Packages. Result: The system lists all your installed packages, including the TrueContext package. Under the Action column, select Uninstall. Result: The system uninstalls the TrueContext AppExchange package from your org. It also deletes any custom objects, fields, records, and tabs related to TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "Uninstall the Salesforce TrueContext app"
    }
  },
  {
    "content": "Related topics\n\nSalesforce Integration Overview Set up a Salesforce TrueContext Demo",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeSetup.htm",
      "title": "Install the Salesforce TrueContext AppExchange Package",
      "section": "Related topics"
    }
  },
  {
    "content": "How the TrueContext Lightning app works\n\nWhen you download the TrueContext AppExchange package, the system installs the TrueContext Lightning app in your Salesforce org. The app includes: A TrueContext Quickstart tab with steps to complete your TrueContext setup. A Submission custom object that stores each submitted form as a record. Account, Contact, and Case objects in the Nav Bar for easy access. A Submissions Dashboard that shows graphs based on data from your records. Tip:You can add the Submissions Dashboard to your Nav Bar for easy access.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "How the TrueContext Lightning app works"
    }
  },
  {
    "content": "Open the TrueContext Lightning app\n\nSelect the App Launcher. Start to type truecontext. Select the TrueContext app. Result: The system opens the TrueContext Quickstart tab in the TrueContext Lightning app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Open the TrueContext Lightning app"
    }
  },
  {
    "content": "TrueContext Quickstart tab\n\nThe TrueContext Quickstart tab is the TrueContext Lightning app homepage.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "TrueContext Quickstart tab"
    }
  },
  {
    "content": "What’s on the TrueContext Quickstart tab?\n\nThe TrueContext Quickstart tab includes steps with links to set up your Salesforce TrueContext integration. Follow the steps on the tab to: Assign yourself permissions to access submitted forms in Salesforce. Update your file security settings so you can open PDF Documents in your browser. Set your TrueContext trial account credentials. Download the TrueContext Mobile App to submit forms. In Salesforce, open a list of submitted forms or a Dashboard that summarizes your data and displays it as graphs.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "What’s on the TrueContext Quickstart tab?"
    }
  },
  {
    "content": "How to hide the TrueContext Quickstart tab\n\nIf your team no longer needs the TrueContext Quickstart tab, you can hide it for one or more users. To hide the tab, you edit the assigned profile, and then edit each user’s permissions. To edit the profile settings: From the Salesforce Setup, use the Quick Find to go to Profiles. Result: The system opens a list of Profiles. From the list of Profiles, select Edit to open the profile you want to change. Under Custom App Settings, clear the Visible checkbox for TrueContext. Under Tab Settings, set TrueContext Quickstart to Tab Hidden. Save your changes. Note:Editing a Profile affects all users assigned to that profile. To edit a user’s permissions: From the Salesforce Setup, use the Quick Find to go to Users. Result: The system opens a list of users. Select the user’s name. Under Permission Set Assignments, select Edit Assignments. Remove TrueContext from the list of Enabled Permission Sets. Add TrueContext No Quickstart to the list of Enabled",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "How to hide the TrueContext Quickstart tab"
    }
  },
  {
    "content": "Permission Sets. Save your changes. Result: When the user opens the TrueContext app, the app opens on the TrueContext Submissions Custom Object tab. The TrueContext Quickstart tab is not available to that user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "How to hide the TrueContext Quickstart tab"
    }
  },
  {
    "content": "Submission custom object\n\nWhen you download the TrueContext Lightning app, the system creates the Submission custom object.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Submission custom object"
    }
  },
  {
    "content": "How the Submission custom object works\n\nThe custom object creates a record each time a user submits a form using the Mobile App. You can use these records to keep track of the work completed in TrueContext. They also link the work to other related Salesforce records. Submission records include: Submitted form metadata such as the submission date and location. A PDF file that includes the submitted form data and metadata. A link to open the submitted form in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. Links to related Account, Contact, and Case records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "How the Submission custom object works"
    }
  },
  {
    "content": "View submitted forms in Salesforce\n\nFrom the TrueContext Lightning app, select View Submissions. The following example shows a list of Submission records. From the list of records, you can: Select Quick View to preview the submitted form data in a PDF format and preview the record fields. The following example shows the Quick View PDF page. The following example shows the Quick View Details page. Select a record to open and view it. The following example shows a Submission record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "View submitted forms in Salesforce"
    }
  },
  {
    "content": "Accounts, Contacts, and Cases\n\nThe TrueContext Lightning app includes Account, Case, and Contact objects on the Nav Bar for easy access. When you open an Account, Case, or Contact record, the app shows you the linked Submission records:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Accounts, Contacts, and Cases"
    }
  },
  {
    "content": "Submissions Dashboard\n\nWhen you install the TrueContext AppExchange package, the system creates a Dashboard called Submissions.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Submissions Dashboard"
    }
  },
  {
    "content": "What’s in the Submissions Dashboard?\n\nThe Dashboard includes the following graphs that show data from your Submission records: Graph Description Form Submissions Over Time Bar graph with the number of submitted forms per day. Form Submitters Bar graph with the number of submitted forms per user. Form Submission Status Pie chart with the percentage of forms that passed, passed with warnings, or failed. Forms Used Total number of different forms used to submit data. This tells you how many of your available forms are being used in the field. Total Submissions Number of submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "What’s in the Submissions Dashboard?"
    }
  },
  {
    "content": "Open the Submissions Dashboard\n\nYou can open the Submission Dashboard from the TrueContext Quickstart tab or from the Dashboards app. Tip:You can add the Submissions Dashboard to your Nav Bar for easy access. To open the Dashboard from the Quickstart tab: Open the Quickstart tab. From step 6, select Dashboard. Result: The system opens a list of Dashboard folders. Select the SubmissionsDashboards folder. Select the Submissions Dashboard. Result: The system opens the Dashboard. To open the Dashboard from the Dashboards app: Navigate to the Dashboards app using the App Launcher. Result: The system opens a list of Dashboards. Select the Submissions Dashboard. Result: The system opens the Dashboard. Tip:Remember to Refresh your Dashboard to show the most current data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Open the Submissions Dashboard"
    }
  },
  {
    "content": "Add the Submissions Dashboard to the Nav Bar\n\nWe recommend that you add the Dashboard to your Nav Bar for easy access. To do that: Open the Submissions Dashboard. Select the dropdown menu next to Submissions. Select Add “Submiss...” to Nav Bar. Result: The TrueContext Lightning app adds the Dashboard to the Nav Bar.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Add the Submissions Dashboard to the Nav Bar"
    }
  },
  {
    "content": "Related topics\n\nInstall the Salesforce TrueContext AppExchange Package What’s in my Salesforce AppExchange TrueContext Trial Account? Introduction to Salesforce Integrations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SalesforceProntoFormsApp.htm",
      "title": "Salesforce TrueContext Lightning App",
      "section": "Related topics"
    }
  },
  {
    "content": "How the TrueContext trial account works\n\nAfter you download the TrueContext AppExchange package in Salesforce, set the credentials for your TrueContext trial account. You can use the trial account free of charge for 14 days. This account includes: Ready-to-use forms for the vertical you chose. Data Sources that retrieve data from your Salesforce Account, Case, and Contact records to prefill questions in your forms. A Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. that creates records in a custom object in Salesforce called TrueContext Submission. The Data Destination creates a record each time you submit a form. To sign in to your TrueContext trial account, go to the TrueContext Web Portal and sign in with your credentials. The TrueContext Web Portal The TrueContext Web Portal is a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "How the TrueContext trial account works"
    }
  },
  {
    "content": "web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations. gives you access to the forms, Data Sources, and Data Destinations included in your account.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "How the TrueContext trial account works"
    }
  },
  {
    "content": "Forms included in your TrueContext trial account\n\nThe forms available in your TrueContext account depend on the vertical you chose: Form Heavy Manufacturing Medical Device Manufacturing Oil & Gas Utilities Other Accident Investigation ✔ ✔ ✔ ✔ Building Inspection Form ✔ Complex Field Service Demo ✔ ✔ ✔ ✔ Construction - Concrete Inspection ✔ ✔ Daily Job Report ✔ ✔ ✔ ✔ Electric Elevator Inspection ✔ ✔ Failure Mode and Effects Analysis ✔ General Estimate ✔ Job Hazard Assessment ✔ ✔ ✔ ✔ Medical Device Service Form ✔ OSHA Personal Protective Equipment ✔ OSHA Safe Work Practices Checklist for Electrical ✔ Pre-Task Plan ✔ ✔ ✔ ✔ Universal Work Order ✔ ✔ ✔ ✔ ✔ Vehicle Inspection ✔",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Forms included in your TrueContext trial account"
    }
  },
  {
    "content": "Open forms\n\nTo open the list of forms in your account, go to Forms & Integrations > List Forms. Select any form to open it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Open forms"
    }
  },
  {
    "content": "Customize forms\n\nOnce you open a form, select EDIT FORM. These forms link to Data Sources and Data Destinations for a fully integrated workflow with Salesforce. You can customize the forms or create new forms: Add different question types based on the data you want to collect. Structure your form using pages and sections to make it easier for your technicians to navigate the form. Implement your business logic using Conditional Logic and Answer Exceptions. Use Help Options to give your users additional context. Configure your form settings to change your workflow and control how your users can open, transfer, edit, and complete the form. Tip:If you want to edit an existing form while keeping the original, you can copy the form and then edit it.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Customize forms"
    }
  },
  {
    "content": "Data Sources included in your TrueContext trial account\n\nYour trial account includes two different types of Data Sources: Salesforce Data Sources, and Manual Upload Data Sources. To open a list of Data Sources, go to Forms & Integrations > Data Sources. From the list, you can open and edit each Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Data Sources included in your TrueContext trial account"
    }
  },
  {
    "content": "Salesforce Data Sources\n\nIn your TrueContext trial account, Salesforce Query Data Sources reference data from Account, Case, and Contact records to prefill forms. Your account includes a Data Source for each standard object as shown in the following image. When you answer questions in a form, you can choose an Account, Contact, or Case as shown in the following example: When you submit the form, the preconfigured Data Destination creates a record linked to the Account, Contact, or Case you selected. Info:If you want to customize your workflow, you can modify the existing Salesforce Data Sources, or you can create your own. The following topics include more details about Salesforce Data Sources:What is a Salesforce Data Source?Decide on the Type of Salesforce Data SourceSet Up a Salesforce Report or Query Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Salesforce Data Sources"
    }
  },
  {
    "content": "Manual Upload Data Sources\n\nManual Upload Data Sources use data from CSV, Excel, JSON, or XML files to prefill forms. When you create your TrueContext trial account, the system automatically creates Manual Upload Data Sources. The following image shows the Data Sources included in your trial account. To review the Data Source contents, you can download an Excel or CSV file. To update the data, you can edit the file and upload a new version. Make sure to keep the original column headings. Info:The topic Create and Manage Data Sources describes how Data Sources work in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Manual Upload Data Sources"
    }
  },
  {
    "content": "Data Destinations included in your TrueContext trial account\n\nYour trial account includes two Data Destinations: A Salesforce Data Destination, and an Email Data Destination. To open a list of Data Destinations in your account, go to Forms & Integrations > Data Destinations. From the list, you can open and edit each Data Destination.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Data Destinations included in your TrueContext trial account"
    }
  },
  {
    "content": "Salesforce Data Destination\n\nWhen you install the AppExchange package in your Salesforce org, the system creates a custom object called TrueContext Submission. In TrueContext, a Standard, Custom, or Big Object Data Destination: Creates a new TrueContext Submission record when you submit a form. Updates an existing record when you make changes to a submitted form. Changes to the form include: Sending the submitted form for editing. Transferring the incomplete form as part of a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts. workflow. The destination searches for the Salesforce record that has the same reference number as the submitted form. The reference number uniquely identifies each submitted form. Populates fields in the record with data and metadata",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Salesforce Data Destination"
    }
  },
  {
    "content": "from submitted forms. Populates lookup fields with Account, Contact, and Case IDs. This means that the record is linked to the selected Account, Contact, or Case. Note:If you edit your forms, don’t change the original question Unique IDs that map to Salesforce fields. This ensures that the system updates your Salesforce fields with the correct information. Attaches a PDF document to the record as a Related file. The document includes all the submitted form data. The following example shows a TrueContext Submission record in Salesforce that the Data Destination created when a user submitted a form. Info:If you want to customize your workflow, you can modify the existing Salesforce Data Destination or create your own. The following topics include more details about Salesforce Data Destinations:What is a Salesforce Data Destination?Decide on the Type of Salesforce Data DestinationSet Up a Salesforce Data DestinationSet Up a Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Salesforce Data Destination"
    }
  },
  {
    "content": "Email Data Destination\n\nThis Data Destination sends an email each time a user submits a form. The destination sends an email to the user who submitted the form and to the trial account creator. The email includes: The submitted form data and metadata in the body of the email. An attached PDF document with the submitted form data and metadata. A URL to the submitted form in the TrueContext Web Portal. Info:The topic Email Data Destination describes how Email Data Destinations work in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Email Data Destination"
    }
  },
  {
    "content": "Related topics\n\nSalesforce Integration Overview TrueContext Quick Start Install the Salesforce TrueContext AppExchange Package",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeComponents.htm",
      "title": "What’s in my Salesforce AppExchange TrueContext Trial Account?",
      "section": "Related topics"
    }
  },
  {
    "content": "Install the Salesforce TrueContext AppExchange Package\n\nThe TrueContext AppExchange package includes everything you need to seamlessly integrate Salesforce with TrueContext. Download the package and follow the steps in the Quickstart page to: Set the credentials for a TrueContext trial account. Open preconfigured forms in the Mobile App. Populate answers in the form with data from Salesforce records. Automatically create Salesforce records that include data from submitted forms. To install the TrueContext package, visit the TrueContext listing in AppExchange, and then select Get It Now.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Install the Salesforce TrueContext AppExchange Package"
    }
  },
  {
    "content": "Set up an App Extension to launch the TrueContext Mobile App from the Salesforce Field Service app\n\nIf your workflow includes the Salesforce Field Service app, you can: Set up an App Extension to launch the TrueContext Mobile App and open a form. Prepopulate the form with data from a Salesforce record. Configure an App‑to‑App call (deep link) to return to the Field Service app when the user submits the form. Populate fields in your Salesforce record with data from the submitted form. Info:The topic Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App describes how to do this in more detail.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Set up an App Extension to launch the TrueContext Mobile App from the Salesforce Field Service app"
    }
  },
  {
    "content": "Customize your workflow in TrueContext\n\nThe TrueContext AppExchange package includes everything you need to get started with TrueContext. If you want to set up a custom workflow, you can edit the components included in the package. You can also create your own components. To customize your workflow, you need access to the TrueContext Web Portal. Sign in with the credentials you set when you installed the TrueContext package.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Customize your workflow in TrueContext"
    }
  },
  {
    "content": "Create or edit forms\n\nThe TrueContext AppExchange package includes preconfigured forms. To customize your workflow, you can make changes to the existing forms (Forms & Integrations > List Forms > Form Name > EDIT FORM). You can also create your own forms. Tip:If you want to edit an existing form without losing the original, you can copy the form and then edit it. When you customize your forms, you can: Add different question types depending on the data you want to collect. Structure your form using pages and sections to enhance your technicians’ experience. Implement your business logic using Conditional Logic and Answer Exceptions. Use Help Options to give your users additional context. Configure your form settings to change your workflow and control how your users can access the form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Create or edit forms"
    }
  },
  {
    "content": "Create or edit Salesforce Data Sources\n\nSalesforce Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. retrieve data from your Salesforce records. You can use this data in TrueContext to prepopulate answer options in Dropdown, Multiselect, or Radio Button questions. You can use two different Data Sources in TrueContext: Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. How it works Use it for Salesforce Report Retrieves data from Salesforce",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Create or edit Salesforce Data Sources"
    }
  },
  {
    "content": "reports Reports in a tabular format with no more than 2000 rows Salesforce Query Uses Salesforce Object Query Language (SOQL) Any Salesforce Standard, Custom, or Big Object with any number of rows Your TrueContext trial account includes preconfigured Salesforce Query Data Sources that you can customize. Info:The following topics include more details about Salesforce Data Sources:What is a Salesforce Data Source?Decide on the Type of Salesforce Data SourceSet Up a Salesforce Report or Query Data Source",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Create or edit Salesforce Data Sources"
    }
  },
  {
    "content": "Create or edit Salesforce Data Destinations\n\nSalesforce Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. use data from submitted forms to create or update records in Salesforce. You can use six different Data Destinations in TrueContext: Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. How it works Salesforce Account Salesforce Case Salesforce Contact Salesforce Lead Sends data to Standard Objects Includes preconfigured options to populate standard fields Populates custom fields Salesforce Standard, Custom or Big Object Sends data to any Object Populates standard and custom fields",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Create or edit Salesforce Data Destinations"
    }
  },
  {
    "content": "Salesforce Apex REST Interacts with Salesforce Apex REST API endpoints Sends data to Salesforce for custom actions, such as posting a Chatter feed item Your TrueContext trial account includes a preconfigured Salesforce Standard, Custom, or Big Object Data Destination. This Data Destination sends data to a custom object that stores each submitted form as a record. You can customize this Data Destination, or you can create your own Data Destination. Info:The following topics include more details about Salesforce Data Destinations:What is a Salesforce Data Destination?Decide on the Type of Salesforce Data DestinationSet Up a Salesforce Data DestinationSet Up a Salesforce Apex REST Data DestinationPost a Chatter Feed Item using the Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Create or edit Salesforce Data Destinations"
    }
  },
  {
    "content": "Work with parent and child records\n\nTrueContext supports creating or editing records in Salesforce linked by a parent-child relationship. Tip:Repeatable Destinations enable you to create or update multiple child records linked to a parent object in Salesforce. The way you configure your Data Sources and Destinations depends on whether the parent and child records exist. If the parent record... And the child record... Then... Exists Exists They’re already linked in Salesforce. Use a different Data Destination to update each record. Exists Doesn’t exist Create a Data Source that retrieves the record ID from the parent record. Use the Data Source to prepopulate a question with the parent record ID. Configure a Data Destination to create a child record. Use the Data Destination to populate a Lookup Lookup questions are options-based questions that \"look up\" the list of options from a Data Source. These include Dropdown, Radio Button, and Multiselect questions. field in the child record",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Work with parent and child records"
    }
  },
  {
    "content": "with the parent ID. Doesn’t exist Doesn’t exist Configure a Data Destination to create a parent record. Select the option to store all response outputs. The system stores the new parent record ID. Configure another Data Destination to create a child record. Use the second Data Destination to populate a Lookup field in the child record with the parent ID. Info:The following topics include more details about how to work with parent-child records:Use a Repeatable Destination to Update Existing Child Records in SalesforceConfigure Response Data Handling for Salesforce Data Destinations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Work with parent and child records"
    }
  },
  {
    "content": "Related topics\n\nSalesforce Integration Overview Build and Manage Forms Need help? Find out how to contact Support",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/SSEDemoGuide.htm",
      "title": "Set up a Salesforce TrueContext Demo",
      "section": "Related topics"
    }
  },
  {
    "content": "Troubleshoot the TrueContext Lightning App\n\nError Happens when Cause Solution This app can’t be installed. User doesn’t have permission (changeDashboardColors) to create dashboard with colors. You install the app. Your user account doesn’t have the Change Dashboard Colors permission. Create a new permission set with the required permissions. From the Salesforce Setup, use the Quick Find to go to Permission Sets. Select New to create a Permission Set. Enter any Label. Under License, leave the default None. Select Save. Result: The system opens your new Permission Set. Select System Permissions. Select Edit. For the Change Dashboard Colors permission, select Enabled. Select Save. Tip:Remember to assign the new Permission Set to the user account that installs the TrueContext AppExchange Package. This app can’t be installed. Data Storage Limits Exceeded. You install the app. The TrueContext AppExchange Package exceeds your Salesforce org’s storage limits. We recommend that you remove",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeTroubleshooting.htm",
      "title": "Troubleshoot the Salesforce TrueContext AppExchange Package",
      "section": "Troubleshoot the TrueContext Lightning App"
    }
  },
  {
    "content": "records that you no longer need. Info:You can check your Salesforce Storage Usage for your org.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeTroubleshooting.htm",
      "title": "Troubleshoot the Salesforce TrueContext AppExchange Package",
      "section": "Troubleshoot the TrueContext Lightning App"
    }
  },
  {
    "content": "Troubleshoot your TrueContext Trial Account\n\nError Happens when Cause Solution The system displays the following message: To start your TrueContext trial for Salesforce and take advantage of our pre-configured forms and integrations, go to TrueContext on the AppExchange and select “Get It Now”. It should display the Create a New TrueContext Account page. You try to create your trial account. You tried to access the Trial Account through an incorrect or outdated link. To create your TrueContext trial account, follow the steps on the Quickstart tab of the TrueContext Lightning app. Invalid Authorization: expired access/refresh token You try to create a Salesforce Connection. You already have five Salesforce Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection. that use the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeTroubleshooting.htm",
      "title": "Troubleshoot the Salesforce TrueContext AppExchange Package",
      "section": "Troubleshoot your TrueContext Trial Account"
    }
  },
  {
    "content": "same account. Create your Salesforce Connection using a different User Account. Browser Unsupported You try to create your trial account. You’re using a Browser that is not supported to create a TrueContext Trial Account. Make sure you’re using the latest version of Chrome, Firefox, Edge, or Safari. Execution Failure: Processor ‘TrueContext Submissions’ failed to execute: Execution Failure: There was an error with the Salesforce API call: [{\"message\":\"insufficient access rights on cross-reference id: 0015e000003negJ\",\"errorCode\":\"INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY\" You submit a form. TrueContext tried to send data to records that don’t exist in Salesforce. This could be caused by Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeTroubleshooting.htm",
      "title": "Troubleshoot the Salesforce TrueContext AppExchange Package",
      "section": "Troubleshoot your TrueContext Trial Account"
    }
  },
  {
    "content": "relevant, most current data. that don’t have the latest data. Make sure the Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. has the latest data, and manually fetch new data if needed. Then, reconcile the mobile app and submit another form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/SalesforceAppExchange/AppExchangeTroubleshooting.htm",
      "title": "Troubleshoot the Salesforce TrueContext AppExchange Package",
      "section": "Troubleshoot your TrueContext Trial Account"
    }
  },
  {
    "content": "ServiceMax Integration Cookbook\n\nGet “recipes” for frequently used ServiceMax Integration procedures. Automatically Post Notifications to Zinc Launch a Zinc Conversation from a Form Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "ServiceMax Integration Cookbook"
    }
  },
  {
    "content": "Key Concepts\n\nAn integration with ServiceMax enables you to reference data from ServiceMax records through connected Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.. You can also send data from submitted forms to ServiceMax by linking Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. to your organization’s ServiceMax records. A ServiceMax Integration can also connect TrueContext to ServiceMax Go and Zinc. With App‑to‑App calls, you can set up communication between the ServiceMax Go app and the TrueContext Mobile",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "Key Concepts"
    }
  },
  {
    "content": "App on the same device. You can also define callbacks to return users to ServiceMax Go after they finish working in the TrueContext Mobile App. A ServiceMax Zinc Integration enables TrueContext to send messages to a Zinc group when a user submits a form. You can also set up the messages to be delivered to a hotline or a specific user. This means that TrueContext can notify managers and other users when a job is completed. What is a ServiceMax Integration? How the ServiceMax Integration Works Examples of a ServiceMax Integration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nTrueContext can pull data from ServiceMax records of any Object type into your forms. TrueContext can also create or update ServiceMax records with data from submitted forms. The following integration points in TrueContext enable this type of communication: Salesforce Connection—to establish a secure, OAuth connection between ServiceMax and TrueContext Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.— to use ServiceMax reports or Salesforce Object Query Language (SOQL) to pull data into TrueContext Salesforce Data Destination—to push data from TrueContext to ServiceMax Objects App-to-App Communication—to exchange data between the ServiceMax app and the TrueContext Mobile App Tip:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "Configuration"
    }
  },
  {
    "content": "TrueContext supports both Salesforce sandbox and production environments. You can also set up a connection between TrueContext and ServiceMax Zinc. An integration with Zinc requires a TrueContext HTTP Data Destination and a connection to the Zinc Messaging API. Configure the ServiceMax Integration Points Integrate with ServiceMax Integrate with ServiceMax Zinc",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "Configuration"
    }
  },
  {
    "content": "Technical Details\n\nThe TrueContext Mobile App can receive a “request” or “call” from the ServiceMax Go app on the same device. An inbound App‑to‑App request directs the TrueContext Mobile App to launch in the foreground and complete an action. ServiceMax users can specify x‑callback parameters. These parameters tell the TrueContext Mobile App what to do when a user submits or discards a form, or when there’s an error. The TrueContext Mobile App can bring ServiceMax Go back to the foreground and send it the submitted form data and metadata. To return a user to ServiceMax Go after they submit a form, you must configure the following callback parameters: x-success — When a user saves or sends a form, or transfers a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "Technical Details"
    }
  },
  {
    "content": "shifts.-enabled form. x-cancel — When a user cancels an action, such as discarding changes made to a form. x-error — When the system can’t complete the requested action and generates an error. Open and Prepopulate a TrueContext Form from the ServiceMax Go App Relaunch ServiceMax Go from the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/ServiceMaxLandingPageH1.htm",
      "title": "ServiceMax Integration Overview",
      "section": "Technical Details"
    }
  },
  {
    "content": "Introduction to ServiceMax Integration\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise ServiceMax Integration is the secure communication and data sharing between the TrueContext and ServiceMax systems. The topics in this section describe the benefits that TrueContext provides when you connect your system to ServiceMax. When you integrate your system, TrueContext can update ServiceMax, your system of record, in near real-time attach Documents to the ServiceMax records for audit purposes create follow-up work orders, ready to be scheduled and assigned, and post a notification to Chatter or Zinc, improving your organization’s response time to escalations. The topics in this section also describe how Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/IntroToSMAXIntegrationLandingPageH2.htm",
      "title": "Introduction to ServiceMax Integration",
      "section": "Introduction to ServiceMax Integration"
    }
  },
  {
    "content": "provide mobile users with only the relevant, most current data. and Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. work to enable TrueContext and ServiceMax to exchange data and update forms and records.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/IntroToSMAXIntegrationLandingPageH2.htm",
      "title": "Introduction to ServiceMax Integration",
      "section": "Introduction to ServiceMax Integration"
    }
  },
  {
    "content": "Benefits of a ServiceMax integration\n\nServiceMax provides an asset-centric field service management solution. Many service activities require forms-based data capture. ServiceMax has its own checklist feature for simple workflows. TrueContext extends the ServiceMax functionality by enabling forms with complex business rules, workflows, and advanced data capture methods. TrueContext also provides the following benefits: Updates ServiceMax, your system of record, in near real-time Attaches Documents to the ServiceMax records for audit purposes Creates follow-up work orders, ready to be scheduled and assigned Posts a notification to Chatter or Zinc, improving your organization’s response time to escalations",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/1WhatisaServiceMaxIntegration.htm",
      "title": "What is a ServiceMax Integration?",
      "section": "Benefits of a ServiceMax integration"
    }
  },
  {
    "content": "TrueContext integration points\n\nTrueContext can pull data from ServiceMax records of any Object type into your forms. TrueContext can also create or update ServiceMax records with data from submitted forms. The following integration points in TrueContext enable this type of communication: Salesforce Connection—to establish a secure, OAuth connection between ServiceMax and TrueContext Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data.— to use ServiceMax reports or Salesforce Object Query Language (SOQL) to pull data into TrueContext Salesforce Data Destination—to push data from TrueContext to ServiceMax Objects App-to-App Communication—to exchange data between the ServiceMax app and the TrueContext Mobile",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/1WhatisaServiceMaxIntegration.htm",
      "title": "What is a ServiceMax Integration?",
      "section": "TrueContext integration points"
    }
  },
  {
    "content": "App Tip: TrueContext supports both Salesforce sandbox and production environments.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/1WhatisaServiceMaxIntegration.htm",
      "title": "What is a ServiceMax Integration?",
      "section": "TrueContext integration points"
    }
  },
  {
    "content": "Supported ServiceMax orgs, apps, and extensions\n\nTrueContext supports the following components: ServiceMax Core org ServiceMax Asset 360 org Applications like ServiceMax Go, ServiceMax Zinc, and Salesforce Mobile Field Service",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/1WhatisaServiceMaxIntegration.htm",
      "title": "What is a ServiceMax Integration?",
      "section": "Supported ServiceMax orgs, apps, and extensions"
    }
  },
  {
    "content": "Related topics\n\nHow the ServiceMax Integration Works Examples of a ServiceMax Integration Configure the ServiceMax Integration Points Post a Chatter Feed Item using the Salesforce Apex REST Data Destination",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/1WhatisaServiceMaxIntegration.htm",
      "title": "What is a ServiceMax Integration?",
      "section": "Related topics"
    }
  },
  {
    "content": "Pull data from the ServiceMax org\n\nIf you want to automatically populate a form with data from ServiceMax, set up a Salesforce Data Source in TrueContext. For example, you might have a list of customer names, customer contacts, and customer equipment specifications stored in your ServiceMax account. You can use this data in TrueContext to populate the answer choices for a Dropdown, Multiselect, or Radio Button question, and prefill the answers to certain questions based on the previous responses. The following illustration shows an example of how a TrueContext Data Source pulls Account Names from ServiceMax into a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/2HowtheServiceMaxIntegrationWorks.htm",
      "title": "How the ServiceMax Integration Works",
      "section": "Pull data from the ServiceMax org"
    }
  },
  {
    "content": "Push data to the ServiceMax org\n\nIf you want the submitted form data to update existing records or create new records in ServiceMax, set up a Salesforce Data Destination in TrueContext. For example, your front-line workers enter customer data such as city, email address, and mobile number in TrueContext. You can use this data to update or create records in ServiceMax to keep customer information up-to-date. The following illustration shows an example of how TrueContext pushes data to ServiceMax.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/2HowtheServiceMaxIntegrationWorks.htm",
      "title": "How the ServiceMax Integration Works",
      "section": "Push data to the ServiceMax org"
    }
  },
  {
    "content": "Inbound requests\n\nThe TrueContext Mobile App can receive a “request” or “call” from another app on the same device (the source app). An inbound App‑to‑App request directs the TrueContext Mobile App to launch in the foreground and complete an action. For example, the ServiceMax app can direct the TrueContext Mobile App to: Open a new form and prepopulate it with data from the ServiceMax app. Open a list of forms in the user’s Inbox. Search for previously submitted forms. Open a resource document or image in the Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work..",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/2HowtheServiceMaxIntegrationWorks.htm",
      "title": "How the ServiceMax Integration Works",
      "section": "Inbound requests"
    }
  },
  {
    "content": "Callbacks\n\nThe ServiceMax app can also specify “x‑callback” parameters. These parameters tell the TrueContext Mobile App what to do when a user submits or discards a form, or when there’s an error. For example, after a user sends a form, TrueContext can bring the ServiceMax (calling) app back to the foreground and send the submitted form data to the ServiceMax app. The combination of requests and callbacks enables offline communication between the ServiceMax and TrueContext Mobile App, which is critical for managing step-by-step workflows such as checklists. Note: Your ServiceMax app must be configured to handle the callbacks and any data returned. You might need to check with your own experts to set this up for your specific app. We recommend that you configure a custom App‑to‑App allow list to manage the apps that can receive data from the TrueContext Mobile App. App‑to‑App callbacks are supported on the Advanced and Enterprise tiers only. If you want the mobile device user to stay",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/2HowtheServiceMaxIntegrationWorks.htm",
      "title": "How the ServiceMax Integration Works",
      "section": "Callbacks"
    }
  },
  {
    "content": "in the TrueContext Mobile App, you don’t need to specify a callback parameter. Tip:Organizations that use a work order management system can combine the offline functionality of App‑to‑App communication with the online functionality of a TrueContext cloud-based Data Destination. A Data Destination is typically used to send detailed data to the back-office system of the ServiceMax app. Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. enable full access to the data submitted from the TrueContext Mobile App, including photos.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/2HowtheServiceMaxIntegrationWorks.htm",
      "title": "How the ServiceMax Integration Works",
      "section": "Callbacks"
    }
  },
  {
    "content": "Related topics\n\nWhat is a ServiceMax Integration? Examples of a ServiceMax Integration Configure the ServiceMax Integration Points",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/2HowtheServiceMaxIntegrationWorks.htm",
      "title": "How the ServiceMax Integration Works",
      "section": "Related topics"
    }
  },
  {
    "content": "Launch specific TrueContext forms\n\nFront-line workers often use the ServiceMax app to perform preventive maintenance on assets. They follow the steps outlined in the ServiceMax app to complete their work order. You can incorporate TrueContext into their workflow by using an App‑to‑App request. This integration enables the front-line workers to launch specific TrueContext forms from the ServiceMax app, as shown in the following example:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/3ExamplesOfServiceMaxIntegration.htm",
      "title": "Examples of a ServiceMax Integration",
      "section": "Launch specific TrueContext forms"
    }
  },
  {
    "content": "Automatically select and prepopulate the TrueContext form\n\nYou can save a front-line worker’s time and prevent errors by automatically opening and prepopulating the required TrueContext form. You can achieve this in the following ways: An App‑to‑App request can include parameters that specify the form tag or the form name used to launch a specific form. An App‑to‑App request can dispatch specific data from ServiceMax to the TrueContext Mobile App to prepopulate answers in the form. You can configure Conditional Logic rules to enforce a workflow through the form based on the dispatched answers. A TrueContext Data Source can pull detailed information, such as the parts list, from the ServiceMax org to prepopulate the form:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/3ExamplesOfServiceMaxIntegration.htm",
      "title": "Examples of a ServiceMax Integration",
      "section": "Automatically select and prepopulate the TrueContext form"
    }
  },
  {
    "content": "Return data to the ServiceMax app\n\nAfter submitting a TrueContext form, a front-line worker might have to complete the remaining work order steps in the ServiceMax app. You can make their experience seamless by using App‑to‑App x-callback parameters. You can define App‑to‑App custom callback parameters to pass answers and form metadata from the TrueContext Mobile App to the ServiceMax app. For example, if ServiceMax stores a value for SerialNumber, TrueContext form designers can configure a custom callback parameter for the corresponding TrueContext question. When a technician enters a serial number in the TrueContext Mobile App and then saves or sends the form, the custom parameter name and value is passed back to the ServiceMax app. Note:Your ServiceMax app must be configured to handle the callbacks and any data returned from TrueContext. You might need to check with your own experts to set this up for your ServiceMax app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/3ExamplesOfServiceMaxIntegration.htm",
      "title": "Examples of a ServiceMax Integration",
      "section": "Return data to the ServiceMax app"
    }
  },
  {
    "content": "Create or update ServiceMax records\n\nTrueContext can help you keep your system of record—ServiceMax—up to date. A TrueContext Data Destination can push the data from submitted forms to the ServiceMax org. The system also attaches TrueContext Documents to the ServiceMax work order:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/3ExamplesOfServiceMaxIntegration.htm",
      "title": "Examples of a ServiceMax Integration",
      "section": "Create or update ServiceMax records"
    }
  },
  {
    "content": "Push notifications to Zinc\n\nYour organization can improve its response time, boost customer satisfaction, and improve employee engagement by integrating TrueContext with ServiceMax and Zinc. A TrueContext Data Destination can post data from the submitted forms to Zinc, notifying service managers when a work order is complete.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/3ExamplesOfServiceMaxIntegration.htm",
      "title": "Examples of a ServiceMax Integration",
      "section": "Push notifications to Zinc"
    }
  },
  {
    "content": "Related topics\n\nWhat is a ServiceMax Integration? How the ServiceMax Integration Works Configure the ServiceMax Integration Points Integrate with ServiceMax Zinc",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/3ExamplesOfServiceMaxIntegration.htm",
      "title": "Examples of a ServiceMax Integration",
      "section": "Related topics"
    }
  },
  {
    "content": "Set Up a ServiceMax Integration\n\nServiceMax integrates with TrueContext through a Salesforce Connection and requires a Salesforce Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. or a Salesforce Data Source Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data. to share information between systems. Data Sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/SetUpaSMAXIntegrationLandingPageH2.htm",
      "title": "Set Up a ServiceMax Integration",
      "section": "Set Up a ServiceMax Integration"
    }
  },
  {
    "content": "errors, and make it easy to provide mobile users with only the relevant, most current data. retrieve data from ServiceMax to populate response choices in TrueContext forms. Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. send data from TrueContext form submissions to ServiceMax records. The topics in this section describe how to choose and configure integration points to enable TrueContext to share data with ServiceMax. These topics also describe how to configure App‑to‑App Communication to enable the user to open the TrueContext Mobile App from ServiceMax Go. This creates a seamless workflow when moving between systems. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/SetUpaSMAXIntegrationLandingPageH2.htm",
      "title": "Set Up a ServiceMax Integration",
      "section": "Set Up a ServiceMax Integration"
    }
  },
  {
    "content": "Related topics\n\nWhat is a ServiceMax Integration? How the ServiceMax Integration Works Examples of a ServiceMax Integration",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/4ConfigureIntegrationPoints.htm",
      "title": "Configure the ServiceMax Integration Points",
      "section": "Related topics"
    }
  },
  {
    "content": "Learning Objectives\n\nAfter completing this unit, you will be able to: Configure a connection between TrueContext and ServiceMax Configure a User Defined Custom Action in ServiceMax Launch the TrueContext Mobile App from the ServiceMax App, complete a form, updating the Work Order details in ServiceMax",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Learning Objectives"
    }
  },
  {
    "content": "Prerequisites\n\nIn order to configure an integration between TrueContext and ServiceMax, you will require: An active ServiceMax subscription The ServiceMax Go or ServiceMax FSA App installed on mobile devices An active TrueContext account The TrueContext Mobile App installed on mobile devices A target form in TrueContext that will receive data from ServiceMax A Work Order dispatched to your user in ServiceMax",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Getting Started with ServiceMax\n\nServiceMax is the global market-leader in Service Execution Management, providing a cloud-based software platform that improves the productivity of complex, equipment-centric service execution for OEMs, operators, and 3rd-party service providers. ServiceMax FSM optimizes execution of both short cycle operations - emergency work, meter services, compliance jobs, maintenance and inspection-and long cycle operations, such as outage management, that encompass multiple days, tasks, and people.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Getting Started with ServiceMax"
    }
  },
  {
    "content": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax\n\nHere is a common use case: A technician who has been assigned a work order in ServiceMax must complete an extensive checklist in the TrueContext Mobile App. In TrueContext Create a Salesforce Connection between TrueContext and your ServiceMax org by navigating to Forms & Integrations > Connections A Connection is an integration point that's used to link a TrueContext Data Source or Data Destination to an external service to import or export data. Data Destinations and Data Sources that share the same external service can also share the same Connection. > Create Connection. Name the Connection, and select the FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. where",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax"
    }
  },
  {
    "content": "the form to be dispatched to can be found. Establish your connection by clicking Connect, and entering your ServiceMax Admin user credentials. Navigate to the form which you would like to Dispatch The term \"dispatch\" refers to the act of sending a form to a mobile user or customer. Typically, a dispatched record includes some information pre-filled to give the recipient context for the work to be done. Dispatch can be manual or automated (using a Dispatch Data Destination or the TrueContext REST API). from the ServiceMax App. (Form > Pages & Questions Tab > Label column). You will need to reference the Question Unique IDs when setting up your User Defined Custom Action in ServiceMax. In ServiceMax Navigate to ServiceMax Setup in the ServiceMax Admin menu. Navigate to Service Flow Manager > SFM Custom Actions. Manage Customer Actions For > Select Work Order from the dropdown menu. In User-defined Custom Actions click the New button. Select your Action Type:To integrate with the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax"
    }
  },
  {
    "content": "ServiceMax Go or FSA applications, proceed to a. App-to-App. If you are running ServiceMax in a browser on Windows and calling the TrueContext Mobile App Windows application, proceed to b. URL. App-to-App. Action Title: <Name your action> Action ID: <Give your action an ID> Scheme Name: truecontext Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Path: x-callback-url/open URL. Action Title: <Name your action> Action ID: <Give your action an ID> Open URL in: Existing Window URL to Launch: truecontext://x-callback-url/open Define your Parameters Next, define the list of parameters to be sent from the ServiceMax app to the TrueContext Mobile App. The name parameter is required, and should be used to identify",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax"
    }
  },
  {
    "content": "the correct form to be opened in the TrueContext Mobile App. In the example below, the form to be opened is called Inspection Checklist. All other parameters are mapped based on what data you wish to dispatch into the form, from the relevant Work Order in ServiceMax. The Parameter Name on the left hand side is the question Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents.. In this example, the Record ID (question Unique ID: RecordID, ServiceMax work order parameter value: Record ID) will be mapped to the question Work Order ID. To send strings of text, select Value as the Parameter Value Type. To send the value which is stored within a field in the given Work Order in ServiceMax, select Field Name as the Parameter Value Type, and then select the ServiceMax field you wish to map.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax"
    }
  },
  {
    "content": "Exclusively for use in App‑to‑App configurations, configure x-success, x-cancel, and x-error parameters with parameter value svmx://x-callback-url to bring the originating ServiceMax application back to the foreground upon a success, error or cancel event in the TrueContext Mobile App. Note: These callback parameters are not compatible with a URL configuration. To return to ServiceMax, users must manually return to their browser. When you have completed the mapping of your parameters, ensure that you Save & Close the page. In ServiceMax - Add a new SFM Wizard Step Navigate to ServiceMax Setup in the ServiceMax Admin menu. Navigate to Service Flow Manager > SFM Wizards. Select Object > Work Order. Under the Custom SFM Wizards, select the Wizard which applies to your users, and click Edit. Navigate to the Manage Wizard Steps tab, and click on the New Step button. Wizard Step Type select Others. Step Name select your action, as named in the Action Title above. Title, enter the name of the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax"
    }
  },
  {
    "content": "step as you would like it to show up for your users in the ServiceMax app. When you have completed the set-up of your FSM Wizard Step, ensure that you Save & Close the page. In ServiceMax Go Ensure that your configuration has synced to your device. Open the ServiceMax Go app, press More, in the bottom right hand corner. Sync > Run Configuration Sync. Navigate to a Work Order assigned to the user you are logged in as. Open the Work Order, press the Work Order number to see the Work Order overview. Open the burger menu in the bottom right hand corner. Your new User Defined Custom Action will appear in the Actions menu with the step name as defined by you in step 6 above. Selecting the action will open the TrueContext Mobile App, taking you directly into the app, and dispatching the work order details, as per your configuration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Your Use Case - Launch a form in the TrueContext Mobile App that’s populated with data from ServiceMax"
    }
  },
  {
    "content": "Troubleshooting Tips\n\nA common approach to troubleshooting involves creating a new SFM custom action with only the truecontext://x-callback-url/open parameter configured. If the app launches successfully, then you can continue building from there. For more information on App‑to‑App communication, see the topic App‑to‑App Communication.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/IntegrateWithServiceMax.htm",
      "title": "Integrate with ServiceMax",
      "section": "Troubleshooting Tips"
    }
  },
  {
    "content": "Learning Objectives\n\nAfter completing this unit, you will be able to: Configure a group in Zinc to receive messages from TrueContext Send messages to Zinc using an HTTP Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. Configure a Help Link to launch a conversation in Zinc",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Learning Objectives"
    }
  },
  {
    "content": "Getting Started with the Zinc Messaging API\n\nZinc connects technicians in real time with the people and information needed to confidently get the job done quickly and correctly, allowing the organization to reduce mean time to repair, boost customer satisfaction and improve employee engagement. Using the Zinc Messaging API, in conjunction with TrueContext HTTP data destination, you can send messages to Zinc following the submission of a Form. Messages you compose in TrueContext can be delivered to a group, hotline, or directly to a user.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Getting Started with the Zinc Messaging API"
    }
  },
  {
    "content": "Step-by-Step\n\nYour Use Case - Post a Message to Zinc Here is a common use case: A group of service managers would like to be notified in Zinc whenever a Work Order has been completed. The following video provides a quick overview of the workflow to give further context to the example which follows. In Zinc 1. From the Zinc Admin Console, create an Official Group. 2. Next, create a bot or a hotline group in your Official Group. Take note of the e-mail address associated with your Bot or Hotline. The characters preceding @bots.zincit.io or @hotlines.zincit.io make up your Bot Identification Token or Integration Token. You will need this token when configuring your Data Destination in TrueContext. In TrueContext 1. Set up your HTTP Connection - Select the appropriate FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Step-by-Step"
    }
  },
  {
    "content": "users have access to the forms in that FormSpace., enter the Base URL (https://api.zincit.io), and select the box for Anonymous Access. 2. Compose your Document - Create a new Template-driven Text Document. The following example uses Handlebars to compile the message which we will send to Zinc. The body of the JSON to be sent to Zinc contains three sentences. First, there is a hard-coded sentence indicating that a Work Order has been completed, along with a dynamic reference to Work Order Number. {{ answers.WorkOrderNumber.[0]}} The second sentence includes a URL which is composed of a hard-coded reference to the ServiceMax Org where the completed work order can be viewed: https://na136.salesforce.com/{{answers.RecordID.[0]}} Followed by a dynamic reference to the Record ID, which is the External ID for the Work Order in ServiceMax. https://na136.salesforce.com/{{answers.RecordID.[0]}} Tip: In this example, the Work Order Number and Record ID have been dispatched to TrueContext using a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Step-by-Step"
    }
  },
  {
    "content": "User-Defined Custom Action in Service Max. To reference this data dynamically, we simply use the question unique ID for the questions in your form which will capture this data. The Work Order Number and Record ID could also be hard coded, instead. The entirety of the Handlebars template is provided here. Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 { \"body\": \"A Work Order has been completed: {{ answers.WorkOrderNumber.[0]}}. \\n View Work Order in ServiceMax - https://na136.salesforce.com/{{answers.RecordID.[0]}}. \\n View Service Report in TrueContext - https://live.prontoforms.com/data/{{dataRecord.identifier}}.pdf \" } 3. Configure your Data Destination Configure an HTTP Data Destination. Under Connection Configuration, select the Connection established in Step 1 \"Set up",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Step-by-Step"
    }
  },
  {
    "content": "your Connection\" above. For HTTP Method, select POST. In the URL Suffix, enter /hooks/v1/:id/message, where \":id\" is replaced with your Bot Identification Token, or Integration Token as described above. 4. Submit your FormOnce you have submitted your form, check Zinc to see your new message! Extend Your Use Case - Optionally Start a Conversation in Zinc Here is a common use case: While completing a form, a technician may seek help from a product or service specific Hotline as defined in Zinc. Using the Web Link help type on an Information Label question, we can launch a conversation directly from the form. Zinc Hotlines are powered by Bots. So when someone sends a message to a hotline they are actually sending a message to a Hotline Bot. The Hotline Bot is a participant in the conversation and when it receives a message is creates a request. Your Web URL should be configured as follows: https://zinc-app.com/cnv?participants=ParticipantParameter Where the participants parameter is the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Step-by-Step"
    }
  },
  {
    "content": "token of the Hotline Bot (which can be found in the Zinc Admin UI, as described above). Note: Using the same configuration above, you could also launch a conversation with an Official Group by referencing a Bot token, or an individual participant. Simple Templates - Using DREL to compose basic messages If you are composing a basic message which does not require Conditional Logic, then you may follow the simple examples below which make use of a DREL Document Template. Example 1 Hardcode a message to be sent to an Official Group or Hotline in Zinc. { \"body\": \"hello world.\"} Example 2 Using DREL, compose a message to an Official Group or Hotline in Zinc. { \"body\": \"%a[QuestionLabel]\"} Example 3 Send a direct message to Zinc users. Identify recipients by email, as shown in the example below. { \"recipients\": [\"address@example.com\"], \"body\": \"hello world.\"} Example 4 Optionally, use DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Step-by-Step"
    }
  },
  {
    "content": "such as dates, usernames, or answers to questions in forms. to enter the recipient's email address. { \"recipients\": [\"%u[email]\"], \"body\": \"hello world.\"}",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/360033570611.html",
      "title": "Integrate with ServiceMax Zinc",
      "section": "Step-by-Step"
    }
  },
  {
    "content": "Launch TrueContext from ServiceMax Go\n\nThe ServiceMax Go app can connect to and launch TrueContext through App‑to‑App App‑to‑App communication is a way to exchange data between apps on a device, even if the device is offline. App‑to‑App communication includes both inbound requests to the TrueContext app and, on the Advanced and Enterprise tiers, outbound “callbacks” to an allowed domain or app. requests. Callback parameters enable TrueContext to relaunch ServiceMax Go after the user submits a form. The topics in this section describe how to set up custom App‑to‑App actions in ServiceMax to enable users to move between the two apps. Available on all tiers, with more options on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/LaunchProntoFormsFromSMAXGoLandingPageH2.htm",
      "title": "Launch TrueContext from ServiceMax Go",
      "section": "Launch TrueContext from ServiceMax Go"
    }
  },
  {
    "content": "ServiceMax prerequisites\n\nYou must have an active ServiceMax Core subscription. You must install and sign in to the ServiceMax Go app on your Android, iOS, or Windows device. You must dispatch a work order that is linked to an active wizard. The User-defined Custom Actions setup requires Unique Identifiers for questions in TrueContext. Decide which TrueContext answers you want to prepopulate and keep the associated Unique Identifiers ready for use. Info:The topic Overview: Unique IDs describes how to find the Unique Identifiers in TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/5PrerequisitesAppToAppwithGo.htm",
      "title": "Prerequisites for Using App-to-App Communication with ServiceMax Go",
      "section": "ServiceMax prerequisites"
    }
  },
  {
    "content": "TrueContext prerequisites for inbound requests\n\nApp‑to‑App communication requires that field users install and sign in to the TrueContext Mobile App. Note: App‑to‑App requests sent to logged-out users fail without triggering an x-error callback. The search action works when the TrueContext Mobile App user is online, belongs to a TrueContext team with Search enabled, and has access to Search-enabled forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/5PrerequisitesAppToAppwithGo.htm",
      "title": "Prerequisites for Using App-to-App Communication with ServiceMax Go",
      "section": "TrueContext prerequisites for inbound requests"
    }
  },
  {
    "content": "TrueContext prerequisites for callbacks\n\nYour TrueContext Team must be on the Advanced or Enterprise tier. You must be an Admin user or a User with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Tip:If you’re not an Admin user, you should have the following permissions so that you can thoroughly test your forms:Can TestCan ViewCan Submit Configure a custom App‑to‑App allow list to include https://go.servicemax.io/ The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all callbacks allowed. For teams created after February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom App‑to‑App allow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/5PrerequisitesAppToAppwithGo.htm",
      "title": "Prerequisites for Using App-to-App Communication with ServiceMax Go",
      "section": "TrueContext prerequisites for callbacks"
    }
  },
  {
    "content": "list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/5PrerequisitesAppToAppwithGo.htm",
      "title": "Prerequisites for Using App-to-App Communication with ServiceMax Go",
      "section": "TrueContext prerequisites for callbacks"
    }
  },
  {
    "content": "Related topics\n\nOpen and Prepopulate a TrueContext Form from the ServiceMax Go App Relaunch ServiceMax Go from the TrueContext Mobile App Configure the ServiceMax Integration Points",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/5PrerequisitesAppToAppwithGo.htm",
      "title": "Prerequisites for Using App-to-App Communication with ServiceMax Go",
      "section": "Related topics"
    }
  },
  {
    "content": "Create User-defined Custom Actions in ServiceMax\n\nSign in to your ServiceMax Core org. Go to ServiceMax Setup, and then select Service Flow Manager. Result: The system displays the Service Flow Manager dropdown list. Select Custom Actions. Result: The system displays the Custom Actions page. From the Manage Custom Actions For list, select Work Order. Result: The system displays the Pre-configured Custom Actions and User-defined Custom Actions sections. In the User-defined Custom Actions section, select New. Result: The system displays the Custom Action details for Work Order page. From the Action Type list, select App-to-App. Result: The system expands the Custom Action details for Work Order section for further configuration. Tip: If your front-line workers access the ServiceMax work orders from a browser (instead of the Go app), select the URL Action Type. Enter a descriptive Action Title, a unique Action ID, and the TrueContext App‑to‑App URL scheme. Info:We're now TrueContext.Use",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Create User-defined Custom Actions in ServiceMax"
    }
  },
  {
    "content": "truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 The Action Title must be descriptive. The system displays this title in the ServiceMax Go Actions menu. When an app user selects this title, an App‑to‑App action is triggered. The Action ID is a unique identifier and can include alphanumeric and special characters. The Description is optional. The Schema Name must be truecontext or prontoforms—as per the registered App‑to‑App URL scheme. Tip:If you selected the URL Action Type, use the truecontext://x-callback-url/action format for URL to Launch. This format requires a supported callback action. The Path must include an x-callback-url to trigger specific actions from the ServiceMax app. For example, x-callback-url/open opens a form or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Create User-defined Custom Actions in ServiceMax"
    }
  },
  {
    "content": "list of forms in the TrueContext Mobile App from the user’s Inbox, Forms, or Drafts. Info:The topic App‑to‑App Actions provides a list of actions you can trigger from the ServiceMax app. Define the list of parameters to be sent from the ServiceMax app to the TrueContext Mobile App: Enter a Parameter Name based on the TrueContext specifications for the callback action additional parameters or use a question unique identifier. For example: Parameter Description name Open a form or list of forms based on the form name. tag Open a form or a list of forms based on one or more form tags. formID Open a form or list of forms based on the form ID. This is the unique identifier of an empty form. Info:The topic App‑to‑App Action Details provides a list of additional parameters and their use case. The Parameter Value Type enables you to send static text or values stored in ServiceMax fields. Do you want to send static text from ServiceMax Go to the TrueContext app? If yes, select Value. The system",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Create User-defined Custom Actions in ServiceMax"
    }
  },
  {
    "content": "sends static text. If no, select Field Name. The system sends the value stored in a ServiceMax field. Enter a Parameter Value. It can be static text, such as the TrueContext form name a ServiceMax unique identifier, such as Record ID, or a field label to reference values stored in ServiceMax fields. The system sends field values to the mapped TrueContext questions and prepopulates the responses. Info:The topic Supported question types for App‑to‑App requests lists the question types that can be prepopulated.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Create User-defined Custom Actions in ServiceMax"
    }
  },
  {
    "content": "Add a Service Flow Manager Wizard step in ServiceMax\n\nGo to ServiceMax Setup, and then select Service Flow Manager. Result: The system displays the Service Flow Manager list. Select Wizards. Result: The system displays the Service Flow Wizards page. From the Select Object dropdown list, select Work Order. From the Wizard Status list, select Active. Result: The system displays a list of active wizards. Select an active wizard and then select Edit. Result: The system displays the Edit SFM Wizard page. On the Manage Wizard Steps tab, select New Step. Result: The system expands the page for further configuration. From the Wizard Step Type list, select Others. From the Step Name list, select the User-defined Custom Action you configured. Result: The system automatically populates the Step ID, Title, and Description. Select Save. Result: The system adds the User-defined Custom Action as an SFM Wizard step. Select Save & Close. Result: The system displays the edited wizard in the list of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Add a Service Flow Manager Wizard step in ServiceMax"
    }
  },
  {
    "content": "active wizards.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Add a Service Flow Manager Wizard step in ServiceMax"
    }
  },
  {
    "content": "Test the configuration in ServiceMax Go\n\nSign in to your ServiceMax Go app. Go to Sync, and then select Run Configuration Sync. Result: The system completes the sync and returns to the main app screen. Select Explore and open a work order. Open the list of Actions. Select the wizard step you configured. Result: A prepopulated form opens in the TrueContext Mobile App. Tip: If you can’t successfully launch the TrueContext Mobile App, create a new User-defined Custom Action with only the truecontext://x-callback-url/open request configured. If the app launches successfully, then you can add more parameters.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Test the configuration in ServiceMax Go"
    }
  },
  {
    "content": "Related topics\n\nPrerequisites for Using App-to-App Communication with ServiceMax Go Relaunch ServiceMax Go from the TrueContext Mobile App Configure the ServiceMax Integration Points",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/6OpenaFormDispatchfromGo.htm",
      "title": "Open and Prepopulate a TrueContext Form from the ServiceMax Go App",
      "section": "Related topics"
    }
  },
  {
    "content": "Steps to specify x‑callback parameters in ServiceMax\n\nDo you have a ServiceMax User-defined Custom Action configured with a TrueContext inbound App‑to‑App request? If yes, edit the existing custom action. If no, create a custom action using the steps described in the topic Open and Prepopulate a TrueContext Form from the ServiceMax Go App. Configure the x‑callback parameters to include in the request from the ServiceMax app to the TrueContext Mobile App as follows: For the Parameter Name, enter the TrueContext callback parameters as described in the following table. When… The system triggers an… the user saves or sends a form, or when they transfer a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form x-success callback the user cancels an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/7SendAnswersBacktoSMAXGo.htm",
      "title": "Relaunch ServiceMax Go from the TrueContext Mobile App",
      "section": "Steps to specify x‑callback parameters in ServiceMax"
    }
  },
  {
    "content": "action, such as discarding any changes made to the form x-cancel callback the system can’t complete the requested action and generates an error x-error callback Note:To make sure that the user always returns to the ServiceMax Go app, you must configure all three x‑callback parameters. For the Parameter Value Type, select Value. For the Parameter Value, enter a ServiceMax deep link URL. For example, https://go.servicemax.io launches the ServiceMax Go app. Do you want to return the submitted form data from TrueContext to ServiceMax Go? If yes, you must configure the x‑success callback parameter value as per the ServiceMax documentation. Note: Your ServiceMax app must be configured to handle the callbacks and any data returned from TrueContext. You might need to check with your own experts to set this up for your specific app. Use the TrueContext Form Builder to configure custom callback parameters. We recommend that you configure a custom App‑to‑App allow list to manage the apps that can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/7SendAnswersBacktoSMAXGo.htm",
      "title": "Relaunch ServiceMax Go from the TrueContext Mobile App",
      "section": "Steps to specify x‑callback parameters in ServiceMax"
    }
  },
  {
    "content": "receive data from TrueContext. If no, go to step 4. Select Save and Close. Is the configured custom action part of an active wizard? If yes, go to step 6. If no, add the custom action to an active wizard. Test the configuration. Launch the ServiceMax Go app, open a work order, and select the configured custom action. Result: ServiceMax Go launches the TrueContext Mobile App. When a user submits or discards a form, or when there’s an error, the callbacks are triggered. The system brings the ServiceMax Go app back to the foreground and if configured, returns the TrueContext form data.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/7SendAnswersBacktoSMAXGo.htm",
      "title": "Relaunch ServiceMax Go from the TrueContext Mobile App",
      "section": "Steps to specify x‑callback parameters in ServiceMax"
    }
  },
  {
    "content": "Related topics\n\nPrerequisites for Using App-to-App Communication with ServiceMax Go Open and Prepopulate a TrueContext Form from the ServiceMax Go App Send Data from TrueContext to ServiceMax Go",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/7SendAnswersBacktoSMAXGo.htm",
      "title": "Relaunch ServiceMax Go from the TrueContext Mobile App",
      "section": "Related topics"
    }
  },
  {
    "content": "How the App‑to‑App call to the TrueContext Mobile App works\n\nSend Data from TrueContext to ServiceMax Go The ServiceMax Go app “calls” the TrueContext Mobile App and provides information about the ServiceMax object and record. As part of that call, ServiceMax Go asks the TrueContext Mobile App to “call back” with data to update the record. ServiceMax Go generates this call for you when you set up a ServiceMax Service Flow Manager (SFM) Transaction an SFM wizard step formula fields to concatenate the ServiceMax Go URL scheme (https://go.servicemax.io) with the the SFM Transaction ID and the ID of the record to be updated a ServiceMax Go Custom Action, and TrueContext Custom callback parameters App‑to‑App custom callback parameters are user-defined parameters that indicate which answers and metadata to pass from the TrueContext app to another app on a user’s device. and question unique IDs that match the ServiceMax fields. The process of sending a call to and receiving a callback from",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "How the App‑to‑App call to the TrueContext Mobile App works"
    }
  },
  {
    "content": "the TrueContext Mobile App happens in the following order. A ServiceMax Go Custom Action opens a form in the TrueContext Mobile App. The App‑to‑App call sends the Work Order Number and Record ID to the TrueContext Mobile App as answers to questions in the form (optional). The user works on and saves, transfers, or submits the form. The x-success callback parameter As part of an App‑to‑App call to the TrueContext app, x-callback parameters provide a way to launch and send data to the calling app. These include x-success, x-cancel, and x-error parameters. tells the TrueContext Mobile App to: Send the form data specified in the custom callback parameters to update the ServiceMax Go record. Relaunch the ServiceMax Go app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "How the App‑to‑App call to the TrueContext Mobile App works"
    }
  },
  {
    "content": "Example of an App‑to‑App call\n\nInfo:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 ServiceMax generates the call to the TrueContext Mobile App—also known as a deep link URL—when a user executes a Custom Action. The call uses the x-callback-url specification and might look something like this. truecontext://x-callback-url/open?name=Inspection%20Checklist&WorkOrderNumber=WorkOrderNumberValue&RecordID=recordIDValue&x-success=https://go.servicemax.io/sfm/SFM ID/Record ID&x-cancel=https://go.servicemax.io&x-error=https://go.servicemax.io?data= where SFM ID and Record ID represent the actual values of those identifiers. The following sections describe each part of this App‑to‑App call and how to set it up in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "Example of an App‑to‑App call"
    }
  },
  {
    "content": "ServiceMax Go and TrueContext.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "Example of an App‑to‑App call"
    }
  },
  {
    "content": "ServiceMax setup\n\nInfo:The ServiceMax help pages provide detailed information about the ServiceMax setup. Your ServiceMax setup must include the following configuration for the parent object (such as a Work Order). This configuration generates the App‑to‑App call (deep link URL) to the TrueContext Mobile App and tells it what to send back to ServiceMax. Tip:This example shows you how to configure ServiceMax to update dynamically the record that initiates the App‑to‑App call. You can also specify a static ID to update a specific record. Create or edit an SFM Transaction. Specify the fields that you want to update with data from the TrueContext Mobile App. You do this on the Layout Editor tab, in the Parent Object Sections. The following example shows an SFM Transaction for the Work Order object, with the Order Status, Inspection Start Time, and Inspection End Time fields added. Note:Each field that you add in the SFM Transaction must match a question unique identifier in the TrueContext",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "ServiceMax setup"
    }
  },
  {
    "content": "Mobile App form. For the target object, create an SFM wizard step and specify the SFM Transaction from step 1. Configure a custom field with a formula to convert the 15-digit record ID to an 18-digit ID referenced by the ServiceMax API. Enter the following formula: CASESAFEID(Id) Configure a second custom formula field to concatenate the SFM Transaction ID and the Record ID. In this example, this second custom field is called Callback Parameter. Enter the following formula:\"https://go.servicemax.io/sfm/SFM ID/\" & FieldApiName & \"?\" where https://go.servicemax.io/ is the ServiceMax Go URL scheme. sfm/SFM ID specifies the SFM Transaction ID. & concatenates values. FieldApiName is the API name of the formula field that you configured in step 3. This is the formula to get the Record ID. \"?\" is a formatting requirement that marks the beginning of the parameters defined in the TrueContext Form Builder, including data-source (mandatory) and mode (optional). Define a custom App-to-App action",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "ServiceMax setup"
    }
  },
  {
    "content": "to open the TrueContext Mobile App. This is where you define the App‑to‑App call, which includes the x‑callback‑url action to open the form the Work Order Number and Record ID values to send to the TrueContext Mobile App other values to send, such as the name of the form to be opened or prepopulated answers from the Work Order record itself, and x‑callback parameters As part of an App‑to‑App call to the TrueContext app, x-callback parameters provide a way to launch and send data to the calling app. These include x-success, x-cancel, and x-error parameters. to send the data back from the TrueContext Mobile App to ServiceMax Go when the form is submitted, transferred, or saved. The x-success parameter in this example references the custom formula field that you created in step 4. Info: The topic App‑to‑App x-callback parameters describes how the x-callback parameters work and the default metadata that the x-success callback parameter sends back. Note:Each Parameter Name defined in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "ServiceMax setup"
    }
  },
  {
    "content": "Custom Action must match a question unique identifier in the TrueContext Mobile App form.To make sure that the user always returns to the ServiceMax Go app, we recommend that you define all of the x-callback parameters: x-success, x-error, and x-cancel.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "ServiceMax setup"
    }
  },
  {
    "content": "TrueContext setup\n\nIn the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., define a custom App‑to‑App allow list An App‑to‑App allow list is a list of URLs and third-party applications that can receive data from TrueContext in a callback. to manage the apps that can receive data from TrueContext. Username > Team Settings The Team Settings page is the page where an admin can manage their team's account and edit certain information, such as assigning a Problem Contact Email Address, toggling push notifications, and viewing the account's billing information. > Security > App-to-App Allow List > Update. In the TrueContext Form Builder, set up questions with unique IDs that match the Parameter Names in your ServiceMax Custom Action and the field names in your SFM Transaction. Forms & Integrations > List Forms > Create Form or Edit Form For this example, set up the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "following question unique IDs: WorkOrderNumber RecordID OrderStatus InspectionStartTime InspectionEndTime Configure the Custom callback parameters App‑to‑App custom callback parameters are user-defined parameters that indicate which answers and metadata to pass from the TrueContext app to another app on a user’s device.. These parameters specify the data to send back from the TrueContext Mobile App to the ServiceMax Go app. Note:The parameter payload sent from TrueContext must be in JSON format and URL‑encoded. When you use the Form Builder to define custom callback parameters, TrueContext automatically URL-encodes the payload. Go to Settings > Workflow Settings > App-to-App Callbacks. The data-source parameter is used to pass data to the target SFM Transaction. For the data-source parameter DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. Expression, create a string",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "that contains the parent object API name, and a series of key:value pairs, one for each field in the SFM Transaction that has data you want to use to update ServiceMax Go. {\"SVMXC__Service_Order__c\": [{\"Order_Status__c\": \"%a[OrderStatus]\", \"Inspection_Start_Time\": \"%a[InspectionStartTime]\", \"Inspection_End_Time\": \"%a[InspectionEndTime\"}]} Info: The topic DREL Quick Reference provides an overview of how you can use DREL to pull submitted data from TrueContext. Value Description SVMXC__Service_Order__c API name of the Work Order object Order_Status__c API name of a field specified in the SFM Transaction %a[OrderStatus] Unique ID A Unique ID refers to the specific identifier of a question, form page, form section, or Data Destination. Unique IDs are used as reference points when pulling data for conditional logic, Analytics projects, Data Destinations, and Documents. of the “Order Status” question in your form Inspection_Start_Time__c API name of another field specified in the SFM",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "Transaction %a[InspectionStartTime] Unique ID of the “Inspection Start Time” question in your form Inspection_End_Time__c API name of another field specified in the SFM Transaction %a[InspectionEndTime] Unique ID of the “Inspection End Time” question in your form Note:You must define the data-source parameter to send data back from the TrueContext Mobile App to the ServiceMax Go app. You can configure other, optional parameters, such as mode, for example. Save and Deploy the form. Advise users to Sync and Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "be manually or automatically initiated and requires network connectivity. both the ServiceMax Go and TrueContext Mobile Apps. Result: The x-success callback executes when a user opens the TrueContext Mobile App from a ServiceMax Go Custom Action and saves, transfers, or submits a form. The x-success callback defined in this example re-launches the ServiceMax Go app redirects the user to the original record in the ServiceMax Go app, and updates the ServiceMax Go values specified in the data-source parameter.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/SMAXGoCallbackData.htm",
      "title": "Send Data from TrueContext to ServiceMax Go",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "ServiceMax Integration Cookbook\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The ServiceMax Integration Cookbook provides useful “recipes” for frequently used ServiceMax Integration procedures. The topics in this section describe how TrueContext can connect to different ServiceMax products to share information about submitted forms.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/LandingPages/SMAXIntegrationCookbookLandingPageH2.htm",
      "title": "ServiceMax Integration Cookbook",
      "section": "ServiceMax Integration Cookbook"
    }
  },
  {
    "content": "Prerequisites\n\nIn your Zinc app, create a bot or a hotline group in your Official Group. Take note of the Bot Identification Token or Integration Token associated with your bot or hotline. You will need them for the Data Destination configuration. Bot Identification Token—characters preceding @bots.zincit.io Integration Token—characters preceding @hotlines.zincit.io The following example shows a Bot Identification Token and an Integration Token.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Scenario\n\nWhen front-line workers are in the field, they often use Zinc to communicate with other people in the organization. You might want to automate the flow of information from the front-line workers to their supervisors. For example, you can post an automated Zinc notification when a front-line worker completes a work order. The TrueContext HTTP Data Destination can connect with the Zinc Messaging API to programmatically send updates from the field to people, groups, bots, or hotlines in Zinc.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Scenario"
    }
  },
  {
    "content": "Steps to post notifications to Zinc\n\nCreate a Handlebars Document in JSON format. Template-driven text documents such as Handlebars provide you with ways to build your own data structure, and export data as any file type. Configure the Document Basics tab as needed. Info: The topic Handlebars Document shows how to create a Handlebars Document Template. On the Configuration tab, select the data structure, select the file extension, and enter the request body as shown in this example: In this example, the Handlebars Template is:{ \"body\": \"A Work Order has been completed: {{ answers.WorkOrderNumber.[0]}}. \\n View Work Order in ServiceMax - https://na136.salesforce.com/{{answers.RecordID.[0]}}. \\n View Service Report in ProntoForms - https://live.prontoforms.com/data/{{dataRecord.identifier}}.pdf \" } The following table describes the body structure. Part Purpose A Work Order has been completed: This static string indicates that the work is complete. {{ answers.WorkOrderNumber.[0]}} This",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Steps to post notifications to Zinc"
    }
  },
  {
    "content": "expression provides a dynamic reference to the Work Order Number using WorkOrderNumber—a TrueContext question Unique Identifier. Note:Make sure your form has a text question with the Unique Identifier WorkOrderNumber. This question can be prepopulated using an App‑to‑App request or a Salesforce Data Source. View Work Order in ServiceMax - https://example.salesforce.com This static string references the ServiceMax org where you can view the Work Order. Note:Make sure you replace the example URL with your org URL. {{answers.RecordID.[0]}} This expression provides a dynamic reference to the ServiceMax Record ID using RecordID—a TrueContext Unique Identifier. Note:Make sure your form has a text question with the Unique Identifier RecordID. This question can be prepopulated using an App‑to‑App request or a Salesforce Data Source. View Service Report in TrueContext - https://live.prontoforms.com/data/{{dataRecord.identifier}}.pdf This combination of a static string and an expression enables",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Steps to post notifications to Zinc"
    }
  },
  {
    "content": "the Zinc users to view the TrueContext form submission document. Select Create. Result: The system creates a Handlebars document that you can link to your form. Create an HTTP Data Destination. On the Connection tab, name your connection, enter the Base Connection URL https://api.zincit.io, and then select Anonymous Access: On the Request Configuration tab, select the POST HTTP Method, and then enter the URL Suffix hooks/v1/:id/message. Replace the URL Suffix“:id” with your Bot Identification Token, or Integration Token: Configure the Destination Basics, Filtering and Response Configuration tabs as needed. Info:The topic HTTP Data Destination shows how to configure an HTTP Data Destination. Select Create. Result: The system creates an HTTP Data Destination that you can link to your form. Link the Data Destination and the Document you configured to your form. Save and deploy your form. Result: When a front-line worker submits the form, TrueContext sends a Zinc notification as shown in",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Steps to post notifications to Zinc"
    }
  },
  {
    "content": "the following example:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Steps to post notifications to Zinc"
    }
  },
  {
    "content": "Variations of this recipe\n\nYou can use variations of the JSON request body to send different messages to Zinc. When you want to… Use a request body like… Hard-code a message { \"body\": \"Work order closed\" } Send specific form answers using DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. { \"body\": \"%a[QuestionLabel]\" } Send a direct message to a Zinc user { \"recipients\": [\"address@example.com\"], \"body\": \"hello world.\" } Send a direct message to a Zinc user using DREL { \"recipients\": [\"%u[email]\"], \"body\": \"Work order closed\" } Related topics Launch a Zinc Conversation from a Form Open and Prepopulate a TrueContext Form from the ServiceMax Go App Relaunch ServiceMax Go from the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Variations of this recipe"
    }
  },
  {
    "content": "Related topics\n\nLaunch a Zinc Conversation from a Form Open and Prepopulate a TrueContext Form from the ServiceMax Go App Relaunch ServiceMax Go from the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/11ZincRecipe.htm",
      "title": "Automatically Post Notifications to Zinc",
      "section": "Related topics"
    }
  },
  {
    "content": "Prerequisites\n\nIn your Zinc app, create a bot or hotline group for your Official Group. Take note of the email address associated with your bot or hotline as shown in the following examples:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/12ZincConversationRecipe.htm",
      "title": "Launch a Zinc Conversation from a Form",
      "section": "Prerequisites"
    }
  },
  {
    "content": "Scenario\n\nDuring a site inspection, front-line workers may need guidance from a product or service specific Hotline as defined in Zinc. You can configure Help Options Help Options are ways to add help content, such as YouTube videos, web pages, text, or images, to questions in a form. Mobile users simply tap the help icon next to a question to see the help that the form designer provided. that enable front-line workers to launch Zinc conversations from the TrueContext forms. Zinc Hotlines are powered by bots. When someone sends a message to a hotline, they are actually sending a message to a Hotline Bot. The Hotline Bot is a participant in the conversation and when it receives a message it creates a request. Using the same configuration, you could also launch a conversation with an Official Group (by referencing a Bot token), or an individual participant.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/12ZincConversationRecipe.htm",
      "title": "Launch a Zinc Conversation from a Form",
      "section": "Scenario"
    }
  },
  {
    "content": "Steps to Start Zinc Conversations from TrueContext\n\nNavigate to the form that you want to configure. Select a form question you want to add Help Options to. Go to the Help Options tab, and switch on Provide help to mobile users. Select Web Link, and then enter the Web URL. In this example, the URL is https://zinc-app.com/cnv?participants=n03zfhzpn0vidfyv@bots.zincit.io, where n03zfhzpn0vidfyv@bots.zincit.io is the email address of the Zinc bot. Note: Make sure you replace the example email address with the email address of your bot or hotline. Select Save. Tip:Remember to Save and Deploy the form when you’re ready to make it available to your field users. Result: When a front-line worker selects the configured help option, a New Message opens in Zinc. Info:The Zinc topic Using Conversation Deep Links provides query parameters for launching different types of Zinc conversations.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/12ZincConversationRecipe.htm",
      "title": "Launch a Zinc Conversation from a Form",
      "section": "Steps to Start Zinc Conversations from TrueContext"
    }
  },
  {
    "content": "Related topics\n\nAutomatically Post Notifications to Zinc Open and Prepopulate a TrueContext Form from the ServiceMax Go App Relaunch ServiceMax Go from the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/12ZincConversationRecipe.htm",
      "title": "Launch a Zinc Conversation from a Form",
      "section": "Related topics"
    }
  },
  {
    "content": "How Technical Attributes work\n\nWhen a business manages different types of products, Technical Attributes provide a way to capture data specific to some—but not all—Installed Products. Technical Attributes might include, for example, ink levels in an ultrasound scanner printer or the helium level of an MRI scanner. In ServiceMax, the “UpdateTechnicalAttributes” IoT Event updates Technical Attributes for an Installed Product by means of the Salesforce REST API. In TrueContext, the Salesforce Apex REST The Salesforce Apex REST is a type of Salesforce Data Destination that enables TrueContext to interact with Salesforce by means of an Apex REST API endpoint. If using an Apex REST API endpoint, developers can write APEX code to send custom messages that pull specific data from submitted forms. Data Destination invokes this event by calling the appropriate REST endpoint URL, and sending a DREL document that contains the JSON payload with all the values of the Technical Attributes. Info:The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "How Technical Attributes work"
    }
  },
  {
    "content": "following ServiceMax topics provide more information about Technical Attributes:General Information about Technical AttributesIn addition to the Salesforce REST API, you can also use the browser and ServiceMax mobile apps:Enabling Technical Attributes on Browser and Mobile AppViewing and Updating Technical Attributes on Browser and Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "How Technical Attributes work"
    }
  },
  {
    "content": "ServiceMax setup\n\nCreate the IoT Event in ServiceMax. Also, create a unique key that the TrueContext Data Destination will use to update Technical Attributes for the correct Installed Product record. Sign in to ServiceMax as an Admin User, and then navigate to ServiceMax Setup > Connected Field Service> IoT Setup > IoT Events. Add a row with the following entries, and then select Save: Event Name: UpdateTechnicalAttributes Class Name: UpdateTechnicalAttributes Result: ServiceMax adds a new row to the IoT Events. Configure an Installed Product Lookup Lookup questions are options-based questions that \"look up\" the list of options from a Data Source. These include Dropdown, Radio Button, and Multiselect questions.: ServiceMax Setup > Connected Field Service> IoT Setup > Installed Product Lookup. Define and save the External Unique Key that you want TrueContext to use to uniquely identify the Installed Product. This can be a single field value or a combination of multiple field values.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "ServiceMax setup"
    }
  },
  {
    "content": "Note:Add the entries in the same order as in the JSON payload configured in the DREL document (TrueContext setup, step 6). The following example shows a combination of the serial/lot number and the “thing” identifier used in combination as the External Unique Key. Result: This ensures that TrueContext updates the correct Installed Product record with Technical Attributes data. Create a new Installed Product record or note the ID of an existing one.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "ServiceMax setup"
    }
  },
  {
    "content": "TrueContext setup\n\nCreate the Salesforce Apex REST Data Destination: Forms & Integrations > Data Destinations A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. > Create Data Destination > Salesforce Apex REST On the Connection tab, make sure that you select a connection to the correct ServiceMax org. For the HTTP Method, select POST. Keep the default Apex REST Prefix value /services/apexrest. Enter the Apex REST Endpoint URL SVMXC/svmx/rest/IOTServiceIntf/IoT_Event_Name/2.0/ where IoT_Event_Name is the name from ServiceMax setup, step 2. In this example, the endpoint is: SVMXC/svmx/rest/IOTServiceIntf/UpdateTechnicalAttributes/2.0/ Info:The ServiceMax topic Update Technical Attributes provides the most up-to-date information about this endpoint. Create a DREL document that contains the JSON payload",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "required to update the Technical Attributes in ServiceMax. Use DREL references to send submitted data from the form answers. The Other attribute must include the External Unique Key of the Installed Product record that you want to update (from ServiceMax setup, step 4). The following example shows the JSON required to: Update the Asset product name with an answer from the submitted form. Send submitted form data to update the Technical Attributes of the record that has the unique key defined in the “Others” section. Tip:The values that start with %a get data for specific questions from the submitted form. { \"Asset\": { \"SVMXC__Product_Name__c\": \"%a[ProductName]\" }, \"Event\": { \"instancePayload\": { \"Fields\": [ { \"title\": \"Specifications\", \"Description\": \"SectionDescription\", \"technicalAttributes\": [ { \"label\": \"Image Frequency\", \"type\": \"Static\", \"Sequence\": 0, \"defaultValue\": \"%a[ImageFrequency]\", \"Unit\": \"MHZ\", \"readOnly\": \"\", \"minNumber\": \"1\", \"maxNumber\": \"15\", \"format\": \"Number\" }, {",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "\"label\": \"Operating Mode Used\", \"type\": \"Static\", \"Sequence\": 1, \"defaultValue\": \"%a[OperatingMode]\", \"Unit\": \"\", \"readOnly\": \"\", \"format\": \"Text\" }, { \"label\": \"Batteries Operational\", \"type\": \"\", \"sequence\": 3, \"defaultValue\": \"%a[Batteries]\", \"unit\": \"\", \"readOnly\": \"YES\", \"format\": \"Boolean\" } ] } ] } }, \"Others\": { \"SVMXC__Serial_Lot_Number__c\": \"%a[SerialNumber]\", \"Thing_Id__c\": \"%a[ThingId]\" } } Link the destination and document to a form: Forms & Integrations > List Forms > FormName > Edit Form > Destinations When a user submits the form and the destination executes successfully, ServiceMax creates an entry in the IB Attributes Template Instance table, and multiple entries in the IB Technical Attribute table, one for each attribute defined in the JSON payload. Note:If Technical Attributes entries for the Installed Product record don’t exist, the Data Destination automatically creates them. Subsequent executions update the values. Result: ServiceMax displays the Technical",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "Attributes values for the Installed Product record, along with a history of previous values.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/ServiceMax/Technical_Attributes.htm",
      "title": "Update ServiceMax Technical Attributes with a Salesforce Apex REST Data Destination",
      "section": "TrueContext setup"
    }
  },
  {
    "content": "Video demo\n\nLearn from an expert! This video shows you how to build and use an App‑to‑App request.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppLandingPageH1.htm",
      "title": "Get Started with App‑to‑App Communication",
      "section": "Video demo"
    }
  },
  {
    "content": "App‑to‑App Cookbook\n\nGet “recipes” for frequently used App‑to‑App requests and callbacks. Use an App‑to‑App Request to Open a Form and Dispatch Answers Use Field Service Mobile App Extensions to Open and Exchange Data with the TrueContext Mobile App Open and Prepopulate a TrueContext Form from the ServiceMax Go App Relaunch ServiceMax Go from the TrueContext Mobile App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppLandingPageH1.htm",
      "title": "Get Started with App‑to‑App Communication",
      "section": "App‑to‑App Cookbook"
    }
  },
  {
    "content": "Key Concepts\n\nApp‑to‑App communication is a way to exchange information between a mobile app on your device—such as a work order management system—and the TrueContext Mobile App. An inbound App‑to‑App request directs the TrueContext Mobile App to launch in the foreground and complete an action. On the Advanced and Enterprise tiers, “callbacks” define the data that the TrueContext Mobile App returns to the source app. What is App‑to‑App communication? How Inbound App‑to‑App Calls Work Example of App‑to‑App Communication",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppLandingPageH1.htm",
      "title": "Get Started with App‑to‑App Communication",
      "section": "Key Concepts"
    }
  },
  {
    "content": "Configuration\n\nIf you share data from forms in App‑to‑App callbacks, we recommend that you define an allow list. This limits the URLs and apps that can receive the data and guards against unintended sharing of information. With your allow list configured, you can specify form data and metadata to send back to your source app in the form of custom callback parameters. Configure a Custom App‑to‑App Allow List Configure App‑to‑App Custom Callback Parameters",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppLandingPageH1.htm",
      "title": "Get Started with App‑to‑App Communication",
      "section": "Configuration"
    }
  },
  {
    "content": "Technical Details\n\nAn App‑to‑App request uses the x-callback-url specification and follows this structure, with UTF-8 percent encoding for some special characters: truecontext://x-callback-url/action?[actionParameters] You can use any of the following callback actions: launch refresh list open send search On the Advanced and Enterprise tiers, you can also define x-callback parameters As part of an App‑to‑App call to the TrueContext app, x-callback parameters provide a way to launch and send data to the calling app. These include x-success, x-cancel, and x-error parameters. to return the form status, metadata, and submitted data. App‑to‑App Actions App‑to‑App Action Details App‑to‑App x-callback parameters",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppLandingPageH1.htm",
      "title": "Get Started with App‑to‑App Communication",
      "section": "Technical Details"
    }
  },
  {
    "content": "Introduction to App‑to‑App communication\n\nApp‑to‑App communication is a way to exchange data between apps on a device. The topics in this section describe the TrueContext App‑to‑App functionality when the TrueContext Mobile App receives an inbound communication from another, third-party “source” app. These topics also describe how App‑to‑App communication provides critical functionality when a user’s device is offline. Available on all tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/IntroToAppToAppLandingPageH2.htm",
      "title": "Introduction to App‑to‑App communication",
      "section": "Introduction to App‑to‑App communication"
    }
  },
  {
    "content": "What is App‑to‑App communication? App‑to‑App communication is a way to exchange data between apps on a device, even if the device is offline. App‑to‑App communication includes both inbound requests (“calls”) to the TrueContext Mobile App and, on the Advanced and Enterprise tiers, outbound “callbacks” to an allowed domain or app. Available on all tiers: Essentials Advanced Enterprise Organizations often use work order management systems to dispatch work to front-line workers by means of a mobile app. The work orders typically provide essential information about scheduling, work location, customer contacts, and details of the service to be delivered. App‑to‑App communication provides a way for the work order management system to transfer these “top-level” details to the TrueContext Mobile App, so that front-line workers benefit from the in-depth, dynamic workflow that the TrueContext Mobile App provides. Tip:App‑to‑App communication works even when a user’s device is offline. This is",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/WhatIsAppToApp.htm",
      "title": "What is App‑to‑App communication?"
    }
  },
  {
    "content": "critical for managing workflows in which the source app requires confirmation from the TrueContext Mobile App that a step was completed before the user can proceed with the next step.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/WhatIsAppToApp.htm",
      "title": "What is App‑to‑App communication?"
    }
  },
  {
    "content": "How Inbound App‑to‑App Calls Work The TrueContext Mobile App can receive a “request” or “call” from another app on the same device. This topic describes how calls and callbacks enable offline communication between apps on a device. Available on all tiers: Essentials Advanced Enterprise Inbound requests The TrueContext Mobile App can receive a “request” or “call” from another app on the same device (the source app). An inbound App‑to‑App request directs the TrueContext Mobile App to launch in the foreground and complete an action. For example, the source app can direct the TrueContext Mobile App to: Open a new form and prepopulate it with data from the source app. Open a list of forms in the user’s Inbox. Search for previously submitted forms. Open a resource document or image in the Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/HowAppToAppWorks.htm",
      "title": "How Inbound App‑to‑App Calls Work"
    }
  },
  {
    "content": "Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work.. x-callback parameters The source app can also specify “x‑callback” parameters. These parameters tell the TrueContext Mobile App what to do when a user submits or discards a form, or when there’s an error. For example, after a user sends a form, TrueContext can bring the source (calling) app back to the foreground and send the submitted form data to the source app. The combination of requests and callbacks enables offline communication between the source and TrueContext Mobile App, which is critical for managing step-by-step workflows such as checklists. Note: Different source apps vary in their ability to use the data that the TrueContext Mobile App provides in a callback. Your source app must be configured to handle the callbacks and any data returned. You might need to check with your own experts to",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/HowAppToAppWorks.htm",
      "title": "How Inbound App‑to‑App Calls Work"
    }
  },
  {
    "content": "set this up for your specific app. We recommend that you configure a custom App‑to‑App allow list to manage the apps that can receive data from the TrueContext Mobile App. App‑to‑App callbacks are supported on the Advanced and Enterprise tiers only. If you want the mobile device user to stay in the TrueContext Mobile App, you don’t need to specify a callback parameter. Tip:Organizations that use a work order management system can combine the offline functionality of App‑to‑App communication with the online functionality of a TrueContext cloud-based Data Destination. A Data Destination A Data Destination specifies where to send data from a submitted form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. is typically used to send detailed data to the back-office system of the source app. Data Destinations A Data Destination specifies where to send data from a submitted",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/HowAppToAppWorks.htm",
      "title": "How Inbound App‑to‑App Calls Work"
    }
  },
  {
    "content": "form. You can use Data Destinations to automate data sharing and storage, routing data to a specific service (such as email or cloud storage) in several different formats. enable full access to the data submitted from the TrueContext Mobile App, including photos.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/HowAppToAppWorks.htm",
      "title": "How Inbound App‑to‑App Calls Work"
    }
  },
  {
    "content": "Example of App‑to‑App Communication This topic provides an example that describes an inbound App‑to‑App call that launches the TrueContext Mobile App, prepopulates some of the form data, and then returns data to the source app. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Available on all tiers: Essentials Advanced Enterprise Info:Teams on the Advanced and Enterprise tiers can set up a callback request to send data back to the source app. The topics App‑to‑App Actions and App‑to‑App x-callback parameters provide more details about how to format an App‑to‑App request, including callbacks. The technician launches a work order in your “source” app. Your source app launches the TrueContext Mobile App (the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/ExampleOfAppToAppComms.htm",
      "title": "Example of App‑to‑App Communication"
    }
  },
  {
    "content": "“target” app) and prepopulates questions, such as the service type. The TrueContext Mobile App sends data from the form back to the source app. In this example, the App‑to‑App request might look like this:truecontext://x-callback-url/open?name=Inspection&ServiceType=Warranty&x-success=sourceapp://callback where open is the action that launches the TrueContext Mobile App Note:The mobile device user must be signed in to the TrueContext Mobile App. Inspection is the form name ServiceType=Warranty is a question unique ID and answer, and x-success=sourceapp://callback is the x‑callback parameter to open and send data to the source app. The following illustration shows an example of how App‑to‑App requests and callbacks work. 1 shows an inbound request to open and prepopulate a form. 2 shows an inbound request that includes a callback to the source app. 3 shows the default information sent to the source app.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/ExampleOfAppToAppComms.htm",
      "title": "Example of App‑to‑App Communication"
    }
  },
  {
    "content": "Video Demo of How to Build an App‑to‑App Call This recording shows you an example of an App‑to‑App call and callback. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Available on all tiers: Essentials Advanced Enterprise Note: Different source apps vary in their ability to use the data that the TrueContext Mobile App provides in a callback. Your source app must be configured to handle the callbacks and any data returned. You might need to check with your own experts to set this up for your specific app. We recommend that you configure a custom App‑to‑App allow list to manage the apps that can receive data from the TrueContext Mobile App. App‑to‑App callbacks are supported on the Advanced and Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/VideoBuildSimpleAppToAppRequest.htm",
      "title": "Video Demo of How to Build an App‑to‑App Call"
    }
  },
  {
    "content": "tiers only.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/VideoBuildSimpleAppToAppRequest.htm",
      "title": "Video Demo of How to Build an App‑to‑App Call"
    }
  },
  {
    "content": "Supported Platforms for App‑to‑App Communication This topic lists the TrueContext Mobile App platforms that support App‑to‑App communication. Available on all tiers: Essentials Advanced Enterprise We use the standard x-callback-url specification with a TrueContext custom URL scheme to support App‑to‑App communications on the following platforms: iOS macOS Android™ Windows",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/Introduction/AppToAppSupportedPlatforms.htm",
      "title": "Supported Platforms for App‑to‑App Communication"
    }
  },
  {
    "content": "App‑to‑App Allow List\n\nAn App‑to‑App allow list is a list of URLS and apps that have permission to receive data from the TrueContext Mobile App in an App‑to‑App callback. The topics in this section describe the functionality and configuration of the App‑to‑App allow list. These topics also describe how an App‑to‑App allow list can protect form data from being directed to unwanted or malicious third-party systems. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppAllowListLandingPageH2.htm",
      "title": "App‑to‑App Allow List",
      "section": "App‑to‑App Allow List"
    }
  },
  {
    "content": "What is an App‑to‑App Allow List? An App‑to‑App allow list is a list of URLs and apps that can receive data from the TrueContext Mobile App in an App‑to‑App callback. This topic describes how the allow list gives you control over where the TrueContext Mobile App sends data. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The allow list gives Admin users control over where the TrueContext Mobile App sends data from a form. This helps to protect your data from malicious actors. This is especially important if you’ve configured custom callback parameters that contain answers to questions in a form. You configure the allow list at the team level. The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all callbacks allowed. For teams created after February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/WhatIsAppToAppAllowList.htm",
      "title": "What is an App‑to‑App Allow List?"
    }
  },
  {
    "content": "App‑to‑App allow list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/WhatIsAppToAppAllowList.htm",
      "title": "What is an App‑to‑App Allow List?"
    }
  },
  {
    "content": "How the App‑to‑App Allow List Works This topic describes the App‑to‑App allow list configuration options. You use the allow list to manage the apps and URLs that can receive data from the TrueContext Mobile App in a callback. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The App‑to‑App allow list: Specifies which URLs and apps can receive information from the TrueContext Mobile App in a callback, but not the information to send. If you want to send specific answers from a form, you can configure up to five custom callback parameters. Applies only to callbacks from the TrueContext Mobile App (x-success, x-cancel, or x-error), not inbound requests to the TrueContext Mobile App. Applies only to the Advanced and Enterprise tiers. Tip:Inbound requests to the TrueContext Mobile App are supported on all tiers. The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/HowDoesAppToAppAllowListWork.htm",
      "title": "How the App‑to‑App Allow List Works"
    }
  },
  {
    "content": "callbacks allowed. For teams created after February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom App‑to‑App allow list. The allow list behavior depends on how you configure it: Callbacks allowed to specific apps and URLs Add up to ten URLs and app protocols to the allow list. Any URL or app on the allow list receives all of the standard callback information and any custom callback parameters defined for a form. In the following example, the allow list includes: shortcuts:// https://www.company.com/ Note:Any app protocol or URL not listed causes the entire App‑to‑App request to fail. Tip:This example uses a proprietary TrueContext test app called pftest. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/HowDoesAppToAppAllowListWork.htm",
      "title": "How the App‑to‑App Allow List Works"
    }
  },
  {
    "content": "visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Request Result Reason truecontext://x-callback-url/open?name=Work%20Order Succeeds No callback specified truecontext://x-callback-url/open?name=Work%20Order&x-success=shortcuts://success Succeeds shortcuts:// is allowed truecontext://x-callback-url/open?name=Work%20Order&x-success=pftest://success Fails pftest:// is not allowed truecontext://x-callback-url/open?name=Work%20Order&x-success=shortcuts://success &x-error=pftest://error Fails shortcuts:// is allowed, but pftest:// is not allowed No callbacks allowed Request Result Reason truecontext://x-callback-url/open?name=Work%20Order Succeeds No callback specified truecontext://x-callback-url/open?name=Work%20Order&x-success=pftest://success Fails Callback specified All callbacks allowed (not recommended) Warning:If you share data from forms in App‑to‑App callbacks, we recommend that you define an allow list. This limits the URLs and apps that can receive the data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/HowDoesAppToAppAllowListWork.htm",
      "title": "How the App‑to‑App Allow List Works"
    }
  },
  {
    "content": "and guards against unintended sharing of information. Request Result Reason truecontext://x-callback-url/open?name=Work%20Order Succeeds No callback specified truecontext://x-callback-url/open?name=Work%20Order&x-success=pftest://success Succeeds All callback requests allowed",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/HowDoesAppToAppAllowListWork.htm",
      "title": "How the App‑to‑App Allow List Works"
    }
  },
  {
    "content": "Configure a Custom App‑to‑App Allow List This topic provides step-by-step instructions to configure an App‑to‑App allow list at the team level. The allow list configuration determines the apps and URLs that can receive data from the TrueContext Mobile App in a callback. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Default allow list behavior The App-to-App allow list An App‑to‑App allow list is a list of URLs and third-party applications that can receive data from TrueContext in a callback. only applies to callback requests that include the x-success, x-cancel, and x-error callback parameters. If an app protocol or URL specified in an x-callback parameter is not listed as “allowed”, the entire request fails and the TrueContext Mobile App displays an error message. The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all callbacks allowed. For teams created after",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/ConfigureCustomAllowList.htm",
      "title": "Configure a Custom App‑to‑App Allow List"
    }
  },
  {
    "content": "February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom App‑to‑App allow list. Prerequisites You must have Admin user permissions with access to team-level settings. Your TrueContext Team must be on the Advanced or Enterprise tier. You must know the registered URL scheme for the third-party app that you want to include in the allow list. Steps to configure an App‑to‑App allow list In the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations., go to Username > Team Settings. On the Security tab, in the App‑to‑App Allow List section, select the down arrow to change the settings. You can choose from the following options: No callbacks allowed Callbacks allowed to specific apps and URLs All callbacks allowed (not recommended) Warning:If you share data from forms in App‑to‑App callbacks, we recommend",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/ConfigureCustomAllowList.htm",
      "title": "Configure a Custom App‑to‑App Allow List"
    }
  },
  {
    "content": "that you define an allow list. This limits the URLs and apps that can receive the data and guards against unintended sharing of information. To define an allow list, select Callbacks allowed to specific apps and URLs, and then enter up to ten app protocols and URLs. Note: The following restrictions apply:App protocols must have the format app:// and contain only alphanumeric, hyphen (-), or underscore characters. For example:shortcuts://URLs must begin with https:// and contain a valid domain name. For example:https://www.company.com/You can enter up to ten items. To save and apply the settings, select Update. Result: If you send a callback request that contains an app or URL that’s not on the allowed list, the TrueContext Mobile App blocks the entire request. Tip:Remind your mobile device users to Reconcile The term \"reconcile\" refers to a send/receive action between the mobile app and the TrueContext server. This synchronizes new form versions, data sources, and dispatches from the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/ConfigureCustomAllowList.htm",
      "title": "Configure a Custom App‑to‑App Allow List"
    }
  },
  {
    "content": "Web Portal to the mobile app to ensure that mobile users are working with up-to-date resources. This also synchronizes new form submissions from the mobile app to the Web Portal to ensure that work completed by a mobile user gets properly submitted and sent through data destinations. A reconcile can be manually or automatically initiated and requires network connectivity. after you update the allow list.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppAllowList/ConfigureCustomAllowList.htm",
      "title": "Configure a Custom App‑to‑App Allow List"
    }
  },
  {
    "content": "App‑to‑App Custom Callback Parameters\n\nApp‑to‑App custom callback parameters are user-defined parameters that indicate which answers and metadata to pass from the TrueContext Mobile App app to another app on a user’s device. In the TrueContext Form Builder, the form designer specifies both the parameter name and a DREL expression that can also include static text. The topics in this section describe the functionality and configuration of custom callback parameters. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppCustomCallbackLandingPageH2.htm",
      "title": "App‑to‑App Custom Callback Parameters",
      "section": "App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "What are App‑to‑App custom callback parameters? This topic provides a brief description of how custom callback parameters can pass answers and form metadata from the TrueContext Mobile App to another app on the device. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Some organizations use a third-party Field Service Management (FSM) platform to provide their mobile workforce with customer information and work orders. They often use TrueContext to provide additional functionality to enable their teams to perform critical, on-site services. Custom callback parameters App‑to‑App custom callback parameters are user-defined parameters that indicate which answers and metadata to pass from the TrueContext app to another app on a user’s device. provide a way to pass answers and form metadata from the TrueContext Mobile App to the FSM app. App‑to‑App custom callback parameters are user-defined parameters that indicate which answers and metadata to pass from the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/WhatAreAppToAppCustomCallbackParameters.htm",
      "title": "What are App‑to‑App custom callback parameters?"
    }
  },
  {
    "content": "TrueContext Mobile App app to another app on a user’s device. In the TrueContext Form Builder, the form designer specifies both the parameter name and a DREL expression that can also include static text. For example, if an FSM platform stores a value for SerialNumber, TrueContext form designers can configure a custom callback parameter for the corresponding TrueContext question. When a technician enters a serial number in the TrueContext Mobile App and then saves or sends the form, the custom parameter name and value is passed back to the FSM app. Info:The topic Configure App‑to‑App Custom Callback Parameters provides details about how to set up custom callback parameters.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/WhatAreAppToAppCustomCallbackParameters.htm",
      "title": "What are App‑to‑App custom callback parameters?"
    }
  },
  {
    "content": "Configure App‑to‑App Custom Callback Parameters This topic describes how to use the TrueContext Form Builder to configure custom callback parameters. It describes in detail how to define parameter names and corresponding DREL Data Reference Expression Language (DREL) is used to get form data and metadata and add it to a string, such as dates, usernames, or answers to questions in forms. expressions to retrieve and share form data and metadata between apps on a mobile device. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Prerequisites Your TrueContext Team must be on the Advanced or Enterprise tier. You must be an Admin user or a User with Can Create FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace. permissions. Tip:If you’re not an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "Admin user, you should have the following permissions so that you can thoroughly test your forms:Can TestCan ViewCan Submit TrueContext returns the user-defined custom callback parameters as part of the x-success callback. You must configure the source app to use an x-success callback parameter as part of the URL, as shown in the following example. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556truecontext://x-callback-url/open?name=formName&x-success=sourceApp://success where formName, sourceApp, and success are placeholders for your actual values. Info:The topics App‑to‑App Actions and App‑to‑App x-callback parameters provide detailed information about how to construct App‑to‑App requests. Your allow",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "list must include the URLs and apps that you want to receive data from TrueContext. The default allow list settings depend on when your team was created: For teams created before February 23, 2021, the allow list defaults to all callbacks allowed. For teams created after February 23, 2021, the allow list defaults to no callbacks allowed. Note:In both cases, we recommend that you configure a custom App‑to‑App allow list. Limitations The following limitations apply to custom callback parameters: You can define up to five custom callback parameters. Each parameter name must be unique. The maximum length of the x-success callback—including parameter names and values after UTF-8 percent encoding—is 1000 characters. DREL expressions can only reference top-level questions, not questions in a repeatable section A Repeatable Section is a subform that contains a set of related questions. The data captured is “repeating”, because the field user can complete the same subform more than once, which",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "creates multiple entries.. User-defined custom callback parameters apply to x-success callbacks only. If the DREL expression does not resolve to a value, the callback returns the parameter with an empty string as the value. You can use the following DREL references and properties: DREL reference Returns %a[questionUniqueID] The information a user submitted as an answer to the question with the specified questionUniqueID. %t The time that a user submitted a form. %d The date that a user submitted a form. %r[id] The submitted form’s serverDataRecordID. %r[clientDataRecordId] The ID assigned by the TrueContext Mobile App. %r[pfStatus] The form’s current status on the device (Saved, Sent, or Outbox). Status Description Saved A TrueContext Mobile App user opened a form from the Forms box or Inbox, and then saved it. Outbox A submitted form is still processing on the user’s device and has not yet been uploaded to the server. This can happen when a device is offline, for example. Sent A",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "submitted form was uploaded to the server. %r[state] The state of a submitted or saved form. State Description Complete A mobile user sent a completed form. The submitted form might be in the user’s outbox, or it might have been uploaded to the TrueContext server. Incomplete A mobile user transferred an incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled form. The form might be unassigned on the TrueContext server or assigned to another user’s Inbox. The form is in this state until a user makes changes to it. Saved A TrueContext Mobile App user opened a form and made changes to it. The form might be saved in the Drafts or Inbox folder. Callback parameters apply only to form actions, not to resource actions. The TrueContext system doesn’t",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "send any callback parameters for calls that list or open resources in the Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work.. Info:The DREL expression can contain multiple DREL references, static text, or a plain text string, such as JSON. Steps to configure App‑to‑App custom callback parameters From the Forms & Integrations menu, navigate to the form you want to set up. Select Edit Form, and then select Settings > Workflow settings. In the App‑to‑App Callbacks section, define up to five parameter names and associated DREL expressions. The following example shows custom parameters that return the answers to two of the questions on the form unique",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "identifier of the form on the mobile user’s device (clientDataRecordId), and date and time that the user submitted the form. Tip: The DREL expression can contain multiple DREL references, static text, or a plain text string, such as JSON. You can use DREL properties to define the format of form submission dates and times. If you want to rename a standard parameter that’s returned by default with the x-success callback, you can include it in the custom parameters. In this example, the clientDataRecordID value is returned as the custom callback parameter “RecordID”. Info:The topic DREL Quick Reference provides information about how to construct a DREL Expression. Save the form or continue editing. The x-success callback is triggered when the mobile device user saves or sends a form or transfers a TrueContext Teamwork-enabled form. The x-success callback opens the success URL and returns the standard and custom callback parameter names and",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "values:sourceApp://pfStatus=Sent&serverDataRecordID=12345678912&clientDataRecordID=A1A1A1A1-AAAA-1111-AAAAAA111111&FormSubmissionTime=2020-090-2311:31:20&JobStartDate=2020-09-23T15:31:00Z&RecordID=A1A1A1A1-AAAA-1111-AAAAAA111111 Tip:In this example, the clientDataRecordID value is passed twice, once with the standard parameter name and also as a custom callback parameter with the name RecordID.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/CustomCallbackParameters/AppToAppCustom_Configure.htm",
      "title": "Configure App‑to‑App Custom Callback Parameters"
    }
  },
  {
    "content": "App‑to‑App Cookbook\n\nThe App‑to‑App Cookbook provides useful “recipes” for frequently used App‑to‑App requests and callbacks. These topics also describe how App‑to‑App Communication enables a more efficient workflow for users working in both the TrueContext Mobile App and a third-party mobile app. Available on all tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppCookbookLandingPageH2.htm",
      "title": "App‑to‑App Cookbook",
      "section": "App‑to‑App Cookbook"
    }
  },
  {
    "content": "Prerequisites for Using App‑to‑App Communication This topic describes the device, team-level, and form-level settings required to use App‑to‑App communication. Available on all tiers: Essentials Advanced Enterprise App‑to‑App communication requires that field users install and sign in to the TrueContext Mobile App. Note: App‑to‑App requests sent to logged-out users fail without triggering an x-error callback. The search action works when the TrueContext Mobile App user is online, belongs to a TrueContext team with Search enabled, and has access to Search-enabled forms. You must use URL encoding for all App‑to‑App requests. Use UTF-8 based percent encoding for all special characters other than parentheses ( ). Inbound requests are supported on all tiers, but callbacks are supported only on the Advanced and Enterprise tiers. If you share data from forms in App‑to‑App callbacks, we recommend that you define an allow list. This limits the URLs and apps that can receive the data and guards",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppPrereqs.htm",
      "title": "Prerequisites for Using App‑to‑App Communication"
    }
  },
  {
    "content": "against unintended sharing of information. Info:The topic Configure a Custom App‑to‑App Allow List provides detailed steps to define the URLs and apps that can receive callbacks. If you want to use custom callback parameters, they must be configured and saved as part of the form. Info:The topic Configure App‑to‑App Custom Callback Parameters provides more information about custom callback configuration.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppPrereqs.htm",
      "title": "Prerequisites for Using App‑to‑App Communication"
    }
  },
  {
    "content": "Open a form and dispatch answers\n\nAvailable on all tiers: Essentials Advanced Enterprise Tip:This example uses a proprietary TrueContext test app called pftest. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 truecontext://x-callback-url/open?name=Universal%20Work%20Order&Job%20-%20Type=Warranty&Job%20-%20Work%20Order%20%23=1234567 The following table describes the request structure. truecontext:// Custom URL scheme. x-callback-url Specification that we use for App‑to‑App communication. open?name=Universal%20Work%20Order Action to launch the TrueContext Mobile App and open the form named “Universal Work Order”. %20 replaces the space character in URL encoding. Note:You must use URL encoding for all",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/AppToApp_RecipeToOpenAndDispatch.htm",
      "title": "Use an App‑to‑App Request to Open a Form and Dispatch Answers",
      "section": "Open a form and dispatch answers"
    }
  },
  {
    "content": "App‑to‑App requests. Use UTF-8 based percent encoding for all special characters other than parentheses ( ). &Job%20-%20Type=Warranty&Job%20-%20Work%20Order%20%23=1234567 Prepopulates two questions: & is a separator for the “arguments” that form part of the request. Job%20-%20Type=Warranty prepopulates the question with unique ID “Job - Type” with the answer “Warranty”. &Job%20-%20Work%20Order%20%23=1234567 is another argument that prepopulates the question with unique ID “Job Work - Order #” with the answer “1234567”. Note:The # special character is URL-encoded as %23. The form opens on the user’s device with the two questions prepopulated, as shown in the following example: Tip:The question text in the form can be different from the question unique ID. In this example, the unique ID in the request is Job%20-%20Work%20Order%20%23 but the question text is Work Order #.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/AppToApp_RecipeToOpenAndDispatch.htm",
      "title": "Use an App‑to‑App Request to Open a Form and Dispatch Answers",
      "section": "Open a form and dispatch answers"
    }
  },
  {
    "content": "Re-launch the source app and return data from the form\n\nAvailable on the Advanced and Enterprise tiers: Essentials Advanced Enterprise The second part of the request contains the callback actions. In this example, the request includes all three App‑to‑App x-callback parameters: truecontext://x-callback-url/open?name=Universal%20Work%20Order&Job%20-%20Type=Warranty&Job%20-%20Work%20Order%20%23=1234567&x-success=pftest://success&x-cancel=pftest://cancel&x-error=pftest://error The following table describes the x-callback action structure. &x-success=pftest://success Tells the TrueContext Mobile App what to do when the user saves, sends, or transfers the form. In this example, the TrueContext Mobile App launches the app pftest and carries out the success action. Tip:If you’ve configured any custom callback parameters, the TrueContext Mobile App returns these as part of the x-success callback. &x-cancel=pftest://cancel Tells the TrueContext Mobile App what to do when the user cancels an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/AppToApp_RecipeToOpenAndDispatch.htm",
      "title": "Use an App‑to‑App Request to Open a Form and Dispatch Answers",
      "section": "Re-launch the source app and return data from the form"
    }
  },
  {
    "content": "action, such as discarding form changes. &x-error=pftest://error Tells the TrueContext Mobile App what to do when there’s a problem, such as a dialog box blocking an inbound App‑to‑App request. An error can also occur when a requested item, such as a specific form or draft, cannot be found. Our test app, pftest, shows the results of each x-callback parameter as shown in the following examples. Info:We’re now TrueContext.To support existing integrations, some items will continue to use “prontoforms” or “pf” in the domain or code.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 The user successfully submits the form: Tip:If you’ve configured any custom callback parameters, the TrueContext Mobile App returns these as part of the x-success callback. The user discards changes without saving: An inbound App‑to‑App request interrupts an active reconcile on the device, or an active dialog box blocks an inbound",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/AppToApp_RecipeToOpenAndDispatch.htm",
      "title": "Use an App‑to‑App Request to Open a Form and Dispatch Answers",
      "section": "Re-launch the source app and return data from the form"
    }
  },
  {
    "content": "App‑to‑App request:",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppCookbook/AppToApp_RecipeToOpenAndDispatch.htm",
      "title": "Use an App‑to‑App Request to Open a Form and Dispatch Answers",
      "section": "Re-launch the source app and return data from the form"
    }
  },
  {
    "content": "App‑to‑App Technical Details\n\nApp‑to‑App communication is a way to exchange data between apps on a device, even if the device is offline. App‑to‑App communication includes both inbound requests (“calls”) to the TrueContext Mobile App and, on the Advanced and Enterprise tiers, outbound “callbacks” to an allowed domain or app. When you set up App‑to‑App communication for your team’s devices, you should understand how to properly configure calls and callbacks. The topics in this section describe important technical details you should consider when you set up App‑to‑App calls. Available on all tiers, with more options on the Advanced and Enterprise tiers: Essentials Advanced Enterprise",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/LandingPages/AppToAppTechnicalDetailsLandingPageH2.htm",
      "title": "App‑to‑App Technical Details",
      "section": "App‑to‑App Technical Details"
    }
  },
  {
    "content": "TrueContext App‑to‑App URL Scheme This topic describes the standard and alternative TrueContext URL schemes. Available on all tiers: Essentials Advanced Enterprise TrueContext custom URL schemes truecontext:// tcxt:// prontoforms:// Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Format truecontext://x-callback-url/action?[actionParameters]&[x-callbackParameters] Info:x-callback parameters are supported on the Advanced and Enterprise tiers only. Alternative format When a custom scheme is not allowed, such as in the body of an email, you can use the following HTTP URL scheme. https://prontofor.ms/x-callback-url/action?[actionParameters]&[x-callbackParameters] Note:If you’re a white label customer, the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppURLScheme.htm",
      "title": "TrueContext App‑to‑App URL Scheme"
    }
  },
  {
    "content": "TrueContext team can provide you with an HTTP scheme that’s unique to your mobile apps. This requires a domain name registration and configuration process.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppURLScheme.htm",
      "title": "TrueContext App‑to‑App URL Scheme"
    }
  },
  {
    "content": "App‑to‑App URL Encoding URLs require UTF-8 percent encoding for all special characters and spaces, except for parentheses ( ), which you don’t need to encode. This topic provides correct and incorrect examples. Available on all tiers: Essentials Advanced Enterprise Correct (encoded): truecontext://x-callback-url/open?name=Inspection%20Form tcxt://x-callback-url/open?name=Inspection%20Form Incorrect (contains a space): truecontext://x-callback-url/open?name=Inspection Form tcxt://x-callback-url/open?name=Inspection Form Tip:The w3schools HTML URL Encoding Reference provides detailed information about URL encoding. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppURLEncoding.htm",
      "title": "App‑to‑App URL Encoding"
    }
  },
  {
    "content": "Supported question types for App‑to‑App requests You can use App‑to‑App requests to prepopulate (dispatch to) some, but not all, question types. This topic lists the supported and unsupported question types. Available on all tiers: Essentials Advanced Enterprise Supported question types Date/Time Selector Dropdown Radio Button Single Checkbox Text Area Text Field Button Group Card List Unsupported question types Audio Recording Barcode Scanner Calculation Date/Time Stamp Digit Extraction Document Editor Duration Calculation Duration Field Duration Math File Upload Geo Location Image Information Label Multiselect Recap Resource Image Router Signature Sketch Pad Slider Stepper String Concatenation Time-Based Math",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppSupportedQuestionTypesForDispatch.htm",
      "title": "Supported question types for App‑to‑App requests"
    }
  },
  {
    "content": "Form identifiers\n\nAs a form progresses through a workflow, it moves from one location (“list” or “tab”) on the TrueContext Mobile App to another. For example, a user can open a form from the Forms list, add information, and then save it to Drafts. The following table describes the location-identifier combinations at various stages in a form’s workflow. Form stage Location on the TrueContext Mobile App Identifiers to use in an App‑to‑App request Description Saved and deployed by a form designer Forms formID Identifies the form. In an App‑to‑App request, this is the most recently deployed version of the form. formIterationID Identifies the form and version of the form. Dispatched Inbox dataRecordID Identifies the form based on the ID assigned by the TrueContext server. Dispatched, opened, and saved Sent for edit Sent for edit, opened, and saved Opened for edit from the Sent box, and saved Opened from the Forms box and saved as a draft Drafts clientDataRecordID Identifies the saved form",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppUseIDsInPartsOfThePFAPP.htm",
      "title": "How to Use Identifiers in an App‑to‑App Call",
      "section": "Form identifiers"
    }
  },
  {
    "content": "by the ID assigned by the TrueContext Mobile App. Tip:The only way to get the clientDataRecordID is to send an App‑to‑App request that includes an x-success callback parameter (supported on the Advanced and Enterprise tiers). Sent (complete) Search N/A The search action searches the text of the form submission name only. Note:“Incomplete” applies only to teams on the Enterprise tier with TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span multiple shifts.-enabled forms. Sent (incomplete) Resource identifiers Info:The Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppUseIDsInPartsOfThePFAPP.htm",
      "title": "How to Use Identifiers in an App‑to‑App Call",
      "section": "Form identifiers"
    }
  },
  {
    "content": "distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. must be set up for your team, and individual resources must be set to Visible in Resource Library. The topic Set Up the Resource Library describes the process in more detail. You can find a resource identifier in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. Go to Forms & Integrations Integration refers to secure communication and data sharing between TrueContext and a third-party system, such as Salesforce or ServiceMax. Connections, Data Sources, Data Destinations, and App-to-App calls and callbacks can be used as part of an integration solution. > Resources. Select the resource that you want to identify in your App‑to‑App call. Result: The browser URL includes the resource identifier, as shown in the following",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppUseIDsInPartsOfThePFAPP.htm",
      "title": "How to Use Identifiers in an App‑to‑App Call",
      "section": "Form identifiers"
    }
  },
  {
    "content": "example. Copy the resource identifier to use with the open action. The following example shows the resource identifier syntax in bold.truecontext://x-callback-url/open?type=resourcelibrary&resourceID=1234567891",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppUseIDsInPartsOfThePFAPP.htm",
      "title": "How to Use Identifiers in an App‑to‑App Call",
      "section": "Form identifiers"
    }
  },
  {
    "content": "Resource identifiers\n\nInfo:The Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. must be set up for your team, and individual resources must be set to Visible in Resource Library. The topic Set Up the Resource Library describes the process in more detail. You can find a resource identifier in the TrueContext Web Portal The TrueContext Web Portal is a web application used to manage security settings, forms, FormSpaces, other users, Data Sources, and Data Destinations.. Go to Forms & Integrations Integration refers to secure communication and data sharing between TrueContext and a third-party system, such as Salesforce or ServiceMax. Connections, Data",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppUseIDsInPartsOfThePFAPP.htm",
      "title": "How to Use Identifiers in an App‑to‑App Call",
      "section": "Resource identifiers"
    }
  },
  {
    "content": "Sources, Data Destinations, and App-to-App calls and callbacks can be used as part of an integration solution. > Resources. Select the resource that you want to identify in your App‑to‑App call. Result: The browser URL includes the resource identifier, as shown in the following example. Copy the resource identifier to use with the open action. The following example shows the resource identifier syntax in bold.truecontext://x-callback-url/open?type=resourcelibrary&resourceID=1234567891",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppUseIDsInPartsOfThePFAPP.htm",
      "title": "How to Use Identifiers in an App‑to‑App Call",
      "section": "Resource identifiers"
    }
  },
  {
    "content": "App‑to‑App Actions This topic lists the App‑to‑App actions that you can use to access the TrueContext Mobile App from a source app or email link. Available on all tiers: Essentials Advanced Enterprise You can use an x-callback-url to trigger any of the following actions from your source app: launch Launches the TrueContext Mobile App on a user’s device. refresh Launches the TrueContext Mobile App on a user’s device and downloads new form versions, data sources Data sources, also known as \"Lookups\", are external sources of data that you upload or connect to TrueContext. You can reference this data in a form to populate answers or answer options. Data sources save typing, reduce errors, and make it easy to provide mobile users with only the relevant, most current data., and dispatches from the Web Portal to the Mobile App. It does not upload from the Mobile App to the web portal. The mobile device must be online (connected to a network). list Displays a specific view (such as the Inbox)",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActions.htm",
      "title": "App‑to‑App Actions"
    }
  },
  {
    "content": "to the TrueContext Mobile App user. open Opens a form or list of forms in the TrueContext Mobile App from the user’s Inbox, Forms, or Drafts. Also opens a resource or list of resources in the TrueContext Mobile App from the user’s Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. when you specify type=resourcelibrary. send Opens, populates, and sends a form from the TrueContext Mobile App to the TrueContext server without requiring user interaction. The mobile device must be online (connected to a network). search Searches by form submission name, form submission state, or date range. The TrueContext Mobile App Search list opens and displays a list of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActions.htm",
      "title": "App‑to‑App Actions"
    }
  },
  {
    "content": "submitted forms that match the search criteria. Info:The search action works when the TrueContext Mobile App user is online, belongs to a TrueContext team with Search enabled, and has access to Search-enabled forms. The topic Enable the Mobile Search Feature provides more details about the Search functionality. Tip:For the Advanced and Enterprise tiers, all actions support the App‑to‑App x-callback parameters when the user saves or sends a form.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActions.htm",
      "title": "App‑to‑App Actions"
    }
  },
  {
    "content": "App‑to‑App Action Details Most App‑to‑App actions have additional parameters that you use to define exactly what you want to happen on the TrueContext Mobile App. This topic describes the additional parameter details for each App‑to‑App action. Info:We're now TrueContext.Use truecontext:// or tcxt:// in your App‑to‑App calls.To maintain existing integrations, TrueContext will continue to support prontoforms:// and the alternative https://prontofor.ms/.For more detailed information about what’s changing, visit https://support.truecontext.com/hc/en-us/articles/19516168513556 Available on all tiers, with more options on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Contents launch parameters refresh parameters list parameters open parameters send parameters search parameters Note:Parameter names are case-sensitive. launch parameters The launch action has no additional parameters. refresh parameters The refresh action has no additional parameters. list parameters",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "Info:Keep in mind that:Different form identifiers apply at different stages in a workflow. When you build an App‑to‑App request, you must use valid combinations of identifier and location (Forms, Inbox, Drafts, or Search).On the Enterprise tier, a dispatched record might also be located in the Group Inbox The Group Inbox on your mobile device is a list of records that were sent to a group or FormSpace. If you're available, you can claim a record to work on from the Group Inbox.. Resources are always located in the resourcelibrary, regardless of the workflow. Note:The list action for the Resource Library The Resource Library enables you to build a digital, multilingual, and searchable knowledge base that contains your organization’s essential content. Available to your mobile users in the Mobile App, the Resource Library simplifies the distribution, discovery, and use of critical information—such as manuals and schematics—to support your field technicians in their work. and Group Inbox",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "is supported on TrueContext Mobile App versions 22.1 and later. type Description Displays a specific area of the TrueContext Mobile App (Forms, Drafts, Inbox, Sent, Group Inbox, or Resource Library). Required Not required for forms. Required for the following Enterprise tier options: Resources in the Resource Library Records dispatched to a group or FormSpace (Group Inbox) Info:The topic App‑to‑App Group Inbox Support describes how to set up App‑to‑App calls to the Group Inbox in more detail. Default value forms Expected values forms drafts inbox sent groupinbox resourcelibrary Example Display the Inbox view of the TrueContext Mobile App.truecontext://x-callback-url/list?type=inbox Display a list of records that were dispatched to a group or FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "forms in that FormSpace.. Users can claim a record from the list displayed in the Group Inbox.truecontext://x-callback-url/list?type=groupinbox Display the list of resources in the Resource Library.truecontext://x-callback-url/list?type=resourcelibrary tag tag.list Description Display a list of forms or resources that match the specified form tag or resource tag. Use the type parameter along with tag to specify the location of the forms within the app (Forms, Inbox, or Drafts). Without the type parameter, the results default to Forms. For resources, you must include type=resourcelibrary. For records dispatched to a group or FormSpace, you must include type=groupinbox. Info:The topic App‑to‑App Group Inbox Support describes how to set up App‑to‑App calls to the Group Inbox in more detail. tagOperator By default, the Mobile App displays a list of forms or resources that have all the specified tags. Use tagOperator=OR to list forms or resources that have any one of the specified tags.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "Tip:The tagOperator parameter is optional. If you want to keep the default behavior, you don’t need to include tagOperator=AND in the App‑to‑App call. Limitations Supported on iOS, macOS, and Windows, and on Android versions 14.7 and later. Examples Display a list of forms that have the “install” tag.truecontext://x-callback-url/list?tag=install Display a list of resources that have both the “install” tag and the “checklist” tag. The tagOperator parameter in the second example is optional.truecontext://x-callback-url/list?type=resourcelibrary&tag.list=[install,checklist] ortruecontext://x-callback-url/list?type=resourcelibrary&tagOperator=AND&tag.list=[install,checklist] Display a list of forms that have at least one of the specified tags. In this example, the app displays forms with the “install” tag, the “checklist” tag, or both tags. Include tagOperator=OR in the App‑to‑App request.truecontext://x-callback-url/list?tagOperator=OR&tag.list=[install,checklist] Display a list of forms",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "in the Inbox that have at least one of the specified tags.truecontext://x-callback-url/list?tagOperator=OR&tag.list=[install,checklist]&type=inbox open parameters Open forms or resources that match the specified parameters. If only one form or resource is a match, that form or resource opens in the TrueContext Mobile App. If more than one form or resource is a match, a list of matching items opens in the TrueContext Mobile App. For the Group Inbox: If only one record is a match, the Details view opens so that the user can claim the record. If more than one record is a match, a list of matching records is displayed in the Group Inbox. Users can claim a record from the list. Note:The open action for the Resource Library and Group Inbox is supported on TrueContext Mobile App versions 22.1 and later. Tip:You can use multiple parameters to improve the precision of the results. For example, use the name and type=inbox parameters to open a matching form in the user’s Inbox. Info:You can use",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "the open action to open a form and dispatch answers. The topic Use an App‑to‑App Request to Open a Form and Dispatch Answers provides a detailed example and instructions. name Description Open forms or resources based on the name. This parameter matches partial strings. Note:You must enter the name using URL encoding. For resources, you must include type=resourcelibrary. Open forms or resources based on the name. This parameter matches partial strings. Note:You must enter the name using URL encoding.For resources, you must include type=resourcelibrary.For records dispatched to a group or FormSpace, you must include type=groupinbox. Example Open a form or list of forms that have the words “asset list” in the name.truecontext://x-callback-url/open?name=asset%20list Open a form or list of forms and dispatch a value, where “Job - Type” is the question unique ID and “Warranty” is the value.truecontext://x-callback-url/open?name=asset%20list&Job%20-%20Type=Warranty If more than one form is a",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "match, the value is dispatched after the user opens a form from the list. Open a record or list of records dispatched to a group or FormSpace and dispatch a value , where “Job - Type” is the question unique ID and “Warranty” is the value.truecontext://x-callback-url/open?type=groupinbox&name=asset%20list&Job%20-%20Type=Warranty The value is dispatched after the user claims and opens a record. Info:You can dispatch multiple values, as described in the topic Use an App‑to‑App Request to Open a Form and Dispatch Answers. Open a resource or list of resources that have the words “asset list” in the name.truecontext://x-callback-url/open?type=resourcelibrary&name=asset%20list type Description Use the type parameter to specify whether the form opens from the Forms, Inbox, or Drafts. For a resource, use type=resourcelibrary. For a record that was dispatched to a group or FormSpace, use type=groupinbox. Default value forms Expected values forms inbox drafts groupinbox resourcelibrary Example",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "Open a form or a list of forms in the user’s Inbox that have the word “asset” in the name.truecontext://x-callback-url/open?name=asset&type=inbox Open a resource or list of resources that have the words “asset list” in the name.truecontext://x-callback-url/open?type=resourcelibrary&name=asset%20list Open a record or list of records dispatched to a group or FormSpace if the names contain the words “asset list”.truecontext://x-callback-url/open?type=groupinbox&name=asset%20list tag tag.list Description Open forms or resources that match the specified form tag or resource tag. If only one form or resource is a match, that form or resource opens in the TrueContext Mobile App. If more than one form or resource is a match, a list of matching items opens in the TrueContext Mobile App. Use the type parameter along with tag to specify the location of the forms within the app (Forms, Inbox, or Drafts). Without the type parameter, the results default to Forms. For resources, you must include",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "type=resourcelibrary. For records dispatched to a group or FormSpace, you must include type=groupinbox. Info:The topic App‑to‑App Group Inbox Support describes how to set up App‑to‑App calls to the Group Inbox in more detail. tagOperator By default, the TrueContext Mobile App matches forms or resources that have all specified tags. Use the tagOperator=OR parameter to open a form or resource that has any one of the specified tags. Tip:The tagOperator parameter is optional. If you want to keep the default behavior, you don’t need to include tagOperator=AND in the App‑to‑App call. Examples Open a form or list of forms that have the “install” tag.truecontext://x-callback-url/open?tag=install Open a resource or list of resources that have both the “install” tag and the “checklist” tag. The tagOperator parameter in the second example is optional.truecontext://x-callback-url/open?type=resourcelibrary&tag.list=[install,checklist]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "ortruecontext://x-callback-url/open?type=resourcelibrary&tagOperator=AND&tag.list=[install,checklist] Open a form or list of forms that have at least one of the specified tags. Include tagOperator=OR in the App‑to‑App request.truecontext://x-callback-url/open?tagOperator=OR&tag.list=[install,checklist] Open a matching form or list of forms in the Inbox.truecontext://x-callback-url/open?tagOperator=OR&tag.list=[install,checklist]&type=inbox formID Description Open a form or list of forms based on the form ID. This is the unique identifier of an empty form. Examples Open a form with ID of “99999999”.truecontext://x-callback-url/open?formID=99999999 Open and prepopulate the form with the customer name and work order number. This is an example of a “dispatch” type request.truecontext://x-callback-url/open?formID=99999999&CustomerName=Best%20Pianos&WorkOrderID=1234 Note:The TrueContext Mobile App ignores any question unique IDs that are not defined in the form. formIterationID Description",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "Open a form or list of forms based on the form iteration ID. This is the unique identifier of a specific version of a form. Examples Open an active form with the version (iteration) of “98765432”.truecontext://x-callback-url/open?formIterationID=98765432 Open and prepopulate the form with the customer name and work order number.truecontext://x-callback-url/open?formIterationID=formIterationID&CustomerName=Best%20Pianos&WorkOrderID=1234 dataRecordID Description Open a dispatched form based on its form submission ID (the “data record” ID assigned when the TrueContext server sends a form or receives a submitted form). The form can only be in the Inbox or the Group Inbox. The form can be a dispatched form a completed form sent for editing, or an assigned incomplete TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "require someone else's expertise or that span multiple shifts.-enabled form. Example Open a dispatched form with a form submission ID of “123456789”.truecontext://x-callback-url/open?dataRecordID=123456789 clientDataRecordID Description Open a form that’s in a user’s Drafts. This parameter is usually used for a previously opened form that the user saved in Drafts. Any previous App‑to‑App requests that have the x-success parameter included return the clientDataRecordID when the user saves the form to Drafts. Example Open a saved form with a form clientDataRecordID of “A1A1A1A1-AAAA-1111-AAAAAA111111”.truecontext://x-callback-url/open?clientDataRecordID=A1A1A1A1-AAAA-1111-AAAAAA111111 resourceID Info:The Resource Library must be set up for your team, and individual resources must be set to Visible in Resource Library. The topic Set Up the Resource Library describes the process in more detail. Description Open an image or document in the Resource Library. Example Open a resource that has",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "a resourceID of “1234567891”.truecontext://x-callback-url/open?type=resourcelibrary&resourceID=1234567891 _lang Info:This parameter is for use with Multi-Language Forms only. Description Open a form in one of the languages that’s set up for the form. This works the first time the form opens, not when a form has already been: Opened Saved Dispatched with a preselected language Sent for edit, or Transferred Example Open a blank form in Spanish that has the words “asset list” in the form name. Tip:The form name in the App‑to‑App call is the original name that the Form Designer entered when they built the form.truecontext://x-callback-url/open?name=asset%20list&_lang=es Note:The _lang parameter value must be a language code for one of the Supported Languages for the Multi-Language Feature. Behavior The following table describes how the behavior on the Mobile App varies based on whether the App‑to‑App call: Results in a list of matching forms. Specifies a language that’s set up for the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "form. Includes x-callback parameters. References a form that already had a language selected. If… And… Then… More than one form matches the specified parameters The user selects a Multi-Language Form A Multi-Language Form is a form that’s set up with different translations so that field users can choose their preferred language. Translated content includes page and section names, question text, help text, and other form content. from the list of forms. The list includes only the forms that are set up with the specified language. The selected form opens in the specified language. The language specified in the App‑to‑App call is not set up for the specified form The call does not include any x-callback parameters The Mobile App displays an error. The call does include one or more x-callback parameters The callback returns a 1020 error. A language was previously selected for: A dispatched form saved to the Inbox A dispatched form with the language preselected A form saved to Drafts The",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "_lang parameter specifies a different language The call does not include any x-callback parameters The Mobile App displays an error. The _lang parameter specifies a different language The call does include one or more x-callback parameters The callback returns a 1021 error. Note:When you use the open action to prepopulate (dispatch) a form, make sure that the answers match the supported question and data types. For example:To prepopulate a question that has an “Integer” data type, you must send an integer in your URL.To prepopulate a dropdown question, you must send an answer that’s defined as an option for that question. send parameters Note:The type and at least one form identifier are required for the send request. name Description Send a form based on the form name. This parameter matches partial strings. Note:You must enter the form name using URL encoding. Example Send a form from the Inbox that has the words “asset list” in the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "name.truecontext://x-callback-url/send?name=asset%20list&type=inbox If more than one form matches the search string, the user selects the form to send from a list. type Description Specify the location of the form to send from the TrueContext Mobile App to the TrueContext server. Required? Yes Default value None (you must provide a value) Note:An unspecified or invalid value triggers the x-error callback. If the x-error is triggered but isn’t included in the request, the end user receives an error message. Expected values forms drafts inbox Example Send a form that a user started and saved to Drafts in the TrueContext Mobile App.truecontext://x-callback-url/send?type=drafts&clientDataRecordID=A1A1A1A1-AAAA-1111-AAAAAA111111 tag tag.list Description Send a form based on one or more valid form tags. If more than one form matches the tags, the TrueContext Mobile App displays a list of matching forms. Tip:Use the type parameter along with tag to specify the location of the forms within the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "app (Forms, Inbox, or Drafts). Without the type parameter, the results default to Forms. tagOperator By default, the TrueContext Mobile App matches forms that have all the specified tags. Use the tagOperator=OR parameter to send a form that has any one of the specified tags. Tip:The tagOperator parameter is optional. If you want to keep the default behavior, you don’t need to include tagOperator=AND in the App‑to‑App call. Examples Send a form from the Inbox that has the “install” tag.truecontext://x-callback-url/send?tag=install&type=inbox Send a form from the Inbox that has both the “install” tag and the “checklist” tag. The tagOperator parameter in the second example is optional.truecontext://x-callback-url/send?tag.list=[install,checklist]&type=inbox ortruecontext://x-callback-url/send?tagOperator=AND&tag.list=[install,checklist]&type=inbox Send a form that has at least one of the specified tags. Include tagOperator=OR in the App‑to‑App",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "request.truecontext://x-callback-url/send?tagOperator=OR&tag.list=[install,checklist]&type=inbox formID Description Open, populate, and send a form from the TrueContext Mobile App to the TrueContext server based on the form ID. This is the unique identifier of a form. Example Open a form, populate an answer that triggers Conditional Logic to populate other answers, and send a form. This process requires no user interaction.truecontext://x-callback-url/send?type=forms&formID=99999999&ServiceType=Warranty formIterationID Description Open, populate, and send a form from the TrueContext Mobile App to the TrueContext server based on the form iteration ID. This is the unique identifier of a specific version of a form. Example Open, populate, and send a form with the version (iteration) of “98765432”. Note:On an iOS device, the user might have to select OK to confirm and send the form. To avoid this, in the TrueContext Mobile App settings, switch the Confirm Send option",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "off.truecontext://x-callback-url/send?type=forms&formIterationID=98765432&ServiceType=Warranty dataRecordID Description Send a dispatched, transferred, or completed form based on its form submission ID (the “data record” ID assigned when the TrueContext server receives the submitted form). Note:The term transferred only applies to TrueContext Teamwork-enabled forms. Example Open and send a form from the user’s Inbox with a dispatched form ID of “123456789”.truecontext://x-callback-url/send?type=inbox&dataRecordID=123456789 clientDataRecordID Description Send a form already opened by your source app and saved by the TrueContext Mobile App user in their Drafts. You can find the clientDataRecordID in any previous App‑to‑App requests that have the x-success parameter included. An x-success callback returns the clientDataRecordID when the user saves the form to Drafts. Example Open and send a saved form with a clientDataRecordID of",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "“A1A1A1A1-AAAA-1111-AAAAAA111111”.truecontext://x-callback-url/send?type=drafts&clientDataRecordID=A1A1A1A1-AAAA-1111-AAAAAA111111 _lang Info:This parameter is for use with Multi-Language Forms only. Description Send a form in one of the languages that’s set up for the form. This works the first time the form opens, not when a form has already been: Opened Saved Dispatched with a preselected language Sent for edit, or Transferred Example Send a blank form in Spanish that has the words “asset list” in the form name. Tip:The form name in the App‑to‑App call is the original name that the Form Designer entered when they built the form.truecontext://x-callback-url/send?name=asset%20list&_lang=es Note:The _lang parameter value must be a language code for one of the Supported Languages for the Multi-Language Feature. Behavior The following table describes how the behavior on the Mobile App varies based on whether the App‑to‑App call: Results in a list of matching forms. Specifies a language",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "that’s set up for the form. Includes x-callback parameters. References a form that already had a language selected. If… And… Then… More than one form matches the specified parameters The user selects a Multi-Language Form from the list of forms. The list includes only the forms that are set up with the specified language. The selected form sends in the specified language. The language specified in the App‑to‑App call is not set up for the specified form The call does not include any x-callback parameters The Mobile App displays an error. The call does include one or more x-callback parameters The callback returns a 1020 error. A language was previously selected for: A dispatched form saved to the Inbox A dispatched form with the language preselected A form saved to Drafts The _lang parameter specifies a different language The call does not include any x-callback parameters The Mobile App displays an error. The _lang parameter specifies a different language The call does include one or",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "more x-callback parameters The callback returns a 1021 error. search parameters Note:The search action works when the TrueContext Mobile App user is online, belongs to a TrueContext team with Search enabled, and has access to Search-enabled forms. Tip:For TrueContext Teamwork-enabled forms (Enterprise tier only), use the search action when you want to display a list of incomplete forms that a user can claim. searchText Description Open a list of form submissions based on the form submission name. This parameter matches part of the form submission name, so that the user can select from a list of matching forms. Note:You must enter the form submission name using App‑to‑App URL Encoding. Example Open a list of form submissions that have the words “asset list” in the name.truecontext://x-callback-url/search?searchText=asset%20list stateFilter Description Open a list of forms based on the form submission state. Default value Any Expected values For all types of Mobile App forms: Any",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "AllComplete For TrueContext Teamwork-enabled forms only: AllIncomplete IncompleteUnassigned Example Open a list of incomplete TrueContext Teamwork-enabled forms that are available for a user to claim.truecontext://x-callback-url/search?stateFilter=IncompleteUnassigned dateSearchType Description Open a list of forms based on the date the form was last submitted. You can choose to search on a date range or date period. Default value AnyDate Returns a list of forms submitted within the last 365 days. Expected values AnyDate DatePeriod DateRange Additional parameters The DatePeriod defaults to 7 days. To change the default value, you must also specify the datePeriod: Today Yesterday ThisWeek ThisMonth LastHour TwentyFourHours SevenDays ThirtyDays The DateRange has no default—you must specify the dateRangeStart and dateRangeEnd values in the following ISO 8601 format: YYYY-MM-DDTHH:mm:ssZ, for example, 2021-06-16T04:00Z Note:In the ISO 8601 format, Z specifies the date and time in UTC. In",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "the search results, the TrueContext Mobile App converts and displays the search date and time in the time zone set on the device. Examples Open a list of incomplete TrueContext Teamwork-enabled forms that were submitted this week.truecontext://x-callback-url/search?stateFilter=AllIncomplete&dateSearchType=DatePeriod&datePeriod=ThisWeek Open a list of forms that were submitted during a specific date range.truecontext://x-callback-url/search?dateSearchType=DateRange&dateRangeStart=2021-06-16T04:00Z&dateRangeEnd=2021-06-18T04:00Z",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppCallbackActionsAdditionalParameters.htm",
      "title": "App‑to‑App Action Details"
    }
  },
  {
    "content": "list actions\n\nThe list action displays a list of matching records in the Group Inbox. You must specify type=groupinbox in your App‑to‑App call.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "list actions"
    }
  },
  {
    "content": "Supported filters\n\nname: Filters by the record name, matches partial strings. tag and tag.list: Filters by one or more tags. You can use the tagOperator to specify whether the filter matches all tags (AND) or any tags (OR).",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "Supported filters"
    }
  },
  {
    "content": "list examples\n\nAction Example List all records dispatched to a group or FormSpace FormSpaces are where forms are stored and organized in the TrueContext Web Portal. A TrueContext Team may have multiple FormSpaces, depending on their needs. Admins can set FormSpace permissions to control which users have access to the forms in that FormSpace.. truecontext://x-callback-url/list?type=groupinbox List specific records dispatched to a group or FormSpace using the name parameter. truecontext://x-callback-url/list?type=groupinbox&name=asset%20list List specific records dispatched to a group or FormSpace using the tag or tag.list parameter. This example lists records that have the “install” tag.truecontext://x-callback-url/list?type=groupinbox&tag=install In the following example, the app lists records that have both the “install” and “checklist” tags.truecontext://x-callback-url/list?type=groupinbox&tag.list=[install,checklist] In the next example, the AND tag operator is optional, because the",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "list examples"
    }
  },
  {
    "content": "app defaults to and logic.truecontext://x-callback-url/list?type=groupinbox&tagOperator=AND&tag.list=[install,checklist] In this last example, the OR tag operator overrides the default behavior. The results include records that have either the install or the checklist tags, or both.truecontext://x-callback-url/list?type=groupinbox&tagOperator=OR&tag.list=[install,checklist]",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "list examples"
    }
  },
  {
    "content": "open actions\n\nWhen you use the open action: The Mobile App user must claim and open the record. If only one record is a match, the Details view opens so that the user can claim the record. If more than one record is a match, a list of matching records is displayed in the Group Inbox. Users can claim a record from the list. You can dispatch answers in your App‑to‑App call, for example:truecontext://x-callback-url/open?type=groupinbox&name=asset%20list&Job%20-%20Type=Warranty where Job%20-%20Type is the question unique ID “Job - Type” and Warranty is the answer. Tip:The value is dispatched once the user claims and opens the record from the Group Inbox.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "open actions"
    }
  },
  {
    "content": "Supported filters\n\nname: Filters by the record name, matches partial strings. tag and tag.list: Filters by one or more tags. You can use the tagOperator to specify whether the filter matches all tags (AND) or any tags (OR). dataRecordID: Filters on the identifier assigned when the record is dispatched to a group or FormSpace.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "Supported filters"
    }
  },
  {
    "content": "open examples\n\nAction Example Open the details of a specific record dispatched to a group or FormSpace using the dataRecordID parameter. truecontext://x-callback-url/open?type=groupinbox&dataRecordID=1234567891 Open a record or list of records dispatched to a group or FormSpace using the name parameter. truecontext://x-callback-url/open?type=groupinbox&name=asset%20list Open a record or list of records dispatched to a group or FormSpace using the tag or tag.list parameter. This example opens or lists records that have the “install” tag.truecontext://x-callback-url/open?type=groupinbox&tag=install In the following example, the app opens or lists records that have both the “install” and “checklist” tags.truecontext://x-callback-url/open?type=groupinbox&tag.list=[install,checklist] In the next example, the AND tag operator is optional, because the app defaults to and logic.truecontext://x-callback-url/open?type=groupinbox&tagOperator=AND&tag.list=[install,checklist] In this last example,",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "open examples"
    }
  },
  {
    "content": "the OR tag operator overrides the default behavior to apply or logic. The results include records that have either the install or the checklist tags, or both.truecontext://x-callback-url/open?type=groupinbox&tagOperator=OR&tag.list=[install,checklist] Open a record or list of records dispatched to a group or FormSpace using the name parameter, and prepopulate a value. In this example, “Job - Type” is the question unique ID and “Warranty” is the value.truecontext://x-callback-url/open?type=groupinbox&name=asset%20list&Job%20-%20Type=Warranty Tip:The value is dispatched after the user claims and opens a record.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "open examples"
    }
  },
  {
    "content": "Callbacks\n\nYou can use the x-callback parameters As part of an App‑to‑App call to the TrueContext app, x-callback parameters provide a way to launch and send data to the calling app. These include x-success, x-cancel, and x-error parameters. described in the following table to send information from the TrueContext Mobile App to another app or URL. Info:The topic App‑to‑App x-callback parameters describes how these work in more detail. Action Callbacks supported list None open x-success x-cancel x-error",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppGroupInbox.htm",
      "title": "App‑to‑App Group Inbox Support",
      "section": "Callbacks"
    }
  },
  {
    "content": "App‑to‑App x-callback parameters You can use any or all of the x-callback parameters As part of an App‑to‑App call to the TrueContext app, x-callback parameters provide a way to launch and send data to the calling app. These include x-success, x-cancel, and x-error parameters. described in this topic to send information from the TrueContext Mobile App to another app or URL. Available on the Advanced and Enterprise tiers: Essentials Advanced Enterprise Tip:To improve efficiency and provide an optimal user experience, we recommend that you include all three x‑callback parameters in your requests. x-success Opens the specified app or URL when the TrueContext Mobile App user saves or sends a form, or when they transfer a TrueContext Teamwork TrueContext Teamwork is an Enterprise tier feature that enables mobile users to transfer incomplete forms for other users to complete as part of a multi-user workflow. This can be useful for jobs that require someone else's expertise or that span",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppXCallbackParams.htm",
      "title": "App‑to‑App x-callback parameters"
    }
  },
  {
    "content": "multiple shifts.-enabled form. By default, when a TrueContext Mobile App user action triggers an x-success callback, the Mobile App returns the following data: serverDataRecordID—the form’s unique ID on the TrueContext server (if available). clientDataRecordID—the form’s unique ID on the TrueContext client. pfStatus—the form’s current status on the device, as described in the following table. Status Description Saved A TrueContext Mobile App user opened a form from the Forms box or Inbox, and then saved it. Outbox A submitted form is still processing on the user’s device and has not yet been uploaded to the server. This can happen when a device is offline, for example. Sent A submitted form was uploaded to the server. Any custom callback parameters defined for the form. x-error Opens the specified app or URL when the TrueContext Mobile App can’t complete the requested action and generates an error. x-cancel Opens the specified app or URL when the TrueContext Mobile App user cancels an",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppXCallbackParams.htm",
      "title": "App‑to‑App x-callback parameters"
    }
  },
  {
    "content": "action, such as discarding any changes made to the form. Note: Different source apps vary in their ability to use the data that the TrueContext Mobile App provides in a callback. Your source app must be configured to handle the callbacks and any data returned. You might need to check with your own experts to set this up for your specific app. We recommend that you configure a custom App‑to‑App allow list to manage the apps that can receive data from the TrueContext Mobile App. App‑to‑App callbacks are supported on the Advanced and Enterprise tiers only.",
    "metadata": {
      "url": "https://docs.truecontext.com/1374411/Content/Features/h3AppToAppForCentral/AppToAppTechnicalDetails/AppToAppXCallbackParams.htm",
      "title": "App‑to‑App x-callback parameters"
    }
  },
  {
    "content": "List the FormSpaces in your account\n\nUse this endpoint to retrieve a list of FormSpaces and general details about them. Details include the FormSpace ID, the FormSpace name, the Push Updates to Devices setting, and the Problem Contact email address. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the FormSpaces in your account"
    }
  },
  {
    "content": "Responses\n\n200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"194111111\",\"name\": \"My FormSpace\",\"problemContactEmail\": \"user1@example.com\",\"problemContactEmails\": [\"user1@example.com\",\"user2@example.com\"],\"pushUpdatesToDevices\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of a specific FormSpace\n\nUse this endpoint to retrieve the details of a specific FormSpace. Details include general information like the name, the Push Updates to Devices setting, and the Problem Contact email address. It also includes a list of groups that have permissions in the FormSpace with details of the permissions they have. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. Responses200 Details of the FormSpace. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a specific FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Details of the FormSpace. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"194111111\",\"name\": \"My FormSpace\",\"problemContactEmail\": \"user1@example.com\",\"problemContactEmails\": [\"user1@example.com\",\"user2@example.com\"],\"pushUpdatesToDevices\": true,\"groups\": [{\"identifier\": \"2111111111\",\"name\": \"Marketing Team\",\"canAdminFormSpace\": true,\"canSubmitData\": true,\"canSubmitDraftData\": true,\"canViewData\": true,\"canApproveData\": true,\"canManageData\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "List the forms in a specific FormSpace\n\nUse this endpoint to retrieve a list of forms in a specific Formspace and general details about them. Details include: Form ID Form name Description State (active, draft, or archived) path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the forms in a specific FormSpace"
    }
  },
  {
    "content": "Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the forms in a specific FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"148111111\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"},\"name\": \"Inspection Form\",\"description\": \"Form for yearly inspections.\",\"created\": {\"userId\": \"135080030\",\"username\": \"user.member\",\"displayName\": \"User Member\",\"actionTimestamp\": \"2021-05-20T18:11:11.000Z\"},\"lastUpdated\": {\"userId\": \"135080030\",\"username\": \"user.member\",\"displayName\": \"User Member\",\"actionTimestamp\": \"2021-05-20T18:11:11.000Z\"},\"state\": \"Active\",\"locked\": false}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of a specific form\n\nUse this endpoint to retrieve the details about the currently active version of a form and its draft version, if applicable. Details include: General information like name, description, or tags. Configuration details like whether features, such as Editing and Data Passthrough, are enabled. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. formIdrequiredstring Include the unique identifier of the form. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or form you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace or form you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a specific form"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or form you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace or form you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"148111111\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"},\"name\": \"Building Inspection\",\"description\": \"Use this form for weekly inspections.\",\"created\": {\"userId\": \"135080030\",\"username\": \"user.member\",\"displayName\": \"User Member\",\"actionTimestamp\": \"2021-05-20T18:11:11.000Z\"},\"lastUpdated\": {\"userId\": \"135080030\",\"username\": \"user.member\",\"displayName\": \"User Member\",\"actionTimestamp\": \"2021-05-20T18:11:11.000Z\"},\"state\": \"Active\",\"locked\": false,\"activeVersion\": {\"identifier\": \"1511111111\",\"modelVersion\": \"v2\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"},\"name\": \"Building Inspection\",\"description\": \"Form for monthly building inspections.\",\"tags\": [\"Inspection\",\"monthly\"],\"state\": \"Active\",\"version\": 16,\"passthrough\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "true,\"initiationMethod\": \"Both\",\"dispatchDeclinable\": true,\"editable\": \"NotEditable\",\"notes\": \"Added a new section with questions for the security inspection.\"},\"draftVersion\": {\"identifier\": \"1511111111\",\"modelVersion\": \"v2\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"},\"name\": \"Building Inspection\",\"description\": \"Form for monthly building inspections.\",\"tags\": [\"Inspection\",\"monthly\"],\"state\": \"Active\",\"version\": 16,\"passthrough\": true,\"initiationMethod\": \"Both\",\"dispatchDeclinable\": true,\"editable\": \"NotEditable\",\"notes\": \"Added a new section with questions for the security inspection.\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "List the form versions for a specific form\n\nUse this endpoint to retrieve a list of all the versions of a form. The system creates a new form version when a form designer changes a form and then saves and deploys it. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. formIdrequiredstring Include the unique identifier of the form. query Parameterspinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 403 Access",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the form versions for a specific form"
    }
  },
  {
    "content": "Denied. You are not allowed to access the requested resource. The FormSpace or form you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace or form you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the form versions for a specific form"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or form you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace or form you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"UTC\",\"pageData\": [{\"identifier\": \"1511111111\",\"modelVersion\": \"v2\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"},\"name\": \"Building Inspection\",\"description\": \"Form for monthly building inspections.\",\"tags\": [\"Inspection\",\"monthly\"],\"state\": \"Active\",\"version\": 16,\"passthrough\": true,\"initiationMethod\": \"Both\",\"dispatchDeclinable\": true,\"editable\": \"NotEditable\",\"notes\": \"Added a new section with questions for the security inspection.\"}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Get a specific form version\n\nUse this endpoint to retrieve the details of a form version. Details include: General information about the form, including the name, description, and tags. Information about form settings such as Editing, Data Passthrough, and the Initiation Method. A list of all Data Destinations and Documents linked to the form. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. formIdrequiredstring Include the unique identifier of the form. formVersionIdrequiredstring Include the unique identifier of the form version. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace, form, or form version you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace, form, or form version you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Get a specific form version"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace, form, or form version you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace, form, or form version you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"1511111111\",\"modelVersion\": \"v2\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"},\"name\": \"Building Inspection\",\"description\": \"Form for monthly building inspections.\",\"tags\": [\"Inspection\",\"monthly\"],\"state\": \"Active\",\"version\": 16,\"passthrough\": true,\"initiationMethod\": \"Both\",\"dispatchDeclinable\": true,\"editable\": \"NotEditable\",\"notes\": \"Added a new section with questions for the security inspection.\",\"destinations\": [{\"destinationId\": \"2131111111\",\"documentIds\": [\"23111111111\"]}],\"documentIds\": [\"24111111111\"]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Initiate an export of all Form Submissions for a specific form\n\nUse this endpoint to initiate a data export for a specific form. When you initiate a data export, the system generates a file with details of all dispatched and submitted forms for a specific form. Details include metadata and answers to questions, including questions in repeatable sections. After you initiate the data export, use the following endpoints to complete the process: GET /formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId}/status retrieves the status of the data export. Make subsequent requests until the status of the data export is complete. GET /1.1/formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId} downloads the data export. Once you confirm that the data export is complete, use this endpoint to download the export file. Note: You can export up to 1,000,000 submissions at one time. If your export has more submissions, your API request is successful, but it returns an error when",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Initiate an export of all Form Submissions for a specific form"
    }
  },
  {
    "content": "you check the status of the export. Add filters to your request body to reduce the number of submissions to export path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. formIdrequiredstring Include the unique identifier of the form. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired exportAddressesArray of strings Include a list of all the email addresses you want the system to notify when the data export is complete. timeZonestring Default: \"UTF\" Specify the time zone for the time filters and any timestamps in the export. The time zone must be a valid tz database time zone. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. localestring Default: \"en\" Specify a valid ISO 639-1 language code. The external resource List of ISO 639-1 codes contains a full list of supported locale codes in the column 639-1. Note: TrueContext only supports en, es, fr,",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Initiate an export of all Form Submissions for a specific form"
    }
  },
  {
    "content": "and ja. If you specify an unsupported locale, the system defaults to en. formatTypestring Default: \"Csv\" Enum: \"Csv\" \"Excel\" Specify the format for the export. formatobject filterobject Responses200 OK Note: Even if the request returns a \"200\" response, the data export can still fail. Use the /formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId}/status endpoint to verify that your export succeeded. 400 Bad Request. You can't initiate another data export for the same form when a previous export is not complete and has the same export email address. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or form you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace or form you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Initiate an export of all Form Submissions for a specific form"
    }
  },
  {
    "content": "Responses\n\n200 OK Note: Even if the request returns a \"200\" response, the data export can still fail. Use the /formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId}/status endpoint to verify that your export succeeded. 400 Bad Request. You can't initiate another data export for the same form when a previous export is not complete and has the same export email address. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or form you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace or form you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"exportAddresses\": [\"supervisor@companyemail.com\"],\"timeZone\": \"America/Toronto\",\"locale\": \"en\",\"formatType\": \"Csv\",\"format\": {\"delimiter\": \",\",\"encoding\": \"UTF-8\",\"addQuestionTextHeader\": true,\"addQuestionLabelHeader\": false,\"metadataFields\": [\"ReferenceNumber\",\"UserName\",\"ServerReceiveTime\",\"WorkflowStatus\",\"ExecutionState\"]},\"filter\": {\"userAndGroupIds\": [\"131111111\"],\"workflowStateFilter\": \"Any\",\"stateFilter\": \"Any\",\"timeFilterField\": \"DispatchedDate\",\"startTime\": \"2021-01-01T00:00:00Z\",\"endTime\": \"2022-01-01T00:00:00Z\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"31611111111\",\"format\": \"csv\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the status of a data export for a specific form\n\nUse this endpoint to check the status of a data export. Make subsequent requests until the export is complete. Then, use the GET /1.1/formspaces/{formSpaceId}/forms/{formId}/data/export/{dataExportId} endpoint to download the export. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. formIdrequiredstring Include the unique identifier of the form. dataExportIdrequiredstring Include the unique identifier of the data export. query Parametersformatstring Default: \"csv\" Enum: \"csv\" \"xlsx\" Specify the format of the data export. Note: You must include this parameter if you set your data to export in an Excel format. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace, form, or data export you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace, form, or data export you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the status of a data export for a specific form"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace, form, or data export you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace, form, or data export you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"complete\": true,\"success\": true,\"errorMessage\": null}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the completed data export for a specific form\n\nUse this endpoint to download a completed data export in a CSV or Excel format. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. formIdrequiredstring Include the unique identifier of the form. dataExportIdrequiredstring Include the unique identifier of the data export. query Parametersformatstring Default: \"csv\" Enum: \"csv\" \"xlsx\" Specify the format of the data export. Note: You must include this parameter if you set your data to export in an Excel format. Responses200 Successful request. 400 Data export not found. The data export was not successful. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace, form, or data export you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace, form, or data export you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the completed data export for a specific form"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Data export not found. The data export was not successful. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace, form, or data export you specified does not exist in your team. 404 Object not found. The system could not find the FormSpace, form, or data export you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "List the documents in a FormSpace\n\nUse this endpoint to retrieve a list of documents in a FormSpace and general details about them. Details include: Document ID Name and description Document type path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the documents in a FormSpace"
    }
  },
  {
    "content": "403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 The FormSpace you specified does not exist. Make sure your formSpaceId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the documents in a FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 The FormSpace you specified does not exist. Make sure your formSpaceId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"23143700061\",\"type\": \"Pdf\",\"name\": \"Customer copy PDF document\",\"description\": \"Document to send a copy of inspection reports to customers.\",\"formDocumentVersion\": \"v2\",\"standard\": true,\"autoLink\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of a document\n\nUse this endpoint to retrieve the details of a specific document. Details include: Name and description Document type Document version Information about document settings path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. documentIdrequiredstring Include the Unique Identifier of the document. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or document you specified does not exist in your team. 404 The FormSpace or document you specified does not exist. Make sure your formSpaceId and documentId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a document"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or document you specified does not exist in your team. 404 The FormSpace or document you specified does not exist. Make sure your formSpaceId and documentId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"23143700061\",\"type\": \"Pdf\",\"name\": \"Customer copy PDF document\",\"description\": \"Document to send a copy of inspection reports to customers.\",\"formDocumentVersion\": \"v2\",\"standard\": true,\"autoLink\": true}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "List the Resources in a FormSpace\n\nUse this endpoint to retrieve a list of Resources in a FormSpace and general details about them. Details include: Resource ID Name and description Media type path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 403",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the Resources in a FormSpace"
    }
  },
  {
    "content": "Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 The FormSpace you specified does not exist. Make sure your formSpaceId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the Resources in a FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 The FormSpace you specified does not exist. Make sure your formSpaceId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"2114111111\",\"type\": \"Image\",\"name\": \"Map of the National Hospital with room and building numbers.\",\"description\": \"Users can refer to this map to perform inspections in the hospital.\",\"mediaType\": \"image/jpeg\"}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of a Resource\n\nUse this endpoint to retrieve the details of a specific Resource. Details include: Name and description Media type path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. resourceIdrequiredstring Include the unique identifier of the resource. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a Resource"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"2114111111\",\"type\": \"Image\",\"name\": \"Map of the National Hospital with room and building numbers.\",\"description\": \"Users can refer to this map to perform inspections in the hospital.\",\"mediaType\": \"image/jpeg\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Delete a Resource\n\nUse this endpoint to delete a Resource. The Resource must not be in-use by any forms. Warning: If you delete a Resource, you can't recover it from the TrueContext Server. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. resourceIdrequiredstring Include the unique identifier of the resource. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct. 412 Resource in use. The Resource you want to delete is currently being used by a form.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Delete a Resource"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct. 412 Resource in use. The Resource you want to delete is currently being used by a form.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Download the Resource file\n\nUse this endpoint to download a Resource file in binary format. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. resourceIdrequiredstring Include the unique identifier of the resource. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Download the Resource file"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Update an existing Resource\n\nUse this endpoint to update the file in a Resource. Note the following limitations: The file must be in JPEG, JPG, PNG, or PDF format. The maximum file size for a Resource Document is 5MB. The maximum file size for a Resource Image is 2MB. The maximum supported image dimensions are 4096 x 4096 pixels. Note: You must have an exisiting Resource to use this endpoint. You can't use an API endpoint to create a Resource. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. resourceIdrequiredstring Include the unique identifier of the resource. extensionrequiredstring Enum: \"jpg\" \"jpeg\" \"png\" \"pdf\" Include the image file extension. Request Body schema: image/jpegimage/jpgimage/pngapplication/pdfimage/jpeg Include the raw bytes binary content you want to upload. string <binary> Responses200 Successful request. 400 Invalid request data. The file type you want to upload is not supported, or the file you want to upload is larger",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update an existing Resource"
    }
  },
  {
    "content": "than the maximum file size allowed. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update an existing Resource"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Invalid request data. The file type you want to upload is not supported, or the file you want to upload is larger than the maximum file size allowed. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace or Resource you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The FormSpace or Resource you specified does not exist. Make sure your formSpaceId and resourceId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "List the Data Sources in a FormSpace\n\nUse this endpoint to retrieve a list of Data Sources in a specific FormSpace and general details about them. Details include: Data Source ID Data Source Name and Description Data Source Type path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the Data Sources in a FormSpace"
    }
  },
  {
    "content": "Responses200 Successful request. 403 Access denied. You are not allowed to access the requested resource. 404 Object not found. The system couldn't find the FormSpace you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the Data Sources in a FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access denied. You are not allowed to access the requested resource. 404 Object not found. The system couldn't find the FormSpace you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"161111111\",\"name\": \"Customer Information\",\"description\": \"List of customer names and contact information.\",\"type\": \"Upload\"}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Get a Data Source\n\nUse this endpoint to retrieve the details of a specific Data Source. Details include: Data Source ID Data Source Name and Description Data Source Type Status of the Data Source path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. sourceIdrequiredstring Include the unique identifier of the Data Source. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 403 Access denied. You are not allowed to access the requested resource. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Get a Data Source"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access denied. You are not allowed to access the requested resource. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"161111111\",\"name\": \"Customer Information\",\"description\": \"List of customer names and contact information.\",\"type\": \"Upload\",\"data\": {\"identifier\": \"161111111\",\"asyncStatus\": {\"state\": \"Error\",\"lastUpdatedAt\": \"2021-10-28T10:53:28-04:00\",\"message\": \"Form not found\"}}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Delete a Data Source\n\nUse this endpoint to delete a Data Source. The Data Source must not be linked to any active forms. Warning: If you delete a Data Source, you can't recover it from the TrueContext Server. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. sourceIdrequiredstring Include the unique identifier of the Data Source. Responses200 Successful request. 403 Data Source in use. Because the Data Source is currently linked to a form, you can't delete it. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Delete a Data Source"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Data Source in use. Because the Data Source is currently linked to a form, you can't delete it. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Force a fetch of dynamic Data Source contents\n\nUse this endpoint to fetch new data from a remote service for a dynamic Data Source. You can use this endpoint for all Data Source types except Manual Upload (Upload) and TrueContext User List (ProntoFormsGroup). Note: You must have an existing Data Source to use this endpoint. You can't use an API endpoint to create a Data Source. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. sourceIdrequiredstring Include the unique identifier of the Data Source. query ParametersforceFetchboolean Default: false Set to true if you want to force a fetch even when the system finds no updates to the Data Source. Use this parameter when your Data Source contains dynamic cells that the system detects as unchanged. Responses200 Successful request. Note: This API endpoint triggers a data fetch, and then returns a 200 response when the request is successful. Some data fetches that return a 200 response code might result",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Force a fetch of dynamic Data Source contents"
    }
  },
  {
    "content": "in server errors. Examples include when the file is deleted from the remote service, or the file exceeds the maximum number of cells. In these cases, the system notifies the problem contact email address. 400 Data Source not fetchable. The Data Source you specified is either a Manual Upload or TrueContext User List. 403 Access Denied: You are not allowed to access the requested resource. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified. 429 Data Source Paused. Your Data Source was paused because it is impacting system performance. Contact Support for assistance.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Force a fetch of dynamic Data Source contents"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. Note: This API endpoint triggers a data fetch, and then returns a 200 response when the request is successful. Some data fetches that return a 200 response code might result in server errors. Examples include when the file is deleted from the remote service, or the file exceeds the maximum number of cells. In these cases, the system notifies the problem contact email address. 400 Data Source not fetchable. The Data Source you specified is either a Manual Upload or TrueContext User List. 403 Access Denied: You are not allowed to access the requested resource. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified. 429 Data Source Paused. Your Data Source was paused because it is impacting system performance. Contact Support for assistance.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Upload new data for a Manual Upload type Data Source\n\nUse this endpoint to upload new data to a Manual Upload type Data Source. You can upload files with .csv, .xls, .xlsx, .json, or .xml extensions. Note: You must have an exisiting Data Source to use this endpoint. You can't use an API endpoint to create a Data Source. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. sourceIdrequiredstring Include the unique identifier of the Data Source. extensionrequiredstring Enum: \"csv\" \"xls\" \"xlsx\" \"json\" \"xml\" Extension of the file you want to upload. Supported extensions are .csv, .xls, .xlsx, .json, and .xml. query Parametersdstring Default: \",\" Delimiter for the source data in CSV files. encodingstring Default: \"utf-8\" Specifies the character encoding of the content. For content generated from Microsoft Windows environments, set this to windows-1252. suppressPushboolean Default: false Specifies whether you want to stop the Data Source update from",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Upload new data for a Manual Upload type Data Source"
    }
  },
  {
    "content": "triggering any configured push notifications to mobile users. Request Body schema: application/jsonapplication/xmltext/csvapplication/vnd.ms-excelapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetapplication/jsonrequired Include the raw bytes binary content you want to upload. string <binary> Responses200 Successful request. Note: This API endpoint triggers a data upload, and it returns a 200 response when the upload request is successful. Some data uploads that return a 200 response code might result in errors in the Web Portal. Examples are when the file extension doesn't match the file type, or the file exceeds the maximum number of cells. In these cases the system notifies the problem contact via email. 400 Either your Data Source is not of the Manual Upload type, or one of the column headers exceeds the maximum value of 255 characters. 403 Access Denied: The Data Source or FormSpace you specified does not exist in your account. Access Denied: A Read-Only API key",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Upload new data for a Manual Upload type Data Source"
    }
  },
  {
    "content": "cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Upload new data for a Manual Upload type Data Source"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. Note: This API endpoint triggers a data upload, and it returns a 200 response when the upload request is successful. Some data uploads that return a 200 response code might result in errors in the Web Portal. Examples are when the file extension doesn't match the file type, or the file exceeds the maximum number of cells. In these cases the system notifies the problem contact via email. 400 Either your Data Source is not of the Manual Upload type, or one of the column headers exceeds the maximum value of 255 characters. 403 Access Denied: The Data Source or FormSpace you specified does not exist in your account. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmltext/csvapplication/vnd.ms-excelapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetapplication/jsonCopy\"string\"",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Retrieve the contents of a Data Source\n\nUse this endpoint to retrieve the contents of any type of Data Source as a .csv or .xlsx file. path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. sourceIdrequiredstring Include the unique identifier of the Data Source. extensionrequiredstring Enum: \"csv\" \"xlsx\" Specify the format in which you want to download the contents of the Data Source. This endpoint supports .csv and .xlsx extensions. query Parametersdstring Default: \",\" Delimiter for the source data in CSV files. Responses200 Successful request. 403 Access denied. You are not allowed to access the requested resource. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified. 415 Media type not supported. The file extension you specified is not supported. Use a .csv or .xlsx file extension.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the contents of a Data Source"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access denied. You are not allowed to access the requested resource. 404 Object not found. The system couldn't find the FormSpace or Data Source you specified. 415 Media type not supported. The file extension you specified is not supported. Use a .csv or .xlsx file extension.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "List the Data Destinations in a FormSpace\n\nUse this endpoint to retrieve a list of Data Destinations in a FormSpace and general details about them. Details include: Data Destination ID Name and type Information about the Data Destination configuration path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the Data Destinations in a FormSpace"
    }
  },
  {
    "content": "column TZ database name. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 The FormSpace you specified does not exist. Make sure your formSpaceId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the Data Destinations in a FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. 404 The FormSpace you specified does not exist. Make sure your formSpaceId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"23111111111\",\"type\": \"Email\",\"name\": \"Customer Email\",\"locked\": false,\"active\": true,\"autoLink\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve a Data Destination\n\nUse this endpoint to retrieve the details of a specific Data Destination. Details include: Data Destination Name Type of Data Destination Information about Data Destination settings path ParametersformSpaceIdrequiredstring Include the unique identifier of the FormSpace. destinationIdrequiredstring Include the unique identifier of the Data Destination. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or Data Destination you specified does not exist in your team. 404 The FormSpace or Data Destination you specified does not exist. Make sure your formSpaceId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a Data Destination"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The FormSpace or Data Destination you specified does not exist in your team. 404 The FormSpace or Data Destination you specified does not exist. Make sure your formSpaceId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"23111111111\",\"type\": \"Email\",\"name\": \"Customer Email\",\"locked\": false,\"active\": true,\"autoLink\": true}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve a Data Destination execution\n\nUse this endpoint to retrieve details about a Data Destination execution prompted by a submitted form. Details include: Status of the execution Error messages, if applicable General information about the Data Destination path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. destinationIdrequiredstring Include the unique identifier of the Data Destination. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or Data Destination you specified does not exist in your team. 404 The Form Submisson or Data Destination you specified does not exist. Make sure your dataId and destinationId",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a Data Destination execution"
    }
  },
  {
    "content": "values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a Data Destination execution"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or Data Destination you specified does not exist in your team. 404 The Form Submisson or Data Destination you specified does not exist. Make sure your dataId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonCopy{\"identifier\": \"2781111111111\",\"processorType\": \"DestinationExecution\",\"stopAutomaticRetries\": true,\"reExecutable\": true,\"failureCount\": 0,\"processedMessage\": \"This destination is disabled. Form Submission processing not executed.\",\"detailedErrorMessage\": \"string\",\"processedState\": \"Filtered\",\"processedTimestamp\": \"2021-11-05T16:25:22Z\",\"state\": \"Filtered\",\"destinationType\": \"Email\",\"destinationId\": \"2131111111\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Update the \"Automatic Retries\" setting for a Data Destination execution\n\nUse this endpoint to update the \"Automatic Retries\" setting for a Data Destination execution triggered by a Form Submission. The system is set to automatically retry a Data Destination execution that fails. If a Data Destination is retrying the execution and failing multiple times, you can use this endpoint to stop the system from retrying by specifying true in the Request Body. Once the error with the Data Destination is fixed, you can enable the \"Automatic Retries\" setting by specifying false in the Request Body. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. destinationIdrequiredstring Include the unique identifier of the Data Destination. Request Body schema: application/json stopAutomaticRetriesboolean Specify true to stop the Data Destination execution from retrying automatically. Specify false to set the Data Destination execution to automatically retry.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update the \"Automatic Retries\" setting for a Data Destination execution"
    }
  },
  {
    "content": "Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or Data Destination you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or Data Destination you specified does not exist. Make sure your dataId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update the \"Automatic Retries\" setting for a Data Destination execution"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or Data Destination you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or Data Destination you specified does not exist. Make sure your dataId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonCopy{\"stopAutomaticRetries\": true}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Re-execute all the Data Destinations for a Form Submission\n\nUse this endpoint to prompt all the Data Destinations linked to a Form Submission to re-execute. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. query ParametersfailedOnlyboolean Default: false Specify if you want to re-execute all Data Destinations linked to the Form Submissions or only failed Destinations. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Re-execute all the Data Destinations for a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Re-execute a Data Destination for a Form Submission\n\nUse this endpoint to re-execute a specific Data Destination for a Form Submission. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. destinationIdrequiredstring Include the unique identifier of the Data Destination. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or Data Destination you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or Data Destination you specified does not exist. Make sure your dataId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Re-execute a Data Destination for a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or Data Destination you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or Data Destination you specified does not exist. Make sure your dataId and destinationId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "List all Form Submissions\n\nUse this endpoint to retrieve a list of all your team's dispatched and submitted forms and general details about them. Details include: Data ID Reference number Information about the Form Submission's state, data state, and action state. query Parametersnamestring Example: name=Daily Inspection - Form AEnter a string to filter Form Submissions by name. The system returns all Form Submissions that include the string in the name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "the column TZ database name. ftimestring Default: \"DataRecordProcessedDate\" Enum: \"DispatchedDate\" \"DispatchDueDate\" \"DeviceEntryDate\" \"ServerReceiveDate\" \"DataRecordProcessedDate\" \"DataRecordCompletedDate\" \"DataRecordLastUpdatedDate\" Specify the date and time you want to filter the Form Submissions on. Use this parameter along with the stime and etime parameters to only return Form Submissions for a specific date range. You can set the date and time filter with the following options: DispatchedDate: Date and time when the supervisor dispatched the form. DispatchDueDate: Due date and time set by the supervisor. DeviceEntryDate: Date and time when the mobile user submitted the form on the device. ServerReceiveDate: Date and time when the Form Submission first reached the server. DataRecordProcessedDate: Date and time when the server processed the Form Submission and executed all Data Destinations. DataRecordCompletedDate: Date and time when the server finished receiving the Form",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "Submission. DataRecordLastUpdatedDate: Date and time when a user last updated the Form Submission. Users can change a Form Submission by dispatching it, submitting it, transferring it as incomplete (TrueContext Teamwork only), or editing it. stimestring <date-time> Specify the start date and time to filter Form Submissions with the ftime parameter. etimestring <date-time> Specify the end date and time to filter Form Submissions with the ftime parameter. fsidsstring Include one or more FormSpace IDs separated by a comma to filter the list of Form Submissions by FormSpace. fidsstring Include one or more Form IDs separated by a comma to filter the list of Form Submissions by Form. fvidsstring Include one or more Form Version IDs separated by a comma to filter the list of Form Submissions by Form Version. gidsstring Include one or more Group IDs separated by a comma to filter the list of Form Submissions by the Groups the user who submitted the form is part of. uidsstring Include one or",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "more User IDs separated by a comma to filter the list of Form Submissions by Users who submitted the form. unamesstring Include one or more Usernames separated by a comma to filter the list of Form Submissions by Users who submitted the form. dataFlowStatestring Enum: \"PendingDownload\" \"Downloaded\" \"Opened\" \"Uploading\" \"Uploaded\" \"UploadFailed\" \"Processing\" \"Processed\" \"ProcessingFailed\" Specify a Data Flow State filter. Indicates how the information from a dispatched or submitted form moves between the server and the Mobile App. dataStatestring Deprecated Enum: \"Uploading\" \"Uploaded\" \"UploadFailed\" \"Processing\" \"Processed\" \"ProcessingFailed\" \"Dispatching\" \"Dispatched\" Specify a Data State filter. Indicates how the information from a dispatched or submitted form moves between the server and the Mobile App. executionStatestring Enum: \"HasFailed\" \"AllSuccessful\" Specify an Execution State filter. The Execution State indicates whether the form submission successfully executed all Data",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "Destinations. workflowStatestring Enum: \"Dispatched\" \"Cancelled\" \"Completed\" \"Reopened\" \"Incomplete\" \"PendingApproval\" \"ChangesRequested\" Specify a Form Submission State filter. The Form Submission State indicates a Form Submission's position within your company's workflow. Dispatched: A supervisor dispatched the Form Submission to a user, group, or FormSpace. Cancelled: A mobile user declined a Form Submission after the system dispatched it to them. Completed: A mobile user submitted a completed Form Submission. Reopened: A supervisor sent a completed Form Submission back to a mobile user for further edits. Incomplete: A mobile user transferred an incomplete TrueContext Teamwork-enabled Form Submission. The Form Submission might be assigned to another user or available for a supervisor to reassign. TrueContext Teamwork is only available on the Enterprise tier. PendingApproval: A mobile user submitted a Form Submission that requires approval from a supervisor. This state is specific to",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "forms that require an Approval Workflow (Enterprise tier only). ChangesRequested: A supervisor requested changes to the Form Submission as part of an Approval Workflow (Enterprise tier only). statestring Deprecated Enum: \"Dispatch\" \"InProgress\" \"Declined\" \"Complete\" \"Incomplete\" \"PendingApproval\" \"ChangesRequested\" Specify a Form Submission State filter. The Form Submission State indicates a Form Submission's position within your company's workflow. Dispatch: A supervisor dispatched the form to a user. Represented as In Progress (Dispatching/Dispatched) in the portal. InProgress: The mobile user has received the dispatched form. Declined: A mobile user declined a dispatched form. Complete: A mobile user submitted a completed form. Incomplete: A mobile user transferred an incomplete TrueContext Teamwork-enabled form (Enterprise tier only). Represented as In Progress (Unassigned/Reassigned) in the portal. The dataStates \"Processed\" and \"Dispatched\" or the presence of a userId value can",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "help determine the assigned state via the API. assignmentstring Enum: \"Assigned\" \"Unassigned\" Filter by the Form Submission Assignment State. The Assignment State indicates if a record is Assigned to a user. If you don't filter by Assignment State, the endpoint returns all records. Assigned: A user is assigned to the record. Unassigned: A user is not assigned to the record. ostring Default: \"ReverseDataRecordProcessedDate\" Enum: \"ReferenceNumber\" \"FormVersion\" \"DispatchedDate\" \"DeviceEntryDate\" \"DataRecordCompletedDate\" \"ServerReceiveDate\" \"ReverseServerReceiveDate\" \"DataRecordProcessedDate\" \"ReverseDataRecordProcessedDate\" \"DataRecordLastUpdatedDate\" \"ReverseDataRecordLastUpdatedDate\" \"SubmitUser\" \"LastSubmitUser\" Specify the order of the Form Submissions in the list. Responses200 Successful request. 400 Bad request. Invalid or missing data.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List all Form Submissions"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Bad request. Invalid or missing data.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/Toronto\",\"pageData\": [{\"identifier\": \"18111111111\",\"referenceNumber\": \"20210520-18111111111\",\"name\": \"Building Inspection - Sands Hotel and Spa - 2021-07-09\",\"workflowState\": \"Dispatched\",\"state\": \"Dispatch\",\"dataFlowState\": \"PendingDownload\",\"dataState\": \"Uploading\",\"actionState\": \"Error\",\"dataPersisted\": true,\"serverReceiveDate\": \"2020-08-10T09:18:52-04:00\",\"formVersionId\": \"1511111111\",\"formId\": \"148111111\",\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"language\": \"en\",\"completionResult\": \"Approved\",\"edited\": true,\"submitter\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"Alex Harris\"},\"assignee\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"Alex Harris\"},\"approver\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"Alex Harris\"}}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of a Form Submission\n\nUse this endpoint to retrieve the details about a specific dispatched or submitted form. Details include: General information like name, Data ID, or Reference number. Information about the form used to create the Form Submission. The Form Submission's status in your company's workflow as well as timestamps that show when it moved through the workflow. Detailed information about the Form Submission's executions and Data Destinations. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 400 Data Not Available. Data is not available for submission versions in the 'Processing' state. 403 Access Denied. You are not allowed",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a Form Submission"
    }
  },
  {
    "content": "to access the requested resource. The Form Submission you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Data Not Available. Data is not available for submission versions in the 'Processing' state. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"18111111111\",\"form\": {\"formSpaceId\": \"191111111\",\"formId\": \"141111111\",\"formVersionId\": \"1511111111\",\"languages\": [\"en\",\"fr\"],\"documents\": [{\"identifier\": \"2313\",\"name\": \"pdf\"}]},\"referenceNumber\": \"20210222-18111111111\",\"name\": \"Building Inspection - Sands Hotel and Spa - 2021-07-09\",\"workflowState\": \"Dispatched\",\"state\": \"Dispatch\",\"dataFlowState\": \"PendingDownload\",\"dataState\": \"Uploading\",\"completionResult\": \"Approved\",\"actionHistory\": [{\"action\": \"Approved\",\"workflowState\": \"Pending\",\"dataRecordState\": \"InProgress\",\"initiator\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"string\"},\"timestamp\": \"2021-07-29T07:28:25Z\",\"assignee\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"string\"},\"notes\": \"string\",\"completionResult\": \"Approved\"}],\"dispatchingTimestamp\": \"2021-07-29T07:28:25Z\",\"dispatchedTimestamp\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "\"2021-07-29T07:28:40Z\",\"uploadingTimestamp\": \"2021-07-29T18:21:56Z\",\"uploadedTimestamp\": \"2021-07-29T18:21:57Z\",\"processingTimestamp\": \"2021-07-29T18:21:57Z\",\"processedTimestamp\": \"2021-07-29T18:21:57Z\",\"sentForEditTimestamp\": \"2021-07-30T14:02:53Z\",\"receivedForEditTimestamp\": \"2021-07-30T14:02:55Z\",\"passthrough\": true,\"edited\": true,\"submitter\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"Alex Harris\"},\"assignee\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"Alex Harris\"},\"approver\": {\"userId\": \"135111111\",\"username\": \"aharris.admin\",\"displayName\": \"Alex Harris\"},\"entryTimestamp\": \"2021-07-29T18:21:57\",\"userId\": \"131111111\",\"dispatchMetadata\": {\"notes\": \"Please complete a preventive maintenance for our customer.\",\"priority\": \"Low\",\"dueDate\": \"2021-11-24T05:00:00Z\",\"coordinates\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\"}},\"workflowInitiatiorId\": \"18211111111\",\"workflowNextStepIds\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "\"18111111110\",\"processorExecutions\": [{\"identifier\": \"2781111111110\",\"processorType\": \"persistData\",\"stopAutomaticRetries\": true,\"reExecutable\": true,\"failureCount\": 0,\"processedMessage\": \"This destination is disabled. Form Submission processing not executed.\",\"detailedErrorMessage\": \"string\",\"processedState\": \"Processed\",\"processedTimestamp\": \"2021-11-05T16:25:22-04:00\",\"state\": \"Success\",\"destinationType\": \"Email\",\"destinationId\": \"2131111111\"}],\"language\": \"en\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Delete a Form Submission\n\nUse this endpoint to delete a dispatched or submitted form. Note: When you delete a Form Submission, the system immediately deletes it from the TrueContext Server. The data is deleted from disaster recovery storage 45 days later. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system could not find the Form Submission you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Delete a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system could not find the Form Submission you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Assign a dispatched form\n\nUse this endpoint to assign a dispatched form to a different User. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Request Body schema: application/jsonrequired You must specify one of the following values: userId, username, or userAlias. You may only include dispatchMetadata if the dispatch state is InProgress or Declined. userIdstring usernamestring userAliasobject metadataobject (dispatchMetadata) Responses200 Successful request. 400 The Request Body is not valid. You must include a Request Body with the User ID, Username, or User Alias. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 406 The Request Body is missing. You must provide a valid Request Body. 412 The",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Assign a dispatched form"
    }
  },
  {
    "content": "data record state must be InProgress, Declined, Incomplete, or ChangesRequested.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Assign a dispatched form"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 The Request Body is not valid. You must include a Request Body with the User ID, Username, or User Alias. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 406 The Request Body is missing. You must provide a valid Request Body. 412 The data record state must be InProgress, Declined, Incomplete, or ChangesRequested.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonCopy Expand all Collapse all {\"userId\": \"111111111\",\"username\": \"hlau.admin\",\"userAlias\": {\"system\": \"testsystem\",\"alias\": \"hannahlau\"},\"metadata\": {\"notes\": \"Follow-up service for customer Hanover Construction.\",\"dueDate\": \"2021-11-24T05:00:00Z\",\"priority\": \"Low\",\"coordinates\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\"}}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonCopy{\"dataId\": \"18101070100\",\"referenceNumber\": \"20200101-18101070100\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve a Form Submission attachment\n\nUse this endpoint to download a specific Form Submission attachment in the original file format. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. attachmentIdrequiredstring Include the Unique Identifier of the attachment. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or attachment you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission or attachment you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a Form Submission attachment"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or attachment you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission or attachment you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Retrieve the contents of a Form Submission in a JSON or XML document\n\nUse this endpoint to download a standard JSON or XML document with the contents of the dispatched or submitted form. Contents include the submitted form data and metadata. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. extensionrequiredstring Enum: \"json\" \"xml\" Include the file format for the document. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. aboolean Default: true Specify whether you want to include form attachments in the document as Base64 encoded text. languagestring Example: language=frSpecify the language that you want to download the document in. (Multi-Language Add-on Only) Omit this parameter to download the document in the form selected language.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the contents of a Form Submission in a JSON or XML document"
    }
  },
  {
    "content": "The selected language is the language selected by the user, a dispatch, or an App-to-App call. To download the document in a different language, specify a valid language code. The topic Supported Languages for the Multi-Language Feature in our Product Documentation portal includes a list of language codes. Keep in mind that the form must have that language set up as an additional language. Responses200 Successful request. 400 Bad Request. Your request failed validation and details are provided. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the contents of a Form Submission in a JSON or XML document"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Bad Request. Your request failed validation and details are provided. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy\"string\"",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve a Form Submission document\n\nUse this endpoint to download a document attached to the Form Submission in its original format. Documents can include information such as all the answers submitted for the form. Note: To use this endpoint, you must link a document to your form. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. documentIdrequiredstring Include the Unique Identifier of the document. query Parameterslanguagestring Example: language=frSpecify the language that you want to download the document in. (Multi-Language Add-on Only) Omit this parameter to download the document in the form selected language. The selected language is the language selected by the user, a dispatch, or an App-to-App call. To download the document in a different language, specify a valid language code. The topic Supported Languages for the Multi-Language Feature in our Product Documentation portal includes a list of language codes. Keep in mind that the form",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a Form Submission document"
    }
  },
  {
    "content": "must have that language set up as an additional language. Responses200 Successful request. 400 Bad Request. Your request failed validation and details are provided. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or document you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission or document you specified. 429 Document Generation Exception. Document cannot be rendered. Please contact Support.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a Form Submission document"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Bad Request. Your request failed validation and details are provided. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or document you specified does not exist in your team. 404 Object not found. The system could not find the Form Submission or document you specified. 429 Document Generation Exception. Document cannot be rendered. Please contact Support.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Unassign a dispatched or transferred record\n\nUse this endpoint to unassign a record that’s currently assigned to a user. The record might have been assigned by dispatching or transferring the record to a single user. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Responses200 Successful request. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 412 Precondition issue: Either: The record is not in a state that can be unassigned The device Search tab must be enabled in the team settings The form must allow users to release incomplete forms for other users to claim The form must have Search enabled in the Form Settings The device Group Inbox tab must be enabled in the team settings",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Unassign a dispatched or transferred record"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 412 Precondition issue: Either: The record is not in a state that can be unassigned The device Search tab must be enabled in the team settings The form must allow users to release incomplete forms for other users to claim The form must have Search enabled in the Form Settings The device Group Inbox tab must be enabled in the team settings",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonCopy{\"dataId\": \"18101070100\",\"referenceNumber\": \"20200101-18101070100\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Change the scope of a dispatched form\n\nUse this endpoint to make a dispatched record available to a Group or FormSpace. The new scope only applies if the assigned User declines the dispatched record. This endpoint does not change the assignment if the record is already assigned. This endpoint does not apply to Teamwork-enabled records. Use the assign endpoint instead. Requirements: The dispatched record must have Search enabled. The Group Inbox must be enabled in the Team Settings. If the specified scope is Group, the groupId or groupName must be provided, and the Group must have Can Submit permissions in the FormSpace. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Request Body schema: application/json scopestring Enum: \"Group\" \"FormSpace\" groupIdstring groupNamestring Responses200 Successful request. 400 Invalid Request. Either: There is a problem with your request. Check that your Request Body is formatted correctly, and that the media type",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Change the scope of a dispatched form"
    }
  },
  {
    "content": "you specify is correct. The Request Body is not valid. You must include a Group or a FormSpace in the Request Body. 402 Billing Exception. Either: Your team billing tier does not provide access to this feature. Contact your account manager to upgrade. Group Dispatch is only available on the Enterprise tier. 404 Object Not Found: The specified Group does not exist. Make sure the groupId or group name is correct. Target data record does not exist 412 Precondition Issue. Either: The data record state must be in the dispatched or cancelled state The Group Inbox is not configurable for the team The specified form does not have Search enabled",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Change the scope of a dispatched form"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 Invalid Request. Either: There is a problem with your request. Check that your Request Body is formatted correctly, and that the media type you specify is correct. The Request Body is not valid. You must include a Group or a FormSpace in the Request Body. 402 Billing Exception. Either: Your team billing tier does not provide access to this feature. Contact your account manager to upgrade. Group Dispatch is only available on the Enterprise tier. 404 Object Not Found: The specified Group does not exist. Make sure the groupId or group name is correct. Target data record does not exist 412 Precondition Issue. Either: The data record state must be in the dispatched or cancelled state The Group Inbox is not configurable for the team The specified form does not have Search enabled",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonCopy{\"scope\": \"Group\",\"groupId\": \"210111111\",\"groupName\": \"jason.cho\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonCopy{\"dataId\": \"18101070100\",\"referenceNumber\": \"20200101-18101070100\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of an execution triggered by a Form Submission\n\nUse this endpoint to retrieve details about an execution triggered by a submitted form. Details include: Status of the execution Error messages, if applicable General information about the execution path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. executionIdrequiredstring Include the unique identifier of the execution. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or execution you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or execution",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of an execution triggered by a Form Submission"
    }
  },
  {
    "content": "you specified does not exist. Make sure your dataId and executionId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of an execution triggered by a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or execution you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or execution you specified does not exist. Make sure your dataId and executionId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonCopy{\"identifier\": \"2781111111111\",\"processorType\": \"DestinationExecution\",\"stopAutomaticRetries\": true,\"reExecutable\": true,\"failureCount\": 0,\"processedMessage\": \"This destination is disabled. Form Submission processing not executed.\",\"detailedErrorMessage\": \"string\",\"processedState\": \"Filtered\",\"processedTimestamp\": \"2021-11-05T16:25:22Z\",\"state\": \"Filtered\",\"destinationType\": \"Email\",\"destinationId\": \"2131111111\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Update the \"Automatic Retries\" setting for a Data Destination execution\n\nUse this endpoint to update the \"Automatic Retries\" setting for a Data Destination execution triggered by a Form Submission. The system is set to automatically retry a Data Destination execution that fails. If a Data Destination is retrying the execution and failing multiple times, you can use this endpoint to stop the system from retrying by specifying true in the Request Body. Once the error with the Data Destination is fixed, you can enable the \"Automatic Retries\" setting by specifying false in the Request Body. Note: Although you can use this endpoint with any execution ID, the \"Automatic Retries\" setting only applies to Data Destinations. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. executionIdrequiredstring Include the unique identifier of the execution. Request Body schema: application/json stopAutomaticRetriesboolean Specify true to stop the Data Destination",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update the \"Automatic Retries\" setting for a Data Destination execution"
    }
  },
  {
    "content": "execution from retrying automatically. Specify false to set the Data Destination execution to automatically retry. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or execution you specified does not exist in your team. 404 The Form Submisson or execution you specified does not exist. Make sure your dataId and executionId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update the \"Automatic Retries\" setting for a Data Destination execution"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The Form Submission or execution you specified does not exist in your team. 404 The Form Submisson or execution you specified does not exist. Make sure your dataId and executionId values are correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonCopy{\"stopAutomaticRetries\": true}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Re-execute all executions for a Form Submission\n\nUse this endpoint to trigger all the executions related to a Form Submission to re-execute. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. query ParametersfailedOnlyboolean Default: false Specify if you want to re-execute all Data Destinations linked to the Form Submissions or only failed Destinations. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Re-execute all executions for a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Re-execute a specific execution for a Form Submission\n\nUse this endpoint to re-execute a specific execution for a Form Submission. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. executionIdrequiredstring Include the unique identifier of the execution. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or execution you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or execution you specified does not exist. Make sure your dataId and executionId values are correct. 500 System error. The execution you attempted to re-execute is of the persistData type and cannot be re-executed.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Re-execute a specific execution for a Form Submission"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or execution you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submisson or execution you specified does not exist. Make sure your dataId and executionId values are correct. 500 System error. The execution you attempted to re-execute is of the persistData type and cannot be re-executed.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Dispatch a form\n\nUse this endpoint to dispatch a form to a user, group, or FormSpace. The form you want to dispatch must have dispatching enabled. TrueContext supports dispatching to the following question types with the API: Audio Recording Barcode Button Group Card List Date/Time Selector Document Editor Dropdown Duration Field File Upload Geo Location (Geo Location Data Type only) Image Multiselect Radio Button Signature Single Checkbox Sketch Pad Stepper Text Area Text Field Request Body schema: application/jsonapplication/xmlapplication/jsonrequired Include a Request Body with information about the form to dispatch, the user, group, or FormSpace to dispatch to, answers to questions you want to prepopulate, and metadata. Note: You must include the formId property, and either userId, username, userAlias, groupId, groupName, or dispatchToFormSpace. Any of objectobjectobjectobjectdataArray of objects (dataJson) Include one object for each question answer you want to prepopulate. Use",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch a form"
    }
  },
  {
    "content": "this format for the following question types: Barcode: Specify the type and value in the answer. Valid barcode types include (UpcA, UpcE, Ean8, Ean13, Code39, Code128, Itf, QrCode, DataMatrix, Pdf417) Button Group: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). Date/Time Selector: Specify a date and time in UTC in a standard format (yyyy-MM-ddTHH:mm:ssZ). Make sure to match the Data Type of the question (Date, Time, or Date/Time). Dropdown: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). Duration Field: Specify a time duration in milliseconds. Multiselect: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). To",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch a form"
    }
  },
  {
    "content": "specify multiple options, include as many objects with the same unique identifier as options you want to select. Radio Button: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). Single Checkbox: Specify yes to select the box or no to clear the box. Stepper: Include a number that matches the Data Type of the question (Integer, Decimal, or Currency). Text Area: Include any string of text. Text Field: Include a string that matches the Data Type of the question (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). formIdrequiredstring Unique identifier of the form you want to dispatch. userIdstring Unique identifier of the user you want to dispatch the form to. usernamestring Username of the user you want to dispatch the form to. userAliasobject User alias of the user you want to dispatch the form to. groupIdstring Unique identifier of the",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch a form"
    }
  },
  {
    "content": "group you want to dispatch the form to. groupNamestring Name of the group you want to dispatch the form to. dispatchToFormSpaceboolean Default: false Set to true when you want to dispatch the form to all users that have access to the FormSpace. dispatchToDraftboolean Default: false Set to true when you want to dispatch the draft version of the form instead of the active version. suppressPushboolean Default: false Set to true if you want to stop the dispatch from triggering any configured push notifications to mobile users. languagestring The language you want to preselect. Set to null if you want to let users select a language themselves. metadataobject Responses201 Created. 400 Invalid Request Data. The data in the Request Body does not meet the requirements for the form. Check that the question unique identifiers are correct, and that the data types of the answers provided are correct. 402 Payment required. Your team's billing tier doesn't support dispatching to a group or FormSpace.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch a form"
    }
  },
  {
    "content": "403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Not found. The system couldn't find the form, the user or group, or the active or draft version of the form. 416 Either your user or group doesn't have permissions to access the form, the form is archived, or it does not have dispatching enabled.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch a form"
    }
  },
  {
    "content": "Responses\n\n201 Created. 400 Invalid Request Data. The data in the Request Body does not meet the requirements for the form. Check that the question unique identifiers are correct, and that the data types of the answers provided are correct. 402 Payment required. Your team's billing tier doesn't support dispatching to a group or FormSpace. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Not found. The system couldn't find the form, the user or group, or the active or draft version of the form. 416 Either your user or group doesn't have permissions to access the form, the form is archived, or it does not have dispatching enabled.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonExampleDispatching to a formDispatching to a form with a repeat sectionDispatching to a formCopy Expand all Collapse all {\"formId\": \"141111111\",\"userId\": \"131111111\",\"username\": \"jason.cho\",\"userAlias\": {\"system\": \"testsystem\",\"alias\": \"hannahlau\"},\"groupId\": \"210111111\",\"groupName\": \"Technicians\",\"dispatchToFormSpace\": true,\"dispatchToDraft\": false,\"suppressPush\": \"true\",\"language\": \"fr\",\"metadata\": {\"notes\": \"Follow-up service for customer Hanover Construction.\",\"dueDate\": \"2021-11-24T05:00:00Z\",\"priority\": \"Low\",\"coordinates\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.69111111\",\"altitude\": \"73.7111111\"}},\"data\": [{\"label\": \"TireCondition\",\"answer\": \"Poor\",\"commentAnswer\": \"The tires are in poor condition because they show extreme wear.\"},{\"label\": \"QuestionWithMultipleImageDispatches\",\"answer\": {\"contentType\": \"image/jpeg\",\"bytes\": \"string\",\"filename\": \"InspectionImage1.jpg\"}},{\"label\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "\"QuestionWithMultipleImageDispatches\",\"answer\": {\"contentType\": \"image/jpeg\",\"bytes\": \"string\",\"filename\": \"InspectionImage2.jpg\"}},{\"label\": \"ServiceLocation\",\"answer\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\",\"address\": \"433 Oak Street\"}},{\"type\": \"Repeat\",\"label\": \"ListOfTools\",\"rows\": [{\"data\": [{\"label\": \"ToolName\",\"answer\": \"Drill\"}]}]}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n201Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"dataId\": \"18211111111\",\"referenceNumber\": \"20211105-18211111111\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Dispatch forms that have the same tag\n\nUse this endpoint to dispatch all forms that have a specific tag. This endpoint can be useful when you want to dispatch multiple forms to a user, group, or FormSpace replace a form with a new one that has the same tag, or add a form to a group of forms that share a tag. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired Include a Request Body with information about the form to dispatch, the user, group, or FormSpace to dispatch to, answers to questions you want to prepopulate, and metadata. Note: You must include the dispatchToTags property, and either the userId, username, userAlias groupId, groupName, or dispatchToFormSpace. Any of objectobjectobjectobjectdataArray of objects (dataJson) Include one object for each question answer you want to prepopulate. Use this format for the following question types: Barcode: Specify the type and value in the answer. Valid barcode types include (UpcA, UpcE, Ean8, Ean13, Code39,",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch forms that have the same tag"
    }
  },
  {
    "content": "Code128, Itf, QrCode, DataMatrix, Pdf417) Button Group: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). Date/Time Selector: Specify a date and time in UTC in a standard format (yyyy-MM-ddTHH:mm:ssZ). Make sure to match the Data Type of the question (Date, Time, or Date/Time). Dropdown: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). Duration Field: Specify a time duration in milliseconds. Multiselect: Specify the option you want to select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). To specify multiple options, include as many objects with the same unique identifier as options you want to select. Radio Button: Specify the option you want to",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch forms that have the same tag"
    }
  },
  {
    "content": "select as an answer. Make sure to match the Data Type of the option (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). Single Checkbox: Specify yes to select the box or no to clear the box. Stepper: Include a number that matches the Data Type of the question (Integer, Decimal, or Currency). Text Area: Include any string of text. Text Field: Include a string that matches the Data Type of the question (FreeText, Email Address, URL, Phone Number, Integer, Decimal, or Currency). dispatchToTagsrequiredArray of strings Include the tags linked to the forms you want to dispatch. userIdstring Unique identifier of the user you want to dispatch the form to. usernamestring username of the user you want to dispatch the form to. userAliasobject User alias of the user you want to dispatch the form to. enforceStrictLabelsboolean Default: false Set to true if you want the system to only dispatch forms that match all the question unique identifiers you specify in the data",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch forms that have the same tag"
    }
  },
  {
    "content": "object. dispatchToDraftboolean Default: false Set to true when you want to dispatch the draft version of the form instead of the active version. suppressPushboolean Default: false Set to true if you want to stop the dispatch from triggering any configured push notifications to mobile users. languagestring The language you want to preselect. Set to null if you want to let users select a language themselves. metadataobject Responses201 Created. Note: Because this endpoint triggers a request to dispatch forms, it might return a 201 response but not dispatch any forms. This happens, for example, when you specify a Form Tag that doesn't exist or isn't linked to any active forms. Use the endpoint to retrieve the status of the dispatch request to verify that the dispatch succeeded. 402 Payment required. Your team's billing tier doesn't support dispatching to a group or FormSpace. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch forms that have the same tag"
    }
  },
  {
    "content": "exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Not found. The system couldn't find the user or group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Dispatch forms that have the same tag"
    }
  },
  {
    "content": "Responses\n\n201 Created. Note: Because this endpoint triggers a request to dispatch forms, it might return a 201 response but not dispatch any forms. This happens, for example, when you specify a Form Tag that doesn't exist or isn't linked to any active forms. Use the endpoint to retrieve the status of the dispatch request to verify that the dispatch succeeded. 402 Payment required. Your team's billing tier doesn't support dispatching to a group or FormSpace. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Not found. The system couldn't find the user or group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"dispatchToTags\": [\"Inspection\"],\"userId\": \"131111111\",\"username\": \"jason.cho\",\"userAlias\": {\"system\": \"testsystem\",\"alias\": \"hannahlau\"},\"groupId\": \"210111111\",\"groupName\": \"Technicians\",\"dispatchToFormSpace\": true,\"enforceStrictLabels\": false,\"dispatchToDraft\": false,\"suppressPush\": \"true\",\"language\": \"fr\",\"metadata\": {\"notes\": \"Follow-up service for customer Hanover Construction.\",\"dueDate\": \"2021-11-24T05:00:00Z\",\"priority\": \"Low\",\"coordinates\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\"}},\"data\": [{\"label\": \"TireCondition\",\"answer\": \"Poor\",\"commentAnswer\": \"The tires are in poor condition because they show extreme wear.\"},{\"label\": \"QuestionWithMultipleImageDispatches\",\"answer\": {\"contentType\": \"image/jpeg\",\"bytes\": \"string\",\"filename\": \"Image1.jpg\"}},{\"label\": \"QuestionWithMultipleImageDispatches\",\"answer\": {\"contentType\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "\"image/jpeg\",\"bytes\": \"string\",\"filename\": \"Image2.jpg\"}},{\"label\": \"ServiceLocation\",\"answer\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\"}},{\"type\": \"Repeat\",\"label\": \"ListOfTools\",\"rows\": [{\"data\": [{\"label\": \"ToolName\",\"answer\": \"Drill\"}]}]}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n201Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"Identifier\": \"31611111111\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the status of a dispatch by tags request\n\nUse this endpoint to retrieve the status of a dispatch by tags request initiated with the endpoint: POST /data/dispatch/bytag. path ParametersrequestIdrequiredstring Unique identifier of the dispatch request. Responses200 Successful request. 400 The Request ID is not valid. You must include a Request ID in the URL. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Not found. The system could not find the Request ID you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the status of a dispatch by tags request"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 The Request ID is not valid. You must include a Request ID in the URL. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Not found. The system could not find the Request ID you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"complete\": true,\"success\": \"Partial\",\"errorMessage\": \"Dispatching complete, however some Form Submissions failed to dispatch.\",\"dispatchResultDetails\": [{\"returnCode\": \"Failure\",\"formId\": \"141111111\",\"formName\": \"Building Inspection\",\"dataId\": \"18211111111\",\"referenceNumber\": \"20211105-18211111111\",\"errorMessage\": \"The Form 'Daily Job Report' with ID 1411111111 is not configured to allow dispatch. You must choose a Form Initiation Method of 'Dispatch' or 'Both'.\"}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Send a completed Form Submission to a user for corrections\n\nUse this endpoint to send a completed Form Submission to a specific user for corrections. The user receives the form in their Inbox, and they can correct any answers that other users previously submitted. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired Include a request body with either the username, userId, or user alias of the user who must correct the form. userIdstring usernamestring userAliasobject metadataobject (dispatchMetadata) Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or user you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 412 Form Submission already",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Send a completed Form Submission to a user for corrections"
    }
  },
  {
    "content": "sent for corrections. You must cancel the request for corrections before you send it for corrections to another user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Send a completed Form Submission to a user for corrections"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or user you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 412 Form Submission already sent for corrections. You must cancel the request for corrections before you send it for corrections to another user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"userId\": \"111111111\",\"username\": \"hlau.admin\",\"userAlias\": {\"system\": \"testsystem\",\"alias\": \"hannahlau\"},\"metadata\": {\"notes\": \"Follow-up service for customer Hanover Construction.\",\"dueDate\": \"2021-11-24T05:00:00Z\",\"priority\": \"Low\",\"coordinates\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\"}}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Cancel a Form Submission sent for corrections\n\nUse this endpoint to cancel a request for corrections a completed Form Submission. This action removes the Form Submission from the user's Inbox. Warning: If the user already started correcting the form and you cancel the request for corrections, you will lose the user's changes. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Responses200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or user you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 412 Cannot cancel corrections request. You have not sent the Form Submission you specified for corrections.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Cancel a Form Submission sent for corrections"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied: You are not allowed to access the requested resource. The Form Submission or user you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 412 Cannot cancel corrections request. You have not sent the Form Submission you specified for corrections.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Reassign a dispatched form  Deprecated\n\nThis endpoint is deprecated. Please use the new assign endpoint for this process. Use this endpoint to reassign a dispatched form to a different User, Group, or FormSpace. path ParametersdataIdrequiredstring Include the unique identifier of the Form Submission. Request Body schema: application/jsonrequired You must specify one of the following values: userId, username, userAlias, groupId, groupName, or dispatchToFormSpace. You may only specify the groupID, groupName, or dispatchToFormSpace if the record state is InProgress or Declined. You may only include dispatchMetadata if the dispatch state is InProgress or Declined. userIdstring usernamestring userAliasobject groupIdstring groupNamestring dispatchToFormSpaceboolean Default: false metadataobject (dispatchMetadata) Responses200 Successful request. 400 The Request Body is not valid. You must include a Request Body with the User ID, Username, or User Alias. 403 Access Denied: You are not allowed",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Reassign a dispatched form  Deprecated"
    }
  },
  {
    "content": "to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 406 The Request Body is missing. You must provide a valid Request Body. 412 The data record state must be InProgress, Declined, Incomplete, or ChangesRequested. You can only reassign a form to a group or FormSpace if the record state is InProgress or Declined.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Reassign a dispatched form  Deprecated"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 400 The Request Body is not valid. You must include a Request Body with the User ID, Username, or User Alias. 403 Access Denied: You are not allowed to access the requested resource. The FormSpace you specified does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 The Form Submission you specified does not exist. Make sure your dataId is correct. 406 The Request Body is missing. You must provide a valid Request Body. 412 The data record state must be InProgress, Declined, Incomplete, or ChangesRequested. You can only reassign a form to a group or FormSpace if the record state is InProgress or Declined.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonCopy Expand all Collapse all {\"userId\": \"111111111\",\"username\": \"hlau.admin\",\"userAlias\": {\"system\": \"testsystem\",\"alias\": \"hannahlau\"},\"groupId\": \"210111111\",\"groupName\": \"jason.cho\",\"dispatchToFormSpace\": false,\"metadata\": {\"notes\": \"Follow-up service for customer Hanover Construction.\",\"dueDate\": \"2021-11-24T05:00:00Z\",\"priority\": \"Low\",\"coordinates\": {\"latitude\": \"45.4111111\",\"longitude\": \"-75.6911111\",\"altitude\": \"73.7111111\"}}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonCopy{\"dataId\": \"18101070100\",\"referenceNumber\": \"20200101-18101070100\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "List the users in your team\n\nUse this endpoint to retrieve a list of all the users in your team and their general details. Details include: User ID Username Email Name query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the users in your team"
    }
  },
  {
    "content": "Responses\n\n200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"zone\": \"America/New_York\",\"pageData\": [{\"identifier\": \"234000111\",\"username\": \"username.user\",\"role\": \"ProntoUser\",\"email\": \"gg23@email.com\",\"firstName\": \"George\",\"lastName\": \"Gonzalez\",\"lastLoginDate\": \"2020-11-20T17:56:39Z\",\"lastReconcileDate\": \"2020-11-19T17:56:39Z\"}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Create a user account\n\nUse this endpoint to create a new user account and add the user's information. Note: You can only create one user account at a time. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired Information about the new user to be added. usernamerequiredstring [ 6 .. 255 ] characters rolestring Default: \"ProntoUser\" Enum: \"ProntoAdmin\" \"ProntoUser\" \"ProntoMobileOnly\" emailrequiredstring <email> alternateEmailstring <email> firstNamestring lastNamestring companyNamestring addressobject (address) localestring preferredTimeZonestring phoneNumberstring billingIdstring Billing ID of the subscription that the user account is a part of. This property is relevant when you have more than one subscription in your account. defaultViewFormSpaceIdstring FormSpace ID of the default FormSpace in the user's account. The user can customize this if they have access to more than one FormSpace. defaultViewFormDashboardIdstring Form ID of the default Form that the",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Create a user account"
    }
  },
  {
    "content": "user can see in the Basic Analytics section. groupIdsArray of strings aliasesobject User aliases for external system integration. Each alias maps a system name to an alias value that can be used to identify the user in that system. ssoOnlyboolean Default: false Include this object if you want the new user to sign in using your corporate SSO credentials. organizationobject (organization) sendWelcomeEmailboolean Default: true Include this property to configure whether new users receive a welcome email. The email includes instructions to configure their account, including password information. If you specify false, you must add the password property. passwordstring <password> Set a password for the user. The user receives the password in the welcome email. If you don't send a welcome email, make sure to let the user know their password in a way that complies with your organization's security policies. If you don't set a password, users can configure their own password by following a link",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Create a user account"
    }
  },
  {
    "content": "in the welcome email. Note: The password cannot contain the username. linkToDefaultGroupsboolean Default: false Include this object to add the user to groups configured to add all new users. customWelcomeMessageobject (welcomeMessage) Customize the message included in the welcome email. You must include the fromUserId, fromUsername, or fromUserAlias to specify the user shown as the sender of the email. Responses201 User created. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system couldn't find at least one of the IDs you specified. Verify that all your IDs are correct. 409 The username already exists. You must enter a different username.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Create a user account"
    }
  },
  {
    "content": "Responses\n\n201 User created. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system couldn't find at least one of the IDs you specified. Verify that all your IDs are correct. 409 The username already exists. You must enter a different username.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"username\": \"user.admin\",\"role\": \"ProntoAdmin\",\"email\": \"sample@email.com\",\"alternateEmail\": \"alt@email.com\",\"firstName\": \"Janae\",\"lastName\": \"Khan\",\"companyName\": \"TrueContext\",\"address\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"locale\": \"en_CA\",\"preferredTimeZone\": \"America/New_York\",\"phoneNumber\": \"+16131112222\",\"billingId\": \"2020202020\",\"defaultViewFormSpaceId\": \"191111111\",\"defaultViewFormDashboardId\": \"141111111\",\"groupIds\": [\"2111111111\"],\"aliases\": {\"system1\": \"alias1\",\"system2\": \"alias2\"},\"ssoOnly\": false,\"organization\": {\"employeeId\": \"123454321\",\"managerName\": \"Kenan Miller\",\"managerEmailAddress\": \"kmiller@email.com\",\"managerPhoneNumber\": \"+16132229999\",\"company\": \"TrueContext\",\"department\": \"Sales\",\"division\": \"National\",\"organizationalUnitName\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "\"Executive\",\"organizationalUnitAddress\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"region\": \"Eastern Canada\",\"subRegion\": \"Ontario\",\"branch\": \"Ottawa\",\"branchOffice\": \"Kanata\",\"office\": \"02\"},\"sendWelcomeEmail\": true,\"password\": \"password123\",\"linkToDefaultGroups\": false,\"customWelcomeMessage\": {\"fromUserId\": \"130101010\",\"fromUsername\": \"companyadmin\",\"fromUserAlias\": {\"system\": \"saml\",\"alias\": \"admin\"},\"message\": \"Welcome to the company! Please follow the steps in this email to configure your account.\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n201Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"135080030\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve a user's details by user ID\n\nUse this endpoint to retrieve a user's details including: Username Email Name Address Phone number User aliases The last date the user signed in to TrueContext path ParametersuserIdrequiredstring Include the unique identifier of the user. query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Details of the user account 403 Access denied. You are not allowed to access the requested resource. The user you specified does not exist in your team. 404 Object not found. The system couldn't find the user you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a user's details by user ID"
    }
  },
  {
    "content": "Responses\n\n200 Details of the user account 403 Access denied. You are not allowed to access the requested resource. The user you specified does not exist in your team. 404 Object not found. The system couldn't find the user you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"131111111\",\"username\": \"user.admin\",\"role\": \"ProntoAdmin\",\"email\": \"sample@email.com\",\"alternateEmail\": \"alt@email.com\",\"firstName\": \"Janae\",\"lastName\": \"Khan\",\"companyName\": \"TrueContext\",\"address\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"locale\": \"en_CA\",\"preferredTimeZone\": \"America/New_York\",\"phoneNumber\": \"+16131112222\",\"billingId\": \"2020202020\",\"defaultViewFormSpaceId\": \"191111111\",\"defaultViewFormDashboardId\": \"141111111\",\"groupIds\": [\"2111111111\"],\"aliases\": {\"system1\": \"alias1\",\"system2\": \"alias2\"},\"lastLoginDate\": \"2020-11-20T17:56:39Z\",\"lastReconcileDate\": \"2020-11-19T17:56:39Z\",\"organization\": {\"employeeId\": \"123454321\",\"managerName\": \"Kenan Miller\",\"managerEmailAddress\": \"kmiller@email.com\",\"managerPhoneNumber\": \"+16132229999\",\"company\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "\"TrueContext\",\"department\": \"Sales\",\"division\": \"National\",\"organizationalUnitName\": \"Executive\",\"organizationalUnitAddress\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"region\": \"Eastern Canada\",\"subRegion\": \"Ontario\",\"branch\": \"Ottawa\",\"branchOffice\": \"Kanata\",\"office\": \"02\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Update a user's account information\n\nUse this endpoint to update a user's information. Note: You can use this API endpoint to update any of the user's account information except for their password. To do that, use the following endpoints to update or change the user's password: POST /users/{userId}/expirepassword Expires a user's password. POST /users/{userId}/password Changes a user's password. path ParametersuserIdrequiredstring Include the unique identifier of the user. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired Information about the new user to be updated. All properties are optional. Only include the objects you want to update. If you don't include a property in the request body, the information related to that property does not change. If you want to clear information, include the related property with an empty string as the value. usernamestring [ 6 .. 255 ] characters rolestring Default: \"ProntoUser\" Enum: \"ProntoAdmin\" \"ProntoUser\"",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update a user's account information"
    }
  },
  {
    "content": "\"ProntoMobileOnly\" emailstring <email> alternateEmailstring <email> firstNamestring lastNamestring companyNamestring addressobject (address) localestring preferredTimeZonestring phoneNumberstring billingIdstring Billing ID of the subscription that the user account is a part of. This property is relevant when you have more than one subscription in your account. defaultViewFormSpaceIdstring FormSpace ID of the default FormSpace in the user's account. The user can customize this if they have access to more than one FormSpace. defaultViewFormDashboardIdstring Form ID of the default Form that the user can see in the Basic Analytics section. groupIdsArray of strings aliasesobject User aliases for external system integration. Each alias maps a system name to an alias value that can be used to identify the user in that system. ssoOnlyboolean Default: false Include this object if you want the new user to sign in using your corporate SSO credentials. organizationobject (organization)",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update a user's account information"
    }
  },
  {
    "content": "Responses200 User account successfully updated 400 Invalid request data. The data you supplied was not formatted correctly, or did not meet all requirements .Fix your data and try again. 403 Access Denied: You are not allowed to access the requested resource. This user doesn't exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. 409 Username Exists. The username you specified is not available.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update a user's account information"
    }
  },
  {
    "content": "Responses\n\n200 User account successfully updated 400 Invalid request data. The data you supplied was not formatted correctly, or did not meet all requirements .Fix your data and try again. 403 Access Denied: You are not allowed to access the requested resource. This user doesn't exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. 409 Username Exists. The username you specified is not available.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"username\": \"user.admin\",\"role\": \"ProntoAdmin\",\"email\": \"sample@email.com\",\"alternateEmail\": \"alt@email.com\",\"firstName\": \"Janae\",\"lastName\": \"Khan\",\"companyName\": \"TrueContext\",\"address\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"locale\": \"en_CA\",\"preferredTimeZone\": \"America/New_York\",\"phoneNumber\": \"+16131112222\",\"billingId\": \"2020202020\",\"defaultViewFormSpaceId\": \"191111111\",\"defaultViewFormDashboardId\": \"141111111\",\"groupIds\": [\"2111111111\"],\"aliases\": {\"system1\": \"alias1\",\"system2\": \"alias2\"},\"ssoOnly\": false,\"organization\": {\"employeeId\": \"123454321\",\"managerName\": \"Kenan Miller\",\"managerEmailAddress\": \"kmiller@email.com\",\"managerPhoneNumber\": \"+16132229999\",\"company\": \"TrueContext\",\"department\": \"Sales\",\"division\": \"National\",\"organizationalUnitName\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "\"Executive\",\"organizationalUnitAddress\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"region\": \"Eastern Canada\",\"subRegion\": \"Ontario\",\"branch\": \"Ottawa\",\"branchOffice\": \"Kanata\",\"office\": \"02\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Delete a user account\n\nDelete a user account that you no longer need. Warning: If you delete a user account, you can't recover it from the TrueContext Server. The system does, however, keep any forms, form submissions, or other objects that the user created. path ParametersuserIdrequiredstring Include the unique identifier of the user. Responses200 User deleted successfully. 403 Access Denied. You are not allowed to access the requested resource. The user does not exist on your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Delete a user account"
    }
  },
  {
    "content": "Responses\n\n200 User deleted successfully. 403 Access Denied. You are not allowed to access the requested resource. The user does not exist on your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Expire a user's password\n\nUse this endpoint to expire a user's password. The system prompts the user to choose a new password the next time they sign in to TrueContext. path ParametersuserIdrequiredstring Include the unique identifier of the user. Responses200 User's password expired successfully. 403 Access Denied. You are not allowed to access the requested resource. The user does not exist on your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Expire a user's password"
    }
  },
  {
    "content": "Responses\n\n200 User's password expired successfully. 403 Access Denied. You are not allowed to access the requested resource. The user does not exist on your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Change a user's password\n\nWarning: Check your organization's security policies before changing a user's password. If you want a user to change their own password, you must expire their password. Use the API endpoint to expire a user's password. Note: When you change a user's password, the system notifies the user by email. The notification email does not include the new password. You must let users know their new password. path ParametersuserIdrequiredstring Include the unique identifier of the user. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired User's new password. Make sure the password complies with your company's password policy passwordstring <password> Make sure the password complies with your company's password policy. Responses200 User's password changed successfully. 400 Password could not be changed. The password does not comply with your company's password policy. 403 Access Denied: You are not allowed to access the requested resource. The user",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Change a user's password"
    }
  },
  {
    "content": "does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the user",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Change a user's password"
    }
  },
  {
    "content": "Responses\n\n200 User's password changed successfully. 400 Password could not be changed. The password does not comply with your company's password policy. 403 Access Denied: You are not allowed to access the requested resource. The user does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the user",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy{\"password\": \"NewPassword123\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Retrieve a user's details by username\n\nUse this endpoint to retrieve a user's details including: User ID Email Name Address Phone number User aliases The last date the user signed in to TrueContext query Parametersusernamerequiredstring Example: username=john.doeInclude a username. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Details of the user account 400 Username required. Provide a username and try again. 403 Access denied. You are not allowed to access the requested resource. The user does not exist in your team. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a user's details by username"
    }
  },
  {
    "content": "Responses\n\n200 Details of the user account 400 Username required. Provide a username and try again. 403 Access denied. You are not allowed to access the requested resource. The user does not exist in your team. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"131111111\",\"username\": \"user.admin\",\"role\": \"ProntoAdmin\",\"email\": \"sample@email.com\",\"alternateEmail\": \"alt@email.com\",\"firstName\": \"Janae\",\"lastName\": \"Khan\",\"companyName\": \"TrueContext\",\"address\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"locale\": \"en_CA\",\"preferredTimeZone\": \"America/New_York\",\"phoneNumber\": \"+16131112222\",\"billingId\": \"2020202020\",\"defaultViewFormSpaceId\": \"191111111\",\"defaultViewFormDashboardId\": \"141111111\",\"groupIds\": [\"2111111111\"],\"aliases\": {\"system1\": \"alias1\",\"system2\": \"alias2\"},\"lastLoginDate\": \"2020-11-20T17:56:39Z\",\"lastReconcileDate\": \"2020-11-19T17:56:39Z\",\"organization\": {\"employeeId\": \"123454321\",\"managerName\": \"Kenan Miller\",\"managerEmailAddress\": \"kmiller@email.com\",\"managerPhoneNumber\": \"+16132229999\",\"company\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "\"TrueContext\",\"department\": \"Sales\",\"division\": \"National\",\"organizationalUnitName\": \"Executive\",\"organizationalUnitAddress\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"region\": \"Eastern Canada\",\"subRegion\": \"Ontario\",\"branch\": \"Ottawa\",\"branchOffice\": \"Kanata\",\"office\": \"02\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve a user's details by username (Deprecated)  Deprecated\n\nPlease use the new endpoint instead. Use this endpoint to retrieve a user's details including: User ID Email Name Address Phone number The last date the user signed in to TrueContext path Parametersusernamerequiredstring Include a username.\\n\\nNote: If the username includes a ., the API endpoint requires an extension (.json or .xml). query Parameterstzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Details of the user account 400 Extension required. API endpoint requires an extension. Enter an extension (.json or .xml) and try again. 403 Access denied. You are not allowed to access the requested resource. The user does not exist in your team. 404 Object not found. The object you requested could not be found. The",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a user's details by username (Deprecated)  Deprecated"
    }
  },
  {
    "content": "system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve a user's details by username (Deprecated)  Deprecated"
    }
  },
  {
    "content": "Responses\n\n200 Details of the user account 400 Extension required. API endpoint requires an extension. Enter an extension (.json or .xml) and try again. 403 Access denied. You are not allowed to access the requested resource. The user does not exist in your team. 404 Object not found. The object you requested could not be found. The system could not find the user.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"identifier\": \"131111111\",\"username\": \"user.admin\",\"role\": \"ProntoAdmin\",\"email\": \"sample@email.com\",\"alternateEmail\": \"alt@email.com\",\"firstName\": \"Janae\",\"lastName\": \"Khan\",\"companyName\": \"TrueContext\",\"address\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"locale\": \"en_CA\",\"preferredTimeZone\": \"America/New_York\",\"phoneNumber\": \"+16131112222\",\"billingId\": \"2020202020\",\"defaultViewFormSpaceId\": \"191111111\",\"defaultViewFormDashboardId\": \"141111111\",\"groupIds\": [\"2111111111\"],\"aliases\": {\"system1\": \"alias1\",\"system2\": \"alias2\"},\"lastLoginDate\": \"2020-11-20T17:56:39Z\",\"lastReconcileDate\": \"2020-11-19T17:56:39Z\",\"organization\": {\"employeeId\": \"123454321\",\"managerName\": \"Kenan Miller\",\"managerEmailAddress\": \"kmiller@email.com\",\"managerPhoneNumber\": \"+16132229999\",\"company\":",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "\"TrueContext\",\"department\": \"Sales\",\"division\": \"National\",\"organizationalUnitName\": \"Executive\",\"organizationalUnitAddress\": {\"address1\": \"123 Street Avenue\",\"address2\": \"Apt 100\",\"city\": \"Ottawa\",\"state\": \"Ontario\",\"country\": \"CA\",\"zipCode\": \"A1B 2C3\"},\"region\": \"Eastern Canada\",\"subRegion\": \"Ontario\",\"branch\": \"Ottawa\",\"branchOffice\": \"Kanata\",\"office\": \"02\"}}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "List the groups in your team\n\nUse this endpoint to retrieve a list of all the groups in your team and their general details. Details include: Group ID Group Name Description query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. tzstring Default: \"UTC\" Specify the time zone for the request. All time zones must be valid tz database time zones. The external resource List of tz database time zones contains a full list of supported time zones in the column TZ database name. Responses200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the groups in your team"
    }
  },
  {
    "content": "Responses\n\n200 Successful request.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"pageData\": [{\"identifier\": \"234000111\",\"name\": \"Marketing Team\",\"description\": \"Group for marketing team members\"}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Create a group\n\nUse this endpoint to create a new group and add the group’s information. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired namerequiredstring The display name of the group. descriptionstring An optional description of the group. defaultGroupboolean Default: false Indicates if this group is the default group. Responses201 Group created. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 409 The group name already exists. You must enter a different group name.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Create a group"
    }
  },
  {
    "content": "Responses\n\n201 Group created. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 409 The group name already exists. You must enter a different group name.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy{\"name\": \"Marketing Team\",\"description\": \"Group for marketing team members\",\"defaultGroup\": false}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Response samples\n\n201Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"234000111\"}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Retrieve the details of a specific group\n\nUse this endpoint to retrieve the details of a specific group. Details include: Group ID Group Name Description path ParametersgroupIdrequiredstring The unique identifier of the group. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Retrieve the details of a specific group"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy{\"identifier\": \"234000111\",\"name\": \"Marketing Team\",\"description\": \"Group for marketing team members\",\"defaultGroup\": false}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Update a group’s information\n\nUse this endpoint to update a group’s information. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired namestring The display name of the group. descriptionstring An optional description of the group. defaultGroupboolean Indicates if this group is the default group. Responses200 Group successfully updated. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified. 409 The group name already exists. You must enter a different group name.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Update a group’s information"
    }
  },
  {
    "content": "Responses\n\n200 Group successfully updated. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified. 409 The group name already exists. You must enter a different group name.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy{\"name\": \"Marketing Team\",\"description\": \"Group for marketing team members\",\"defaultGroup\": true}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Delete a group\n\nUse this endpoint to delete a group that you no longer need. Note: The users aren’t deleted, just the group. path ParametersgroupIdrequiredstring The unique identifier of the group. Responses200 Group deleted successfully. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the group.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Delete a group"
    }
  },
  {
    "content": "Responses\n\n200 Group deleted successfully. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The object you requested could not be found. The system could not find the group.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "List the users in a group\n\nUse this endpoint to retrieve a list of users assigned to a group. Details include: User ID UserName Group Admin (T/F) Notify on Submit (T/F) path ParametersgroupIdrequiredstring The unique identifier of the group. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the users in a group"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"pageData\": [{\"userId\": \"135080030\",\"username\": \"user.member\",\"groupAdmin\": false,\"notifyOnFormSubmit\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Add a user to a group or update permissions for an existing group user\n\nUse this endpoint to add a new user to the group or to update permissions for a user already in the group. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired usersArray of objects Array of user objects. Responses200 Group users added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Add a user to a group or update permissions for an existing group user"
    }
  },
  {
    "content": "Responses\n\n200 Group users added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"users\": [{\"userId\": \"135080030\",\"groupAdmin\": false,\"notifyOnFormSubmit\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Remove a user from a group\n\nUse this endpoint to remove a user from the group. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired userIdsArray of strings List of user identifiers to remove from the group. Responses200 Group users removed successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Remove a user from a group"
    }
  },
  {
    "content": "Responses\n\n200 Group users removed successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"userIds\": [\"135080030\"]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Sync group user information\n\nUse this endpoint to sync information (including permissions) for all users assigned to the group. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired usersArray of objects Array of user objects. Responses200 Group users added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Sync group user information"
    }
  },
  {
    "content": "Responses\n\n200 Group users added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"users\": [{\"userId\": \"135080030\",\"groupAdmin\": false,\"notifyOnFormSubmit\": true}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "List the FormSpaces a group can access\n\nUse this endpoint to retrieve a list of FormSpaces that a group can access. Details include: FormSpace ID FormSpace Name FormSpace Permissions path ParametersgroupIdrequiredstring The unique identifier of the group. query Parametersqstring Enter any string you want to use as a filter. The string matches part of the item name. pinteger Default: 0 Specify a page number. Page numbering starts at 0. sinteger <= 100 Default: 100 Specify the number of results to be returned in a page. The maximum value is 100. Note: If you have more than 100 results, you must make subsequent requests with different page numbers to retrieve the full list of results. Responses200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "List the FormSpaces a group can access"
    }
  },
  {
    "content": "Responses\n\n200 Successful request. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Response samples\n\n200Content typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"totalNumberOfResults\": 1,\"totalNumberOfPages\": 1,\"pageData\": [{\"identifier\": \"194111111\",\"name\": \"My FormSpace\",\"canCreateForms\": true,\"canTestForms\": false,\"canSeeData\": true,\"canSubmitData\": true,\"canApprove\": false,\"canManage\": false}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Response samples"
    }
  },
  {
    "content": "Add a FormSpace to a group, or update permissions for an existing FormSpace\n\nUse this endpoint to add FormSpace access to a group or to update permissions for a FormSpace the group can already access. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired formSpacesArray of objects Array of FormSpace objects. Responses200 Group FormSpaces added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Add a FormSpace to a group, or update permissions for an existing FormSpace"
    }
  },
  {
    "content": "Responses\n\n200 Group FormSpaces added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"formSpaces\": [{\"formSpaceId\": \"194111111\",\"canCreateForms\": true,\"canTestForms\": false,\"canSeeData\": true,\"canSubmitData\": true,\"canApprove\": false,\"canManage\": false}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Remove FormSpace access from a group\n\nUse this endpoint to remove FormSpace access from a group. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired formSpaceIdsArray of strings List of FormSpace identifiers to remove from the group. Responses200 Group FormSpaces removed successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Remove FormSpace access from a group"
    }
  },
  {
    "content": "Responses\n\n200 Group FormSpaces removed successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"formSpaceIds\": [\"194111111\"]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Sync group FormSpace information\n\nUse this endpoint to sync information (including permissions) for all FormSpaces the group can access. path ParametersgroupIdrequiredstring The unique identifier of the group. Request Body schema: application/jsonapplication/xmlapplication/jsonrequired formSpacesArray of objects Array of FormSpace objects. Responses200 Group FormSpaces added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Sync group FormSpace information"
    }
  },
  {
    "content": "Responses\n\n200 Group FormSpaces added or updated successfully. 400 Invalid request data format. The data you supplied was not formatted correctly, or did not meet all requirements. Fix your data and try again. 403 Access Denied. You are not allowed to access the requested resource. The specified group does not exist in your team. Access Denied: A Read-Only API key cannot access endpoints that modify or delete data. 404 Object not found. The system couldn't find the group you specified.",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Responses"
    }
  },
  {
    "content": "Request samples\n\nPayloadContent typeapplication/jsonapplication/xmlapplication/jsonCopy Expand all Collapse all {\"formSpaces\": [{\"formSpaceId\": \"194111111\",\"canCreateForms\": true,\"canTestForms\": false,\"canSeeData\": true,\"canSubmitData\": true,\"canApprove\": false,\"canManage\": false}]}",
    "metadata": {
      "url": "https://live.prontoforms.com/api-docs",
      "title": "TrueContext REST API (1.1)",
      "section": "Request samples"
    }
  },
  {
    "content": "Level 5 Training Now Available!\n\nDelve into more features and use cases with our brand new Level 5 training path. Log in to the TrueContext University today.",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Level 5 Training Now Available!"
    }
  },
  {
    "content": "Welcome to the TrueContext Community\n\nAre you looking to Unite with fellow form builders and TrueContext staff? Do you want to Learn everything you can about how to use TrueContext to solve your organization's business challenges? Are you looking for the best way to Accelerate your skills with TrueContext and become the expert in your organization? The TrueContext Community is where you can ask questions about the best practices for building with our unique features. It is where you can hear about our latest feature releases. It is where you can discuss workflows, use cases, and form building with your peers, industry professionals, and TrueContext staff. No workflow is too big, and no feature question is too small! If you haven't joined our Community yet, what are you waiting for? Sign up today!",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Welcome to the TrueContext Community"
    }
  },
  {
    "content": "Tech Talk: Implementation – API Pagination in TrueContext ...\n\nBy: Ian Chamberlain , TrueContext , 5 days ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talk: Implementation – API Pagination in TrueContext ..."
    }
  },
  {
    "content": "Tech Talks: Success – DREL Made Easy!\n\nBy: Manu Posada Padilla , TrueContext , 19 days ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talks: Success – DREL Made Easy!"
    }
  },
  {
    "content": "Tech Talks: Support - Troubleshooting Error Code O ...\n\nBy: Juan Gonzalez , TrueContext , 26 days ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talks: Support - Troubleshooting Error Code O ..."
    }
  },
  {
    "content": "Tech Talk: Implementation - Base64 File Uploads in ...\n\nBy: Ian Chamberlain , TrueContext , one month ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talk: Implementation - Base64 File Uploads in ..."
    }
  },
  {
    "content": "Tech Talks: Support – Troubleshooting Microsoft SharePoint ...\n\nBy: Lisandro Pacheco , TrueContext , one month ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talks: Support – Troubleshooting Microsoft SharePoint ..."
    }
  },
  {
    "content": "July 24, 2025 Ask Us Everything! - recording now available ...\n\nBy: David Casal Del Castillo , TrueContext , 2 months ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "July 24, 2025 Ask Us Everything! - recording now available ..."
    }
  },
  {
    "content": "Next Ask Us Everything Webinar - July 24th registration ...\n\nBy: David Casal Del Castillo , TrueContext , 2 months ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Next Ask Us Everything Webinar - July 24th registration ..."
    }
  },
  {
    "content": "RE: Conditional Logic question\n\nBy: Christine Watt , Forty Mile , 2 months ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "RE: Conditional Logic question"
    }
  },
  {
    "content": "RE: Conditional Logic question\n\nBy: Karen Cann , TrueContext , 2 months ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "RE: Conditional Logic question"
    }
  },
  {
    "content": "Conditional Logic question\n\nBy: Christine Watt , Forty Mile , 2 months ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Conditional Logic question"
    }
  },
  {
    "content": "Installation Product Acceptance Document Upload\n\nProvided by: TrueContext Community, 12-17-2024 14:29",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Installation Product Acceptance Document Upload"
    }
  },
  {
    "content": "Leak Detection and Repair (LDAR) Workflow\n\nProvided by: TrueContext Community, 10-22-2024 11:15",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Leak Detection and Repair (LDAR) Workflow"
    }
  },
  {
    "content": "Tank Inspection Workflow\n\nProvided by: TrueContext Community, 09-23-2024 09:33",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tank Inspection Workflow"
    }
  },
  {
    "content": "Job Safety Analysis Workflow\n\nProvided by: TrueContext Community, 09-19-2024 14:06",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Job Safety Analysis Workflow"
    }
  },
  {
    "content": "Behavior-Based Safety Observation Workflow\n\nProvided by: TrueContext Community, 08-15-2024 10:21",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Behavior-Based Safety Observation Workflow"
    }
  },
  {
    "content": "Monthly Features\n\nDon't miss our monthly feature content! Tech Talks: Support1st Monday Tech Talks: Success2nd Monday Tech Talks: Implementation3rd Monday Tech Talks: Product4th Monday",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Monthly Features"
    }
  },
  {
    "content": "Don't miss our monthly feature content!\n\nTech Talks: Support1st Monday Tech Talks: Success2nd Monday Tech Talks: Implementation3rd Monday Tech Talks: Product4th Monday",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Don't miss our monthly feature content!"
    }
  },
  {
    "content": "Tech Talk: Implementation – API Pagination in TrueContext (Oracle Fusion and IBM Maximo)\n\nBy: Ian Chamberlain, 5 days ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talk: Implementation – API Pagination in TrueContext (Oracle Fusion and IBM Maximo)"
    }
  },
  {
    "content": "Tech Talks: Success – DREL Made Easy!\n\nBy: Manu Posada Padilla, 19 days ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talks: Success – DREL Made Easy!"
    }
  },
  {
    "content": "Tech Talks: Support - Troubleshooting Error Code OH-PVE\n\nBy: Juan Gonzalez, 26 days ago",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talks: Support - Troubleshooting Error Code OH-PVE"
    }
  },
  {
    "content": "Tech Talk: Implementation - Base64 File Uploads in Handlebars and Freemarker\n\nBy: Ian Chamberlain, 08-21-2025 09:42",
    "metadata": {
      "url": "https://community.truecontext.com",
      "title": "Home",
      "section": "Tech Talk: Implementation - Base64 File Uploads in Handlebars and Freemarker"
    }
  }
]